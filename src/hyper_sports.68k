	.include "hyper_sports.inc"
.include "data.inc"
	.global	irq_44f5
	.global	reset_4000
	.include "include.inc"


*	map(0x1000, 0x10bf).ram().share(m_spriteram);
*	map(0x10c0, 0x10ff).ram().share(m_scroll);
*	map(0x1400, 0x1400).w("watchdog", FUNC(watchdog_timer_device::reset_w));
*	map(0x1480, 0x1487).w("mainlatch", FUNC(ls259_device::write_d0));
*	map(0x1500, 0x1500).w("soundlatch", FUNC(generic_latch_8_device::write));
*	map(0x1600, 0x1600).portr("DSW2");
*	map(0x1680, 0x1680).portr("SYSTEM");
*	map(0x1683, 0x1683).portr("DSW1");
*	map(0x2000, 0x27ff).ram().w(FUNC(base_state::videoram_w)).share(m_videoram);
*	map(0x2800, 0x2fff).ram().w(FUNC(base_state::colorram_w)).share(m_colorram);
*	map(0x3000, 0x37ff).ram();
*	map(0x3800, 0x3fff).ram().share("nvram");
*	map(0x4000, 0xffff).rom();
*	ls259_device &mainlatch(LS259(config, "mainlatch")); // F2
*	mainlatch.q_out_cb<0>().set(FUNC(base_state::flip_screen_set));
*	mainlatch.q_out_cb<1>().set(m_soundbrd, FUNC(trackfld_audio_device::sh_irqtrigger_w)); // SOUND ON
*	mainlatch.q_out_cb<2>().set_nop(); // END
*	mainlatch.q_out_cb<3>().set(FUNC(base_state::coin_counter_w<0>)); // COIN 1
*	mainlatch.q_out_cb<4>().set(FUNC(base_state::coin_counter_w<1>)); // COIN 2
*	mainlatch.q_out_cb<5>().set_nop(); // SA
*	mainlatch.q_out_cb<7>().set(FUNC(base_state::irq_mask_w)); // INT

* page $38xx

game_playing_00 = 0x00
dsw2_copy_0d = 0x0d
event_pointer_1c = 0x1c
event_pointer_1e = 0x1e
event_sub_state_28 = 0x28
event_sub_state_2a = 0x2a
current_level_68 = 0x68
current_event_69 = 0x69
chrono_hundredth_second_71 = 0x71
chrono_second_72 = 0x72
speed_msb_b0 = 0xb0
nb_long_horse_turns_ef = 0xef
watchdog_1400 = 0x1400
sound_queue_3340 = 0x3340
current_level_3068 = 0x3068

dsw2_1600 = 0x1600
system_1680 = 0x1680
in0_1681 = 0x1681
in1_1682 = 0x1682
dsw1_1683 = 0x1683
sprite_ram_1000 = 0x1000
sprite_shadow_ram_3600 = 0x3600
scroll_registers_10c0 = 0x10c0
flip_screen_set_1480 = 0x1480
sh_irqtrigger_w_1481 = 0x1481
coin_counter_1_w_1483 = 0x1483
coin_counter_1_w_1484 = 0x1484
irq_mask_w_1487 = 0x1487
audio_register_w_1500 = 0x1500
video_ram_2000 = 0x2000
color_ram_2800 = 0x2800
swimmer_19 = 0x19   | 3019 index of swimmer (0: bottom, 3: top)
screen_straight_1a = 0x1a   | set from DSW

*	PORT_START("SYSTEM")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_COIN1 )
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_COIN2 )
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_COIN3 )
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_START1 )
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_START2 )
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_COIN4 )
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_UNKNOWN )
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_UNKNOWN )
*
*	PORT_START("P1_P2")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_BUTTON3 ) PORT_PLAYER(1)
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(1)
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(1)
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_START3 )
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON3 ) PORT_PLAYER(2)
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(2)
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(2)
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_UNKNOWN )
*
*	PORT_START("P3_P4")
*	PORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_BUTTON3  ) PORT_PLAYER(3) //PORT_COCKTAIL  These were commented out
*	PORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_BUTTON2  ) PORT_PLAYER(3) //PORT_COCKTAIL  before the system changed.
*	PORT_BIT( 0x04, IP_ACTIVE_LOW, IPT_BUTTON1  ) PORT_PLAYER(3) //PORT_COCKTAIL  Why?
*	PORT_BIT( 0x08, IP_ACTIVE_LOW, IPT_START4 )
*	PORT_BIT( 0x10, IP_ACTIVE_LOW, IPT_BUTTON3  ) PORT_PLAYER(4) //PORT_COCKTAIL
*	PORT_BIT( 0x20, IP_ACTIVE_LOW, IPT_BUTTON2  ) PORT_PLAYER(4) //PORT_COCKTAIL
*	PORT_BIT( 0x40, IP_ACTIVE_LOW, IPT_BUTTON1  ) PORT_PLAYER(4) //PORT_COCKTAIL
*	PORT_BIT( 0x80, IP_ACTIVE_LOW, IPT_UNKNOWN )
*
*	PORT_START("DSW1")
*	KONAMI_COINAGE_LOC(DEF_STR( Free_Play ), "No Coin B", SW1)
*	// "No Coin B" = coins produce sound, but no effect on coin counter
*
*	PORT_START("DSW2")
*	PORT_DIPNAME( 0x01, 0x01, "After Last Event" ) PORT_DIPLOCATION("SW2:1")
*	PORT_DIPSETTING(    0x01, "Game Over" )
*	PORT_DIPSETTING(    0x00, "Game Continues" )
*	PORT_DIPNAME( 0x02, 0x00, DEF_STR( Cabinet ) ) PORT_DIPLOCATION("SW2:2")
*	PORT_DIPSETTING(    0x00, DEF_STR( Upright ) )
*	PORT_DIPSETTING(    0x02, DEF_STR( Cocktail ) )
*	PORT_DIPNAME( 0x04, 0x00, DEF_STR( Demo_Sounds ) ) PORT_DIPLOCATION("SW2:3")
*	PORT_DIPSETTING(    0x04, DEF_STR( Off ) )
*	PORT_DIPSETTING(    0x00, DEF_STR( On ) )
*	PORT_DIPNAME( 0x08, 0x08, "World Records" ) PORT_DIPLOCATION("SW2:4")
*	PORT_DIPSETTING(    0x08, "Don't Erase" )
*	PORT_DIPSETTING(    0x00, "Erase on Reset" )
*	PORT_DIPNAME( 0xf0, 0x40, DEF_STR( Difficulty ) ) PORT_DIPLOCATION("SW2:5,6,7,8")
*	PORT_DIPSETTING(    0xf0, "Easy 1" )
*	PORT_DIPSETTING(    0xe0, "Easy 2" )
*	PORT_DIPSETTING(    0xd0, "Easy 3" )
*	PORT_DIPSETTING(    0xc0, "Easy 4" )
*	PORT_DIPSETTING(    0xb0, "Normal 1" )
*	PORT_DIPSETTING(    0xa0, "Normal 2" )
*	PORT_DIPSETTING(    0x90, "Normal 3" )
*	PORT_DIPSETTING(    0x80, "Normal 4" )
*	PORT_DIPSETTING(    0x70, "Normal 5" )
*	PORT_DIPSETTING(    0x60, "Normal 6" )
*	PORT_DIPSETTING(    0x50, "Normal 7" )
*	PORT_DIPSETTING(    0x40, "Normal 8" )
*	PORT_DIPSETTING(    0x30, "Difficult 1" )
*	PORT_DIPSETTING(    0x20, "Difficult 2" )
*	PORT_DIPSETTING(    0x10, "Difficult 3" )
*	PORT_DIPSETTING(    0x00, "Difficult 4" )




reset_4000:
	jbsr	osd_disable_interrupts |  [$4000: clr    irq_mask_w_1487]
	move.w	#0x3780,d5                      	| [$4003: lds    #$3780]
	move.b	#0x30,d0                        	| [$4007: lda    #$30]
	SET_DP_FROM_A                          	| [$4009: tfr    a,dp]
	GET_ADDRESS	flip_screen_set_1480       	| [$400b: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	move.w	#0x2000,d2                      	| [$400e: ldx    #$2000]
	move.b	#0x18,d0                        	| [$4011: lda    #$18]
* clear video ram/set attribute
	moveq	#0,d1                            	| [$4013: clrb]
l_4014:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$4014: stb    $0800,x] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$4018: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	 |  [$401a: sta    watchdog_1400]
	cmp.w	#0x2800,d2                       	| [$401d: cmpx   #$2800]
	jne	l_4014                             	| [$4020: bne    $4014]
	move.b	#0x01,d0                        	| [$4022: lda    #$01]
	move.w	#0x3000,d2                      	| [$4024: ldx    #$3000]
l_4027:
	GET_REG_ADDRESS	0,d2                   	| [$4027: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	 |  [$4029: sta    watchdog_1400]
	cmp.w	#0x3800,d2                       	| [$402c: cmpx   #$3800]
	jne	l_4027                             	| [$402f: bne    $4027]
	move.w	#0x1000,d2                      	| [$4031: ldx    #$1000]
l_4034:
	GET_REG_ADDRESS	0,d2                   	| [$4034: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	 |  [$4036: sta    watchdog_1400]
	 |  [$4039: cmpx   #watchdog_1400]
	jne	l_4034                             	| [$403c: bne    $4034]
	moveq	#0,d0                            	| [$403e: clra]
	moveq	#0,d1                            	| [$403f: clrb]
l_4040:
                                         | [$4040: nop]
                                         | [$4041: nop]
                                         | [$4042: nop]
                                         | [$4043: nop]
                                         | [$4044: nop]
                                         | [$4045: nop]
                                         | [$4046: nop]
                                         | [$4047: nop]
                                         | [$4048: nop]
                                         | [$4049: nop]
                                         | [$404a: nop]
                                         | [$404b: nop]
	 |  [$404c: sta    watchdog_1400]
	subq.b	#1,d0                           	| [$404f: deca]
	jne	l_4040                             	| [$4050: bne    $4040]
	subq.b	#1,d1                           	| [$4052: decb]
	jne	l_4040                             	| [$4053: bne    $4040]
	move.w	#0x3300,d2                      	| [$4055: ldx    #$3300]
	move.b	#0xff,d0                        	| [$4058: ldd    #$ffff]
	move.w	#0xffff,d1                      	| [$4058: ldd    #$ffff]
l_405b:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$405b: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#sound_queue_3340,d2             	| [$405d: cmpx   #sound_queue_3340]
	jne	l_405b                             	| [$4060: bne    $405b]
	move.w	#0x3300,d2                      	| [$4062: ldx    #$3300]
	GET_DP_ADDRESS	event_pointer_1c        	| [$4065: stx    event_pointer_1c]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_DP_ADDRESS	event_pointer_1e        	| [$4067: stx    event_pointer_1e]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.w	#sound_queue_3340,d2            	| [$4069: ldx    #sound_queue_3340]
	GET_DP_ADDRESS	0x3c                    	| [$406c: stx    $3c]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_DP_ADDRESS	0x3e                    	| [$406e: stx    $3e]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	jbsr	osd_read_dsw_1 |  [$4070: lda    dsw1_1683]
	not.b	d0                               	| [$4073: coma]
	OP_W_ON_DP_ADDRESS	move,0x0c,d0         | [$4074: sta    $0c]
	jbsr	osd_read_dsw_2 |  [$4076: lda    dsw2_1600]
	not.b	d0                               	| [$4079: coma]
	OP_W_ON_DP_ADDRESS	move,dsw2_copy_0d,d0 | [$407a: sta    dsw2_copy_0d]
	BIT	#0x02,d0                           	| [$407c: bita   #$02]
	jeq	l_4082                             	| [$407e: beq    $4082]
	* enable cocktail!
	OP_W_ON_DP_ADDRESS	addq,screen_straight_1a,#1         | [$4080: inc    $1a]
l_4082:
	and.b	#0xf0,d0                         	| [$4082: anda   #$f0]
                                         | [$4084: lsra]
                                         | [$4085: lsra]
                                         | [$4086: lsra]
	lsr.b	#4,d0                            	| [$4087: lsra]
	OP_W_ON_DP_ADDRESS	move,0x0e,d0         | [$4088: sta    $0e]
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$408a: lda    $0c]
	and.b	#0x0f,d0                         	| [$408c: anda   #$0f]
	asl.b	#1,d0                            	| [$408e: asla]
	move.w	#0xcf40,d2                      	| [$408f: ldx    #$cf40]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$4092: ldd    a,x]
	LOAD_D                                 	| [$4092: ldd    a,x]
	GET_DP_ADDRESS	0x08                    	| [$4094: std    $08]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$4096: lda    $0c]
	and.b	#0xf0,d0                         	| [$4098: anda   #$f0]
                                         | [$409a: lsra]
                                         | [$409b: lsra]
	lsr.b	#3,d0                            	| [$409c: lsra]
	move.w	#0xcf60,d2                      	| [$409d: ldx    #$cf60]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$40a0: ldd    a,x]
	LOAD_D                                 	| [$40a0: ldd    a,x]
	GET_DP_ADDRESS	0x0a                    	| [$40a2: std    $0a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d0 | [$40a4: lda    dsw2_copy_0d]
	BIT	#0x08,d0                           	| [$40a6: bita   #$08]
	jeq	l_40fd                             	| [$40a8: lbeq   $40fd]
	move.w	#0x3800,d2                      	| [$40ac: ldx    #$3800]
	move.w	#0xcf80,d4                      	| [$40af: ldu    #$cf80]
	move.b	#0x07,d0                        	| [$40b2: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0x40,d0         | [$40b4: sta    $40]
l_40b6:
	move.b	#0x03,d0                        	| [$40b6: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x41,d0         | [$40b8: sta    $41]
	move.b	#0x1c,d0                        	| [$40ba: lda    #$1c]
	OP_W_ON_DP_ADDRESS	move,0x42,d0         | [$40bc: sta    $42]
	move.b	#0x03,d0                        	| [$40be: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x43,d0         | [$40c0: sta    $43]
l_40c2:
	GET_REG_ADDRESS	0,d2                   	| [$40c2: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	move.b	#0x02,d1                        	| [$40c4: ldb    #$02]
l_40c6:
	GET_REG_ADDRESS	0,d4                   	| [$40c6: lda    ,u]
	move.b	(a0),d0                         	| [...]
                                         | [$40c8: lsra]
                                         | [$40c9: lsra]
                                         | [$40ca: lsra]
	lsr.b	#4,d0                            	| [$40cb: lsra]
	GET_REG_ADDRESS	0,d2                   	| [$40cc: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$40ce: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$40d0: anda   #$0f]
	GET_REG_ADDRESS	0,d2                   	| [$40d2: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$40d4: decb]
	jne	l_40c6                             	| [$40d5: bne    $40c6]
	OP_R_ON_DP_ADDRESS	move,0x42,d0         | [$40d7: lda    $42]
	GET_REG_ADDRESS	0,d2                   	| [$40d9: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$40db: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$40dd: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	 |  [$40df: sta    watchdog_1400]
	OP_W_ON_DP_ADDRESS	subq,0x41,#1         | [$40e2: dec    $41]
	OP_W_ON_DP_ADDRESS	addq,0x42,#1         | [$40e4: inc    $42]
	OP_W_ON_DP_ADDRESS	subq,0x43,#1         | [$40e6: dec    $43]
	jne	l_40c2                             	| [$40e8: bne    $40c2]
	add.w	#0x8,d2                          	| [$40ea: leax   $8,x]
	OP_W_ON_DP_ADDRESS	subq,0x40,#1         | [$40ec: dec    $40]
	jne	l_40b6                             	| [$40ee: bne    $40b6]
	move.w	#0x38e6,d2                      	| [$40f0: ldx    #$38e6]
	move.b	#0x17,d0                        	| [$40f3: ldd    #$17d5]
	move.w	#0x17d5,d1                      	| [$40f3: ldd    #$17d5]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$40f6: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$40f8: ldd    #$002b]
	move.w	#0x002b,d1                      	| [$40f8: ldd    #$002b]
	jra	l_4107                             	| [$40fb: bra    $4107]
l_40fd:
	move.w	#0x3970,d2                      	| [$40fd: ldx    #$3970]
	move.b	#0xbe,d1                        	| [$4100: ldb    #$be]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$4102: stb    $49]
	move.b	#0x00,d0                        	| [$4104: ldd    #$002b]
	move.w	#0x002b,d1                      	| [$4104: ldd    #$002b]
l_4107:
	GET_REG_ADDRESS	0,d2                   	| [$4107: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4109: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$410b: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$410d: stb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$410f: stb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4111: stb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$4113: dec    $48]
	jne	l_4118                             	| [$4115: bne    $4118]
	moveq	#0,d0                            	| [$4117: clra]
l_4118:
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$4118: dec    $49]
	jne	l_4107                             	| [$411a: bne    $4107]
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d0 | [$411c: lda    dsw2_copy_0d]
	and.b	#0x08,d0                         	| [$411e: anda   #$08]
	jeq	l_4132                             	| [$4120: beq    $4132]
	jbsr	osd_read_inputs_1 |  [$4122: lda    in0_1681]
	not.b	d0                               	| [$4125: coma]
	and.b	#0x55,d0                         	| [$4126: anda   #$55]
	cmp.b	#0x55,d0                         	| [$4128: cmpa   #$55]
	jne	l_4132                             	| [$412a: bne    $4132]
	move.b	#0x04,d0                        	| [$412c: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x20,d0         | [$412e: sta    $20]
	jra	l_41aa                             	| [$4130: bra    $41aa]
l_4132:
	move.w	#0x2000,d2                      	| [$4132: ldx    #$2000]
	move.b	#0x10,d0                        	| [$4135: ldd    #$1010]
	move.w	#0x1010,d1                      	| [$4135: ldd    #$1010]
l_4138:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$4138: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0801,d2              	| [$413c: clr    $0801,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$4140: std    ,x++]  [video_address_word]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	 |  [$4142: sta    watchdog_1400]
	cmp.w	#0x2800,d2                       	| [$4145: cmpx   #$2800]
	jne	l_4138                             	| [$4148: bne    $4138]
	GET_ADDRESS	0x3f00                     	| [$414a: ldd    $3f00]
	LOAD_D                                 	| [$414a: ldd    $3f00]
	cmp.w	#0x0102,d1                       	| [$414d: cmpd   #$0102]
	jne	l_4169                             	| [$4151: bne    $4169]
	move.w	#0x3f10,d2                      	| [$4153: ldx    #$3f10]
	move.w	#0x3f80,d4                      	| [$4156: ldu    #$3f80]
	move.b	#0x57,d1                        	| [$4159: ldb    #$57]
l_415b:
	GET_REG_ADDRESS	0,d2                   	| [$415b: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	 |  [$415d: sta    watchdog_1400]
	GET_REG_ADDRESS	0,d4                   	| [$4160: cmpa   ,u+]
	addq.w	#1,d4                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jne	l_4169                             	| [$4162: bne    $4169]
	subq.b	#1,d1                           	| [$4164: decb]
	jne	l_415b                             	| [$4165: bne    $415b]
	jra	l_416f                             	| [$4167: bra    $416f]
l_4169:
	GET_ADDRESS	0x3f00                     	| [$4169: clr    $3f00]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3f01                     	| [$416c: clr    $3f01]
	clr.b	(a0)                         	| [...]
l_416f:
	move.w	#0xcfaa,d2                      	| [$416f: ldx    #$cfaa]
	GET_ADDRESS	0x3f00                     	| [$4172: ldd    $3f00]
	LOAD_D                                 	| [$4172: ldd    $3f00]
	cmp.w	#0x0102,d1                       	| [$4175: cmpd   #$0102]
	jne	l_417e                             	| [$4179: bne    $417e]
	move.w	#0xcfc0,d2                      	| [$417b: ldx    #$cfc0]
l_417e:
	move.w	#0x2405,d4                      	| [$417e: ldu    #$2405]
	move.b	#0x16,d0                        	| [$4181: lda    #$16]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4183: sta    $48]
* loop to write "QUALIFY DIP SW"
l_4185:
	GET_REG_ADDRESS	0,d2                   	| [$4185: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x30,d0                         	| [$4187: suba   #$30]
	 |  [$4189: sta    watchdog_1400]
	jbsr	write_char_and_move_cursor_422c   	| [$418c: jsr    write_char_and_move_cursor_422c]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$418f: dec    $48]
	jne	l_4185                             	| [$4191: bne    $4185]
	moveq	#0,d0                            	| [$4193: clra]
	moveq	#0,d1                            	| [$4194: clrb]
l_4195:
	 |  [$4195: sta    watchdog_1400]
                                         | [$4198: nop]
                                         | [$4199: nop]
                                         | [$419a: nop]
                                         | [$419b: nop]
                                         | [$419c: nop]
                                         | [$419d: nop]
                                         | [$419e: nop]
                                         | [$419f: nop]
                                         | [$41a0: nop]
                                         | [$41a1: nop]
                                         | [$41a2: nop]
                                         | [$41a3: nop]
l_41aa:
	 |  [$41aa: lda    #$01]
	jbsr	osd_enable_interrupts |  [$41ac: sta    irq_mask_w_1487]
	CLR_I_FLAG                             	| [$41af: andcc  #$ef]
master_mainloop_41b1:
	GET_DP_ADDRESS	event_pointer_1e        	| [$41b1: ldx    event_pointer_1e]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$41b3: ldd    ,x]
	LOAD_D                                 	| [$41b3: ldd    ,x]
	asl.b	#1,d0                            	| [$41b5: asla]
	jcs	master_mainloop_41b1               	| [$41b6: bcs    master_mainloop_41b1]
	move.w	#0xffff,d3                      	| [$41b8: ldy    #$ffff]
	GET_REG_ADDRESS	0,d2                   	| [$41bc: sty    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	cmp.w	#sound_queue_3340,d2             	| [$41bf: cmpx   #sound_queue_3340]
	jne	l_41c7                             	| [$41c2: bne    $41c7]
	move.w	#0x3300,d2                      	| [$41c4: ldx    #$3300]
l_41c7:
	GET_DP_ADDRESS	event_pointer_1e        	| [$41c7: stx    event_pointer_1e]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	
	.ifndef	RELEASE
	move.w	#0xcf30,d2
	.endif
	lea	event_table_cf30,a2            	| [$41c9: ldx    #event_table_cf30]
	JSR_A_INDEXED	A2                   	| [$41cc: jsr    [a,x]] [jump_table]
	jra	master_mainloop_41b1               	| [$41ce: bra    master_mainloop_41b1]

reset_display_41d0:
	jbsr	osd_disable_interrupts |  [$41d0: clr    irq_mask_w_1487]
	move.w	#0x3600,d2                      	| [$41d3: ldx    #$3600]
	move.b	#0x00,d0                        	| [$41d6: ldd    #$00f8]
	move.w	#0x00f8,d1                      	| [$41d6: ldd    #$00f8]
l_41d9:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$41d9: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$41db: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3688,d2                       	| [$41dd: cmpx   #$3688]
	jne	l_41d9                             	| [$41e0: bne    $41d9]
	move.w	#0x36c0,d2                      	| [$41e2: ldx    #$36c0]
	moveq	#0,d1                            	| [$41e5: clrb]
l_41e6:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$41e6: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$41e8: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3700,d2                       	| [$41ea: cmpx   #$3700]
	jne	l_41e6                             	| [$41ed: bne    $41e6]
	move.w	#0x2000,d2                      	| [$41ef: ldx    #$2000]
	move.b	#0x08,d0                        	| [$41f2: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x40,d0         | [$41f4: sta    $40]
	OP_1_ON_DP_ADDRESS	clr,0x41             | [$41f6: clr    $41]
	move.b	#0x10,d0                        	| [$41f8: lda    #$10]
l_41fa:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$41fa: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$41fe: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x41,#1         | [$4200: dec    $41]
	jne	l_41fa                             	| [$4202: bne    $41fa]
	OP_W_ON_DP_ADDRESS	subq,0x40,#1         | [$4204: dec    $40]
	jne	l_41fa                             	| [$4206: bne    $41fa]
	 |  [$4208: lda    #$01]
	jbsr	osd_enable_interrupts |  [$420a: sta    irq_mask_w_1487]
	rts                                    	| [$420d: rts]

l_420e:
	OP_W_ON_DP_ADDRESS	move,0x91,d1         | [$420e: stb    $91]
	rts                                    	| [$4210: rts]

l_4211:
	asl.b	#1,d1                            	| [$4211: aslb]
	move.w	#0xcfe9,d2                      	| [$4212: ldx    #$cfe9]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$4215: ldx    b,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4217: ldu    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_4219:
	GET_REG_ADDRESS	0,d2                   	| [$4219: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x3f,d1                         	| [$421b: cmpb   #$3f]
	jeq	l_422b                             	| [$421d: beq    $422b]
	OP_R_ON_DP_ADDRESS	move,0x91,d0         | [$421f: lda    $91]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$4221: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.b	#0x30,d1                         	| [$4225: subb   #$30]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$4227: stb    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	jra	l_4219                             	| [$4229: bra    $4219]
l_422b:
	rts                                    	| [$422b: rts]

write_char_and_move_cursor_422c:
	moveq	#0,d1                            	| [$422c: clrb]
l_422d:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$422d: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$4231: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	rts                                    	| [$4233: rts]

l_4234:
	move.w	#0x25c5,d4                      	| [$4234: ldu    #$25c5]
	OP_1_ON_DP_ADDRESS	clr,0x43             | [$4237: clr    $43]
	OP_R_ON_DP_ADDRESS	move,speed_msb_b0,d0 | [$4239: lda    speed_msb_b0]
	move.b	#0x0a,d1                        	| [$423b: ldb    #$0a]
	jbsr	multiply_ab                       	| [$423d: mul]
	OP_R_ON_DP_ADDRESS	add,0xb1,d1          | [$423e: addb   $b1]
	cmp.b	#0x11,d1                         	| [$4240: cmpb   #$11]
	jcs	l_4248                             	| [$4242: bcs    $4248]
	move.b	#0x11,d1                        	| [$4244: ldb    #$11]
	OP_W_ON_DP_ADDRESS	addq,0x43,#1         | [$4246: inc    $43]
l_4248:
	OP_W_ON_DP_ADDRESS	move,0x41,d1         | [$4248: stb    $41]
	OP_W_ON_DP_ADDRESS	move,0x42,d1         | [$424a: stb    $42]
	jeq	l_425b                             	| [$424c: beq    $425b]
	move.b	#0x0f,d0                        	| [$424e: ldd    #$0f00]
	move.w	#0x0f00,d1                      	| [$424e: ldd    #$0f00]
l_4251:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$4251: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$4255: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x41,#1         | [$4257: dec    $41]
	jne	l_4251                             	| [$4259: bne    $4251]
l_425b:
	OP_R_ON_DP_ADDRESS	move,0x43,d0         | [$425b: lda    $43]
	jne	l_427b                             	| [$425d: bne    $427b]
	move.w	#0xcfd9,d2                      	| [$425f: ldx    #$cfd9]
	moveq	#0,d1                            	| [$4262: clrb]
	OP_R_ON_DP_ADDRESS	move,0xb2,d0         | [$4263: lda    $b2]
l_4265:
	GET_REG_ADDRESS	0,d2                   	| [$4265: cmpa   ,x+]
	addq.w	#1,d2                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_426c                             	| [$4267: bcs    $426c]
	addq.b	#1,d1                           	| [$4269: incb]
	jra	l_4265                             	| [$426a: bra    $4265]
l_426c:
	move.w	#0xcfdd,d2                      	| [$426c: ldx    #$cfdd]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$426f: lda    b,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_427b                             	| [$4271: beq    $427b]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$4273: clr    $0800,u]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$4277: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	addq,0x42,#1         | [$4279: inc    $42]
l_427b:
	move.b	#0x11,d0                        	| [$427b: lda    #$11]
	OP_R_ON_DP_ADDRESS	sub,0x42,d0          | [$427d: suba   $42]
	jeq	l_4290                             	| [$427f: beq    $4290]
	OP_W_ON_DP_ADDRESS	move,0x42,d0         | [$4281: sta    $42]
	move.b	#0x0b,d0                        	| [$4283: ldd    #$0b00]
	move.w	#0x0b00,d1                      	| [$4283: ldd    #$0b00]
l_4286:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$4286: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$428a: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x42,#1         | [$428c: dec    $42]
	jne	l_4286                             	| [$428e: bne    $4286]
l_4290:
	addq.w	#0x1,d4                         	| [$4290: leau   $1,u]
	OP_R_ON_DP_ADDRESS	move,speed_msb_b0,d0 | [$4292: lda    speed_msb_b0]
	jbsr	write_char_and_move_cursor_422c   	| [$4294: bsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0xb1,d0         | [$4296: lda    $b1]
	jbsr	write_char_and_move_cursor_422c   	| [$4298: bsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0xb2,d0         | [$429a: lda    $b2]
	jbsr	write_char_and_move_cursor_422c   	| [$429c: bsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0xb3,d0         | [$429e: lda    $b3]
	jra	write_char_and_move_cursor_422c    	| [$42a0: bra    write_char_and_move_cursor_422c]
l_42a2:
	GET_DP_ADDRESS	0xe3                    	| [$42a2: ldu    $e3]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$42a4: lda    $c4]
	move.b	#0x0c,d1                        	| [$42a6: ldb    #$0c]
	OP_W_ON_DP_ADDRESS	move,0x47,d1         | [$42a8: stb    $47]
	jbsr	l_513a                            	| [$42aa: jsr    $513a]
	OP_W_ON_DP_ADDRESS	move,0x46,d0         | [$42ad: sta    $46]
	move.b	d1,d0                           	| [$42af: tfr    b,a]
	OP_R_ON_DP_ADDRESS	move,0x47,d1         | [$42b1: ldb    $47]
	jbsr	l_422d                            	| [$42b3: jsr    $422d]
	OP_R_ON_DP_ADDRESS	move,0x46,d0         | [$42b6: lda    $46]
	jbsr	l_422d                            	| [$42b8: jsr    $422d]
	move.b	#0xfb,d0                        	| [$42bb: lda    #$fb]
	jra	l_422d                             	| [$42bd: jra    $422d]

draw_chrono_42c0:
	move.b	#0x20,d1                        	| [$42c0: ldb    #$20]
	jbsr	osd_read_system_inputs |  [$42c2: lda    system_1680]
	and.b	#0x20,d0                         	| [$42c5: anda   #$20]
	jeq	l_42cb                             	| [$42c7: beq    $42cb]
	move.b	#0x40,d1                        	| [$42c9: ldb    #$40]
l_42cb:
	move.w	#0x2ed5,d2                      	| [$42cb: ldx    #$2ed5]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42ce: stb    ,x++] [video_address]
	addq.w	#2,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42d0: stb    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42d2: stb    ,x++] [video_address]
	addq.w	#2,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42d4: stb    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42d6: stb    ,x] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.w	#0x2f15,d2                      	| [$42d8: ldx    #$2f15]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42db: stb    ,x++] [video_address]
	addq.w	#2,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42dd: stb    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42df: stb    ,x++] [video_address]
	addq.w	#2,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42e1: stb    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42e3: stb    ,x] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.w	#0x26d5,d2                      	| [$42e5: ldx    #$26d5]
	move.w	#0x2715,d4                      	| [$42e8: ldu    #$2715]
	OP_R_ON_DP_ADDRESS	move,0x70,d0         | [$42eb: lda    $70]
	asl.b	#1,d0                            	| [$42ed: asla]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42ee: sta    ,x++] [video_address]
	addq.w	#2,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d0                           	| [$42f0: inca]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$42f1: sta    ,u++] [video_address]
	addq.w	#2,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d0| [$42f3: lda    chrono_hundredth_second_71]
	and.b	#0xf0,d0                         	| [$42f5: anda   #$f0]
                                         | [$42f7: lsra]
                                         | [$42f8: lsra]
	lsr.b	#3,d0                            	| [$42f9: lsra]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$42fa: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d0                           	| [$42fc: inca]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$42fd: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d0| [$42ff: lda    chrono_hundredth_second_71]
	and.b	#0x0f,d0                         	| [$4301: anda   #$0f]
	asl.b	#1,d0                            	| [$4303: asla]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$4304: sta    ,x++] [video_address]
	addq.w	#2,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d0                           	| [$4306: inca]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$4307: sta    ,u++] [video_address]
	addq.w	#2,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,chrono_second_72,d0| [$4309: lda    chrono_second_72]
	and.b	#0xf0,d0                         	| [$430b: anda   #$f0]
                                         | [$430d: lsra]
                                         | [$430e: lsra]
	lsr.b	#3,d0                            	| [$430f: lsra]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$4310: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d0                           	| [$4312: inca]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$4313: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,chrono_second_72,d0| [$4315: lda    chrono_second_72]
	and.b	#0x0f,d0                         	| [$4317: anda   #$0f]
	asl.b	#1,d0                            	| [$4319: asla]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$431a: sta    ,x] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d0                           	| [$431c: inca]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$431d: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	rts                                    	| [$431f: rts]

l_4320:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$4320: lda    game_playing_00]
	jne	l_4325                             	| [$4322: bne    $4325]
	rts                                    	| [$4324: rts]

l_4325:
	move.w	#0x33d0,d2                      	| [$4325: ldx    #$33d0]
	move.w	#0x2644,d4                      	| [$4328: ldu    #$2644]
	move.b	#0x04,d0                        	| [$432b: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x40,d0         | [$432d: sta    $40]
	OP_1_ON_DP_ADDRESS	clr,0x41             | [$432f: clr    $41]
l_4331:
	GET_REG_ADDRESS	0,d2                   	| [$4331: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_43b6                             	| [$4333: lbeq   $43b6]
	BIT	#0x20,d0                           	| [$4337: bita   #$20]
	jne	l_43b7                             	| [$4339: lbne   $43b7]
	and.b	#0x10,d0                         	| [$433d: anda   #$10]
	jeq	l_4344                             	| [$433f: beq    $4344]
	moveq	#0,d1                            	| [$4341: clrb]
	jra	l_434d                             	| [$4342: bra    $434d]
l_4344:
	move.w	#0xcfe5,d3                      	| [$4344: ldy    #$cfe5]
	GET_REG_ADDRESS	0,d2                   	| [$4348: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$434a: deca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$434b: ldb    a,y]
	move.b	(a0),d1                         	| [...]
l_434d:
	OP_W_ON_DP_ADDRESS	move,0x75,d1         | [$434d: stb    $75]
	GET_REG_ADDRESS	0,d2                   	| [$434f: lda    ,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$4351: anda   #$0f]
	jbsr	l_422d                            	| [$4353: jsr    $422d]
	move.b	#0x20,d0                        	| [$4356: lda    #$20]
	jbsr	l_422d                            	| [$4358: jsr    $422d]
	addq.w	#0x1,d4                         	| [$435b: leau   $1,u]
	move.w	#0x3360,d3                      	| [$435d: ldy    #$3360]
	GET_REG_ADDRESS	0,d2                   	| [$4361: lda    ,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$4363: anda   #$10]
	jeq	l_436d                             	| [$4365: beq    $436d]
	move.w	#0xcfd6,d3                      	| [$4367: ldy    #$cfd6]
	jra	l_4375                             	| [$436b: bra    $4375]
l_436d:
	GET_REG_ADDRESS	0,d2                   	| [$436d: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$436f: deca]
	move.b	#0x03,d1                        	| [$4370: ldb    #$03]
	jbsr	multiply_ab                       	| [$4372: mul]
	add.w	d1,d3                            	| [$4373: leay   d,y]
l_4375:
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$4375: ldb    $75]
	GET_REG_ADDRESS	0,d3                   	| [$4377: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$4379: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$437c: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$437e: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$4381: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$4383: jsr    $422d]
	addq.w	#0x1,d4                         	| [$4386: leau   $1,u]
	addq.w	#0x1,d2                         	| [$4388: leax   $1,x]
	jbsr	l_43fc                            	| [$438a: jsr    $43fc]
	jbsr	l_52a3                            	| [$438d: jsr    $52a3]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$4390: lda    $6c]
	jeq	l_4399                             	| [$4392: beq    $4399]
	move.b	#swimmer_19,d0                        	| [$4394: ldd    #$1981]
	move.w	#0x1981,d1                      	| [$4394: ldd    #$1981]
	jra	l_439c                             	| [$4397: bra    $439c]
l_4399:
	move.b	#screen_straight_1a,d0                        	| [$4399: ldd    #$1a83]
	move.w	#0x1a83,d1                      	| [$4399: ldd    #$1a83]
l_439c:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$439c: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$43a0: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_43a2:
	OP_W_ON_DP_ADDRESS	addq,0x41,#1         | [$43a2: inc    $41]
	move.w	#0x2644,d4                      	| [$43a4: ldu    #$2644]
	OP_R_ON_DP_ADDRESS	move,0x41,d0         | [$43a7: lda    $41]
	move.b	#0x40,d1                        	| [$43a9: ldb    #$40]
	jbsr	multiply_ab                       	| [$43ab: mul]
	add.w	d1,d4                            	| [$43ac: leau   d,u]
	addq.w	#0x5,d2                         	| [$43ae: leax   $5,x]
	OP_W_ON_DP_ADDRESS	subq,0x40,#1         | [$43b0: dec    $40]
	jne	l_4331                             	| [$43b2: lbne   $4331]
l_43b6:
	rts                                    	| [$43b6: rts]

l_43b7:
	and.b	#0x0f,d0                         	| [$43b7: anda   #$0f]
	jbsr	write_char_and_move_cursor_422c   	| [$43b9: jsr    write_char_and_move_cursor_422c]
	move.b	#0x20,d0                        	| [$43bc: lda    #$20]
	jbsr	write_char_and_move_cursor_422c   	| [$43be: jsr    write_char_and_move_cursor_422c]
	addq.w	#0x1,d4                         	| [$43c1: leau   $1,u]
	move.b	#0x13,d0                        	| [$43c3: lda    #$13]
	jbsr	write_char_and_move_cursor_422c   	| [$43c5: jsr    write_char_and_move_cursor_422c]
	move.b	#0x20,d0                        	| [$43c8: lda    #$20]
	jbsr	write_char_and_move_cursor_422c   	| [$43ca: jsr    write_char_and_move_cursor_422c]
	move.b	#0x25,d0                        	| [$43cd: lda    #$25]
	jbsr	write_char_and_move_cursor_422c   	| [$43cf: jsr    write_char_and_move_cursor_422c]
	addq.w	#0x6,d4                         	| [$43d2: leau   $6,u]
	addq.w	#0x1,d2                         	| [$43d4: leax   $1,x]
	jra	l_43a2                             	| [$43d6: bra    $43a2]
l_43d8:
	OP_1_ON_DP_ADDRESS	clr,0x7f             | [$43d8: clr    $7f]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$43da: ldb    $75]
	GET_REG_ADDRESS	0,d2                   	| [$43dc: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_43f2                             	| [$43de: beq    $43f2]
	jbsr	l_422d                            	| [$43e0: jsr    $422d]
	OP_W_ON_DP_ADDRESS	addq,0x7f,#1         | [$43e3: inc    $7f]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$43e5: lda    $6b]
	jeq	l_43fa                             	| [$43e7: beq    $43fa]
	move.b	#0x8d,d0                        	| [$43e9: lda    #$8d]
	jbsr	write_char_and_move_cursor_422c   	| [$43eb: jsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$43ee: ldb    $75]
	jra	l_43fa                             	| [$43f0: bra    $43fa]
l_43f2:
	addq.w	#0x1,d4                         	| [$43f2: leau   $1,u]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$43f4: lda    $6b]
	jeq	l_43fa                             	| [$43f6: beq    $43fa]
	addq.w	#0x1,d4                         	| [$43f8: leau   $1,u]
l_43fa:
	jra	l_4420                             	| [$43fa: bra    $4420]
l_43fc:
	OP_1_ON_DP_ADDRESS	clr,0x7f             | [$43fc: clr    $7f]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$43fe: ldb    $75]
	GET_REG_ADDRESS	0,d2                   	| [$4400: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4408                             	| [$4402: bne    $4408]
	move.b	#0x10,d0                        	| [$4404: lda    #$10]
	jra	l_440a                             	| [$4406: bra    $440a]
l_4408:
	OP_W_ON_DP_ADDRESS	addq,0x7f,#1         | [$4408: inc    $7f]
l_440a:
	jbsr	l_422d                            	| [$440a: jsr    $422d]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$440d: lda    $6b]
	jeq	l_4420                             	| [$440f: beq    $4420]
	move.b	#0x10,d0                        	| [$4411: lda    #$10]
	GET_REG_ADDRESS	0,d2                   	| [$4413: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	jeq	l_441b                             	| [$4415: beq    $441b]
	move.b	#0x8d,d0                        	| [$4417: lda    #$8d]
	move.b	#0x00,d1                        	| [$4419: ldb    #$00]
l_441b:
	jbsr	l_422d                            	| [$441b: jsr    $422d]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$441e: ldb    $75]
l_4420:
	GET_REG_ADDRESS	0x1,d2                 	| [$4420: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	jne	l_442a                             	| [$4422: bne    $442a]
	OP_1_ON_DP_ADDRESS	tst,0x7f             | [$4424: tst    $7f]
	jne	l_442a                             	| [$4426: bne    $442a]
	move.b	#0x10,d0                        	| [$4428: lda    #$10]
l_442a:
	jbsr	l_422d                            	| [$442a: jsr    $422d]
	GET_REG_ADDRESS	0x2,d2                 	| [$442d: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$442f: jsr    $422d]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4432: lda    current_event_69]
	tst.b	d0                               	| [$4434: cmpa   #$00]
	jeq	l_4444                             	| [$4436: beq    $4444]
	cmp.b	#0x02,d0                         	| [$4438: cmpa   #$02]
	jeq	l_4444                             	| [$443a: beq    $4444]
	cmp.b	#0x06,d0                         	| [$443c: cmpa   #$06]
	jeq	l_4444                             	| [$443e: beq    $4444]
	cmp.b	#0x03,d0                         	| [$4440: cmpa   #$03]
	jne	l_4459                             	| [$4442: bne    $4459]
l_4444:
	move.b	#0x8b,d0                        	| [$4444: lda    #$8b]
	OP_R_ON_DP_ADDRESS	move,0x6b,d1         | [$4446: ldb    $6b]
	jne	l_4454                             	| [$4448: bne    $4454]
	move.b	#0x8a,d0                        	| [$444a: lda    #$8a]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$444c: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$444e: cmpb   #$06]
	jne	l_4454                             	| [$4450: bne    $4454]
	move.b	#0x2b,d0                        	| [$4452: lda    #$2b]
l_4454:
	jbsr	write_char_and_move_cursor_422c   	| [$4454: jsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$4457: ldb    $75]
l_4459:
	GET_REG_ADDRESS	0x3,d2                 	| [$4459: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$445b: jsr    $422d]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$445e: lda    current_event_69]
	cmp.b	#0x04,d0                         	| [$4460: cmpa   #$04]
	jne	l_446b                             	| [$4462: bne    $446b]
	move.b	#0x8c,d0                        	| [$4464: lda    #$8c]
	jbsr	write_char_and_move_cursor_422c   	| [$4466: jsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$4469: ldb    $75]
l_446b:
	GET_REG_ADDRESS	0x4,d2                 	| [$446b: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	jra	l_422d                             	| [$446d: jra    $422d]
l_4470:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$4470: lda    game_playing_00]
	jne	l_4475                             	| [$4472: bne    $4475]
	rts                                    	| [$4474: rts]

l_4475:
	move.w	#0x3498,d2                      	| [$4475: ldx    #$3498]
	move.w	#0x20c1,d4                      	| [$4478: ldu    #$20c1]
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$447b: lda    $01]
	addq.b	#1,d0                           	| [$447d: inca]
	OP_W_ON_DP_ADDRESS	move,0x40,d0         | [$447e: sta    $40]
l_4480:
	move.w	#0xcfe5,d3                      	| [$4480: ldy    #$cfe5]
	GET_REG_ADDRESS	0,d2                   	| [$4484: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$4486: deca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$4487: ldb    a,y]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x47,d1         | [$4489: stb    $47]
	addq.b	#1,d0                           	| [$448b: inca]
	jbsr	l_422d                            	| [$448c: jsr    $422d]
	move.b	#0x20,d0                        	| [$448f: lda    #$20]
	jbsr	l_422d                            	| [$4491: jsr    $422d]
	addq.w	#0x1,d4                         	| [$4494: leau   $1,u]
	move.w	#0x3360,d3                      	| [$4496: ldy    #$3360]
	GET_REG_ADDRESS	0,d2                   	| [$449a: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$449c: deca]
	move.b	#0x03,d1                        	| [$449d: ldb    #$03]
	jbsr	multiply_ab                       	| [$449f: mul]
	add.w	d1,d3                            	| [$44a0: leay   d,y]
	OP_R_ON_DP_ADDRESS	move,0x47,d1         | [$44a2: ldb    $47]
	jbsr	l_44ae                            	| [$44a4: bsr    $44ae]
	add.w	#0x32,d4                         	| [$44a6: leau   $32,u]
	OP_W_ON_DP_ADDRESS	subq,0x40,#1         | [$44a9: dec    $40]
	jne	l_4480                             	| [$44ab: bne    $4480]
	rts                                    	| [$44ad: rts]

l_44ae:
	OP_1_ON_DP_ADDRESS	clr,0x41             | [$44ae: clr    $41]
	GET_REG_ADDRESS	0,d3                   	| [$44b0: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$44b2: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$44b5: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$44b7: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$44ba: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$44bc: jsr    $422d]
	addq.w	#0x1,d4                         	| [$44bf: leau   $1,u]
	move.b	#0x03,d0                        	| [$44c1: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x42,d0         | [$44c3: sta    $42]
l_44c5:
	GET_REG_ADDRESS	0,d2                   	| [$44c5: lda    ,x]
	move.b	(a0),d0                         	| [...]
                                         | [$44c7: lsra]
                                         | [$44c8: lsra]
                                         | [$44c9: lsra]
	lsr.b	#4,d0                            	| [$44ca: lsra]
	jne	l_44d1                             	| [$44cb: bne    $44d1]
	OP_1_ON_DP_ADDRESS	tst,0x41             | [$44cd: tst    $41]
	jeq	l_44d8                             	| [$44cf: beq    $44d8]
l_44d1:
	OP_W_ON_DP_ADDRESS	addq,0x41,#1         | [$44d1: inc    $41]
	jbsr	l_422d                            	| [$44d3: jsr    $422d]
	jra	l_44da                             	| [$44d6: bra    $44da]
l_44d8:
	addq.w	#0x1,d4                         	| [$44d8: leau   $1,u]
l_44da:
	GET_REG_ADDRESS	0,d2                   	| [$44da: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$44dc: anda   #$0f]
	jne	l_44e4                             	| [$44de: bne    $44e4]
	OP_1_ON_DP_ADDRESS	tst,0x41             | [$44e0: tst    $41]
	jeq	l_44eb                             	| [$44e2: beq    $44eb]
l_44e4:
	OP_W_ON_DP_ADDRESS	addq,0x41,#1         | [$44e4: inc    $41]
	jbsr	l_422d                            	| [$44e6: jsr    $422d]
	jra	l_44ed                             	| [$44e9: bra    $44ed]
l_44eb:
	addq.w	#0x1,d4                         	| [$44eb: leau   $1,u]
l_44ed:
	OP_W_ON_DP_ADDRESS	subq,0x42,#1         | [$44ed: dec    $42]
	jne	l_44c5                             	| [$44ef: bne    $44c5]
	moveq	#0,d0                            	| [$44f1: clra]
	jra	l_422d                             	| [$44f2: jra    $422d]

irq_44f5:
	jbsr	osd_disable_interrupts |  [$44f5: clr    irq_mask_w_1487]
	move.b	#0x01,d0                        	| [$44f8: lda    #$01]
	 |  [$44fa: sta    watchdog_1400]
	jbsr	read_inputs_451c                  	| [$44fd: jsr    read_inputs_451c]
	jbsr	l_4544                            	| [$4500: jsr    $4544]
	jbsr	l_45d4                            	| [$4503: jsr    $45d4]
	OP_W_ON_DP_ADDRESS	addq,0x0f,#1         | [$4506: inc    $0f]
	OP_R_ON_DP_ADDRESS	move,0x20,d0         | [$4508: lda    $20]
	asl.b	#1,d0                            	| [$450a: asla]
	
	.ifndef	RELEASE
	move.w	#0xd33a,d2
	.endif
	lea	table_d33a,a2                  	| [$450b: ldx   #table_d33a]
	JSR_A_INDEXED	A2                   	| [$450e: jsr    [a,x]] [jump_table]
	jbsr	update_scroll_registers_4fd2                            	| [$4510: jsr    $4fd2]
	jbsr	update_sprites_4fbd                            	| [$4513: jsr    $4fbd]
	 |  [$4516: lda    #$01]
	jbsr	osd_enable_interrupts |  [$4518: sta    irq_mask_w_1487]
	rts |  [$451b: rti]

read_inputs_451c:
	move.w	#0x3010,d2                      	| [$451c: ldx    #$3010]
	move.b	#0x03,d0                        	| [$451f: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4521: sta    $48]
l_4523:
	GET_REG_ADDRESS	0x1,d2                 	| [$4523: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$4525: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4527: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$4529: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x3,d2                         	| [$452b: leax   $3,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$452d: dec    $48]
	jne	l_4523                             	| [$452f: bne    $4523]
	jbsr	osd_read_system_inputs |  [$4531: lda    system_1680]
	not.b	d0                               	| [$4534: coma]
	OP_W_ON_DP_ADDRESS	move,0x10,d0         | [$4535: sta    $10]
	jbsr	osd_read_inputs_1 |  [$4537: lda    in0_1681]
	not.b	d0                               	| [$453a: coma]
	OP_W_ON_DP_ADDRESS	move,0x13,d0         | [$453b: sta    $13]
	jbsr	osd_read_inputs_2 |  [$453d: lda    in1_1682]
	not.b	d0                               	| [$4540: coma]
	OP_W_ON_DP_ADDRESS	move,0x16,d0         | [$4541: sta    $16]
	rts                                    	| [$4543: rts]

l_4544:
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$4544: lda    $0c]
	and.b	#0x0f,d0                         	| [$4546: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$4548: cmpa   #$0f]
	jne	l_4551                             	| [$454a: bne    $4551]
	move.b	#0x63,d0                        	| [$454c: lda    #$63]
	OP_W_ON_DP_ADDRESS	move,0x03,d0         | [$454e: sta    $03]
	rts                                    	| [$4550: rts]

l_4551:
	OP_R_ON_DP_ADDRESS	move,0x04,d0         | [$4551: lda    $04]
	jeq	l_4559                             	| [$4553: beq    $4559]
	OP_W_ON_DP_ADDRESS	subq,0x04,#1         | [$4555: dec    $04]
	move.b	#0x01,d0                        	| [$4557: lda    #$01]
l_4559:
	 |  [$4559: sta    coin_counter_1_w_1483]
	OP_R_ON_DP_ADDRESS	move,0x06,d0         | [$455c: lda    $06]
	jeq	l_4564                             	| [$455e: beq    $4564]
	OP_W_ON_DP_ADDRESS	subq,0x06,#1         | [$4560: dec    $06]
	move.b	#0x01,d0                        	| [$4562: lda    #$01]
l_4564:
	 |  [$4564: sta    coin_counter_1_w_1484]
	OP_R_ON_DP_ADDRESS	move,0x12,d0         | [$4567: lda    $12]
	GET_DP_ADDRESS	0x11                    	| [$4569: ora    $11]
	or.b	(a0),d0                           	| [...]
	not.b	d0                               	| [$456b: coma]
	GET_DP_ADDRESS	0x10                    	| [$456c: anda   $10]
	and.b	(a0),d0                          	| [...]
	and.b	#0x07,d0                         	| [$456e: anda   #$07]
	jeq	l_458d                             	| [$4570: beq    $458d]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4572: sta    $48]
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$4574: lda    game_playing_00]
	jne	l_4581                             	| [$4576: bne    $4581]
	moveq	#0,d0                            	| [$4578: clra]
	jbsr	l_4eb7                            	| [$4579: jsr    $4eb7]
	move.b	#0x3a,d0                        	| [$457c: lda    #$3a]
	jbsr	l_4eb7                            	| [$457e: jsr    $4eb7]
l_4581:
	jbsr	l_4598                            	| [$4581: bsr    $4598]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$4583: lda    $48]
	BIT	#0x01,d0                           	| [$4585: bita   #$01]
	jne	l_458e                             	| [$4587: bne    $458e]
	BIT	#0x02,d0                           	| [$4589: bita   #$02]
	jne	l_4593                             	| [$458b: bne    $4593]
l_458d:
	rts                                    	| [$458d: rts]

l_458e:
	move.b	#0x03,d0                        	| [$458e: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x04,d0         | [$4590: sta    $04]
	rts                                    	| [$4592: rts]

l_4593:
	move.b	#0x03,d0                        	| [$4593: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x06,d0         | [$4595: sta    $06]
	rts                                    	| [$4597: rts]

l_4598:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$4598: lda    $48]
	BIT	#0x01,d0                           	| [$459a: bita   #$01]
	jne	l_45a7                             	| [$459c: bne    $45a7]
	BIT	#0x02,d0                           	| [$459e: bita   #$02]
	jne	l_45b9                             	| [$45a0: bne    $45b9]
	OP_W_ON_DP_ADDRESS	addq,0x03,#1         | [$45a2: inc    $03]
	jra	l_45c9                             	| [$45a4: bra    $45c9]
l_45a6:
	rts                                    	| [$45a6: rts]

l_45a7:
	OP_W_ON_DP_ADDRESS	addq,0x05,#1         | [$45a7: inc    $05]
	OP_R_ON_DP_ADDRESS	move,0x05,d0         | [$45a9: lda    $05]
	OP_R_ON_DP_ADDRESS	cmp,0x08,d0          | [$45ab: cmpa   $08]
	jne	l_45a6                             	| [$45ad: bne    $45a6]
	OP_R_ON_DP_ADDRESS	move,0x09,d0         | [$45af: lda    $09]
	OP_R_ON_DP_ADDRESS	add,0x03,d0          | [$45b1: adda   $03]
	OP_W_ON_DP_ADDRESS	move,0x03,d0         | [$45b3: sta    $03]
	OP_1_ON_DP_ADDRESS	clr,0x05             | [$45b5: clr    $05]
	jra	l_45c9                             	| [$45b7: bra    $45c9]
l_45b9:
	OP_W_ON_DP_ADDRESS	addq,0x07,#1         | [$45b9: inc    $07]
	OP_R_ON_DP_ADDRESS	move,0x07,d0         | [$45bb: lda    $07]
	OP_R_ON_DP_ADDRESS	cmp,0x0a,d0          | [$45bd: cmpa   $0a]
	jne	l_45a6                             	| [$45bf: bne    $45a6]
	OP_R_ON_DP_ADDRESS	move,0x0b,d0         | [$45c1: lda    $0b]
	OP_R_ON_DP_ADDRESS	add,0x03,d0          | [$45c3: adda   $03]
	OP_W_ON_DP_ADDRESS	move,0x03,d0         | [$45c5: sta    $03]
	OP_1_ON_DP_ADDRESS	clr,0x07             | [$45c7: clr    $07]
l_45c9:
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$45c9: lda    $03]
	cmp.b	#0x64,d0                         	| [$45cb: cmpa   #$64]
	jcs	l_45d3                             	| [$45cd: bcs    $45d3]
	move.b	#0x63,d0                        	| [$45cf: lda    #$63]
	OP_W_ON_DP_ADDRESS	move,0x03,d0         | [$45d1: sta    $03]
l_45d3:
	rts                                    	| [$45d3: rts]

l_45d4:
	GET_DP_ADDRESS	0x3e                    	| [$45d4: ldx    $3e]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_DP_ADDRESS	0x3c                    	| [$45d6: cmpx   $3c]
	CMP_W_TO_REG	a0,d2                          	| [...]
	jne	l_45db                             	| [$45d8: bne    $45db]
	rts                                    	| [$45da: rts]

l_45db:
	GET_REG_ADDRESS	0,d2                   	| [$45db: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	osd_sound_start |  [$45dd: sta    audio_register_w_1500]
	moveq	#0,d0                            	| [$45e0: clra]
	 |  [$45e1: sta    sh_irqtrigger_w_1481]
                                         | [$45e4: nop]
                                         | [$45e5: nop]
                                         | [$45e6: nop]
                                         | [$45e7: nop]
	addq.b	#1,d0                           	| [$45e8: inca]
	 |  [$45e9: sta    sh_irqtrigger_w_1481]
	cmp.w	#0x3360,d2                       	| [$45ec: cmpx   #$3360]
	jne	l_45f4                             	| [$45ef: bne    $45f4]
	move.w	#sound_queue_3340,d2            	| [$45f1: ldx    #sound_queue_3340]
l_45f4:
	GET_DP_ADDRESS	0x3e                    	| [$45f4: stx    $3e]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	rts                                    	| [$45f6: rts]

l_45f7:
	jbsr	l_89e3                            	| [$45f7: jsr    $89e3]
	OP_R_ON_DP_ADDRESS	move,0x22,d0         | [$45fa: lda    $22]
	asl.b	#1,d0                            	| [$45fc: asla]
	
	.ifndef	RELEASE
	move.w	#0xd344,d2
	.endif
	lea	table_d344,a2                  	| [$45fd: ldx   #table_d344]
	JMP_A_INDEXED	A2                   	| [$4600: jra    [a,x]] [jump_table]
l_4602:
	
	.ifndef	RELEASE
	move.w	#0xd34c,d2
	.endif
	lea	table_d34c,a2                  	| [$4602: ldx   #table_d34c]
	OP_R_ON_DP_ADDRESS	move,0x22,d0         | [$4605: lda    $22]
	asl.b	#1,d0                            	| [$4607: asla]
	JMP_A_INDEXED	A2                   	| [$4608: jra    [a,x]] [jump_table]
l_460a:
	GET_ADDRESS	flip_screen_set_1480       	| [$460a: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	
	.ifndef	RELEASE
	move.w	#0xd352,d2
	.endif
	lea	table_d352,a2                  	| [$460d: ldx   #table_d352]
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$4610: lda    $24]
	asl.b	#1,d0                            	| [$4612: asla]
	JSR_A_INDEXED	A2                   	| [$4613: jsr    [a,x]] [jump_table]
	jbsr	l_aee0                            	| [$4615: jsr    $aee0]
	jbsr	l_5880                            	| [$4618: jsr    $5880]
	tst.b	d0                               	| [$461b: tsta]
	jeq	l_4622                             	| [$461c: beq    $4622]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$461e: inc    $22]
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$4620: clr    $24]
l_4622:
	rts                                    	| [$4622: rts]

l_4623:
	GET_ADDRESS	flip_screen_set_1480       	| [$4623: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	moveq	#0,d0                            	| [$4626: clra]
	jbsr	queue_event_4e9a                  	| [$4627: jsr    queue_event_4e9a]
	move.b	#0x01,d0                        	| [$462a: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$462a: ldd    #$0101]
	jbsr	queue_event_4e9a                  	| [$462d: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$4630: ldd    #$0206]
	move.w	#0x0206,d1                      	| [$4630: ldd    #$0206]
	jbsr	queue_event_4e9a                  	| [$4633: jsr    queue_event_4e9a]
	move.b	#0x01,d0                        	| [$4636: ldd    #$010a]
	move.w	#0x010a,d1                      	| [$4636: ldd    #$010a]
	jbsr	queue_event_4e9a                  	| [$4639: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$463c: ldd    #$0204]
	move.w	#0x0204,d1                      	| [$463c: ldd    #$0204]
	jbsr	queue_event_4e9a                  	| [$463f: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$4642: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x25,d0         | [$4644: sta    $25]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$4646: inc    $24]
	rts                                    	| [$4648: rts]

l_4649:
	OP_W_ON_DP_ADDRESS	subq,0x25,#1         | [$4649: dec    $25]
	jne	l_464f                             	| [$464b: bne    $464f]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$464d: inc    $24]
l_464f:
	rts                                    	| [$464f: rts]

l_4650:
	move.b	#0x01,d0                        	| [$4650: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$4650: ldd    #$0101]
	jbsr	queue_event_4e9a                  	| [$4653: jsr    queue_event_4e9a]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$4656: lda    $0f]
	and.b	#0x10,d0                         	| [$4658: anda   #$10]
	jeq	l_4664                             	| [$465a: beq    $4664]
	move.w	#0x2586,d4                      	| [$465c: ldu    #$2586]
	move.b	#0x14,d1                        	| [$465f: ldb    #$14]
	jra	l_52f5                             	| [$4661: jra    $52f5]
l_4664:
	OP_R_ON_DP_ADDRESS	move,0x03,d1         | [$4664: ldb    $03]
	cmp.b	#0x04,d1                         	| [$4666: cmpb   #$04]
	jcs	l_466c                             	| [$4668: bcs    $466c]
	move.b	#0x04,d1                        	| [$466a: ldb    #$04]
l_466c:
	add.b	#0x14,d1                         	| [$466c: addb   #$14]
	move.b	#0x02,d0                        	| [$466e: lda    #$02]
	jra	queue_event_4e9a                   	| [$4670: jra    queue_event_4e9a]

start_game_4673:
	OP_W_ON_DP_ADDRESS	addq,game_playing_00,#1| [$4673: inc    game_playing_00]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$4675: clr    $19]
	OP_1_ON_DP_ADDRESS	clr,0x1b             | [$4677: clr    $1b]
	moveq	#0,d0                            	| [$4679: clra]
	moveq	#0,d1                            	| [$467a: clrb]
	move.w	#0x3060,d2                      	| [$467b: ldx    #$3060]
l_467e:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$467e: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4680: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3100,d2                       	| [$4682: cmpx   #$3100]
	jne	l_467e                             	| [$4685: bne    $467e]
	move.w	#0x3480,d2                      	| [$4687: ldx    #$3480]
l_468a:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$468a: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$468c: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x34a8,d2                       	| [$468e: cmpx   #$34a8]
	jne	l_468a                             	| [$4691: bne    $468a]
	move.w	#0x3500,d2                      	| [$4693: ldx    #$3500]
l_4696:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4696: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4698: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3580,d2                       	| [$469a: cmpx   #$3580]
	jne	l_4696                             	| [$469d: bne    $4696]
	move.w	#0x3500,d2                      	| [$469f: ldx    #$3500]
	GET_DP_ADDRESS	current_level_68
	move.b	start_level,(a0)
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$46a2: lda    $01]
	addq.b	#1,d0                           	| [$46a4: inca]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$46a5: sta    $48]
l_46a7:
	move.b	#0x01,d0                        	| [$46a7: lda    #$01]
	GET_REG_ADDRESS	0,d2                   	| [$46a9: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0c,d1         | [$46ab: ldb    $0c]
	and.b	#0x0f,d1                         	| [$46ad: andb   #$0f]
	cmp.b	#0x0f,d1                         	| [$46af: cmpb   #$0f]
	jne	l_46bb                             	| [$46b1: bne    $46bb]
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d1 | [$46b3: ldb    dsw2_copy_0d]
	and.b	#0x08,d1                         	| [$46b5: andb   #$08]
	jeq	l_46bb                             	| [$46b7: beq    $46bb]
	move.b	#0x32,d0                        	| [$46b9: lda    #$32]
l_46bb:
	GET_REG_ADDRESS	0x1,d2                 	| [$46bb: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	add.w	#0x20,d2                         	| [$46bd: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$46c0: dec    $48]
	jne	l_46a7                             	| [$46c2: bne    $46a7]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$46c4: inc    $22]
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$46c6: clr    $24]
	rts                                    	| [$46c8: rts]

l_46c9:
	
	.ifndef	RELEASE
	move.w	#0xd358,d2
	.endif
	lea	table_d358,a2                  	| [$46c9: ldx   #table_d358]
	OP_R_ON_DP_ADDRESS	move,0x26,d0         | [$46cc: lda    $26]
	asl.b	#1,d0                            	| [$46ce: asla]
	JMP_A_INDEXED	A2                   	| [$46cf: jra    [a,x]] [jump_table]

l_46d1:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$46d1: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$46d3: asla]
	
	.ifndef	RELEASE
	move.w	#0xd366,d2
	.endif
	lea	table_d366,a2                  	| [$46d4: ldx   #table_d366]
	JMP_A_INDEXED	A2                   	| [$46d7: jra    [a,x]] [jump_table]

l_46d9:
	
	.ifndef	RELEASE
	move.w	#0xd36c,d2
	.endif
	lea	table_d36c,a2                  	| [$46d9: ldx   #table_d36c]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$46dc: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$46de: asla]
	JMP_A_INDEXED	A2                   	| [$46df: jra    [a,x]] [jump_table]

l_46e1:
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$46e1: tst    game_playing_00]
	jeq	l_46f3                             	| [$46e3: beq    $46f3]
	move.w	#0xd370,d4                      	| [$46e5: ldu    #$d370]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$46e8: lda    current_level_68]
	move.b	#0x07,d1                        	| [$46ea: ldb    #$07]
	jbsr	l_a606                            	| [$46ec: jsr    $a606]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$46ef: lda    a,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,current_event_69,d0| [$46f1: sta    current_event_69]
l_46f3:
	moveq	#0,d0                            	| [$46f3: clra]
	jbsr	queue_event_4e9a                  	| [$46f4: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$46f7: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$46f9: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$46fb: inc    event_sub_state_2a]
	rts                                    	| [$46fd: rts]

l_46fe:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$46fe: dec    $2b]
	jne	l_470b                             	| [$4700: bne    $470b]
	OP_1_ON_DP_ADDRESS	clr,0x65             | [$4702: clr    $65]
	jbsr	l_5d11                            	| [$4704: jsr    $5d11]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4707: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4709: clr    event_sub_state_2a]
l_470b:
	rts                                    	| [$470b: rts]

l_470c:
	jbsr	l_7f37                            	| [$470c: jsr    $7f37]
	moveq	#0,d0                            	| [$470f: clra]
	moveq	#0,d1                            	| [$4710: clrb]
	move.w	#0x3380,d2                      	| [$4711: ldx    #$3380]
l_4714:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4714: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4716: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x33f8,d2                       	| [$4718: cmpx   #$33f8]
	jne	l_4714                             	| [$471b: bne    $4714]
	move.w	#0x34a8,d2                      	| [$471d: ldx    #$34a8]
l_4720:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4720: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x34e4,d2                       	| [$4722: cmpx   #$34e4]
	jne	l_4720                             	| [$4725: bne    $4720]
	move.w	#0x34e6,d2                      	| [$4727: ldx    #$34e6]
l_472a:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$472a: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x34f0,d2                       	| [$472c: cmpx   #$34f0]
	jne	l_472a                             	| [$472f: bne    $472a]
	OP_1_ON_DP_ADDRESS	clr,0x1b             | [$4731: clr    $1b]
	OP_1_ON_DP_ADDRESS	clr,0x6b             | [$4733: clr    $6b]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4735: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$4737: cmpa   #$03]
	jne	l_4765                             	| [$4739: bne    $4765]
	OP_W_ON_DP_ADDRESS	addq,0x6b,#1         | [$473b: inc    $6b]
	move.w	#0x33d1,d2                      	| [$473d: ldx    #$33d1]
	move.b	#0x04,d1                        	| [$4740: ldb    #$04]
	move.b	#0x10,d0                        	| [$4742: lda    #$10]
l_4744:
	GET_REG_ADDRESS	0,d2                   	| [$4744: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4746: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4748: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$474a: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$474c: sta    ,x++]
	addq.w	#2,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$474e: decb]
	jne	l_4744                             	| [$474f: bne    $4744]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$4751: lda    $1a]
	jeq	l_4765                             	| [$4753: beq    $4765]
	move.w	#0x3500,d2                      	| [$4755: ldx    #$3500]
	OP_1_ON_DP_ADDRESS	clr,0x1b             | [$4758: clr    $1b]
	GET_REG_ADDRESS	0,d2                   	| [$475a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4765                             	| [$475c: bne    $4765]
	GET_REG_ADDRESS	0x20,d2                	| [$475e: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4765                             	| [$4761: bne    $4765]
	OP_W_ON_DP_ADDRESS	addq,0x1b,#1         | [$4763: inc    $1b]
l_4765:
	move.b	#0x3d,d0                        	| [$4765: lda    #$3d]
	jbsr	l_4eb3                            	| [$4767: jsr    $4eb3]
	move.b	#0x01,d0                        	| [$476a: lda    #$01]
	GET_ADDRESS	0x34f3                     	| [$476c: sta    $34f3]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$476f: inc    event_sub_state_28]
	rts                                    	| [$4771: rts]

l_4772:
	jbsr	l_553c                            	| [$4772: jsr    $553c]
	move.b	#0x07,d0                        	| [$4775: lda    #$07]
	jbsr	queue_event_4e9a                  	| [$4777: jsr    queue_event_4e9a]
	jbsr	l_5703                            	| [$477a: jsr    $5703]
	jbsr	l_56a6                            	| [$477d: jsr    $56a6]
	jbsr	l_47c0                            	| [$4780: bsr    $47c0]
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$4782: lda    game_playing_00]
	jne	l_47bb                             	| [$4784: bne    $47bb]
	GET_ADDRESS	0x34e5                     	| [$4786: tst    $34e5]
	tst.b	(a0)                             	| [...]
	jeq	l_47a7                             	| [$4789: beq    $47a7]
	move.w	#0x2704,d4                      	| [$478b: ldu    #$2704]
	move.w	#0xd38b,d2                      	| [$478e: ldx    #$d38b]
	move.w	#0xd393,d3                      	| [$4791: ldy    #$d393]
	move.b	#0x08,d0                        	| [$4795: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4797: sta    $48]
l_4799:
	GET_REG_ADDRESS	0,d2                   	| [$4799: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$479b: suba   ,y+]
	addq.w	#1,d3                           	| [...]
	sub.b	(a0),d0                          	| [...]
	jbsr	write_char_and_move_cursor_422c   	| [$479d: jsr    write_char_and_move_cursor_422c]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$47a0: dec    $48]
	jne	l_4799                             	| [$47a2: bne    $4799]
	GET_ADDRESS	0x34e5                     	| [$47a4: clr    $34e5]
	clr.b	(a0)                         	| [...]
l_47a7:
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$47a7: lda    $0c]
	and.b	#0x0f,d0                         	| [$47a9: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$47ab: cmpa   #$0f]
	jne	l_47bb                             	| [$47ad: bne    $47bb]
	move.b	#0x01,d0                        	| [$47af: ldd    #$010a]
	move.w	#0x010a,d1                      	| [$47af: ldd    #$010a]
	jbsr	queue_event_4e9a                  	| [$47b2: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$47b5: ldd    #$0228]
	move.w	#0x0228,d1                      	| [$47b5: ldd    #$0228]
	jbsr	queue_event_4e9a                  	| [$47b8: jsr    queue_event_4e9a]
l_47bb:
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$47bb: clr    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$47bd: inc    $26]
	rts                                    	| [$47bf: rts]

l_47c0:
	move.w	#0x3060,d2                      	| [$47c0: ldx    #$3060]
	move.w	#0x2658,d4                      	| [$47c3: ldu    #$2658]
	jbsr	l_5742                            	| [$47c6: jsr    $5742]
	move.b	#0x01,d0                        	| [$47c9: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x75,d0         | [$47cb: sta    $75]
	jra	l_43fc                             	| [$47cd: jra    $43fc]
l_47d0:
	jbsr	l_582c                            	| [$47d0: jsr    $582c]
	jbsr	l_52cc                            	| [$47d3: jsr    $52cc]
	jbsr	l_56dc                            	| [$47d6: jsr    $56dc]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$47d9: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$47db: asla]
	
	.ifndef	RELEASE
	move.w	#0xd377,d2
	.endif
	lea	table_d377,a2                  	| [$47dc: ldx   #table_d377]
	JMP_A_INDEXED	A2                   	| [$47df: jra    [a,x]] [jump_table]
l_47e1:
	moveq	#0,d0                            	| [$47e1: clra]
	moveq	#0,d1                            	| [$47e2: clrb]
	move.w	#0x3070,d2                      	| [$47e3: ldx    #$3070]
l_47e6:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$47e6: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$47e8: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3078,d2                       	| [$47ea: cmpx   #$3078]
	jne	l_47e6                             	| [$47ed: bne    $47e6]
	move.w	#0x309a,d2                      	| [$47ef: ldx    #$309a]
l_47f2:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$47f2: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3300,d2                       	| [$47f4: cmpx   #$3300]
	jne	l_47f2                             	| [$47f7: bne    $47f2]
	move.w	#0x3400,d2                      	| [$47f9: ldx    #$3400]
l_47fc:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$47fc: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$47fe: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3480,d2                       	| [$4800: cmpx   #$3480]
	jne	l_47fc                             	| [$4803: bne    $47fc]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f1                     	| [$4805: std    $34f1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x34e7                     	| [$4808: clr    $34e7]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34e6                     	| [$480b: clr    $34e6]
	clr.b	(a0)                         	| [...]
	move.w	#0x34f4,d2                      	| [$480e: ldx    #$34f4]
l_4811:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4811: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x34fc,d2                       	| [$4813: cmpx   #$34fc]
	jne	l_4811                             	| [$4816: bne    $4811]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x33f4                     	| [$4818: std    $33f4]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x33f6                     	| [$481b: std    $33f6]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_5027                            	| [$481e: jsr    $5027]
	moveq	#0,d0                            	| [$4821: clra]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$4822: ldb    $1a]
	jne	l_4834                             	| [$4824: bne    $4834]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$4826: ldb    current_event_69]
	cmp.b	#0x03,d1                         	| [$4828: cmpb   #$03]
	jeq	l_4834                             	| [$482a: beq    $4834]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$482c: ldb    $19]
	cmp.b	#0x02,d1                         	| [$482e: cmpb   #$02]
	jcs	l_4834                             	| [$4830: bcs    $4834]
	move.b	#0x01,d0                        	| [$4832: lda    #$01]
l_4834:
	GET_ADDRESS	flip_screen_set_1480       	| [$4834: sta    flip_screen_set_1480]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x02,d0         | [$4837: sta    $02]
	jbsr	l_afaf                            	| [$4839: jsr    $afaf]
	jbsr	l_afc1                            	| [$483c: jsr    $afc1]
	jbsr	l_5011                            	| [$483f: jsr    $5011]
	jbsr	l_5154                            	| [$4842: jsr    $5154]
	move.b	#0x05,d0                        	| [$4845: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0xa5,d0         | [$4847: sta    $a5]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4849: lda    $6b]
	jeq	l_4856                             	| [$484b: beq    $4856]
	jbsr	l_5338                            	| [$484d: jsr    $5338]
	jbsr	l_4fe7                            	| [$4850: jsr    $4fe7]
	jbsr	l_55b4                            	| [$4853: jsr    $55b4]
l_4856:
	jbsr	l_5301                            	| [$4856: jsr    $5301]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4859: lda    $6b]
	jne	l_4869                             	| [$485b: bne    $4869]
	jbsr	l_4fe7                            	| [$485d: jsr    $4fe7]
	jbsr	l_55b4                            	| [$4860: jsr    $55b4]
	jbsr	l_5855                            	| [$4863: jsr    $5855]
	jbsr	l_57fc                            	| [$4866: jsr    $57fc]
l_4869:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4869: inc    event_sub_state_28]
	rts                                    	| [$486b: rts]

l_486c:
	
	.ifndef	RELEASE
	move.w	#0xd387,d2
	.endif
	lea	table_d387,a2                  	| [$486c: ldx   #table_d387]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$486f: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$4871: asla]
	JMP_A_INDEXED	A2                   	| [$4872: jra    [a,x]] [jump_table]
l_4874:
	
	.ifndef	RELEASE
	move.w	#0xd39b,d2
	.endif
	lea	table_d39b,a2                  	| [$4874: ldx   #table_d39b]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4877: lda    current_event_69]
	asl.b	#1,d0                            	| [$4879: asla]
	JSR_A_INDEXED	A2                   	| [$487a: jsr    [a,x]] [jump_table]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$487c: inc    event_sub_state_2a]
	rts                                    	| [$487e: rts]

l_487f:
	
	.ifndef	RELEASE
	move.w	#0xd3a9,d2
	.endif
	lea	table_d3a9,a2                  	| [$487f: ldx   #table_d3a9]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4882: lda    current_event_69]
	asl.b	#1,d0                            	| [$4884: asla]
	JSR_A_INDEXED	A2                   	| [$4885: jsr    [a,x]] [jump_table]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4887: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4889: clr    event_sub_state_2a]
	rts                                    	| [$488b: rts]

l_488c:
	jbsr	l_5431                            	| [$488c: jsr    $5431]
	move.b	#0x03,d0                        	| [$488f: lda    #$03]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$4891: tst    game_playing_00]
	jne	l_4897                             	| [$4893: bne    $4897]
	move.b	#0x07,d0                        	| [$4895: lda    #$07]
l_4897:
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4897: sta    event_sub_state_28]
	rts                                    	| [$4899: rts]

l_489a:
	jbsr	l_afc1                            	| [$489a: jsr    $afc1]
l_489d:
	jbsr	l_5c4d                            	| [$489d: jsr    $5c4d]
	jra	l_5d63                             	| [$48a0: jra    $5d63]
l_48a3:
	jra	l_5f76                             	| [$48a3: jra    $5f76]
l_48a6:
	OP_1_ON_DP_ADDRESS	clr,0x65             | [$48a6: clr    $65]
	jbsr	l_5c4d                            	| [$48a8: jsr    $5c4d]
	jra	l_5dff                             	| [$48ab: jra    $5dff]
l_48ae:
	move.b	#0x01,d0                        	| [$48ae: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$48b0: sta    $65]
	jbsr	l_5e53                            	| [$48b2: jsr    $5e53]
	jra	l_5e03                             	| [$48b5: jra    $5e03]
l_48b8:
	OP_1_ON_DP_ADDRESS	clr,0x65             | [$48b8: clr    $65]
	jbsr	l_5e53                            	| [$48ba: jsr    $5e53]
	jra	l_5e03                             	| [$48bd: jra    $5e03]
l_48c0:
	rts                                    	| [$48c0: rts]

l_48c1:
	jbsr	l_5e53                            	| [$48c1: jsr    $5e53]
	jra	l_5da5                             	| [$48c4: jra    $5da5]
l_48c7:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$48c7: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$48c9: cmpa   #$03]
	jeq	l_48ed                             	| [$48cb: beq    $48ed]
	jbsr	l_6062                            	| [$48cd: jsr    $6062]
	move.b	#0x02,d0                        	| [$48d0: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$48d2: ldb    $19]
	jbsr	queue_event_4e9a                  	| [$48d4: jsr    queue_event_4e9a]
	move.w	#0x2253,d4                      	| [$48d7: ldu    #$2253]
	jbsr	l_537e                            	| [$48da: jsr    $537e]
	move.b	#0x02,d0                        	| [$48dd: ldd    #$0207]
	move.w	#0x0207,d1                      	| [$48dd: ldd    #$0207]
	jbsr	queue_event_4e9a                  	| [$48e0: jsr    queue_event_4e9a]
	jbsr	l_548b                            	| [$48e3: jsr    $548b]
	move.b	#0xa0,d0                        	| [$48e6: lda    #$a0]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$48e8: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$48ea: inc    event_sub_state_28]
	rts                                    	| [$48ec: rts]

l_48ed:
	jbsr	l_607f                            	| [$48ed: jsr    $607f]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$48f0: lda    $1a]
	jeq	l_4903                             	| [$48f2: beq    $4903]
	moveq	#0,d0                            	| [$48f4: clra]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$48f5: ldb    $1b]
	jeq	l_48fb                             	| [$48f7: beq    $48fb]
	move.b	#0x02,d0                        	| [$48f9: lda    #$02]
l_48fb:
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$48fb: sta    $19]
	OP_W_ON_DP_ADDRESS	move,0x77,d0         | [$48fd: sta    $77]
	move.b	#0x02,d0                        	| [$48ff: lda    #$02]
	jra	l_4909                             	| [$4901: bra    $4909]
l_4903:
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$4903: clr    $19]
	OP_1_ON_DP_ADDRESS	clr,0x77             | [$4905: clr    $77]
	move.b	#0x04,d0                        	| [$4907: lda    #$04]
l_4909:
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$4909: sta    $65]
	OP_W_ON_DP_ADDRESS	move,0x66,d0         | [$490b: sta    $66]
l_490d:
	jbsr	l_548b                            	| [$490d: jsr    $548b]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$4910: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$4912: dec    $65]
	jne	l_490d                             	| [$4914: bne    $490d]
	OP_R_ON_DP_ADDRESS	move,0x77,d0         | [$4916: lda    $77]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4918: sta    $19]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$491a: inc    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$491c: inc    event_sub_state_28]
	rts                                    	| [$491e: rts]

l_491f:
	jbsr	l_54d0                            	| [$491f: jsr    $54d0]
	jbsr	l_85ff                            	| [$4922: jsr    $85ff]
	GET_ADDRESS	0x34f3                     	| [$4925: lda    $34f3]
	move.b	(a0),d0                         	| [...]
	jne	l_4938                             	| [$4928: bne    $4938]
	jbsr	l_4eca                            	| [$492a: jsr    $4eca]
	jbsr	l_4f8a                            	| [$492d: jsr    $4f8a]
	and.b	#0x05,d0                         	| [$4930: anda   #$05]
	jeq	l_4938                             	| [$4932: beq    $4938]
	move.b	#0x01,d0                        	| [$4934: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$4936: sta    $29]
l_4938:
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$4938: dec    $29]
	jne	l_4967                             	| [$493a: bne    $4967]
	GET_ADDRESS	0x34f3                     	| [$493c: clr    $34f3]
	clr.b	(a0)                         	| [...]
	jbsr	l_5e53                            	| [$493f: jsr    $5e53]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4942: lda    current_event_69]
	cmp.b	#0x04,d0                         	| [$4944: cmpa   #$04]
	jne	l_4963                             	| [$4946: bne    $4963]
	move.w	#0x2220,d2                      	| [$4948: ldx    #$2220]
	move.b	#0x06,d0                        	| [$494b: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$494d: sta    $48]
	move.b	#0x10,d0                        	| [$494f: lda    #$10]
l_4951:
	move.b	#0x20,d1                        	| [$4951: ldb    #$20]
l_4953:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$4953: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$4957: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$4959: decb]
	jne	l_4953                             	| [$495a: bne    $4953]
	add.w	#0x20,d2                         	| [$495c: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$495f: dec    $48]
	jne	l_4951                             	| [$4961: bne    $4951]
l_4963:
	move.b	#0x07,d0                        	| [$4963: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4965: sta    event_sub_state_28]
l_4967:
	rts                                    	| [$4967: rts]

l_4968:
	move.w	#0x3500,d2                      	| [$4968: ldx    #$3500]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$496b: lda    $19]
	move.b	#0x20,d1                        	| [$496d: ldb    #$20]
	jbsr	multiply_ab                       	| [$496f: mul]
	add.w	d1,d2                            	| [$4970: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$4972: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_4996                             	| [$4974: beq    $4996]
	GET_REG_ADDRESS	0x4,d2                 	| [$4976: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4996                             	| [$4978: bne    $4996]
	move.b	#0x02,d0                        	| [$497a: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$497c: ldb    $19]
	add.b	#0x29,d1                         	| [$497e: addb   #$29]
	jbsr	queue_event_4e9a                  	| [$4980: jsr    queue_event_4e9a]
	move.w	#0x23c4,d4                      	| [$4983: ldu    #$23c4]
	jbsr	l_537e                            	| [$4986: jsr    $537e]
	move.b	#0x02,d0                        	| [$4989: ldd    #$022d]
	move.w	#0x022d,d1                      	| [$4989: ldd    #$022d]
	jbsr	queue_event_4e9a                  	| [$498c: jsr    queue_event_4e9a]
	jbsr	l_54ae                            	| [$498f: jsr    $54ae]
	move.b	#0x80,d0                        	| [$4992: lda    #$80]
	jra	l_4998                             	| [$4994: bra    $4998]
l_4996:
	move.b	#0x01,d0                        	| [$4996: lda    #$01]
l_4998:
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$4998: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$499a: inc    event_sub_state_28]
	rts                                    	| [$499c: rts]

l_499d:
	jbsr	l_5506                            	| [$499d: jsr    $5506]
	jbsr	l_85ff                            	| [$49a0: jsr    $85ff]
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$49a3: dec    $29]
	jne	l_49af                             	| [$49a5: bne    $49af]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$49a7: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x66,#1         | [$49a9: dec    $66]
	jeq	l_49b0                             	| [$49ab: beq    $49b0]
	OP_W_ON_DP_ADDRESS	subq,event_sub_state_28,#1| [$49ad: dec    event_sub_state_28]
l_49af:
	rts                                    	| [$49af: rts]

l_49b0:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$49b0: inc    event_sub_state_28]
	rts                                    	| [$49b2: rts]

l_49b3:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$49b3: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$49b5: cmpa   #$03]
	jne	l_49df                             	| [$49b7: bne    $49df]
	move.w	#0x30a0,d2                      	| [$49b9: ldx    #$30a0]
l_49bc:
	GET_REG_ADDRESS	0,d2                   	| [$49bc: clr    ,x]
	clr.b	(a0)                         	| [...]
	add.w	#0x60,d2                         	| [$49be: leax   $60,x]
	cmp.w	#0x3220,d2                       	| [$49c1: cmpx   #$3220]
	jne	l_49bc                             	| [$49c4: bne    $49bc]
l_49c6:
	GET_REG_ADDRESS	0,d2                   	| [$49c6: clr    ,x]
	clr.b	(a0)                         	| [...]
	add.w	#0x20,d2                         	| [$49c8: leax   $20,x]
	cmp.w	#0x3300,d2                       	| [$49cb: cmpx   #$3300]
	jne	l_49c6                             	| [$49ce: bne    $49c6]
	jbsr	l_5338                            	| [$49d0: jsr    $5338]
	jbsr	l_4fe7                            	| [$49d3: jsr    $4fe7]
	jbsr	l_55b4                            	| [$49d6: jsr    $55b4]
	jbsr	l_5f76                            	| [$49d9: jsr    $5f76]
	jbsr	l_79e2                            	| [$49dc: jsr    $79e2]
l_49df:
	jbsr	l_54c3                            	| [$49df: jsr    $54c3]
	moveq	#0,d0                            	| [$49e2: clra]
	moveq	#0,d1                            	| [$49e3: clrb]
	move.w	#0x3400,d2                      	| [$49e4: ldx    #$3400]
l_49e7:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$49e7: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3480,d2                       	| [$49e9: cmpx   #$3480]
	jne	l_49e7                             	| [$49ec: bne    $49e7]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$49ee: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$49f0: clr    event_sub_state_28]
	rts                                    	| [$49f2: rts]

l_49f3:
	jbsr	l_4eca                            	| [$49f3: jsr    $4eca]
	jbsr	l_582c                            	| [$49f6: jsr    $582c]
	jbsr	l_52cc                            	| [$49f9: jsr    $52cc]
	jbsr	l_56dc                            	| [$49fc: jsr    $56dc]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$49ff: lda    current_event_69]
	asl.b	#1,d0                            	| [$4a01: asla]
	
	.ifndef	RELEASE
	move.w	#0xd3b7,d2
	.endif
	lea	event_table_d3b7,a2            	| [$4a02: ldx   #event_table_d3b7]
	JMP_A_INDEXED	A2                   	| [$4a05: jra    [a,x]] [jump_table]

l_4a07:
	jbsr	l_582c                            	| [$4a07: jsr    $582c]
	jbsr	l_52cc                            	| [$4a0a: jsr    $52cc]
	jbsr	l_56dc                            	| [$4a0d: jsr    $56dc]
	
	.ifndef	RELEASE
	move.w	#0xd3c5,d2
	.endif
	lea	table_d3c5,a2                  	| [$4a10: ldx   #table_d3c5]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4a13: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$4a15: asla]
	JMP_A_INDEXED	A2                   	| [$4a16: jra    [a,x]] [jump_table]
l_4a18:
	move.b	#0x30,d0                        	| [$4a18: lda    #$30]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$4a1a: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4a1c: inc    event_sub_state_28]
	rts                                    	| [$4a1e: rts]

l_4a1f:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4a1f: lda    $19]
	OP_W_ON_DP_ADDRESS	move,0x77,d0         | [$4a21: sta    $77]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4a23: lda    $6b]
	jne	l_4b32                             	| [$4a25: lbne   $4b32]
	jbsr	l_539c                            	| [$4a29: jsr    $539c]
	jbsr	l_52b8                            	| [$4a2c: jsr    $52b8]
	jbsr	l_5171                            	| [$4a2f: jsr    $5171]
	move.b	#0x06,d0                        	| [$4a32: lda    #$06]
	jbsr	queue_event_4e9a                  	| [$4a34: jsr    queue_event_4e9a]
	jbsr	l_5855                            	| [$4a37: jsr    $5855]
	jbsr	l_57fc                            	| [$4a3a: jsr    $57fc]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4a3d: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$4a3f: cmpa   #$02]
	jne	l_4a4c                             	| [$4a41: bne    $4a4c]
	jbsr	l_b39a                            	| [$4a43: jsr    $b39a]
	OP_R_ON_DP_ADDRESS	move,0xcb,d0         | [$4a46: lda    $cb]
	jne	l_4a86                             	| [$4a48: bne    $4a86]
	jra	l_4a53                             	| [$4a4a: bra    $4a53]
l_4a4c:
	jbsr	l_52a1                            	| [$4a4c: jsr    $52a1]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$4a4f: lda    $6c]
	jeq	l_4a86                             	| [$4a51: beq    $4a86]
l_4a53:
	move.w	#0x30a0,d2                      	| [$4a53: ldx    #$30a0]
	move.w	#0xda3f,d4                      	| [$4a56: ldu    #$da3f]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4a59: lda    current_event_69]
	cmp.b	#0x01,d0                         	| [$4a5b: cmpa   #$01]
	jne	l_4a62                             	| [$4a5d: bne    $4a62]
	move.w	#0xdcd8,d4                      	| [$4a5f: ldu    #$dcd8]
l_4a62:
	GET_REG_ADDRESS	0xb,d2                 	| [$4a62: stu    $b,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x34f4                     	| [$4a64: clr    $34f4]
	clr.b	(a0)                         	| [...]
	jbsr	l_4b0b                            	| [$4a67: jsr    $4b0b]
	move.b	#0x01,d0                        	| [$4a6a: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x74,d0         | [$4a6c: sta    $74]
	move.b	#0xff,d0                        	| [$4a6e: lda    #$ff]
	GET_ADDRESS	0x34f7                     	| [$4a70: sta    $34f7]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_af23                            	| [$4a73: jsr    $af23]
	GET_ADDRESS	0x33f4                     	| [$4a76: lda    $33f4]
	move.b	(a0),d0                         	| [...]
	jne	l_4ad4                             	| [$4a79: bne    $4ad4]
	moveq	#0,d0                            	| [$4a7b: clra]
	jbsr	l_4eb3                            	| [$4a7c: jsr    $4eb3]
	move.b	#0x41,d0                        	| [$4a7f: lda    #$41]
	jbsr	l_4eb3                            	| [$4a81: jsr    $4eb3]
	jra	l_4ad4                             	| [$4a84: bra    $4ad4]
l_4a86:
	move.w	#0x30a0,d2                      	| [$4a86: ldx    #$30a0]
	jbsr	l_4b0b                            	| [$4a89: jsr    $4b0b]
	move.w	#0xd3d1,d4                      	| [$4a8c: ldu    #$d3d1]
	jbsr	l_4b03                            	| [$4a8f: bsr    $4b03]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$4a91: lda    $6a]
	cmp.b	#0x02,d0                         	| [$4a93: cmpa   #$02]
	jne	l_4aa6                             	| [$4a95: bne    $4aa6]
	move.w	#0xd3d8,d4                      	| [$4a97: ldu    #$d3d8]
	jbsr	l_4b03                            	| [$4a9a: bsr    $4b03]
	jbsr	l_52b8                            	| [$4a9c: jsr    $52b8]
	jbsr	l_52a3                            	| [$4a9f: jsr    $52a3]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$4aa2: lda    $6c]
	jeq	l_4abe                             	| [$4aa4: beq    $4abe]
l_4aa6:
	move.w	#0x30a0,d2                      	| [$4aa6: ldx    #$30a0]
	move.w	#0xda5b,d4                      	| [$4aa9: ldu    #$da5b]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4aac: lda    current_event_69]
	cmp.b	#0x01,d0                         	| [$4aae: cmpa   #$01]
	jne	l_4ab5                             	| [$4ab0: bne    $4ab5]
	move.w	#0xdcdf,d4                      	| [$4ab2: ldu    #$dcdf]
l_4ab5:
	GET_REG_ADDRESS	0xb,d2                 	| [$4ab5: stu    $b,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x01,d0                        	| [$4ab7: lda    #$01]
	GET_ADDRESS	0x34f4                     	| [$4ab9: sta    $34f4]
	move.b	d0,(a0)                         	| [...]
	jra	l_4ad4                             	| [$4abc: bra    $4ad4]
l_4abe:
	move.w	#0x30a0,d2                      	| [$4abe: ldx    #$30a0]
	move.w	#0xda6c,d4                      	| [$4ac1: ldu    #$da6c]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4ac4: lda    current_event_69]
	cmp.b	#0x01,d0                         	| [$4ac6: cmpa   #$01]
	jne	l_4acd                             	| [$4ac8: bne    $4acd]
	move.w	#0xdce6,d4                      	| [$4aca: ldu    #$dce6]
l_4acd:
	GET_REG_ADDRESS	0xb,d2                 	| [$4acd: stu    $b,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x02,d0                        	| [$4acf: lda    #$02]
	GET_ADDRESS	0x34f4                     	| [$4ad1: sta    $34f4]
	move.b	d0,(a0)                         	| [...]
l_4ad4:
	GET_ADDRESS	0x33f4                     	| [$4ad4: lda    $33f4]
	move.b	(a0),d0                         	| [...]
	jeq	l_4aee                             	| [$4ad7: beq    $4aee]
	GET_ADDRESS	0x34e7                     	| [$4ad9: clr    $34e7]
	clr.b	(a0)                         	| [...]
	jbsr	l_7c31                            	| [$4adc: jsr    $7c31]
	jbsr	l_7c50                            	| [$4adf: jsr    $7c50]
	jbsr	l_afaf                            	| [$4ae2: jsr    $afaf]
	move.b	#0x3c,d0                        	| [$4ae5: lda    #$3c]
	jbsr	l_4eb3                            	| [$4ae7: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$4aea: lda    #$ff]
	jra	l_4af8                             	| [$4aec: bra    $4af8]
l_4aee:
	GET_ADDRESS	0x34f7                     	| [$4aee: lda    $34f7]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x34f0                     	| [$4af1: ldb    $34f0]
	move.b	(a0),d1                         	| [...]
	jeq	l_4af8                             	| [$4af4: beq    $4af8]
	move.b	#0x60,d0                        	| [$4af6: lda    #$60]
l_4af8:
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$4af8: sta    $29]
	jbsr	l_8000                            	| [$4afa: jsr    $8000]
	jbsr	l_811a                            	| [$4afd: jsr    $811a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4b00: inc    event_sub_state_28]
	rts                                    	| [$4b02: rts]

l_4b03:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4b03: lda    current_event_69]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$4b05: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x34f7                     	| [$4b07: sta    $34f7]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$4b0a: rts]

l_4b0b:
	move.w	#0xd8e6,d4                      	| [$4b0b: ldu    #$d8e6]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4b0e: lda    current_event_69]
	move.b	#0x0c,d1                        	| [$4b10: ldb    #$0c]
	jbsr	multiply_ab                       	| [$4b12: mul]
	GET_REG_ADDRESS_FROM_REG	d1,d4         	| [$4b13: lda    d,u]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$4b15: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$4b17: cmpb   #$06]
	jeq	l_4b2a                             	| [$4b19: beq    $4b2a]
	cmp.b	#0x02,d1                         	| [$4b1b: cmpb   #$02]
	jne	l_4b27                             	| [$4b1d: bne    $4b27]
	OP_R_ON_DP_ADDRESS	move,0xcb,d1         | [$4b1f: ldb    $cb]
	cmp.b	#0x02,d1                         	| [$4b21: cmpb   #$02]
	jeq	l_4b27                             	| [$4b23: beq    $4b27]
	sub.b	#0x08,d0                         	| [$4b25: suba   #$08]
l_4b27:
	GET_REG_ADDRESS	0x1,d2                 	| [$4b27: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$4b29: rts]

l_4b2a:
	OP_1_ON_DP_ADDRESS	tst,0xff             | [$4b2a: tst    $ff]
	jeq	l_4b27                             	| [$4b2c: beq    $4b27]
	move.b	#0x50,d0                        	| [$4b2e: lda    #$50]
	jra	l_4b27                             	| [$4b30: bra    $4b27]
l_4b32:
	move.w	#0x33d0,d2                      	| [$4b32: ldx    #$33d0]
	move.b	#0x04,d0                        	| [$4b35: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4b37: sta    $48]
l_4b39:
	GET_REG_ADDRESS	0,d2                   	| [$4b39: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_4b66                             	| [$4b3b: beq    $4b66]
	BIT	#0x10,d0                           	| [$4b3d: bita   #$10]
	jne	l_4b66                             	| [$4b3f: bne    $4b66]
	and.b	#0x0f,d0                         	| [$4b41: anda   #$0f]
	subq.b	#1,d0                           	| [$4b43: deca]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$4b44: ldb    $1a]
	jeq	l_4b5d                             	| [$4b46: beq    $4b5d]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$4b48: ldb    $1b]
	jne	l_4b56                             	| [$4b4a: bne    $4b56]
	cmp.b	#0x02,d0                         	| [$4b4c: cmpa   #$02]
	jeq	l_4b66                             	| [$4b4e: beq    $4b66]
	cmp.b	#0x03,d0                         	| [$4b50: cmpa   #$03]
	jeq	l_4b66                             	| [$4b52: beq    $4b66]
	jra	l_4b5d                             	| [$4b54: bra    $4b5d]
l_4b56:
	tst.b	d0                               	| [$4b56: tsta]
	jeq	l_4b66                             	| [$4b57: beq    $4b66]
	cmp.b	#0x01,d0                         	| [$4b59: cmpa   #$01]
	jeq	l_4b66                             	| [$4b5b: beq    $4b66]
l_4b5d:
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4b5d: sta    $19]
	move.l	d2,-(sp)                        	| [$4b5f: pshs   x]
	jbsr	l_af23                            	| [$4b61: jsr    $af23]
	movem.l	(sp)+,d2                       	| [$4b64: puls   x]
l_4b66:
	addq.w	#0x6,d2                         	| [$4b66: leax   $6,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$4b68: dec    $48]
	jne	l_4b39                             	| [$4b6a: bne    $4b39]
	GET_ADDRESS	0x33f4                     	| [$4b6c: lda    $33f4]
	move.b	(a0),d0                         	| [...]
	jeq	l_4b80                             	| [$4b6f: beq    $4b80]
	move.b	#0x33,d0                        	| [$4b71: ldd    #$33f4]
	move.w	#0x33f4,d1                      	| [$4b71: ldd    #$33f4]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xfe                    	| [$4b74: std    $fe]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_afaf                            	| [$4b76: jsr    $afaf]
l_4b79:
	move.b	#0xf0,d0                        	| [$4b79: lda    #$f0]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$4b7b: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4b7d: inc    event_sub_state_28]
	rts                                    	| [$4b7f: rts]

l_4b80:
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$4b80: clr    $49]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$4b82: lda    $1a]
	jeq	l_4bf6                             	| [$4b84: beq    $4bf6]
	move.b	#0xdc,d0                        	| [$4b86: ldd    #$dc59]
	move.w	#0xdc59,d1                      	| [$4b86: ldd    #$dc59]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xab                    	| [$4b89: std    $ab]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x31cb                     	| [$4b8b: std    $31cb]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$4b8e: clra]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$4b8f: ldb    $1b]
	jeq	l_4b95                             	| [$4b91: beq    $4b95]
	move.b	#0x02,d0                        	| [$4b93: lda    #$02]
l_4b95:
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4b95: sta    $19]
	move.b	#0x02,d0                        	| [$4b97: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$4b99: sta    $65]
	move.w	#0x3100,d4                      	| [$4b9b: ldu    #$3100]
l_4b9e:
	GET_REG_ADDRESS	0,d4                   	| [$4b9e: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jne	l_4ba8                             	| [$4ba0: bne    $4ba8]
	move.b	#0x10,d0                        	| [$4ba2: lda    #$10]
	GET_REG_ADDRESS	0,d4                   	| [$4ba4: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	jra	l_4beb                             	| [$4ba6: bra    $4beb]
l_4ba8:
	GET_REG_ADDRESS	0xd,d4                 	| [$4ba8: lda    $d,u]
	move.b	(a0),d0                         	| [...]
	jne	l_4bc2                             	| [$4baa: bne    $4bc2]
	jbsr	l_52a1                            	| [$4bac: jsr    $52a1]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$4baf: lda    $6c]
	jeq	l_4be6                             	| [$4bb1: beq    $4be6]
	OP_1_ON_DP_ADDRESS	tst,0x49             | [$4bb3: tst    $49]
	jne	l_4bc2                             	| [$4bb5: bne    $4bc2]
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$4bb7: inc    $49]
	moveq	#0,d0                            	| [$4bb9: clra]
	jbsr	l_4eb3                            	| [$4bba: jsr    $4eb3]
	move.b	#0x41,d0                        	| [$4bbd: lda    #$41]
	jbsr	l_4eb3                            	| [$4bbf: jsr    $4eb3]
l_4bc2:
	OP_R_ON_DP_ADDRESS	move,0xd9,d0         | [$4bc2: lda    $d9]
	subq.b	#1,d0                           	| [$4bc4: deca]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$4bc5: ldb    $1a]
	jeq	l_4bd0                             	| [$4bc7: beq    $4bd0]
	subq.b	#1,d0                           	| [$4bc9: deca]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$4bca: ldb    $1b]
	jeq	l_4bd0                             	| [$4bcc: beq    $4bd0]
	add.b	#0x02,d0                         	| [$4bce: adda   #$02]
l_4bd0:
	OP_R_ON_DP_ADDRESS	cmp,swimmer_19,d0          | [$4bd0: cmpa   $19]
	jne	l_4bdf                             	| [$4bd2: bne    $4bdf]
	move.b	#0xdc,d0                        	| [$4bd4: ldd    #$dc6f]
	move.w	#0xdc6f,d1                      	| [$4bd4: ldd    #$dc6f]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$4bd7: std    $b,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x01,d0                        	| [$4bd9: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x74,d0         | [$4bdb: sta    $74]
	jra	l_4beb                             	| [$4bdd: bra    $4beb]
l_4bdf:
	move.b	#0xdc,d0                        	| [$4bdf: ldd    #$dc59]
	move.w	#0xdc59,d1                      	| [$4bdf: ldd    #$dc59]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$4be2: std    $b,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_4beb                             	| [$4be4: bra    $4beb]
l_4be6:
	move.b	#0xdc,d0                        	| [$4be6: ldd    #$dc64]
	move.w	#0xdc64,d1                      	| [$4be6: ldd    #$dc64]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$4be9: std    $b,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_4beb:
	add.w	#0x60,d4                         	| [$4beb: leau   $60,u]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$4bee: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$4bf0: dec    $65]
	jne	l_4b9e                             	| [$4bf2: bne    $4b9e]
	jra	l_4b79                             	| [$4bf4: bra    $4b79]
l_4bf6:
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$4bf6: clr    $19]
	move.w	#0x30a0,d4                      	| [$4bf8: ldu    #$30a0]
	move.b	#0x04,d0                        	| [$4bfb: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$4bfd: sta    $65]
	jra	l_4b9e                             	| [$4bff: bra    $4b9e]
l_4c01:
	GET_ADDRESS	0x33f4                     	| [$4c01: lda    $33f4]
	move.b	(a0),d0                         	| [...]
	jeq	l_4c0d                             	| [$4c04: beq    $4c0d]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4c06: lda    $6b]
	jeq	l_4c55                             	| [$4c08: beq    $4c55]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4c0a: inc    event_sub_state_28]
	rts                                    	| [$4c0c: rts]

l_4c0d:
	move.w	#0x30a0,d2                      	| [$4c0d: ldx    #$30a0]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4c10: lda    $6b]
	jne	l_4c3a                             	| [$4c12: bne    $4c3a]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4c14: lda    current_event_69]
	cmp.b	#0x04,d0                         	| [$4c16: cmpa   #$04]
	jeq	l_4c2b                             	| [$4c18: beq    $4c2b]
	cmp.b	#0x01,d0                         	| [$4c1a: cmpa   #$01]
	jeq	l_4c30                             	| [$4c1c: beq    $4c30]
	GET_ADDRESS	0x34f4                     	| [$4c1e: tst    $34f4]
	tst.b	(a0)                             	| [...]
	jeq	l_4c35                             	| [$4c21: beq    $4c35]
	jbsr	l_836d                            	| [$4c23: jsr    $836d]
	jbsr	l_82fd                            	| [$4c26: jsr    $82fd]
	jra	l_4c4c                             	| [$4c29: bra    $4c4c]
l_4c2b:
	jbsr	l_bf8f                            	| [$4c2b: jsr    $bf8f]
	jra	l_4c4c                             	| [$4c2e: bra    $4c4c]
l_4c30:
	jbsr	l_85e6                            	| [$4c30: jsr    $85e6]
	jra	l_4c4c                             	| [$4c33: bra    $4c4c]
l_4c35:
	jbsr	l_b039                            	| [$4c35: jsr    $b039]
	jra	l_4c4c                             	| [$4c38: bra    $4c4c]
l_4c3a:
	move.b	#0x04,d0                        	| [$4c3a: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$4c3c: sta    $65]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$4c3e: clr    $19]
l_4c40:
	jbsr	l_850d                            	| [$4c40: jsr    $850d]
	add.w	#0x60,d2                         	| [$4c43: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$4c46: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$4c48: dec    $65]
	jne	l_4c40                             	| [$4c4a: bne    $4c40]
l_4c4c:
	OP_R_ON_DP_ADDRESS	move,0x74,d0         | [$4c4c: lda    $74]
	jeq	l_4c5a                             	| [$4c4e: beq    $4c5a]
	jbsr	l_57b0                            	| [$4c50: jsr    $57b0]
	jra	l_4c5a                             	| [$4c53: bra    $4c5a]
l_4c55:
	jbsr	l_7c9b                            	| [$4c55: jsr    $7c9b]
	jra	l_4c60                             	| [$4c58: bra    $4c60]
l_4c5a:
	jbsr	l_801a                            	| [$4c5a: jsr    $801a]
	jbsr	l_813d                            	| [$4c5d: jsr    $813d]
l_4c60:
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$4c60: dec    $29]
	jne	l_4c6f                             	| [$4c62: bne    $4c6f]
	jbsr	l_5703                            	| [$4c64: jsr    $5703]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4c67: lda    $6b]
	jne	l_4c8b                             	| [$4c69: bne    $4c8b]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$4c6b: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4c6d: clr    event_sub_state_28]
l_4c6f:
	rts                                    	| [$4c6f: rts]

l_4c70:
	GET_ADDRESS	0x33f4                     	| [$4c70: lda    $33f4]
	move.b	(a0),d0                         	| [...]
	jeq	l_4c8b                             	| [$4c73: beq    $4c8b]
	jbsr	l_7c31                            	| [$4c75: jsr    $7c31]
	jbsr	l_7c50                            	| [$4c78: jsr    $7c50]
	moveq	#0,d0                            	| [$4c7b: clra]
	jbsr	l_4eb3                            	| [$4c7c: jsr    $4eb3]
	move.b	#0x3c,d0                        	| [$4c7f: lda    #$3c]
	jbsr	l_4eb3                            	| [$4c81: jsr    $4eb3]
	move.b	#0xf0,d0                        	| [$4c84: lda    #$f0]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$4c86: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4c88: inc    event_sub_state_28]
	rts                                    	| [$4c8a: rts]

l_4c8b:
	jbsr	l_5703                            	| [$4c8b: jsr    $5703]
	move.b	#0x05,d0                        	| [$4c8e: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x26,d0         | [$4c90: sta    $26]
	move.b	#0x03,d0                        	| [$4c92: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4c94: sta    event_sub_state_28]
	rts                                    	| [$4c96: rts]

l_4c97:
	jbsr	l_7c9b                            	| [$4c97: jsr    $7c9b]
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$4c9a: dec    $29]
	jne	l_4caf                             	| [$4c9c: bne    $4caf]
	OP_W_ON_DP_ADDRESS	addq,0xff,#1         | [$4c9e: inc    $ff]
	OP_R_ON_DP_ADDRESS	move,0xff,d0         | [$4ca0: lda    $ff]
	cmp.b	#0xf7,d0                         	| [$4ca2: cmpa   #$f7]
	jeq	l_4c8b                             	| [$4ca4: beq    $4c8b]
	GET_INDIRECT_ADDRESS	0x30fe            	| [$4ca6: lda    [$30fe]]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x33f4                     	| [$4caa: sta    $33f4]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,event_sub_state_28,#1| [$4cad: dec    event_sub_state_28]
l_4caf:
	rts                                    	| [$4caf: rts]

l_4cb0:
	jbsr	l_5027                            	| [$4cb0: jsr    $5027]
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$4cb3: lda    game_playing_00]
	jne	l_4cc0                             	| [$4cb5: bne    $4cc0]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$4cb7: inc    $24]
	OP_1_ON_DP_ADDRESS	clr,0x26             | [$4cb9: clr    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4cbb: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4cbd: clr    event_sub_state_2a]
	rts                                    	| [$4cbf: rts]

l_4cc0:
	OP_R_ON_DP_ADDRESS	move,0x77,d0         | [$4cc0: lda    $77]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4cc2: sta    $19]
	move.w	#0x3500,d2                      	| [$4cc4: ldx    #$3500]
	move.b	#0x20,d1                        	| [$4cc7: ldb    #$20]
	jbsr	multiply_ab                       	| [$4cc9: mul]
	add.w	d1,d2                            	| [$4cca: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4ccc: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$4cce: cmpa   #$02]
	jne	l_4cd6                             	| [$4cd0: bne    $4cd6]
	OP_R_ON_DP_ADDRESS	move,0xcb,d0         | [$4cd2: lda    $cb]
	jeq	l_4cde                             	| [$4cd4: beq    $4cde]
l_4cd6:
	GET_REG_ADDRESS	0x2,d2                 	| [$4cd6: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$4cd8: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0x79,d0          | [$4cda: cmpa   $79]
	jeq	l_4d03                             	| [$4cdc: beq    $4d03]
l_4cde:
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$4cde: inc    $19]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4ce0: lda    $19]
	cmp.b	#0x04,d0                         	| [$4ce2: cmpa   #$04]
	jeq	l_4cfc                             	| [$4ce4: beq    $4cfc]
	add.w	#0x20,d2                         	| [$4ce6: leax   $20,x]
l_4ce9:
	GET_REG_ADDRESS	0,d2                   	| [$4ce9: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_4cde                             	| [$4ceb: beq    $4cde]
	GET_REG_ADDRESS	0x2,d2                 	| [$4ced: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0x79,d0          | [$4cef: cmpa   $79]
	jcc	l_4cde                             	| [$4cf1: bcc    $4cde]
	move.b	#0x01,d0                        	| [$4cf3: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x26,d0         | [$4cf5: sta    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4cf7: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4cf9: clr    event_sub_state_2a]
	rts                                    	| [$4cfb: rts]

l_4cfc:
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$4cfc: clr    $19]
	move.w	#0x3500,d2                      	| [$4cfe: ldx    #$3500]
	jra	l_4ce9                             	| [$4d01: bra    $4ce9]
l_4d03:
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$4d03: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4d05: clr    event_sub_state_28]
	rts                                    	| [$4d07: rts]

l_4d08:
	
	.ifndef	RELEASE
	move.w	#0xd3df,d2
	.endif
	lea	table_d3df,a2                  	| [$4d08: ldx   #table_d3df]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4d0b: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$4d0d: asla]
	JMP_A_INDEXED	A2                   	| [$4d0e: jra    [a,x]] [jump_table]
l_4d10:
	jbsr	l_5244                            	| [$4d10: jsr    $5244]
	move.w	#0x3380,d2                      	| [$4d13: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4d16: lda    $19]
	move.b	#0x0f,d1                        	| [$4d18: ldb    #$0f]
	jbsr	multiply_ab                       	| [$4d1a: mul]
	add.w	d1,d2                            	| [$4d1b: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0x6f,d0         | [$4d1d: lda    $6f]
	move.b	#0x05,d1                        	| [$4d1f: ldb    #$05]
	jbsr	multiply_ab                       	| [$4d21: mul]
	add.w	d1,d2                            	| [$4d22: leax   d,x]
	jbsr	l_52a3                            	| [$4d24: jsr    $52a3]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$4d27: lda    $6c]
	jne	l_4d39                             	| [$4d29: bne    $4d39]
	move.w	#0x3500,d2                      	| [$4d2b: ldx    #$3500]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4d2e: lda    $19]
	move.b	#0x20,d1                        	| [$4d30: ldb    #$20]
	jbsr	multiply_ab                       	| [$4d32: mul]
	add.w	d1,d2                            	| [$4d33: leax   d,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$4d35: dec    $1,x]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_4d3e                             	| [$4d37: beq    $4d3e]
l_4d39:
	move.b	#0x02,d0                        	| [$4d39: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4d3b: sta    event_sub_state_28]
	rts                                    	| [$4d3d: rts]

l_4d3e:
	GET_REG_ADDRESS	0,d2                   	| [$4d3e: clr    ,x]
	clr.b	(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4d40: inc    event_sub_state_28]
	rts                                    	| [$4d42: rts]

l_4d43:
	
	.ifndef	RELEASE
	move.w	#0xd3ed,d2
	.endif
	lea	table_d3ed,a2                  	| [$4d43: ldx   #table_d3ed]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$4d46: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$4d48: asla]
	JMP_A_INDEXED	A2                   	| [$4d49: jra    [a,x]] [jump_table]
l_4d4b:
	jbsr	l_574d                            	| [$4d4b: jsr    $574d]
	OP_1_ON_DP_ADDRESS	tst,0x6b             | [$4d4e: tst    $6b]
	jne	l_4d7f                             	| [$4d50: bne    $4d7f]
	move.b	#0x0a,d1                        	| [$4d52: ldb    #$0a]
	moveq	#0,d0                            	| [$4d54: clra]
	move.w	#0x36d0,d2                      	| [$4d55: ldx    #$36d0]
l_4d58:
	GET_REG_ADDRESS	0,d2                   	| [$4d58: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$4d5a: decb]
	jne	l_4d58                             	| [$4d5b: bne    $4d58]
l_4d5d:
	jbsr	l_6062                            	| [$4d5d: jsr    $6062]
	move.b	#0x02,d0                        	| [$4d60: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$4d62: ldb    $19]
	jbsr	queue_event_4e9a                  	| [$4d64: jsr    queue_event_4e9a]
	move.w	#0x2253,d4                      	| [$4d67: ldu    #$2253]
	jbsr	l_537e                            	| [$4d6a: jsr    $537e]
	move.b	#0x02,d0                        	| [$4d6d: ldd    #$0205]
	move.w	#0x0205,d1                      	| [$4d6d: ldd    #$0205]
	jbsr	queue_event_4e9a                  	| [$4d70: jsr    queue_event_4e9a]
	move.b	#0x3b,d0                        	| [$4d73: lda    #$3b]
	jbsr	l_4eb3                            	| [$4d75: jsr    $4eb3]
	move.b	#0x9e,d0                        	| [$4d78: lda    #$9e]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$4d7a: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$4d7c: inc    event_sub_state_2a]
	rts                                    	| [$4d7e: rts]

l_4d7f:
	move.w	#0x36d0,d2                      	| [$4d7f: ldx    #$36d0]
	move.b	#0x20,d1                        	| [$4d82: ldb    #$20]
l_4d84:
	GET_REG_ADDRESS	0,d2                   	| [$4d84: tst    ,x+]
	addq.w	#1,d2                           	| [...]
	tst.b	(a0)                             	| [...]
	jne	l_4d8d                             	| [$4d86: bne    $4d8d]
	subq.b	#1,d1                           	| [$4d88: decb]
	jne	l_4d84                             	| [$4d89: bne    $4d84]
	jra	l_4d5d                             	| [$4d8b: bra    $4d5d]
l_4d8d:
	jbsr	l_afc1                            	| [$4d8d: jsr    $afc1]
	jbsr	l_afaf                            	| [$4d90: jsr    $afaf]
	jbsr	l_5f76                            	| [$4d93: jsr    $5f76]
	jra	l_4d5d                             	| [$4d96: bra    $4d5d]
l_4d98:
	jbsr	l_54d0                            	| [$4d98: jsr    $54d0]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$4d9b: dec    $2b]
	jne	l_4da3                             	| [$4d9d: bne    $4da3]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4d9f: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4da1: clr    event_sub_state_2a]
l_4da3:
	rts                                    	| [$4da3: rts]

l_4da4:
	move.b	#0x04,d0                        	| [$4da4: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$4da6: sta    $65]
l_4da8:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4da8: lda    $19]
	addq.b	#1,d0                           	| [$4daa: inca]
	and.b	#0x03,d0                         	| [$4dab: anda   #$03]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4dad: sta    $19]
	move.w	#0x3500,d2                      	| [$4daf: ldx    #$3500]
	move.b	#0x20,d1                        	| [$4db2: ldb    #$20]
	jbsr	multiply_ab                       	| [$4db4: mul]
	add.w	d1,d2                            	| [$4db5: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$4db7: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_4dc1                             	| [$4db9: beq    $4dc1]
	GET_REG_ADDRESS	0x2,d2                 	| [$4dbb: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0x79,d0          | [$4dbd: cmpa   $79]
	jcs	l_4dca                             	| [$4dbf: bcs    $4dca]
l_4dc1:
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$4dc1: dec    $65]
	jne	l_4da8                             	| [$4dc3: bne    $4da8]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$4dc5: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4dc7: clr    event_sub_state_28]
	rts                                    	| [$4dc9: rts]

l_4dca:
	move.b	#0x01,d0                        	| [$4dca: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x26,d0         | [$4dcc: sta    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4dce: clr    event_sub_state_28]
	rts                                    	| [$4dd0: rts]

l_4dd1:
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$4dd1: clr    $19]
	move.b	#0x04,d0                        	| [$4dd3: lda    #$04]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$4dd5: ldb    $1a]
	jeq	l_4de1                             	| [$4dd7: beq    $4de1]
	move.b	#0x02,d0                        	| [$4dd9: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$4ddb: ldb    $1b]
	jeq	l_4de1                             	| [$4ddd: beq    $4de1]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4ddf: sta    $19]
l_4de1:
	OP_W_ON_DP_ADDRESS	move,0x23,d0         | [$4de1: sta    $23]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4de3: inc    event_sub_state_28]
	rts                                    	| [$4de5: rts]

l_4de6:
	jbsr	l_52a1                            	| [$4de6: jsr    $52a1]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$4de9: lda    $6c]
	jne	l_4dff                             	| [$4deb: bne    $4dff]
	move.w	#0x3500,d2                      	| [$4ded: ldx    #$3500]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4df0: lda    $19]
	move.b	#0x20,d1                        	| [$4df2: ldb    #$20]
	jbsr	multiply_ab                       	| [$4df4: mul]
	add.w	d1,d2                            	| [$4df5: leax   d,x]
	GET_REG_ADDRESS	0x4,d2                 	| [$4df7: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4dff                             	| [$4df9: bne    $4dff]
	GET_REG_ADDRESS	0x1,d2                 	| [$4dfb: dec    $1,x]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_4e04                             	| [$4dfd: beq    $4e04]
l_4dff:
	move.b	#0x06,d0                        	| [$4dff: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4e01: sta    event_sub_state_28]
	rts                                    	| [$4e03: rts]

l_4e04:
	GET_REG_ADDRESS	0,d2                   	| [$4e04: clr    ,x]
	clr.b	(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4e06: inc    event_sub_state_28]
	rts                                    	| [$4e08: rts]

l_4e09:
	OP_W_ON_DP_ADDRESS	subq,0x23,#1         | [$4e09: dec    $23]
	jeq	l_4e14                             	| [$4e0b: beq    $4e14]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$4e0d: inc    $19]
	move.b	#0x04,d0                        	| [$4e0f: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4e11: sta    event_sub_state_28]
	rts                                    	| [$4e13: rts]

l_4e14:
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$4e14: lda    $1a]
	jeq	l_4e31                             	| [$4e16: beq    $4e31]
	OP_R_ON_DP_ADDRESS	move,0x1b,d0         | [$4e18: lda    $1b]
	jne	l_4e31                             	| [$4e1a: bne    $4e31]
	move.w	#0x3540,d2                      	| [$4e1c: ldx    #$3540]
	GET_REG_ADDRESS	0,d2                   	| [$4e1f: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4e28                             	| [$4e21: bne    $4e28]
	GET_REG_ADDRESS	0x20,d2                	| [$4e23: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_4e31                             	| [$4e26: beq    $4e31]
l_4e28:
	OP_W_ON_DP_ADDRESS	addq,0x1b,#1         | [$4e28: inc    $1b]
	move.b	#0x01,d0                        	| [$4e2a: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x26,d0         | [$4e2c: sta    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4e2e: clr    event_sub_state_28]
	rts                                    	| [$4e30: rts]

l_4e31:
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$4e31: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4e33: clr    event_sub_state_28]
	rts                                    	| [$4e35: rts]

l_4e36:
	
	.ifndef	RELEASE
	move.w	#0xd3f1,d2
	.endif
	lea	table_d3f1,a2                  	| [$4e36: ldx   #table_d3f1]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$4e39: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$4e3b: asla]
	JMP_A_INDEXED	A2                   	| [$4e3c: jra    [a,x]] [jump_table]
l_4e3e:
	move.w	#0x3502,d2                      	| [$4e3e: ldx    #$3502]
	move.b	#0x04,d0                        	| [$4e41: lda    #$04]
l_4e43:
	move.b	#0x0e,d1                        	| [$4e43: ldb    #$0e]
l_4e45:
	GET_REG_ADDRESS	0,d2                   	| [$4e45: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d1                           	| [$4e47: decb]
	jne	l_4e45                             	| [$4e48: bne    $4e45]
	add.w	#0x12,d2                         	| [$4e4a: leax   $12,x]
	subq.b	#1,d0                           	| [$4e4d: deca]
	jne	l_4e43                             	| [$4e4e: bne    $4e43]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$4e50: inc    event_sub_state_28]
	rts                                    	| [$4e52: rts]

l_4e53:
	move.w	#0x3500,d2                      	| [$4e53: ldx    #$3500]
	move.b	#0x04,d1                        	| [$4e56: ldb    #$04]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$4e58: clr    $48]
l_4e5a:
	GET_REG_ADDRESS	0,d2                   	| [$4e5a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_4e73                             	| [$4e5c: bne    $4e73]
	add.w	#0x20,d2                         	| [$4e5e: leax   $20,x]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$4e61: inc    $48]
	subq.b	#1,d1                           	| [$4e63: decb]
	jne	l_4e5a                             	| [$4e64: bne    $4e5a]
l_4e66:
	OP_W_ON_DP_ADDRESS	addq,0x20,#1         | [$4e66: inc    $20]
	OP_1_ON_DP_ADDRESS	clr,0x22             | [$4e68: clr    $22]
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$4e6a: clr    $24]
	OP_1_ON_DP_ADDRESS	clr,0x26             | [$4e6c: clr    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4e6e: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4e70: clr    event_sub_state_2a]
	rts                                    	| [$4e72: rts]

l_4e73:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$4e73: lda    $48]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4e75: sta    $19]
	OP_W_ON_DP_ADDRESS	addq,current_level_68,#1| [$4e77: inc    current_level_68]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$4e79: lda    current_level_68]
	cmp.b	#0x07,d0                         	| [$4e7b: cmpa   #$07]
	jeq	l_4e86                             	| [$4e7d: beq    $4e86]
l_4e7f:
	OP_1_ON_DP_ADDRESS	clr,0x26             | [$4e7f: clr    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$4e81: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$4e83: clr    event_sub_state_2a]
	rts                                    	| [$4e85: rts]

l_4e86:
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d0 | [$4e86: lda    dsw2_copy_0d]
	and.b	#0x01,d0                         	| [$4e88: anda   #$01]
	jne	l_4e7f                             	| [$4e8a: bne    $4e7f]
	move.w	#0x3500,d2                      	| [$4e8c: ldx    #$3500]
	moveq	#0,d0                            	| [$4e8f: clra]
	moveq	#0,d1                            	| [$4e90: clrb]
l_4e91:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4e91: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3580,d2                       	| [$4e93: cmpx   #$3580]
	jne	l_4e91                             	| [$4e96: bne    $4e91]
	jra	l_4e66                             	| [$4e98: bra    $4e66]


queue_event_4e9a:
	GET_DP_ADDRESS	event_pointer_1c        	| [$4e9a: ldy    event_pointer_1c]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$4e9d: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#sound_queue_3340,d3             	| [$4e9f: cmpy   #sound_queue_3340]
	jne	l_4ea9                             	| [$4ea3: bne    $4ea9]
	move.w	#0x3300,d3                      	| [$4ea5: ldy    #$3300]
l_4ea9:
	GET_DP_ADDRESS	event_pointer_1c        	| [$4ea9: sty    event_pointer_1c]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	rts                                    	| [$4eac: rts]


queue_sound_event_4ead:
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d1 | [$4ead: ldb    dsw2_copy_0d]
	and.b	#0x04,d1                         	| [$4eaf: andb   #$04]
	jne	l_4eb7                             	| [$4eb1: bne    $4eb7]
l_4eb3:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d1| [$4eb3: ldb    game_playing_00]
	jeq	l_4ec9                             	| [$4eb5: beq    $4ec9]
l_4eb7:
	GET_DP_ADDRESS	0x3c                    	| [$4eb7: ldy    $3c]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$4eba: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	cmp.w	#0x3360,d3                       	| [$4ebc: cmpy   #$3360]
	jne	l_4ec6                             	| [$4ec0: bne    $4ec6]
	move.w	#sound_queue_3340,d3            	| [$4ec2: ldy    #sound_queue_3340]
l_4ec6:
	GET_DP_ADDRESS	0x3c                    	| [$4ec6: sty    $3c]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_4ec9:
	rts                                    	| [$4ec9: rts]


l_4eca:
	move.w	#0x3013,d2                      	| [$4eca: ldx    #$3013]
	move.w	#0x3030,d4                      	| [$4ecd: ldu    #$3030]
	move.b	#0x02,d0                        	| [$4ed0: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4ed2: sta    $48]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4ed4: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$4ed6: cmpa   #$03]
	jne	l_4ee2                             	| [$4ed8: bne    $4ee2]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$4eda: lda    $1a]
	jeq	l_4ee2                             	| [$4edc: beq    $4ee2]
	addq.w	#0x3,d4                         	| [$4ede: leau   $3,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$4ee0: dec    $48]
l_4ee2:
	GET_REG_ADDRESS	0,d2                   	| [$4ee2: ldd    ,x]
	LOAD_D                                 	| [$4ee2: ldd    ,x]
	and.b	#0x07,d0                         	| [$4ee4: anda   #$07]
	and.b	#0x07,d1                         	| [$4ee6: andb   #$07]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$4ee8: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4eea: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$4eea: ldd    ,x++]
                                         | [$4eec: lsra]
                                         | [$4eed: lsra]
                                         | [$4eee: lsra]
	lsr.b	#4,d0                            	| [$4eef: lsra]
                                         | [$4ef0: lsrb]
                                         | [$4ef1: lsrb]
                                         | [$4ef2: lsrb]
	lsr.b	#4,d1                            	| [$4ef3: lsrb]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$4ef4: std    $3,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4ef6: lda    ,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$4ef8: anda   #$07]
	GET_REG_ADDRESS	0x2,d4                 	| [$4efa: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4efc: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
                                         | [$4efe: lsra]
                                         | [$4eff: lsra]
                                         | [$4f00: lsra]
	lsr.b	#4,d0                            	| [$4f01: lsra]
	GET_REG_ADDRESS	0x5,d4                 	| [$4f02: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x6,d4                         	| [$4f04: leau   $6,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$4f06: dec    $48]
	jne	l_4ee2                             	| [$4f08: bne    $4ee2]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$4f0a: lda    $6b]
	jeq	l_4f4f                             	| [$4f0c: beq    $4f4f]
	move.b	#0x04,d0                        	| [$4f0e: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4f10: sta    $48]
	move.w	#0x30a0,d2                      	| [$4f12: ldx    #$30a0]
	move.w	#0x3030,d3                      	| [$4f15: ldy    #$3030]
	move.w	#0xde93,d4                      	| [$4f19: ldu    #$de93]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$4f1c: lda    $0f]
	and.b	#0x1f,d0                         	| [$4f1e: anda   #$1f]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$4f20: leau   a,u]
l_4f22:
	GET_REG_ADDRESS	0xd,d2                 	| [$4f22: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_4f42                             	| [$4f24: beq    $4f42]
	GET_REG_ADDRESS	0,d4                   	| [$4f26: ldd    ,u]
	LOAD_D                                 	| [$4f26: ldd    ,u]
	GET_REG_ADDRESS	0,d3                   	| [$4f28: std    ,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$4f2a: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$4f2c: sta    $2,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x58,d2                	| [$4f2e: tst    $58,x]
	tst.b	(a0)                             	| [...]
	jeq	l_4f42                             	| [$4f31: beq    $4f42]
	GET_REG_ADDRESS	0x55,d2                	| [$4f33: tst    $55,x]
	tst.b	(a0)                             	| [...]
	jne	l_4f42                             	| [$4f36: bne    $4f42]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$4f38: lda    $0f]
	and.b	#0x30,d0                         	| [$4f3a: anda   #$30]
	jne	l_4f42                             	| [$4f3c: bne    $4f42]
	move.b	#0x02,d0                        	| [$4f3e: lda    #$02]
	GET_REG_ADDRESS	0,d3                   	| [$4f40: sta    ,y]
	move.b	d0,(a0)                         	| [...]
l_4f42:
	addq.w	#0x3,d3                         	| [$4f42: leay   $3,y]
	add.w	#0x10,d4                         	| [$4f44: leau   $10,u]
	add.w	#0x60,d2                         	| [$4f47: leax   $60,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$4f4a: dec    $48]
	jne	l_4f22                             	| [$4f4c: bne    $4f22]
	rts                                    	| [$4f4e: rts]

l_4f4f:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$4f4f: lda    game_playing_00]
	jne	l_4f6d                             	| [$4f51: bne    $4f6d]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4f53: lda    current_event_69]
	cmp.b	#0x01,d0                         	| [$4f55: cmpa   #$01]
	jeq	l_4f6e                             	| [$4f57: beq    $4f6e]
	move.w	#0x3030,d2                      	| [$4f59: ldx    #$3030]
	move.w	#0xdee7,d4                      	| [$4f5c: ldu    #$dee7]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$4f5f: lda    $0f]
	and.b	#0x0f,d0                         	| [$4f61: anda   #$0f]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$4f63: leau   a,u]
	GET_REG_ADDRESS	0,d4                   	| [$4f65: ldd    ,u]
	LOAD_D                                 	| [$4f65: ldd    ,u]
	GET_REG_ADDRESS	0,d2                   	| [$4f67: std    ,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$4f69: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$4f6b: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_4f6d:
	rts                                    	| [$4f6d: rts]

l_4f6e:
	move.w	#0x336c,d2                      	| [$4f6e: ldx    #$336c]
	OP_1_ON_DP_ADDRESS	clr,0x30             | [$4f71: clr    $30]
	GET_REG_ADDRESS	0x1,d2                 	| [$4f73: dec    $1,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_4f85                             	| [$4f75: bne    $4f85]
	move.w	#0xdefa,d4                      	| [$4f77: ldu    #$defa]
	GET_REG_ADDRESS	0,d2                   	| [$4f7a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$4f7c: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$4f7d: ldd    a,u]
	LOAD_D                                 	| [$4f7d: ldd    a,u]
	OP_W_ON_DP_ADDRESS	move,0x30,d0         | [$4f7f: sta    $30]
	GET_REG_ADDRESS	0x1,d2                 	| [$4f81: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$4f83: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
l_4f85:
	OP_1_ON_DP_ADDRESS	clr,0x31             | [$4f85: clr    $31]
	OP_1_ON_DP_ADDRESS	clr,0x32             | [$4f87: clr    $32]
	rts                                    	| [$4f89: rts]

l_4f8a:
	move.w	#0x3030,d4                      	| [$4f8a: ldu    #$3030]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4f8d: lda    $19]
	OP_R_ON_DP_ADDRESS	move,0x6b,d1         | [$4f8f: ldb    $6b]
	jne	l_4f99                             	| [$4f91: bne    $4f99]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$4f93: ldb    $1a]
	jeq	l_4f99                             	| [$4f95: beq    $4f99]
	and.b	#0x01,d0                         	| [$4f97: anda   #$01]
l_4f99:
	move.b	#0x03,d1                        	| [$4f99: ldb    #$03]
	jbsr	multiply_ab                       	| [$4f9b: mul]
	add.w	d1,d4                            	| [$4f9c: leau   d,u]
	GET_REG_ADDRESS	0,d4                   	| [$4f9e: lda    ,u]
	move.b	(a0),d0                         	| [...]
	rts                                    	| [$4fa0: rts]

l_4fa1:
	move.w	#0x3030,d4                      	| [$4fa1: ldu    #$3030]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$4fa4: lda    $19]
	OP_R_ON_DP_ADDRESS	move,0x6b,d1         | [$4fa6: ldb    $6b]
	jne	l_4fb0                             	| [$4fa8: bne    $4fb0]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$4faa: ldb    $1a]
	jeq	l_4fb0                             	| [$4fac: beq    $4fb0]
	and.b	#0x01,d0                         	| [$4fae: anda   #$01]
l_4fb0:
	move.b	#0x03,d1                        	| [$4fb0: ldb    #$03]
	jbsr	multiply_ab                       	| [$4fb2: mul]
	add.w	d1,d4                            	| [$4fb3: leau   d,u]
	GET_REG_ADDRESS	0x2,d4                 	| [$4fb5: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$4fb7: ora    $1,u]
	or.b	(a0),d0                           	| [...]
	not.b	d0                               	| [$4fb9: coma]
	GET_REG_ADDRESS	0,d4                   	| [$4fba: anda   ,u]
	and.b	(a0),d0                          	| [...]
	rts                                    	| [$4fbc: rts]

* update shadow sprite ram => sprite ram
* completely rewritten for faster speed on 68000
update_sprites_4fbd:
	move.w	#sprite_shadow_ram_3600,d2                      	| [$4fbd: ldx    #$3600]
	move.w	#sprite_ram_1000,d4                      	| [$4fc0: ldu    #$1000]
	GET_REG_ADDRESS	0,d4
	move.l	a0,a1
	GET_REG_ADDRESS 	0,d2
	move.w	#0x9-1,d0
0:
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	dbf		d0,0b
	rts


* completely rewritten for faster speed on 68000
update_scroll_registers_4fd2:
	move.w	#sprite_shadow_ram_3600+0xC0,d2                      	| [$4fd2: ldx    #$36c0]
	move.w	#scroll_registers_10c0,d4       	| [$4fd5: ldu    #scroll_registers_10c0]
	GET_REG_ADDRESS	0,d4
	move.l	a0,a1
	GET_REG_ADDRESS 	0,d2
	move.w	#0x4-1,d0
0:
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	move.l	(a0)+,(a1)+
	dbf		d0,0b
	rts
	
*l_4fd8:
*	GET_REG_ADDRESS	0,d2                   	| [$4fd8: ldd    ,x++]
*	addq.w	#2,d2                           	| [...]
*	LOAD_D                                 	| [$4fd8: ldd    ,x++]
*	GET_REG_ADDRESS	0,d4                   	| [$4fda: std    ,u++]
*	addq.w	#2,d4                           	| [...]
*	MOVE_W_FROM_REG	d1,a0                         	| [...]
*	GET_REG_ADDRESS	0,d2                   	| [$4fdc: ldd    ,x++]
*	addq.w	#2,d2                           	| [...]
*	LOAD_D                                 	| [$4fdc: ldd    ,x++]
*	GET_REG_ADDRESS	0,d4                   	| [$4fde: std    ,u++]
*	addq.w	#2,d4                           	| [...]
*	MOVE_W_FROM_REG	d1,a0                         	| [...]
*	cmp.w	#0x1100,d4                       	| [$4fe0: cmpu   #$1100]
*	jne	l_4fd8                             	| [$4fe4: bne    $4fd8]
*	rts                                    	| [$4fe6: rts]

l_4fe7:
	move.w	#0xd8e6,d2                      	| [$4fe7: ldx    #$d8e6]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$4fea: lda    current_event_69]
	move.b	#0x0c,d1                        	| [$4fec: ldb    #$0c]
	jbsr	multiply_ab                       	| [$4fee: mul]
	add.w	d1,d2                            	| [$4fef: leax   d,x]
	move.w	#0x30a1,d4                      	| [$4ff1: ldu    #$30a1]
	move.b	#0x04,d0                        	| [$4ff4: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$4ff6: sta    $48]
l_4ff8:
	GET_REG_ADDRESS	0,d2                   	| [$4ff8: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$4ff8: ldd    ,x++]
	GET_REG_ADDRESS	0,d4                   	| [$4ffa: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x1c,d4                	| [$4ffc: sta    $1c,u]
	move.b	d0,(a0)                         	| [...]
	add.w	#0x60,d4                         	| [$4fff: leau   $60,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5002: dec    $48]
	jne	l_4ff8                             	| [$5004: bne    $4ff8]
	GET_REG_ADDRESS	0,d2                   	| [$5006: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$5006: ldd    ,x++]
	GET_ADDRESS	0x3221                     	| [$5008: std    $3221]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$500b: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$500b: ldd    ,x++]
	GET_ADDRESS	0x3241                     	| [$500d: std    $3241]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$5010: rts]

l_5011:
	move.w	#0xd93a,d2                      	| [$5011: ldx    #$d93a]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5014: lda    current_event_69]
                                         | [$5016: asla]
	asl.b	#2,d0                            	| [$5017: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$5018: leax   a,x]
	move.w	#0x3078,d4                      	| [$501a: ldu    #$3078]
	move.b	#0x04,d1                        	| [$501d: ldb    #$04]
l_501f:
	GET_REG_ADDRESS	0,d2                   	| [$501f: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$5021: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$5023: decb]
	jne	l_501f                             	| [$5024: bne    $501f]
	rts                                    	| [$5026: rts]

l_5027:
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$5027: clr    $bc]
	moveq	#0,d0                            	| [$5029: clra]
	moveq	#0,d1                            	| [$502a: clrb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337a                     	| [$502b: std    $337a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337c                     	| [$502e: std    $337c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337e                     	| [$5031: std    $337e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$5034: rts]

l_5035:
	move.w	#0x30b4,d4                      	| [$5035: ldu    #$30b4]
	GET_REG_ADDRESS	0,d4                   	| [$5038: ldu    ,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.b	#0x02,d0                        	| [$503a: ldd    #$0240]
	move.w	#0x0240,d1                      	| [$503a: ldd    #$0240]
	MAKE_D                                 	| [...]
	add.w	d1,d4                            	| [$503d: leau   d,u]
	GET_REG_ADDRESS	0x2,d2                 	| [$503f: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$5041: anda   #$f8]
                                         | [$5043: lsra]
                                         | [$5044: lsra]
	lsr.b	#3,d0                            	| [$5045: lsra]
	jeq	l_5056                             	| [$5046: beq    $5056]
l_5048:
	addq.w	#0x1,d4                         	| [$5048: leau   $1,u]
	cmp.w	#0x2800,d4                       	| [$504a: cmpu   #$2800]
	jne	l_5053                             	| [$504e: bne    $5053]
	move.w	#0x27c0,d4                      	| [$5050: ldu    #$27c0]
l_5053:
	subq.b	#1,d0                           	| [$5053: deca]
	jne	l_5048                             	| [$5054: bne    $5048]
l_5056:
	move.w	#0xd3f9,d3                      	| [$5056: ldy    #$d3f9]
	OP_R_ON_DP_ADDRESS	move,0xca,d0         | [$505a: lda    $ca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$505c: lda    a,y]
	move.b	(a0),d0                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$505e: lda    a,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf8,d0                         	| [$5060: anda   #$f8]
                                         | [$5062: lsra]
                                         | [$5063: lsra]
	lsr.b	#3,d0                            	| [$5064: lsra]
	jeq	l_506d                             	| [$5065: beq    $506d]
l_5067:
	sub.w	#0x40,d4                         	| [$5067: leau   -$40,u]
	subq.b	#1,d0                           	| [$506a: deca]
	jne	l_5067                             	| [$506b: bne    $5067]
l_506d:
	GET_REG_ADDRESS	0x2,d2                 	| [$506d: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$506f: anda   #$07]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$5071: sta    $50]
	move.w	#0x30ba,d3                      	| [$5073: ldy    #$30ba]
	GET_REG_ADDRESS	0,d3                   	| [$5077: lda    ,y]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$5079: anda   #$07]
	OP_R_ON_DP_ADDRESS	add,0x50,d0          | [$507b: adda   $50]
	GET_REG_ADDRESS	0x1b,d2                	| [$507d: sta    $1b,x]
	move.b	d0,(a0)                         	| [...]
	sub.b	#0x08,d0                         	| [$5080: suba   #$08]
	jcs	l_5094                             	| [$5082: bcs    $5094]
	GET_REG_ADDRESS	0x1b,d2                	| [$5084: sta    $1b,x]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x1,d4                         	| [$5087: leau   $1,u]
	PUSH_SR
	move.w	d4,d1                           	| [$5089: tfr    u,d]
	ror.w	#8,d4                            	| [...]
	move.b	d4,d0                           	| [...] set MSB
	ror.w	#8,d4                            	| [...]
	POP_SR
	BIT	#0x3f,d1                           	| [$508b: bitb   #$3f]
	jne	l_5092                             	| [$508d: bne    $5092]
	MAKE_D                                 	| [...]
	sub.w	#0x0040,d1                       	| [$508f: subd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_5092:
	PUSH_SR
	MAKE_D                                 	| [...]
	move.w	d1,d4                           	| [$5092: tfr    d,u]
	POP_SR
l_5094:
	move.w	#0xd3fb,d3                      	| [$5094: ldy    #$d3fb]
	OP_R_ON_DP_ADDRESS	move,0xca,d0         | [$5098: lda    $ca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$509a: lda    a,y]
	move.b	(a0),d0                         	| [...]
	and.l	#0xFF,d0                         	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d0,d2         	| [$509c: stu    a,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$509e: rts]

l_509f:
	GET_REG_ADDRESS	0x3,d4                 	| [$509f: lda    $3,u]
	move.b	(a0),d0                         	| [...]
	GET_DP_ADDRESS	0x48                    	| [$50a1: adda   $48]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$50a4: sta    $4a]
	and.b	#0x0f,d0                         	| [$50a6: anda   #$0f]
	GET_REG_ADDRESS	0x3,d4                 	| [$50a8: sta    $3,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4a,d0         | [$50aa: lda    $4a]
                                         | [$50ac: lsra]
                                         | [$50ad: lsra]
                                         | [$50ae: lsra]
	lsr.b	#4,d0                            	| [$50af: lsra]
	GET_REG_ADDRESS	0x2,d4                 	| [$50b0: adda   $2,u]
	* add is done at start of loop	 |  [...]
l_50b2:
	CLR_XC_FLAGS
	move.b	(a0),d6
	abcd	d6,d0
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$50b3: sta    $4a]
	and.b	#0x0f,d0                         	| [$50b5: anda   #$0f]
	GET_REG_ADDRESS	0x2,d4                 	| [$50b7: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4a,d0         | [$50b9: lda    $4a]
                                         | [$50bb: lsra]
                                         | [$50bc: lsra]
                                         | [$50bd: lsra]
	lsr.b	#4,d0                            	| [$50be: lsra]
	GET_REG_ADDRESS	0x1,d4                 	| [$50bf: adda   $1,u]
l_50c1:
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$50c2: sta    $4a]
	and.b	#0x0f,d0                         	| [$50c4: anda   #$0f]
	GET_REG_ADDRESS	0x1,d4                 	| [$50c6: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4a,d0         | [$50c8: lda    $4a]
	and.b	#0x10,d0                         	| [$50ca: anda   #$10]
	jeq	l_50d0                             	| [$50cc: beq    $50d0]
	GET_REG_ADDRESS	0,d4                   	| [$50ce: inc    ,u]
	addq.b	#1,(a0)                         	| [...]
l_50d0:
	rts                                    	| [$50d0: rts]
l_50d1:
	GET_REG_ADDRESS	0x2,d4                 	| [$50d1: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_DP_ADDRESS	0x48                    	| [$50d3: adda   $48]
	* add is done at start of loop	 |  [...]
	jra	l_50b2                             	| [$50d5: bra    $50b2]
l_50d7:
	GET_REG_ADDRESS	0x1,d4                 	| [$50d7: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	GET_DP_ADDRESS	0x48                    	| [$50d9: adda   $48]
	* add is done at start of loop	 |  [...]
	jra	l_50c1                             	| [$50db: bra    l_50c1]

l_50dd:
	GET_REG_ADDRESS	0x3,d4                 	| [$50dd: lda    $3,u]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$50df: suba   $48]
	jcs	l_50e6                             	| [$50e1: bcs    $50e6]
	GET_REG_ADDRESS	0x3,d4                 	| [$50e3: sta    $3,u]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$50e5: rts]

l_50e6:
	add.b	#0x0a,d0                         	| [$50e6: adda   #$0a]
	GET_REG_ADDRESS	0x3,d4                 	| [$50e8: sta    $3,u]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x09,d1                        	| [$50ea: ldb    #$09]
	GET_REG_ADDRESS	0x2,d4                 	| [$50ec: dec    $2,u]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$50ee: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$50f0: cmpa   #$ff]
	jne	l_510e                             	| [$50f2: bne    $510e]
	GET_REG_ADDRESS	0x2,d4                 	| [$50f4: stb    $2,u]
	move.b	d1,(a0)                         	| [...]
l_50f6:
	GET_REG_ADDRESS	0x1,d4                 	| [$50f6: dec    $1,u]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$50f8: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$50fa: cmpa   #$ff]
	jne	l_510e                             	| [$50fc: bne    $510e]
	GET_REG_ADDRESS	0x1,d4                 	| [$50fe: stb    $1,u]
	move.b	d1,(a0)                         	| [...]
l_5100:
	GET_REG_ADDRESS	0,d4                   	| [$5100: dec    ,u]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$5102: lda    ,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$5104: cmpa   #$ff]
	jne	l_510e                             	| [$5106: bne    $510e]
l_5108:
	moveq	#0,d0                            	| [$5108: clra]
	moveq	#0,d1                            	| [$5109: clrb]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$510a: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$510c: std    $2,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_510e:
	rts                                    	| [$510e: rts]

l_510f:
	GET_REG_ADDRESS	0x2,d4                 	| [$510f: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$5111: suba   $48]
	jcs	l_5118                             	| [$5113: bcs    $5118]
	GET_REG_ADDRESS	0x2,d4                 	| [$5115: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$5117: rts]

l_5118:
	add.b	#0x0a,d0                         	| [$5118: adda   #$0a]
	GET_REG_ADDRESS	0x2,d4                 	| [$511a: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x09,d1                        	| [$511c: ldb    #$09]
	jra	l_50f6                             	| [$511e: bra    $50f6]
l_5120:
	GET_REG_ADDRESS	0x1,d4                 	| [$5120: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$5122: suba   $48]
	jcs	l_5129                             	| [$5124: bcs    $5129]
	GET_REG_ADDRESS	0x1,d4                 	| [$5126: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$5128: rts]

l_5129:
	add.b	#0x0a,d0                         	| [$5129: adda   #$0a]
	GET_REG_ADDRESS	0x1,d4                 	| [$512b: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x09,d1                        	| [$512d: ldb    #$09]
	jra	l_5100                             	| [$512f: bra    $5100]
l_5131:
	GET_REG_ADDRESS	0,d4                   	| [$5131: lda    ,u]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$5133: suba   $48]
	jcs	l_5108                             	| [$5135: bcs    $5108]
	GET_REG_ADDRESS	0,d4                   	| [$5137: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$5139: rts]

l_513a:
	moveq	#0,d1                            	| [$513a: clrb]
l_513b:
	cmp.b	#0x0a,d0                         	| [$513b: cmpa   #$0a]
	jcs	l_5144                             	| [$513d: bcs    $5144]
	sub.b	#0x0a,d0                         	| [$513f: suba   #$0a]
	addq.b	#1,d1                           	| [$5141: incb]
	jra	l_513b                             	| [$5142: bra    $513b]
l_5144:
	rts                                    	| [$5144: rts]

l_5145:
	GET_REG_ADDRESS	0x3,d2                 	| [$5145: ldd    $3,x]
	LOAD_D                                 	| [$5145: ldd    $3,x]
	add.w	#0x0001,d1                       	| [$5147: addd   #$0001]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	BIT	#0x3f,d1                           	| [$514a: bitb   #$3f]
	jne	l_5151                             	| [$514c: bne    $5151]
	MAKE_D                                 	| [...]
	sub.w	#0x0040,d1                       	| [$514e: subd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_5151:
	PUSH_SR
	MAKE_D                                 	| [...]
	move.w	d1,d4                           	| [$5151: tfr    d,u]
	POP_SR
	rts                                    	| [$5153: rts]

l_5154:
	move.w	#0xd956,d2                      	| [$5154: ldx    #$d956]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5157: lda    current_event_69]
	asl.b	#1,d0                            	| [$5159: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$515a: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0x322e,d4                      	| [$515c: ldu    #$322e]
l_515f:
	GET_REG_ADDRESS	0,d2                   	| [$515f: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$515f: ldd    ,x++]
	cmp.b	#0xff,d0                         	| [$5161: cmpa   #$ff]
	jeq	l_5170                             	| [$5163: beq    $5170]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$5165: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$5167: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$5169: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	add.w	#0x20,d4                         	| [$516b: leau   $20,u]
	jra	l_515f                             	| [$516e: bra    $515f]
l_5170:
	rts                                    	| [$5170: rts]

l_5171:
	move.w	#0x33d1,d3                      	| [$5171: ldy    #$33d1]
	GET_REG_ADDRESS	0,d2                   	| [$5175: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x16,d0                         	| [$5177: cmpa   #$16]
	jne	l_517e                             	| [$5179: bne    $517e]
	move.w	#0x3370,d2                      	| [$517b: ldx    #$3370]
l_517e:
	move.b	#0x04,d0                        	| [$517e: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5180: sta    $48]
l_5182:
	jbsr	l_520b                            	| [$5182: jsr    $520b]
	tst.b	d1                               	| [$5185: tstb]
	jne	l_51a6                             	| [$5186: bne    $51a6]
	GET_REG_ADDRESS	-0x1,d3                	| [$5188: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$518a: anda   #$0f]
	subq.b	#1,d0                           	| [$518c: deca]
	OP_R_ON_DP_ADDRESS	cmp,swimmer_19,d0          | [$518d: cmpa   $19]
	jeq	l_5198                             	| [$518f: beq    $5198]
	addq.w	#0x6,d3                         	| [$5191: leay   $6,y]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5193: dec    $48]
	jne	l_5182                             	| [$5195: bne    $5182]
	rts                                    	| [$5197: rts]

l_5198:
	GET_REG_ADDRESS	-0x1,d3                	| [$5198: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	and.b	#0x20,d0                         	| [$519a: anda   #$20]
	jeq	l_51a5                             	| [$519c: beq    $51a5]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$519e: lda    $19]
	addq.b	#1,d0                           	| [$51a0: inca]
	or.b	#0x10,d0                          	| [$51a1: ora    #$10]
	GET_REG_ADDRESS	-0x1,d3                	| [$51a3: sta    -$1,y]
	move.b	d0,(a0)                         	| [...]
l_51a5:
	rts                                    	| [$51a5: rts]

l_51a6:
	move.w	d3,d4                           	| [$51a6: tfr    y,u]
	subq.w	#0x1,d4                         	| [$51a8: leau   -$1,u]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$51aa: lda    $48]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$51ac: sta    $49]
l_51ae:
	GET_REG_ADDRESS	-0x1,d3                	| [$51ae: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$51b0: anda   #$0f]
	subq.b	#1,d0                           	| [$51b2: deca]
	OP_R_ON_DP_ADDRESS	cmp,swimmer_19,d0          | [$51b3: cmpa   $19]
	jeq	l_51bd                             	| [$51b5: beq    $51bd]
	addq.w	#0x6,d3                         	| [$51b7: leay   $6,y]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$51b9: dec    $49]
	jne	l_51ae                             	| [$51bb: bne    $51ae]
l_51bd:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$51bd: lda    $48]
	OP_R_ON_DP_ADDRESS	sub,0x49,d0          | [$51bf: suba   $49]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$51c1: sta    $48]
	jeq	l_51df                             	| [$51c3: beq    $51df]
	subq.b	#1,d0                           	| [$51c5: deca]
	move.b	#0x06,d1                        	| [$51c6: ldb    #$06]
	jbsr	multiply_ab                       	| [$51c8: mul]
	add.w	d1,d4                            	| [$51c9: leau   d,u]
	jra	l_51cf                             	| [$51cb: bra    $51cf]
l_51cd:
	subq.w	#0x6,d4                         	| [$51cd: leau   -$6,u]
l_51cf:
	GET_REG_ADDRESS	0,d4                   	| [$51cf: ldd    ,u]
	LOAD_D                                 	| [$51cf: ldd    ,u]
	GET_REG_ADDRESS	0x6,d4                 	| [$51d1: std    $6,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$51d3: ldd    $2,u]
	LOAD_D                                 	| [$51d3: ldd    $2,u]
	GET_REG_ADDRESS	0x8,d4                 	| [$51d5: std    $8,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$51d7: ldd    $4,u]
	LOAD_D                                 	| [$51d7: ldd    $4,u]
	GET_REG_ADDRESS	0xa,d4                 	| [$51d9: std    $a,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$51db: dec    $48]
	jne	l_51cd                             	| [$51dd: bne    $51cd]
l_51df:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$51df: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$51e1: cmpa   #$03]
	jne	l_51f9                             	| [$51e3: bne    $51f9]
	move.w	#0x3504,d3                      	| [$51e5: ldy    #$3504]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$51e9: lda    $19]
	move.b	#0x20,d1                        	| [$51eb: ldb    #$20]
	jbsr	multiply_ab                       	| [$51ed: mul]
	GET_REG_ADDRESS_FROM_REG	d1,d3         	| [$51ee: lda    d,y]
	move.b	(a0),d0                         	| [...]
	jeq	l_51f9                             	| [$51f0: beq    $51f9]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$51f2: lda    $19]
	addq.b	#1,d0                           	| [$51f4: inca]
	or.b	#0x10,d0                          	| [$51f5: ora    #$10]
	jra	l_51fc                             	| [$51f7: bra    $51fc]
l_51f9:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$51f9: lda    $19]
	addq.b	#1,d0                           	| [$51fb: inca]
l_51fc:
	GET_REG_ADDRESS	0,d4                   	| [$51fc: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$51fe: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$51fe: ldd    ,x++]
	GET_REG_ADDRESS	0,d4                   	| [$5200: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$5202: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$5202: ldd    ,x++]
	GET_REG_ADDRESS	0,d4                   	| [$5204: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$5206: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$5208: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$520a: rts]

l_520b:
	OP_1_ON_DP_ADDRESS	clr,0x6d             | [$520b: clr    $6d]
	moveq	#0,d1                            	| [$520d: clrb]
	GET_REG_ADDRESS	0,d3                   	| [$520e: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$5210: cmpa   ,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_523a                             	| [$5212: bcs    $523a]
	jhi	l_523f                             	| [$5214: bhi    $523f]
	GET_REG_ADDRESS	0x1,d3                 	| [$5216: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$5218: cmpa   $1,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_523a                             	| [$521a: bcs    $523a]
	jhi	l_523f                             	| [$521c: bhi    $523f]
	GET_REG_ADDRESS	0x2,d3                 	| [$521e: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$5220: cmpa   $2,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_523a                             	| [$5222: bcs    $523a]
	jhi	l_523f                             	| [$5224: bhi    $523f]
	GET_REG_ADDRESS	0x3,d3                 	| [$5226: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$5228: cmpa   $3,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_523a                             	| [$522a: bcs    $523a]
	jhi	l_523f                             	| [$522c: bhi    $523f]
	GET_REG_ADDRESS	0x4,d3                 	| [$522e: lda    $4,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$5230: cmpa   $4,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_523a                             	| [$5232: bcs    $523a]
	jhi	l_523f                             	| [$5234: bhi    $523f]
	OP_W_ON_DP_ADDRESS	addq,0x6d,#1         | [$5236: inc    $6d]
l_5238:
	addq.b	#1,d1                           	| [$5238: incb]
	rts                                    	| [$5239: rts]

l_523a:
	OP_R_ON_DP_ADDRESS	move,0x78,d0         | [$523a: lda    $78]
	jeq	l_5238                             	| [$523c: beq    $5238]
	rts                                    	| [$523e: rts]

l_523f:
	OP_R_ON_DP_ADDRESS	move,0x78,d0         | [$523f: lda    $78]
	jne	l_5238                             	| [$5241: bne    $5238]
	rts                                    	| [$5243: rts]

l_5244:
	OP_1_ON_DP_ADDRESS	clr,0x6f             | [$5244: clr    $6f]
	move.w	#0x3380,d2                      	| [$5246: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5249: lda    $19]
	move.b	#0x0f,d1                        	| [$524b: ldb    #$0f]
	jbsr	multiply_ab                       	| [$524d: mul]
	add.w	d1,d2                            	| [$524e: leax   d,x]
	move.w	d2,d3                           	| [$5250: leay   $5,x]
	addq.w	#0x5,d3                         	| [$5250: leay   $5,x]
	movem.l	d2/d3,-(sp)                    	| [$5252: pshs   y,x]
	GET_REG_ADDRESS	0,d2                   	| [$5254: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x16,d0                         	| [$5256: cmpa   #$16]
	jeq	l_5269                             	| [$5258: beq    $5269]
	GET_REG_ADDRESS	0,d3                   	| [$525a: ldb    ,y]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x16,d1                         	| [$525c: cmpb   #$16]
	jeq	l_5271                             	| [$525e: beq    $5271]
	move.b	#0x05,d0                        	| [$5260: lda    #$05]
	jbsr	l_a6c1                            	| [$5262: jsr    $a6c1]
	BIT	#0x80,d0                           	| [$5265: bita   #$80]
	jeq	l_5271                             	| [$5267: beq    $5271]
l_5269:
	movem.l	(sp)+,d2/d3                    	| [$5269: puls   x,y]
	addq.w	#0x5,d2                         	| [$526b: leax   $5,x]
	OP_W_ON_DP_ADDRESS	addq,0x6f,#1         | [$526d: inc    $6f]
	jra	l_5273                             	| [$526f: bra    $5273]
l_5271:
	movem.l	(sp)+,d2/d3                    	| [$5271: puls   x,y]
l_5273:
	addq.w	#0x5,d3                         	| [$5273: leay   $5,y]
	GET_REG_ADDRESS	0,d2                   	| [$5275: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x16,d0                         	| [$5277: cmpa   #$16]
	jeq	l_528a                             	| [$5279: beq    $528a]
	GET_REG_ADDRESS	0,d3                   	| [$527b: ldb    ,y]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x16,d1                         	| [$527d: cmpb   #$16]
	jeq	l_528e                             	| [$527f: beq    $528e]
	move.b	#0x05,d0                        	| [$5281: lda    #$05]
	jbsr	l_a6c1                            	| [$5283: jsr    $a6c1]
	BIT	#0x80,d0                           	| [$5286: bita   #$80]
	jeq	l_528e                             	| [$5288: beq    $528e]
l_528a:
	move.b	#0x02,d0                        	| [$528a: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x6f,d0         | [$528c: sta    $6f]
l_528e:
	rts                                    	| [$528e: rts]

l_528f:
	move.w	#0x3380,d2                      	| [$528f: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5292: lda    $19]
	move.b	#0x0f,d1                        	| [$5294: ldb    #$0f]
	jbsr	multiply_ab                       	| [$5296: mul]
	add.w	d1,d2                            	| [$5297: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$5299: lda    $6a]
	move.b	#0x05,d1                        	| [$529b: ldb    #$05]
	jbsr	multiply_ab                       	| [$529d: mul]
	add.w	d1,d2                            	| [$529e: leax   d,x]
	rts                                    	| [$52a0: rts]

l_52a1:
	jbsr	l_528f                            	| [$52a1: bsr    $528f]
l_52a3:
	OP_1_ON_DP_ADDRESS	clr,0x6c             | [$52a3: clr    $6c]
	GET_REG_ADDRESS	0,d2                   	| [$52a5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x16,d0                         	| [$52a7: cmpa   #$16]
	jeq	l_52b7                             	| [$52a9: beq    $52b7]
	move.w	#0x3060,d3                      	| [$52ab: ldy    #$3060]
	jbsr	l_520b                            	| [$52af: jsr    $520b]
	tst.b	d1                               	| [$52b2: tstb]
	jeq	l_52b7                             	| [$52b3: beq    $52b7]
	OP_W_ON_DP_ADDRESS	addq,0x6c,#1         | [$52b5: inc    $6c]
l_52b7:
	rts                                    	| [$52b7: rts]

l_52b8:
	jbsr	l_5244                            	| [$52b8: bsr    $5244]
	move.w	#0x3380,d2                      	| [$52ba: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$52bd: lda    $19]
	move.b	#0x0f,d1                        	| [$52bf: ldb    #$0f]
	jbsr	multiply_ab                       	| [$52c1: mul]
	add.w	d1,d2                            	| [$52c2: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0x6f,d0         | [$52c4: lda    $6f]
	move.b	#0x05,d1                        	| [$52c6: ldb    #$05]
	jbsr	multiply_ab                       	| [$52c8: mul]
	add.w	d1,d2                            	| [$52c9: leax   d,x]
	rts                                    	| [$52cb: rts]

l_52cc:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$52cc: lda    game_playing_00]
	jeq	l_52d1                             	| [$52ce: beq    $52d1]
	rts                                    	| [$52d0: rts]

l_52d1:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$52d1: lda    $0f]
	and.b	#0x10,d0                         	| [$52d3: anda   #$10]
	jeq	l_52e9                             	| [$52d5: beq    $52e9]
	move.b	#0x01,d0                        	| [$52d7: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$52d7: ldd    #$0103]
	jbsr	queue_event_4e9a                  	| [$52da: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$52dd: ldd    #$020a]
	move.w	#0x020a,d1                      	| [$52dd: ldd    #$020a]
	jbsr	queue_event_4e9a                  	| [$52e0: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$52e3: ldd    #$020b]
	move.w	#0x020b,d1                      	| [$52e3: ldd    #$020b]
	jra	queue_event_4e9a                   	| [$52e6: jra    queue_event_4e9a]
l_52e9:
	move.w	#0x210b,d4                      	| [$52e9: ldu    #$210b]
	move.b	#0x04,d1                        	| [$52ec: ldb    #$04]
	jbsr	l_52f5                            	| [$52ee: bsr    $52f5]
	move.w	#0x218b,d4                      	| [$52f0: ldu    #$218b]
	move.b	#0x04,d1                        	| [$52f3: ldb    #$04]
l_52f5:
	move.b	#0x10,d0                        	| [$52f5: lda    #$10]
l_52f7:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$52f7: clr    $0800,u]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$52fb: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$52fd: decb]
	jne	l_52f7                             	| [$52fe: bne    $52f7]
	rts                                    	| [$5300: rts]

l_5301:
	OP_1_ON_DP_ADDRESS	clr,0xad             | [$5301: clr    $ad]
	GET_ADDRESS	0x310d                     	| [$5303: clr    $310d]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x316d                     	| [$5306: clr    $316d]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x31cd                     	| [$5309: clr    $31cd]
	clr.b	(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$530c: tst    game_playing_00]
	jne	l_531c                             	| [$530e: bne    $531c]
	OP_W_ON_DP_ADDRESS	addq,0xad,#1         | [$5310: inc    $ad]
	GET_ADDRESS	0x310d                     	| [$5312: inc    $310d]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x316d                     	| [$5315: inc    $316d]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x31cd                     	| [$5318: inc    $31cd]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$531b: rts]

l_531c:
	move.w	#0x3500,d2                      	| [$531c: ldx    #$3500]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$531f: lda    $19]
	move.b	#0x20,d1                        	| [$5321: ldb    #$20]
	jbsr	multiply_ab                       	| [$5323: mul]
	add.w	d1,d2                            	| [$5324: leax   d,x]
	move.w	#0x3080,d4                      	| [$5326: ldu    #$3080]
	GET_REG_ADDRESS	0x2,d2                 	| [$5329: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x6a,d0         | [$532b: sta    $6a]
l_532d:
	GET_REG_ADDRESS	0,d2                   	| [$532d: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$532d: ldd    ,x++]
	GET_REG_ADDRESS	0,d4                   	| [$532f: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3090,d4                       	| [$5331: cmpu   #$3090]
	jne	l_532d                             	| [$5335: bne    $532d]
	rts                                    	| [$5337: rts]

l_5338:
	move.w	#0x3500,d2                      	| [$5338: ldx    #$3500]
	move.w	#0x30a0,d4                      	| [$533b: ldu    #$30a0]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$533e: lda    $1a]
	jeq	l_5355                             	| [$5340: beq    $5355]
	OP_W_ON_DP_ADDRESS	addq,0xad,#1         | [$5342: inc    $ad]
	GET_ADDRESS	0x31cd                     	| [$5344: inc    $31cd]
	addq.b	#1,(a0)                         	| [...]
	add.w	#0x60,d4                         	| [$5347: leau   $60,u]
	OP_R_ON_DP_ADDRESS	move,0x1b,d0         | [$534a: lda    $1b]
	jeq	l_5351                             	| [$534c: beq    $5351]
	add.w	#0x40,d2                         	| [$534e: leax   $40,x]
l_5351:
	move.b	#0x02,d0                        	| [$5351: lda    #$02]
	jra	l_5357                             	| [$5353: bra    $5357]
l_5355:
	move.b	#0x04,d0                        	| [$5355: lda    #$04]
l_5357:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5357: sta    $48]
l_5359:
	GET_REG_ADDRESS	0,d2                   	| [$5359: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_5361                             	| [$535b: beq    $5361]
	GET_REG_ADDRESS	0x4,d2                 	| [$535d: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_5367                             	| [$535f: beq    $5367]
l_5361:
	move.b	#0x01,d0                        	| [$5361: lda    #$01]
	GET_REG_ADDRESS	0xd,d4                 	| [$5363: sta    $d,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$5365: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
l_5367:
	add.w	#0x20,d2                         	| [$5367: leax   $20,x]
	add.w	#0x60,d4                         	| [$536a: leau   $60,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$536d: dec    $48]
	jne	l_5359                             	| [$536f: bne    $5359]
	rts                                    	| [$5371: rts]

l_5372:
	move.w	#0xcfe5,d3                      	| [$5372: ldy    #$cfe5]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5376: lda    $19]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$5378: lda    a,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$537a: sta    $50]
	jra	l_5380                             	| [$537c: bra    $5380]
l_537e:
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$537e: clr    $50]
l_5380:
	move.w	#0x3360,d3                      	| [$5380: ldy    #$3360]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5384: lda    $19]
	move.b	#0x03,d1                        	| [$5386: ldb    #$03]
	jbsr	multiply_ab                       	| [$5388: mul]
	add.w	d1,d3                            	| [$5389: leay   d,y]
	OP_R_ON_DP_ADDRESS	move,0x50,d1         | [$538b: ldb    $50]
	GET_REG_ADDRESS	0,d3                   	| [$538d: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$538f: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$5392: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$5394: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$5397: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jra	l_422d                             	| [$5399: jra    $422d]
l_539c:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$539c: lda    game_playing_00]
	jeq	l_53b3                             	| [$539e: beq    $53b3]
	move.w	#0x3380,d2                      	| [$53a0: ldx    #$3380]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$53a3: clr    $48]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$53a5: lda    current_event_69]
	cmp.b	#0x05,d0                         	| [$53a7: cmpa   #$05]
	jeq	l_53b4                             	| [$53a9: beq    $53b4]
	cmp.b	#0x06,d0                         	| [$53ab: cmpa   #$06]
	jeq	l_53b4                             	| [$53ad: beq    $53b4]
	tst.b	d0                               	| [$53af: cmpa   #$00]
	jeq	l_53b4                             	| [$53b1: beq    $53b4]
l_53b3:
	rts                                    	| [$53b3: rts]

l_53b4:
	move.w	#0x269a,d4                      	| [$53b4: ldu    #$269a]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$53b7: lda    $6a]
	move.b	#0x40,d1                        	| [$53b9: ldb    #$40]
	jbsr	multiply_ab                       	| [$53bb: mul]
	add.w	d1,d4                            	| [$53bc: leau   d,u]
	jbsr	l_547c                            	| [$53be: jsr    $547c]
l_53c1:
	OP_1_ON_DP_ADDRESS	clr,0x4a             | [$53c1: clr    $4a]
	GET_REG_ADDRESS	0,d2                   	| [$53c3: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x16,d0                         	| [$53c5: cmpa   #$16]
	jne	l_53d0                             	| [$53c7: bne    $53d0]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$53c9: inc    $48]
	move.w	#0xd51d,d2                      	| [$53cb: ldx    #$d51d]
	jra	l_53e2                             	| [$53ce: bra    $53e2]
l_53d0:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$53d0: lda    current_event_69]
	tst.b	d0                               	| [$53d2: cmpa   #$00]
	jeq	l_53e0                             	| [$53d4: beq    $53e0]
	cmp.b	#0x06,d0                         	| [$53d6: cmpa   #$06]
	jeq	l_53e0                             	| [$53d8: beq    $53e0]
	cmp.b	#0x04,d0                         	| [$53da: cmpa   #$04]
	jne	l_53e2                             	| [$53dc: bne    $53e2]
	OP_W_ON_DP_ADDRESS	addq,0x4a,#1         | [$53de: inc    $4a]
l_53e0:
	addq.w	#0x1,d2                         	| [$53e0: leax   $1,x]
l_53e2:
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$53e2: clr    $49]
	GET_REG_ADDRESS	0,d2                   	| [$53e4: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jne	l_53ec                             	| [$53e6: bne    $53ec]
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$53e8: inc    $49]
	move.b	#0x10,d0                        	| [$53ea: lda    #$10]
l_53ec:
	jbsr	write_char_and_move_cursor_422c   	| [$53ec: jsr    write_char_and_move_cursor_422c]
	GET_REG_ADDRESS	0,d2                   	| [$53ef: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jne	l_53fd                             	| [$53f1: bne    $53fd]
	OP_1_ON_DP_ADDRESS	tst,0x4a             | [$53f3: tst    $4a]
	jne	l_53fd                             	| [$53f5: bne    $53fd]
	OP_1_ON_DP_ADDRESS	tst,0x49             | [$53f7: tst    $49]
	jeq	l_53fd                             	| [$53f9: beq    $53fd]
	move.b	#0x10,d0                        	| [$53fb: lda    #$10]
l_53fd:
	jbsr	write_char_and_move_cursor_422c   	| [$53fd: jsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$5400: lda    $48]
	jne	l_540e                             	| [$5402: bne    $540e]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5404: lda    current_event_69]
	tst.b	d0                               	| [$5406: cmpa   #$00]
	jeq	l_5412                             	| [$5408: beq    $5412]
	cmp.b	#0x06,d0                         	| [$540a: cmpa   #$06]
	jeq	l_5416                             	| [$540c: beq    $5416]
l_540e:
	GET_REG_ADDRESS	0,d2                   	| [$540e: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jra	l_5418                             	| [$5410: bra    $5418]
l_5412:
	move.b	#0x8a,d0                        	| [$5412: lda    #$8a]
	jra	l_5418                             	| [$5414: bra    $5418]
l_5416:
	move.b	#0x2b,d0                        	| [$5416: lda    #$2b]
l_5418:
	jbsr	write_char_and_move_cursor_422c   	| [$5418: jsr    write_char_and_move_cursor_422c]
	move.b	#0x8c,d0                        	| [$541b: lda    #$8c]
	OP_1_ON_DP_ADDRESS	tst,0x48             | [$541d: tst    $48]
	jne	l_5427                             	| [$541f: bne    $5427]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$5421: ldb    current_event_69]
	cmp.b	#0x04,d1                         	| [$5423: cmpb   #$04]
	jeq	l_5429                             	| [$5425: beq    $5429]
l_5427:
	GET_REG_ADDRESS	0,d2                   	| [$5427: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
l_5429:
	jbsr	write_char_and_move_cursor_422c   	| [$5429: jsr    write_char_and_move_cursor_422c]
	GET_REG_ADDRESS	0,d2                   	| [$542c: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jra	write_char_and_move_cursor_422c    	| [$542e: jra    write_char_and_move_cursor_422c]
l_5431:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5431: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$5433: cmpa   #$02]
	jeq	l_543b                             	| [$5435: beq    $543b]
	cmp.b	#0x03,d0                         	| [$5437: cmpa   #$03]
	jne	l_543c                             	| [$5439: bne    $543c]
l_543b:
	rts                                    	| [$543b: rts]

l_543c:
	move.w	#0x3380,d2                      	| [$543c: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$543f: lda    $19]
	move.b	#0x0f,d1                        	| [$5441: ldb    #$0f]
l_5443:
	jbsr	multiply_ab                       	| [$5443: mul]
	add.w	d1,d2                            	| [$5444: leax   d,x]
	move.w	#0x269a,d4                      	| [$5446: ldu    #$269a]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$5449: lda    $6a]
	OP_W_ON_DP_ADDRESS	move,0x4b,d0         | [$544b: sta    $4b]
	jeq	l_5461                             	| [$544d: beq    $5461]
l_544f:
	move.l	d2,-(sp)                        	| [$544f: pshs   x]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$5451: clr    $48]
	jbsr	l_53c1                            	| [$5453: jsr    $53c1]
	movem.l	(sp)+,d2                       	| [$5456: puls   x]
	addq.w	#0x5,d2                         	| [$5458: leax   $5,x]
	add.w	#0x3b,d4                         	| [$545a: leau   $3b,u]
	OP_W_ON_DP_ADDRESS	subq,0x4b,#1         | [$545d: dec    $4b]
	jne	l_544f                             	| [$545f: bne    $544f]
l_5461:
	move.b	#0x05,d1                        	| [$5461: ldb    #$05]
	jra	l_52f5                             	| [$5463: jra    $52f5]

l_5466:
	move.w	#0x3380,d2                      	| [$5466: ldx    #$3380]
	move.w	#0x309b,d4                      	| [$5469: ldu    #$309b]
	jbsr	l_547c                            	| [$546c: jsr    $547c]
	GET_REG_ADDRESS	0,d4                   	| [$546f: ldd    ,u]
	LOAD_D                                 	| [$546f: ldd    ,u]
	GET_REG_ADDRESS	0,d2                   	| [$5471: std    ,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$5473: ldd    $2,u]
	LOAD_D                                 	| [$5473: ldd    $2,u]
	GET_REG_ADDRESS	0x2,d2                 	| [$5475: std    $2,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$5477: lda    $4,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$5479: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$547b: rts]

l_547c:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$547c: lda    $19]
	move.b	#0x0f,d1                        	| [$547e: ldb    #$0f]
	jbsr	multiply_ab                       	| [$5480: mul]
	add.w	d1,d2                            	| [$5481: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$5483: lda    $6a]
	move.b	#0x05,d1                        	| [$5485: ldb    #$05]
	jbsr	multiply_ab                       	| [$5487: mul]
	add.w	d1,d2                            	| [$5488: leax   d,x]
	rts                                    	| [$548a: rts]

l_548b:
	move.w	#0x3500,d4                      	| [$548b: ldu    #$3500]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$548e: lda    $19]
	move.b	#0x20,d1                        	| [$5490: ldb    #$20]
	jbsr	multiply_ab                       	| [$5492: mul]
	add.w	d1,d4                            	| [$5493: leau   d,u]
	GET_REG_ADDRESS	0,d4                   	| [$5495: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jeq	l_54ad                             	| [$5497: beq    $54ad]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5499: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$549b: cmpa   #$03]
	jne	l_54a3                             	| [$549d: bne    $54a3]
	GET_REG_ADDRESS	0x4,d4                 	| [$549f: lda    $4,u]
	move.b	(a0),d0                         	| [...]
	jne	l_54ad                             	| [$54a1: bne    $54ad]
l_54a3:
	move.w	#0x3420,d2                      	| [$54a3: ldx    #$3420]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$54a6: lda    $19]
	move.b	#0x10,d1                        	| [$54a8: ldb    #$10]
	jbsr	multiply_ab                       	| [$54aa: mul]
	and.l	#0xFFFF,d1                       	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d1,d2         	| [$54ab: inc    d,x]
	addq.b	#1,(a0)                         	| [...]
l_54ad:
	rts                                    	| [$54ad: rts]

l_54ae:
	move.w	#0x3400,d2                      	| [$54ae: ldx    #$3400]
	move.w	#0xd3fd,d4                      	| [$54b1: ldu    #$d3fd]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$54b4: lda    $19]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$54b6: ldb    $1a]
	jeq	l_54bd                             	| [$54b8: beq    $54bd]
	and.b	#0x01,d0                         	| [$54ba: anda   #$01]
	addq.b	#1,d0                           	| [$54bc: inca]
l_54bd:
	asl.b	#1,d0                            	| [$54bd: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$54be: ldd    a,u]
	LOAD_D                                 	| [$54be: ldd    a,u]
	GET_REG_ADDRESS	0x1,d2                 	| [$54c0: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$54c2: rts]

l_54c3:
	move.w	#0x3600,d2                      	| [$54c3: ldx    #$3600]
	moveq	#0,d0                            	| [$54c6: clra]
	moveq	#0,d1                            	| [$54c7: clrb]
l_54c8:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$54c8: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x361c,d2                       	| [$54ca: cmpx   #$361c]
	jne	l_54c8                             	| [$54cd: bne    $54c8]
	rts                                    	| [$54cf: rts]

l_54d0:
	move.w	#0x2a4a,d4                      	| [$54d0: ldu    #$2a4a]
	move.b	#0x01,d0                        	| [$54d3: lda    #$01]
	OP_R_ON_DP_ADDRESS	move,0x0f,d1         | [$54d5: ldb    $0f]
	and.b	#0x10,d1                         	| [$54d7: andb   #$10]
	jeq	l_54dc                             	| [$54d9: beq    $54dc]
	moveq	#0,d0                            	| [$54db: clra]
l_54dc:
	move.b	#0x03,d1                        	| [$54dc: ldb    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$54de: stb    $48]
l_54e0:
	move.b	#0x0c,d1                        	| [$54e0: ldb    #$0c]
l_54e2:
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$54e2: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$54e4: decb]
	jne	l_54e2                             	| [$54e5: bne    $54e2]
	add.w	#0x34,d4                         	| [$54e7: leau   $34,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$54ea: dec    $48]
	jne	l_54e0                             	| [$54ec: bne    $54e0]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$54ee: lda    $0f]
	and.b	#0x10,d0                         	| [$54f0: anda   #$10]
	jne	l_5505                             	| [$54f2: bne    $5505]
	move.w	#0xcfe5,d3                      	| [$54f4: ldy    #$cfe5]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$54f8: lda    $19]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$54fa: lda    a,y]
	move.b	(a0),d0                         	| [...]
	move.w	#0x2a53,d4                      	| [$54fc: ldu    #$2a53]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$54ff: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5501: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5503: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_5505:
	rts                                    	| [$5505: rts]

l_5506:
	move.w	#0x2b42,d4                      	| [$5506: ldu    #$2b42]
	move.b	#0x01,d0                        	| [$5509: lda    #$01]
	OP_R_ON_DP_ADDRESS	move,0x0f,d1         | [$550b: ldb    $0f]
	and.b	#0x10,d1                         	| [$550d: andb   #$10]
	jeq	l_5512                             	| [$550f: beq    $5512]
	moveq	#0,d0                            	| [$5511: clra]
l_5512:
	move.b	#0x05,d1                        	| [$5512: ldb    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$5514: stb    $48]
l_5516:
	move.b	#0x08,d1                        	| [$5516: ldb    #$08]
l_5518:
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5518: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$551a: decb]
	jne	l_5518                             	| [$551b: bne    $5518]
	add.w	#0x38,d4                         	| [$551d: leau   $38,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5520: dec    $48]
	jne	l_5516                             	| [$5522: bne    $5516]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$5524: lda    $0f]
	and.b	#0x10,d0                         	| [$5526: anda   #$10]
	jne	l_553b                             	| [$5528: bne    $553b]
	move.w	#0xcfe5,d3                      	| [$552a: ldy    #$cfe5]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$552e: lda    $19]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$5530: lda    a,y]
	move.b	(a0),d0                         	| [...]
	move.w	#0x2bc4,d4                      	| [$5532: ldu    #$2bc4]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5535: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5537: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5539: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_553b:
	rts                                    	| [$553b: rts]

l_553c:
	move.w	#0x3498,d2                      	| [$553c: ldx    #$3498]
	moveq	#0,d0                            	| [$553f: clra]
	moveq	#0,d1                            	| [$5540: clrb]
l_5541:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$5541: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x34a8,d2                       	| [$5543: cmpx   #$34a8]
	jne	l_5541                             	| [$5546: bne    $5541]
	move.b	#0x01,d0                        	| [$5548: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$554a: sta    $48]
	move.w	#0x3480,d2                      	| [$554c: ldx    #$3480]
	move.w	#0x3498,d4                      	| [$554f: ldu    #$3498]
	GET_REG_ADDRESS	0,d4                   	| [$5552: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$5554: ldd    ,x]
	LOAD_D                                 	| [$5554: ldd    ,x]
	GET_REG_ADDRESS	0x1,d4                 	| [$5556: std    $1,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$5558: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$555a: sta    $3,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$555c: lda    $01]
	OP_W_ON_DP_ADDRESS	move,0x4d,d0         | [$555e: sta    $4d]
	jeq	l_55b3                             	| [$5560: beq    $55b3]
l_5562:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$5562: lda    $48]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$5564: sta    $49]
	OP_1_ON_DP_ADDRESS	clr,0x4a             | [$5566: clr    $4a]
	move.w	#0x3499,d3                      	| [$5568: ldy    #$3499]
	addq.w	#0x3,d2                         	| [$556c: leax   $3,x]
l_556e:
	movem.l	d2/d3,-(sp)                    	| [$556e: pshs   y,x]
	move.b	#0x03,d0                        	| [$5570: lda    #$03]
	jbsr	l_a6c1                            	| [$5572: jsr    $a6c1]
	movem.l	(sp)+,d2/d3                    	| [$5575: puls   x,y]
	cmp.b	#0x01,d0                         	| [$5577: cmpa   #$01]
	jeq	l_5589                             	| [$5579: beq    $5589]
	OP_W_ON_DP_ADDRESS	addq,0x4a,#1         | [$557b: inc    $4a]
	addq.w	#0x4,d3                         	| [$557d: leay   $4,y]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$557f: dec    $49]
	jne	l_556e                             	| [$5581: bne    $556e]
	subq.w	#0x1,d3                         	| [$5583: leay   -$1,y]
	move.w	d3,d4                           	| [$5585: tfr    y,u]
	jra	l_55a0                             	| [$5587: bra    $55a0]
l_5589:
	move.b	#0x03,d0                        	| [$5589: lda    #$03]
	OP_R_ON_DP_ADDRESS	sub,0x4a,d0          | [$558b: suba   $4a]
	OP_W_ON_DP_ADDRESS	move,0x4c,d0         | [$558d: sta    $4c]
	move.w	#0x34a4,d4                      	| [$558f: ldu    #$34a4]
l_5592:
	subq.w	#0x4,d4                         	| [$5592: leau   -$4,u]
	GET_REG_ADDRESS	0,d4                   	| [$5594: ldd    ,u]
	LOAD_D                                 	| [$5594: ldd    ,u]
	GET_REG_ADDRESS	0x4,d4                 	| [$5596: std    $4,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$5598: ldd    $2,u]
	LOAD_D                                 	| [$5598: ldd    $2,u]
	GET_REG_ADDRESS	0x6,d4                 	| [$559a: std    $6,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x4c,#1         | [$559c: dec    $4c]
	jne	l_5592                             	| [$559e: bne    $5592]
l_55a0:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$55a0: lda    $48]
	addq.b	#1,d0                           	| [$55a2: inca]
	GET_REG_ADDRESS	0,d4                   	| [$55a3: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$55a5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$55a7: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$55a9: ldd    $1,x]
	LOAD_D                                 	| [$55a9: ldd    $1,x]
	GET_REG_ADDRESS	0x2,d4                 	| [$55ab: std    $2,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$55ad: inc    $48]
	OP_W_ON_DP_ADDRESS	subq,0x4d,#1         | [$55af: dec    $4d]
	jne	l_5562                             	| [$55b1: bne    $5562]
l_55b3:
	rts                                    	| [$55b3: rts]

l_55b4:
	move.w	#0x30a0,d2                      	| [$55b4: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd405,d4
	.endif
	lea	table_d405,a4                  	| [$55b7: ldu   #table_d405]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$55ba: lda    current_event_69]
	asl.b	#1,d0                            	| [$55bc: asla]
	JMP_A_INDEXED	A4                   	| [$55bd: jra    [a,u]] [jump_table]
l_55bf:
	jra	l_82a7                             	| [$55bf: jra    $82a7]
l_55c2:
	move.b	#0x04,d0                        	| [$55c2: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$55c4: sta    $48]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$55c6: clr    $19]
l_55c8:
	jbsr	select_standing_sprite_84d6                            	| [$55c8: jsr    $84d6]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$55cb: inc    $19]
	add.w	#0x60,d2                         	| [$55cd: leax   $60,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$55d0: dec    $48]
	jne	l_55c8                             	| [$55d2: bne    $55c8]
	rts                                    	| [$55d4: rts]

l_55d5:
	jbsr	l_82a7                            	| [$55d5: jsr    $82a7]
	move.b	#0x04,d0                        	| [$55d8: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$55da: sta    $48]
	move.b	#0xa0,d0                        	| [$55dc: ldd    #$a020]
	move.w	#0xa020,d1                      	| [$55dc: ldd    #$a020]
	move.w	#0x3260,d2                      	| [$55df: ldx    #$3260]
l_55e2:
	movem.l	d0/d1,-(sp)                    	| [$55e2: pshs   d]
	GET_REG_ADDRESS	0,d2                   	| [$55e4: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$55e6: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	movem.l	(sp)+,d0/d1                    	| [$55e8: puls   d]
	add.b	#0x40,d1                         	| [$55ea: addb   #$40]
	add.w	#0x20,d2                         	| [$55ec: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$55ef: dec    $48]
	jne	l_55e2                             	| [$55f1: bne    $55e2]
	move.w	#0x3260,d2                      	| [$55f3: ldx    #$3260]
	jbsr	l_85a0                            	| [$55f6: jsr    $85a0]
	move.w	#0x32c0,d2                      	| [$55f9: ldx    #$32c0]
	jbsr	l_85a0                            	| [$55fc: jsr    $85a0]
	rts                                    	| [$55ff: rts]

l_5600:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5600: lda    $19]
	OP_W_ON_DP_ADDRESS	move,0x77,d0         | [$5602: sta    $77]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$5604: clr    $19]
	move.w	#0x2644,d4                      	| [$5606: ldu    #$2644]
	move.w	#0x3500,d2                      	| [$5609: ldx    #$3500]
	move.b	#0x04,d0                        	| [$560c: lda    #$04]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$560e: ldb    $1a]
	jeq	l_5628                             	| [$5610: beq    $5628]
	move.b	#0x02,d0                        	| [$5612: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$5614: ldb    $1b]
	jeq	l_5628                             	| [$5616: beq    $5628]
	add.w	#0x40,d2                         	| [$5618: leax   $40,x]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$561b: sta    $19]
	GET_ADDRESS	0x33d1                     	| [$561d: ldb    $33d1]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x10,d1                         	| [$5620: cmpb   #$10]
	jeq	l_5628                             	| [$5622: beq    $5628]
	add.w	#0x0080,d4                       	| [$5624: leau   $0080,u]
l_5628:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5628: sta    $48]
	GET_ADDRESS	0x313d                     	| [$562a: sta    $313d]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x313e                     	| [$562d: stu    $313e]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
l_5630:
	move.w	#0xcfe5,d3                      	| [$5630: ldy    #$cfe5]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5634: lda    $19]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$5636: lda    a,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$5638: sta    $49]
	move.w	#0x3360,d3                      	| [$563a: ldy    #$3360]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$563e: lda    $19]
	move.b	#0x03,d1                        	| [$5640: ldb    #$03]
	jbsr	multiply_ab                       	| [$5642: mul]
	add.w	d1,d3                            	| [$5643: leay   d,y]
	GET_REG_ADDRESS	0x4,d2                 	| [$5645: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_564f                             	| [$5647: beq    $564f]
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$5649: clr    $49]
	move.w	#0xcfd6,d3                      	| [$564b: ldy    #$cfd6]
l_564f:
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$564f: ldb    $49]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5651: lda    $19]
	addq.b	#1,d0                           	| [$5653: inca]
	jbsr	l_422d                            	| [$5654: jsr    $422d]
	move.b	#0x20,d0                        	| [$5657: lda    #$20]
	jbsr	l_422d                            	| [$5659: jsr    $422d]
	addq.w	#0x1,d4                         	| [$565c: leau   $1,u]
	GET_REG_ADDRESS	0,d3                   	| [$565e: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$5660: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$5663: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$5665: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$5668: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$566a: jsr    $422d]
	addq.w	#0x1,d4                         	| [$566d: leau   $1,u]
	OP_1_ON_DP_ADDRESS	clr,0x4a             | [$566f: clr    $4a]
	GET_REG_ADDRESS	0x3,d2                 	| [$5671: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_5683                             	| [$5673: beq    $5683]
	OP_W_ON_DP_ADDRESS	move,0x4b,d0         | [$5675: sta    $4b]
	move.b	#0xe2,d0                        	| [$5677: ldd    #$e283]
	move.w	#0xe283,d1                      	| [$5677: ldd    #$e283]
l_567a:
	jbsr	l_422d                            	| [$567a: jsr    $422d]
	OP_W_ON_DP_ADDRESS	addq,0x4a,#1         | [$567d: inc    $4a]
	OP_W_ON_DP_ADDRESS	subq,0x4b,#1         | [$567f: dec    $4b]
	jne	l_567a                             	| [$5681: bne    $567a]
l_5683:
	move.b	#0x02,d0                        	| [$5683: lda    #$02]
	OP_R_ON_DP_ADDRESS	sub,0x4a,d0          | [$5685: suba   $4a]
	jeq	l_5695                             	| [$5687: beq    $5695]
	OP_W_ON_DP_ADDRESS	move,0x4b,d0         | [$5689: sta    $4b]
	move.b	#0xe2,d0                        	| [$568b: ldd    #$e280]
	move.w	#0xe280,d1                      	| [$568b: ldd    #$e280]
l_568e:
	jbsr	l_422d                            	| [$568e: jsr    $422d]
	OP_W_ON_DP_ADDRESS	subq,0x4b,#1         | [$5691: dec    $4b]
	jne	l_568e                             	| [$5693: bne    $568e]
l_5695:
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$5695: inc    $19]
	add.w	#0x37,d4                         	| [$5697: leau   $37,u]
	add.w	#0x20,d2                         	| [$569a: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$569d: dec    $48]
	jne	l_5630                             	| [$569f: bne    $5630]
	OP_R_ON_DP_ADDRESS	move,0x77,d0         | [$56a1: lda    $77]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$56a3: sta    $19]
	rts                                    	| [$56a5: rts]

l_56a6:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$56a6: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$56a8: cmpa   #$02]
	jeq	l_56db                             	| [$56aa: beq    $56db]
	cmp.b	#0x03,d0                         	| [$56ac: cmpa   #$03]
	jeq	l_56db                             	| [$56ae: beq    $56db]
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$56b0: lda    game_playing_00]
	jeq	l_56db                             	| [$56b2: beq    $56db]
	move.w	#0x2695,d4                      	| [$56b4: ldu    #$2695]
	move.w	#0xd413,d2                      	| [$56b7: ldx    #$d413]
	move.b	#0x03,d0                        	| [$56ba: lda    #$03]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$56bc: ldb    current_event_69]
	cmp.b	#0x04,d1                         	| [$56be: cmpb   #$04]
	jne	l_56c3                             	| [$56c0: bne    $56c3]
	subq.b	#1,d0                           	| [$56c2: deca]
l_56c3:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$56c3: sta    $49]
l_56c5:
	move.b	#0x05,d0                        	| [$56c5: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$56c7: sta    $48]
	move.b	#0x80,d1                        	| [$56c9: ldb    #$80]
l_56cb:
	GET_REG_ADDRESS	0,d2                   	| [$56cb: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$56cd: jsr    $422d]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$56d0: dec    $48]
	jne	l_56cb                             	| [$56d2: bne    $56cb]
	add.w	#0x3b,d4                         	| [$56d4: leau   $3b,u]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$56d7: dec    $49]
	jne	l_56c5                             	| [$56d9: bne    $56c5]
l_56db:
	rts                                    	| [$56db: rts]

l_56dc:
	move.w	#0x2653,d4                      	| [$56dc: ldu    #$2653]
	OP_R_ON_DP_ADDRESS	move,0x6b,d0         | [$56df: lda    $6b]
	jne	l_56e5                             	| [$56e1: bne    $56e5]
	addq.w	#0x2,d4                         	| [$56e3: leau   $2,u]
l_56e5:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$56e5: lda    $0f]
	and.b	#0x10,d0                         	| [$56e7: anda   #$10]
	jeq	l_56fe                             	| [$56e9: beq    $56fe]
	move.w	#0xd422,d2                      	| [$56eb: ldx    #$d422]
	move.b	#0x05,d0                        	| [$56ee: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$56f0: sta    $48]
	move.b	#0x80,d1                        	| [$56f2: ldb    #$80]
l_56f4:
	GET_REG_ADDRESS	0,d2                   	| [$56f4: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$56f6: jsr    $422d]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$56f9: dec    $48]
	jne	l_56f4                             	| [$56fb: bne    $56f4]
	rts                                    	| [$56fd: rts]

l_56fe:
	move.b	#0x05,d1                        	| [$56fe: ldb    #$05]
	jra	l_52f5                             	| [$5700: jra    $52f5]
l_5703:
	move.w	#0x3800,d2                      	| [$5703: ldx    #$3800]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5706: lda    current_event_69]
	move.b	#0x20,d1                        	| [$5708: ldb    #$20]
	jbsr	multiply_ab                       	| [$570a: mul]
	add.w	d1,d2                            	| [$570b: leax   d,x]
	move.b	#0x0a,d0                        	| [$570d: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x75,d0         | [$570f: sta    $75]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$5711: clr    $48]
	move.w	#0x2114,d4                      	| [$5713: ldu    #$2114]
	jbsr	l_5742                            	| [$5716: bsr    $5742]
l_5718:
	move.l	d4,-(sp)                        	| [$5718: pshs   u]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$571a: lda    $48]
	move.b	#0x40,d1                        	| [$571c: ldb    #$40]
	jbsr	multiply_ab                       	| [$571e: mul]
	add.w	d1,d4                            	| [$571f: leau   d,u]
	jbsr	l_43d8                            	| [$5721: jsr    $43d8]
	addq.w	#0x1,d4                         	| [$5724: leau   $1,u]
	GET_REG_ADDRESS	0x5,d2                 	| [$5726: lda    $5,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$5728: jsr    $422d]
	GET_REG_ADDRESS	0x6,d2                 	| [$572b: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$572d: jsr    $422d]
	GET_REG_ADDRESS	0x7,d2                 	| [$5730: lda    $7,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$5732: jsr    $422d]
	movem.l	(sp)+,d4                       	| [$5735: puls   u]
	add.w	#0x8,d2                          	| [$5737: leax   $8,x]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$5739: inc    $48]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$573b: lda    $48]
	cmp.b	#0x03,d0                         	| [$573d: cmpa   #$03]
	jne	l_5718                             	| [$573f: bne    $5718]
	rts                                    	| [$5741: rts]

l_5742:
	move.w	#0xd427,d3                      	| [$5742: ldy    #$d427]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5746: lda    current_event_69]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$5748: lda    a,y]
	move.b	(a0),d0                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$574a: leau   a,u]
	rts                                    	| [$574c: rts]

l_574d:
	move.w	#0xd42e,d2                      	| [$574d: ldx    #$d42e]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5750: lda    current_event_69]
	cmp.b	#0x06,d0                         	| [$5752: cmpa   #$06]
	jeq	l_5775                             	| [$5754: beq    $5775]
	cmp.b	#0x02,d0                         	| [$5756: cmpa   #$02]
	jeq	l_5761                             	| [$5758: beq    $5761]
	move.w	#0xd435,d2                      	| [$575a: ldx    #$d435]
	cmp.b	#0x03,d0                         	| [$575d: cmpa   #$03]
	jne	l_5774                             	| [$575f: bne    $5774]
l_5761:
	GET_REG_ADDRESS	0,d2                   	| [$5761: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$5763: cmpa   #$ff]
	jeq	l_5774                             	| [$5765: beq    $5774]
	move.w	#0x3600,d4                      	| [$5767: ldu    #$3600]
	move.b	#0x04,d1                        	| [$576a: ldb    #$04]
	jbsr	multiply_ab                       	| [$576c: mul]
	add.w	d1,d4                            	| [$576d: leau   d,u]
	jbsr	l_89c9                            	| [$576f: jsr    $89c9]
	jra	l_5761                             	| [$5772: bra    $5761]
l_5774:
	rts                                    	| [$5774: rts]

l_5775:
	move.b	#0x04,d0                        	| [$5775: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5777: sta    $48]
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$5779: clr    $49]
	move.w	#0x3260,d2                      	| [$577b: ldx    #$3260]
l_577e:
	GET_REG_ADDRESS	0x2,d2                 	| [$577e: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x39,d0                         	| [$5780: cmpa   #$39]
	jcs	l_5795                             	| [$5782: bcs    $5795]
	cmp.b	#0xb8,d0                         	| [$5784: cmpa   #$b8]
	jcc	l_5795                             	| [$5786: bcc    $5795]
	move.w	#0x3638,d4                      	| [$5788: ldu    #$3638]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$578b: lda    $49]
                                         | [$578d: asla]
                                         | [$578e: asla]
	asl.b	#3,d0                            	| [$578f: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$5790: leau   a,u]
	jbsr	l_89c2                            	| [$5792: jsr    $89c2]
l_5795:
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$5795: inc    $49]
	add.w	#0x20,d2                         	| [$5797: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$579a: dec    $48]
	jne	l_577e                             	| [$579c: bne    $577e]
	rts                                    	| [$579e: rts]

l_579f:
	GET_ADDRESS	0x34f1                     	| [$579f: inc    $34f1]
	addq.b	#1,(a0)                         	| [...]
                                         | [$57a2: lda    $34f1]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x1f,d0                         	| [$57a5: cmpa   #$1f]
	jne	l_57af                             	| [$57a7: bne    $57af]
	GET_ADDRESS	0x34f1                     	| [$57a9: clr    $34f1]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34f2                     	| [$57ac: inc    $34f2]
	addq.b	#1,(a0)                         	| [...]
l_57af:
	rts                                    	| [$57af: rts]

l_57b0:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$57b0: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$57b2: cmpa   #$03]
	jeq	l_57ef                             	| [$57b4: beq    $57ef]
	cmp.b	#0x05,d0                         	| [$57b6: cmpa   #$05]
	jeq	l_57ef                             	| [$57b8: beq    $57ef]
	cmp.b	#0x01,d0                         	| [$57ba: cmpa   #$01]
	jeq	l_57ef                             	| [$57bc: beq    $57ef]
	move.b	#0x0e,d0                        	| [$57be: lda    #$0e]
	OP_R_ON_DP_ADDRESS	move,0x0f,d1         | [$57c0: ldb    $0f]
	and.b	#0x08,d1                         	| [$57c2: andb   #$08]
	jne	l_57c8                             	| [$57c4: bne    $57c8]
	move.b	#0x0f,d0                        	| [$57c6: lda    #$0f]
l_57c8:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$57c8: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$57ca: cmpb   #$06]
	jeq	l_57f0                             	| [$57cc: beq    $57f0]
	cmp.b	#0x04,d1                         	| [$57ce: cmpb   #$04]
	jeq	l_57f0                             	| [$57d0: beq    $57f0]
	move.w	#0x2b40,d4                      	| [$57d2: ldu    #$2b40]
l_57d5:
	GET_REG_ADDRESS	0,d4                   	| [$57d5: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	cmp.w	#0x2c40,d4                       	| [$57d7: cmpu   #$2c40]
	jne	l_57d5                             	| [$57db: bne    $57d5]
	move.w	#0x2ba8,d4                      	| [$57dd: ldu    #$2ba8]
	move.b	#0x03,d0                        	| [$57e0: lda    #$03]
l_57e2:
	move.b	#0x07,d1                        	| [$57e2: ldb    #$07]
l_57e4:
	GET_REG_ADDRESS	0,d4                   	| [$57e4: clr    ,u+]
	addq.w	#1,d4                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d1                           	| [$57e6: decb]
	jne	l_57e4                             	| [$57e7: bne    $57e4]
	add.w	#0x39,d4                         	| [$57e9: leau   $39,u]
	subq.b	#1,d0                           	| [$57ec: deca]
	jne	l_57e2                             	| [$57ed: bne    $57e2]
l_57ef:
	rts                                    	| [$57ef: rts]

l_57f0:
	move.w	#0x2b00,d4                      	| [$57f0: ldu    #$2b00]
l_57f3:
	GET_REG_ADDRESS	0,d4                   	| [$57f3: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	cmp.w	#0x2bc0,d4                       	| [$57f5: cmpu   #$2bc0]
	jne	l_57f3                             	| [$57f9: bne    $57f3]
	rts                                    	| [$57fb: rts]

l_57fc:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$57fc: lda    game_playing_00]
	jeq	l_5816                             	| [$57fe: beq    $5816]
	OP_1_ON_DP_ADDRESS	clr,0x90             | [$5800: clr    $90]
	move.w	#0x33d0,d2                      	| [$5802: ldx    #$33d0]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5805: lda    $19]
	addq.b	#1,d0                           	| [$5807: inca]
l_5808:
	GET_REG_ADDRESS	0,d2                   	| [$5808: cmpa   ,x]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_5816                             	| [$580a: beq    $5816]
	GET_REG_ADDRESS	0,d2                   	| [$580c: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_5817                             	| [$580e: beq    $5817]
	OP_W_ON_DP_ADDRESS	addq,0x90,#1         | [$5810: inc    $90]
	addq.w	#0x6,d2                         	| [$5812: leax   $6,x]
	jra	l_5808                             	| [$5814: bra    $5808]
l_5816:
	rts                                    	| [$5816: rts]

l_5817:
	jbsr	l_582c                            	| [$5817: jsr    $582c]
	addq.w	#0x3,d4                         	| [$581a: leau   $3,u]
	jbsr	l_5372                            	| [$581c: jsr    $5372]
	subq.w	#0x6,d4                         	| [$581f: leau   -$6,u]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5821: lda    $19]
	addq.b	#1,d0                           	| [$5823: inca]
	jbsr	l_422d                            	| [$5824: jsr    $422d]
	move.b	#0x20,d0                        	| [$5827: lda    #$20]
	jra	l_422d                             	| [$5829: jra    $422d]
l_582c:
	OP_R_ON_DP_ADDRESS	move,game_playing_00,d0| [$582c: lda    game_playing_00]
	jeq	l_5854                             	| [$582e: beq    $5854]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5830: lda    current_event_69]
	cmp.b	#0x03,d0                         	| [$5832: cmpa   #$03]
	jeq	l_5854                             	| [$5834: beq    $5854]
	move.w	#0x2643,d4                      	| [$5836: ldu    #$2643]
	OP_R_ON_DP_ADDRESS	move,0x90,d0         | [$5839: lda    $90]
	move.b	#0x40,d1                        	| [$583b: ldb    #$40]
	jbsr	multiply_ab                       	| [$583d: mul]
	add.w	d1,d4                            	| [$583e: leau   d,u]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$5840: lda    $0f]
	and.b	#0x10,d0                         	| [$5842: anda   #$10]
	jeq	l_584b                             	| [$5844: beq    $584b]
	move.b	#0x18,d0                        	| [$5846: ldd    #$1883]
	move.w	#0x1883,d1                      	| [$5846: ldd    #$1883]
	jra	l_584e                             	| [$5849: bra    $584e]
l_584b:
	move.b	#0x10,d0                        	| [$584b: ldd    #$1000]
	move.w	#0x1000,d1                      	| [$584b: ldd    #$1000]
l_584e:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$584e: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5852: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_5854:
	rts                                    	| [$5854: rts]

l_5855:
	move.w	#0x2643,d4                      	| [$5855: ldu    #$2643]
	move.b	#0x10,d0                        	| [$5858: lda    #$10]
	move.b	#0x04,d1                        	| [$585a: ldb    #$04]
l_585c:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$585c: clr    $0800,u]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5860: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x40,d4                         	| [$5862: leau   $40,u]
	subq.b	#1,d1                           	| [$5865: decb]
	jne	l_585c                             	| [$5866: bne    $585c]
	rts                                    	| [$5868: rts]

l_5869:
	jbsr	l_5880                            	| [$5869: jsr    $5880]
	tst.b	d0                               	| [$586c: tsta]
	jeq	l_587f                             	| [$586d: beq    $587f]
	move.b	#0x01,d0                        	| [$586f: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x20,d0         | [$5871: sta    $20]
	OP_W_ON_DP_ADDRESS	move,0x22,d0         | [$5873: sta    $22]
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$5875: clr    $24]
	OP_1_ON_DP_ADDRESS	clr,0x26             | [$5877: clr    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$5879: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$587b: clr    event_sub_state_2a]
	move.b	#0x01,d0                        	| [$587d: lda    #$01]
l_587f:
	rts                                    	| [$587f: rts]

l_5880:
	OP_R_ON_DP_ADDRESS	move,0x03,d1         | [$5880: ldb    $03]
	move.b	#0x01,d0                        	| [$5882: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5884: sta    $48]
	OP_R_ON_DP_ADDRESS	move,0x10,d0         | [$5886: lda    $10]
	BIT	#0x08,d0                           	| [$5888: bita   #$08]
	jne	l_58a4                             	| [$588a: bne    $58a4]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$588c: inc    $48]
	BIT	#0x10,d0                           	| [$588e: bita   #$10]
	jne	l_58a4                             	| [$5890: bne    $58a4]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$5892: inc    $48]
	OP_R_ON_DP_ADDRESS	move,0x13,d0         | [$5894: lda    $13]
	and.b	#0x08,d0                         	| [$5896: anda   #$08]
	jne	l_58a4                             	| [$5898: bne    $58a4]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$589a: inc    $48]
	OP_R_ON_DP_ADDRESS	move,0x16,d0         | [$589c: lda    $16]
	and.b	#0x08,d0                         	| [$589e: anda   #$08]
	jne	l_58a4                             	| [$58a0: bne    $58a4]
l_58a2:
	moveq	#0,d0                            	| [$58a2: clra]
	rts                                    	| [$58a3: rts]

l_58a4:
	OP_R_ON_DP_ADDRESS	sub,0x48,d1          | [$58a4: subb   $48]
	jcs	l_58a2                             	| [$58a6: bcs    $58a2]
	OP_W_ON_DP_ADDRESS	move,0x03,d1         | [$58a8: stb    $03]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$58aa: lda    $48]
	subq.b	#1,d0                           	| [$58ac: deca]
	OP_W_ON_DP_ADDRESS	move,0x01,d0         | [$58ad: sta    $01]
	moveq	#0,d0                            	| [$58af: clra]
	jbsr	l_4eb7                            	| [$58b0: jsr    $4eb7]
	move.b	#0x40,d0                        	| [$58b3: lda    #$40]
	jbsr	l_4eb7                            	| [$58b5: jsr    $4eb7]
	move.b	#0x01,d0                        	| [$58b8: lda    #$01]
	rts                                    	| [$58ba: rts]

l_58bb:
	GET_REG_ADDRESS	0x20,d2                	| [$58bb: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_58f3                             	| [$58be: beq    $58f3]
	GET_REG_ADDRESS	0xf,d2                 	| [$58c0: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	jcc	l_58c6                             	| [$58c2: bcc    $58c6]
	GET_REG_ADDRESS	0xe,d2                 	| [$58c4: inc    $e,x]
	addq.b	#1,(a0)                         	| [...]
l_58c6:
	GET_REG_ADDRESS	0xf,d2                 	| [$58c6: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc5,d0         | [$58c8: lda    $c5]
	jne	l_58f4                             	| [$58ca: bne    $58f4]
	GET_REG_ADDRESS	0x2,d2                 	| [$58cc: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$58ce: adda   $20,x]
	add.b	(a0),d0                          	| [...]
	cmp.b	#0x80,d0                         	| [$58d1: cmpa   #$80]
	jcs	l_58e3                             	| [$58d3: bcs    $58e3]
	sub.b	#0x80,d0                         	| [$58d5: suba   #$80]
	GET_REG_ADDRESS	0x27,d2                	| [$58d7: sta    $27,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$58da: inc    $c5]
	move.b	#0x80,d0                        	| [$58dc: lda    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$58de: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_590e                             	| [$58e0: jra    $590e]
l_58e3:
	GET_REG_ADDRESS	0x20,d2                	| [$58e3: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4c,d0         | [$58e6: sta    $4c]
	GET_REG_ADDRESS	0x2,d2                 	| [$58e8: adda   $2,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$58ea: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_58ec:
	jbsr	l_82b7                            	| [$58ec: jsr    $82b7]
	OP_W_ON_DP_ADDRESS	subq,0x4c,#1         | [$58ef: dec    $4c]
	jne	l_58ec                             	| [$58f1: bne    $58ec]
l_58f3:
	rts                                    	| [$58f3: rts]

l_58f4:
	GET_REG_ADDRESS	0x2,d2                 	| [$58f4: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0x7a,d0          | [$58f6: cmpa   $7a]
	jeq	l_5905                             	| [$58f8: beq    $5905]
	GET_REG_ADDRESS	0x2,d2                 	| [$58fa: dec    $2,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$58fc: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$58ff: inca]
	GET_REG_ADDRESS	0x26,d2                	| [$5900: inc    $26,x]
	addq.b	#1,(a0)                         	| [...]
	jra	l_590b                             	| [$5903: bra    $590b]
l_5905:
	GET_REG_ADDRESS	0x20,d2                	| [$5905: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x26,d2                	| [$5908: clr    $26,x]
	clr.b	(a0)                         	| [...]
l_590b:
	GET_REG_ADDRESS	0x27,d2                	| [$590b: sta    $27,x]
	move.b	d0,(a0)                         	| [...]
l_590e:
	OP_R_ON_DP_ADDRESS	move,0xc7,d0         | [$590e: lda    $c7]
	jeq	l_5981                             	| [$5910: beq    $5981]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5912: sta    $48]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$5914: sta    $49]
	OP_W_ON_DP_ADDRESS	move,0x4b,d0         | [$5916: sta    $4b]
	move.w	#0xd439,d4                      	| [$5918: ldu    #$d439]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$591b: lda    current_event_69]
	cmp.b	#0x06,d0                         	| [$591d: cmpa   #$06]
	jne	l_5923                             	| [$591f: bne    $5923]
	OP_1_ON_DP_ADDRESS	clr,0x4b             | [$5921: clr    $4b]
l_5923:
	asl.b	#1,d0                            	| [$5923: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$5924: ldy    a,u]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_5927:
	move.l	d3,-(sp)                        	| [$5927: pshs   y]
	move.w	#0x36d8,d4                      	| [$5929: ldu    #$36d8]
l_592c:
	OP_R_ON_DP_ADDRESS	move,0xba,d0         | [$592c: lda    $ba]
	GET_REG_ADDRESS	0,d3                   	| [$592e: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xff,d1                         	| [$5930: cmpb   #$ff]
	jeq	l_595a                             	| [$5932: beq    $595a]
	GET_REG_ADDRESS	-0x1,d3                	| [$5934: anda   -$1,y]
	and.b	(a0),d0                          	| [...]
	jne	l_595a                             	| [$5936: bne    $595a]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$5938: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$593a: cmpb   #$06]
	jne	l_5946                             	| [$593c: bne    $5946]
	cmp.w	#0x36d8,d4                       	| [$593e: cmpu   #$36d8]
	jne	l_5946                             	| [$5942: bne    $5946]
	OP_W_ON_DP_ADDRESS	addq,0x4b,#1         | [$5944: inc    $4b]
l_5946:
	OP_1_ON_DP_ADDRESS	tst,0x02             | [$5946: tst    $02]
	jne	l_5952                             	| [$5948: bne    $5952]
	GET_REG_ADDRESS	0,d4                   	| [$594a: inc    ,u]
	addq.b	#1,(a0)                         	| [...]
	jne	l_595a                             	| [$594c: bne    $595a]
	GET_REG_ADDRESS	0x1,d4                 	| [$594e: inc    $1,u]
	addq.b	#1,(a0)                         	| [...]
	jra	l_595a                             	| [$5950: bra    $595a]
l_5952:
	GET_REG_ADDRESS	0,d4                   	| [$5952: tst    ,u]
	tst.b	(a0)                             	| [...]
	jne	l_5958                             	| [$5954: bne    $5958]
	GET_REG_ADDRESS	0x1,d4                 	| [$5956: dec    $1,u]
	subq.b	#1,(a0)                         	| [...]
l_5958:
	GET_REG_ADDRESS	0,d4                   	| [$5958: dec    ,u]
	subq.b	#1,(a0)                         	| [...]
l_595a:
	addq.w	#0x2,d4                         	| [$595a: leau   $2,u]
	cmp.w	#0x36ee,d4                       	| [$595c: cmpu   #$36ee]
	jne	l_592c                             	| [$5960: bne    $592c]
	OP_W_ON_DP_ADDRESS	addq,0xba,#1         | [$5962: inc    $ba]
	jbsr	l_5e9c                            	| [$5964: jsr    $5e9c]
	movem.l	(sp)+,d3                       	| [$5967: puls   y]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5969: dec    $48]
	jne	l_5927                             	| [$596b: bne    $5927]
	OP_R_ON_DP_ADDRESS	move,0xc6,d0         | [$596d: lda    $c6]
	jne	l_597a                             	| [$596f: bne    $597a]
l_5971:
	GET_REG_ADDRESS	0,d2                   	| [$5971: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$5973: cmpa   #$02]
	jcc	l_597e                             	| [$5975: bcc    $597e]
	jbsr	l_82b7                            	| [$5977: jsr    $82b7]
l_597a:
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$597a: dec    $49]
	jne	l_5971                             	| [$597c: bne    $5971]
l_597e:
	jbsr	l_5aba                            	| [$597e: jsr    $5aba]
l_5981:
	rts                                    	| [$5981: rts]

l_5982:
	move.w	d2,d4                           	| [$5982: leau   $10,x]
	add.w	#0x10,d4                         	| [$5982: leau   $10,x]
	move.b	#0x03,d0                        	| [$5985: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5987: sta    $48]
	jbsr	l_50dd                            	| [$5989: jsr    $50dd]
	jbsr	l_5bc0                            	| [$598c: jsr    $5bc0]
	tst.b	d1                               	| [$598f: tstb]
	jeq	l_59b1                             	| [$5990: beq    $59b1]
	move.w	#0xd45d,d3                      	| [$5992: ldy    #$d45d]
	move.w	d2,d4                           	| [$5996: leau   $10,x]
	add.w	#0x10,d4                         	| [$5996: leau   $10,x]
	GET_REG_ADDRESS	0,d4                   	| [$5999: lda    ,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$599b: ldb    #$0a]
	jbsr	multiply_ab                       	| [$599d: mul]
	GET_REG_ADDRESS	0x1,d4                 	| [$599e: addb   $1,u]
	add.b	(a0),d1                          	| [...]
	asl.b	#1,d1                            	| [$59a0: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$59a1: ldd    b,y]
	LOAD_D                                 	| [$59a1: ldd    b,y]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$59a3: sta    $49]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$59a5: stb    $48]
	jbsr	l_509f                            	| [$59a7: jsr    $509f]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$59aa: lda    $49]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$59ac: sta    $48]
	jbsr	l_50d1                            	| [$59ae: jsr    $50d1]
l_59b1:
	rts                                    	| [$59b1: rts]

l_59b2:
	move.w	d2,d3                           	| [$59b2: leay   $10,x]
	add.w	#0x10,d3                         	| [$59b2: leay   $10,x]
	move.w	#0x304c,d4                      	| [$59b5: ldu    #$304c]
	move.b	#0x03,d0                        	| [$59b8: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$59ba: sta    $48]
	GET_REG_ADDRESS	0,d3                   	| [$59bc: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
l_59be:
	moveq	#0,d1                            	| [$59be: clrb]
l_59bf:
	sub.b	#0x06,d0                         	| [$59bf: suba   #$06]
	jcs	l_59c6                             	| [$59c1: bcs    $59c6]
	addq.b	#1,d1                           	| [$59c3: incb]
	jra	l_59bf                             	| [$59c4: bra    $59bf]
l_59c6:
	add.b	#0x06,d0                         	| [$59c6: adda   #$06]
	GET_REG_ADDRESS	0,d4                   	| [$59c8: stb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x0a,d1                        	| [$59ca: ldb    #$0a]
	jbsr	multiply_ab                       	| [$59cc: mul]
	move.b	d1,d0                           	| [$59cd: tfr    b,a]
	GET_REG_ADDRESS	0,d3                   	| [$59cf: adda   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$59d1: dec    $48]
	jne	l_59be                             	| [$59d3: bne    $59be]
	moveq	#0,d1                            	| [$59d5: clrb]
l_59d6:
	sub.b	#0x06,d0                         	| [$59d6: suba   #$06]
	jcs	l_59dd                             	| [$59d8: bcs    $59dd]
	addq.b	#1,d1                           	| [$59da: incb]
	jra	l_59d6                             	| [$59db: bra    $59d6]
l_59dd:
	add.b	#0x06,d0                         	| [$59dd: adda   #$06]
	GET_REG_ADDRESS	0,d4                   	| [$59df: stb    ,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$59e1: clr    $20,x]
	clr.b	(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4d,d0         | [$59e4: lda    $4d]
                                         | [$59e6: asla]
                                         | [$59e7: asla]
                                         | [$59e8: asla]
	asl.b	#4,d0                            	| [$59e9: asla]
	GET_DP_ADDRESS	0x4e                    	| [$59ea: ora    $4e]
	or.b	(a0),d0                           	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4d,d0         | [$59ec: sta    $4d]
	OP_R_ON_DP_ADDRESS	move,0x4f,d0         | [$59ee: lda    $4f]
                                         | [$59f0: asla]
                                         | [$59f1: asla]
                                         | [$59f2: asla]
	asl.b	#4,d0                            	| [$59f3: asla]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$59f4: sta    $4e]
	OP_R_ON_DP_ADDRESS	move,0x4e,d0         | [$59f6: lda    $4e]
	GET_REG_ADDRESS	0x23,d2                	| [$59f8: adda   $23,x]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$59fc: sta    $4e]
	OP_R_ON_DP_ADDRESS	move,0x4d,d0         | [$59fe: lda    $4d]
	GET_REG_ADDRESS	0x22,d2                	| [$5a00: adca   $22,x]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4d,d0         | [$5a04: sta    $4d]
	OP_R_ON_DP_ADDRESS	move,0x4c,d0         | [$5a06: lda    $4c]
	GET_REG_ADDRESS	0x21,d2                	| [$5a08: adca   $21,x]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4c,d0         | [$5a0c: sta    $4c]
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$5a0e: clr    $50]
	OP_1_ON_DP_ADDRESS	clr,0x51             | [$5a10: clr    $51]
	OP_1_ON_DP_ADDRESS	clr,0x52             | [$5a12: clr    $52]
l_5a14:
	move.w	#0xd485,d4                      	| [$5a14: ldu    #$d485]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5a17: lda    current_event_69]
	asl.b	#1,d0                            	| [$5a19: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$5a1a: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.w	#0x3050,d3                      	| [$5a1c: ldy    #$3050]
	GET_REG_ADDRESS	0x2,d3                 	| [$5a20: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x56,d0         | [$5a22: sta    $56]
	GET_REG_ADDRESS	0x2,d4                 	| [$5a24: adda   $2,u]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$5a27: sta    $2,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$5a29: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x55,d0         | [$5a2b: sta    $55]
	GET_REG_ADDRESS	0x1,d4                 	| [$5a2d: adca   $1,u]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$5a30: sta    $1,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$5a32: lda    ,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x54,d0         | [$5a34: sta    $54]
	GET_REG_ADDRESS	0,d4                   	| [$5a36: adca   ,u]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$5a39: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$5a3b: inc    $20,x]
	addq.b	#1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4c,d0         | [$5a3e: lda    $4c]
	OP_R_ON_DP_ADDRESS	cmp,0x50,d0          | [$5a40: cmpa   $50]
	jcs	l_5a54                             	| [$5a42: bcs    $5a54]
	jhi	l_5a14                             	| [$5a44: bhi    $5a14]
	OP_R_ON_DP_ADDRESS	move,0x4d,d0         | [$5a46: lda    $4d]
	OP_R_ON_DP_ADDRESS	cmp,0x51,d0          | [$5a48: cmpa   $51]
	jcs	l_5a54                             	| [$5a4a: bcs    $5a54]
	jhi	l_5a14                             	| [$5a4c: bhi    $5a14]
	OP_R_ON_DP_ADDRESS	move,0x4e,d0         | [$5a4e: lda    $4e]
	OP_R_ON_DP_ADDRESS	cmp,0x52,d0          | [$5a50: cmpa   $52]
	jhi	l_5a14                             	| [$5a52: bhi    $5a14]
l_5a54:
	GET_REG_ADDRESS	0x20,d2                	| [$5a54: dec    $20,x]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_5a84                             	| [$5a57: beq    $5a84]
	move.w	#0x304c,d4                      	| [$5a59: ldu    #$304c]
	jbsr	l_5aa3                            	| [$5a5c: bsr    $5aa3]
	move.w	#0x3054,d4                      	| [$5a5e: ldu    #$3054]
	jbsr	l_5aa3                            	| [$5a61: bsr    $5aa3]
	move.w	#0x304c,d4                      	| [$5a63: ldu    #$304c]
	OP_R_ON_DP_ADDRESS	move,0x57,d0         | [$5a66: lda    $57]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5a68: sta    $48]
	jbsr	l_50dd                            	| [$5a6a: jsr    $50dd]
	OP_R_ON_DP_ADDRESS	move,0x56,d0         | [$5a6d: lda    $56]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5a6f: sta    $48]
	jbsr	l_510f                            	| [$5a71: jsr    $510f]
	OP_R_ON_DP_ADDRESS	move,0x55,d0         | [$5a74: lda    $55]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5a76: sta    $48]
	jbsr	l_5120                            	| [$5a78: jsr    $5120]
	OP_R_ON_DP_ADDRESS	move,0x54,d0         | [$5a7b: lda    $54]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5a7d: sta    $48]
	jbsr	l_5131                            	| [$5a7f: jsr    $5131]
	jra	l_5a89                             	| [$5a82: bra    $5a89]
l_5a84:
	move.w	#0x304c,d4                      	| [$5a84: ldu    #$304c]
	jbsr	l_5aa3                            	| [$5a87: bsr    $5aa3]
l_5a89:
	GET_REG_ADDRESS	0,d4                   	| [$5a89: lda    ,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x21,d2                	| [$5a8b: sta    $21,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$5a8e: lda    $1,u]
	move.b	(a0),d0                         	| [...]
                                         | [$5a90: asla]
                                         | [$5a91: asla]
                                         | [$5a92: asla]
	asl.b	#4,d0                            	| [$5a93: asla]
	GET_REG_ADDRESS	0x2,d4                 	| [$5a94: ora    $2,u]
	or.b	(a0),d0                           	| [...]
	GET_REG_ADDRESS	0x22,d2                	| [$5a96: sta    $22,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$5a99: lda    $3,u]
	move.b	(a0),d0                         	| [...]
                                         | [$5a9b: asla]
                                         | [$5a9c: asla]
                                         | [$5a9d: asla]
	asl.b	#4,d0                            	| [$5a9e: asla]
	GET_REG_ADDRESS	0x23,d2                	| [$5a9f: sta    $23,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$5aa2: rts]

l_5aa3:
	GET_REG_ADDRESS	0x2,d4                 	| [$5aa3: lda    $2,u]
	move.b	(a0),d0                         	| [...]
                                         | [$5aa5: lsra]
                                         | [$5aa6: lsra]
                                         | [$5aa7: lsra]
	lsr.b	#4,d0                            	| [$5aa8: lsra]
	GET_REG_ADDRESS	0x3,d4                 	| [$5aa9: sta    $3,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$5aab: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$5aad: anda   #$0f]
	GET_REG_ADDRESS	0x2,d4                 	| [$5aaf: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$5ab1: lsr    $1,u]
	move.b	(a0),d6	| [$5ab1: lsr    $1,u]
	lsr.b	#1,d6                          	| [$5ab1: lsr    $1,u]
	move.b	d6,(a0)	| [$5ab1: lsr    $1,u]
	GET_REG_ADDRESS	0x1,d4                 	| [$5ab3: lsr    $1,u]
	move.b	(a0),d6	| [$5ab3: lsr    $1,u]
	lsr.b	#1,d6                          	| [$5ab3: lsr    $1,u]
	move.b	d6,(a0)	| [$5ab3: lsr    $1,u]
	GET_REG_ADDRESS	0x1,d4                 	| [$5ab5: lsr    $1,u]
	move.b	(a0),d6	| [$5ab5: lsr    $1,u]
	lsr.b	#1,d6                          	| [$5ab5: lsr    $1,u]
	move.b	d6,(a0)	| [$5ab5: lsr    $1,u]
	GET_REG_ADDRESS	0x1,d4                 	| [$5ab7: lsr    $1,u]
	move.b	(a0),d6	| [$5ab7: lsr    $1,u]
	lsr.b	#1,d6                          	| [$5ab7: lsr    $1,u]
	PUSH_SR
	move.b	d6,(a0)	| [$5ab7: lsr    $1,u]
	POP_SR
	rts                                    	| [$5ab9: rts]

l_5aba:
	movem.l	d2/d3/d4,-(sp)                 	| [$5aba: pshs   u,y,x]
	move.b	#0x06,d0                        	| [$5abc: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5abe: sta    $48]
	move.w	#0x3220,d2                      	| [$5ac0: ldx    #$3220]
l_5ac3:
	GET_REG_ADDRESS	0,d2                   	| [$5ac3: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$5ac5: cmpa   #$01]
	jne	l_5aed                             	| [$5ac7: bne    $5aed]
	GET_REG_ADDRESS	0x2,d2                 	| [$5ac9: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x4b,d0          | [$5acb: suba   $4b]
	GET_REG_ADDRESS	0x2,d2                 	| [$5acd: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$5acf: ldb    current_event_69]
	cmp.b	#0x02,d1                         	| [$5ad1: cmpb   #$02]
	jeq	l_5ae4                             	| [$5ad3: beq    $5ae4]
	cmp.b	#0x06,d1                         	| [$5ad5: cmpb   #$06]
	jeq	l_5aea                             	| [$5ad7: beq    $5aea]
	GET_REG_ADDRESS	0x10,d2                	| [$5ad9: cmpa   $10,x]
	cmp.b	(a0),d0                          	| [...]
	jls	l_5af7                             	| [$5adc: bls    $5af7]
	and.b	#0xf8,d0                         	| [$5ade: anda   #$f8]
	cmp.b	#0xf8,d0                         	| [$5ae0: cmpa   #$f8]
	jeq	l_5af7                             	| [$5ae2: beq    $5af7]
l_5ae4:
	GET_REG_ADDRESS	0xd,d2                 	| [$5ae4: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$5ae6: anda   #$10]
	jne	l_5aed                             	| [$5ae8: bne    $5aed]
l_5aea:
	JSR_0E_X |  [$5aea: jsr    [$0e,x]]
l_5aed:
	add.w	#0x20,d2                         	| [$5aed: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5af0: dec    $48]
	jne	l_5ac3                             	| [$5af2: bne    $5ac3]
	movem.l	(sp)+,d2/d3/d4                 	| [$5af4: puls   x,y,u]
	rts                                    	| [$5af6: rts]

l_5af7:
	GET_REG_ADDRESS	0xd,d2                 	| [$5af7: ldb    $d,x]
	move.b	(a0),d1                         	| [...]
	and.b	#0x20,d1                         	| [$5af9: andb   #$20]
	jne	l_5b05                             	| [$5afb: bne    $5b05]
	GET_REG_ADDRESS	0,d2                   	| [$5afd: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$5aff: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$5b01: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jra	l_5ae4                             	| [$5b03: bra    $5ae4]
l_5b05:
	OP_W_ON_DP_ADDRESS	move,0x4f,d0         | [$5b05: sta    $4f]
	GET_REG_ADDRESS	0x1,d2                 	| [$5b07: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$5b09: clr    $2,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b0b: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$5b0d: anda   #$10]
	jne	l_5b14                             	| [$5b0f: bne    $5b14]
	JSR_0E_X |  [$5b11: jsr    [$0e,x]]
l_5b14:
	move.b	#0x5b,d0                        	| [$5b14: lda    #$5b]
	OP_R_ON_DP_ADDRESS	move,0x4f,d1         | [$5b16: ldb    $4f]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$5b18: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b1a: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	or.b	#0x30,d0                          	| [$5b1c: ora    #$30]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b1e: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_5aed                             	| [$5b20: bra    $5aed]
l_5b22:
	movem.l	d2/d3/d4,-(sp)                 	| [$5b22: pshs   u,y,x]
	move.b	#0x07,d0                        	| [$5b24: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5b26: sta    $48]
	move.w	#0x3220,d2                      	| [$5b28: ldx    #$3220]
l_5b2b:
	GET_REG_ADDRESS	0,d2                   	| [$5b2b: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$5b2d: cmpa   #$01]
	jne	l_5b46                             	| [$5b2f: bne    $5b46]
	GET_REG_ADDRESS	0x2,d2                 	| [$5b31: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0xc7,d0          | [$5b33: adda   $c7]
	jcs	l_5b60                             	| [$5b35: bcs    $5b60]
	cmp.b	#0xf0,d0                         	| [$5b37: cmpa   #$f0]
	jcc	l_5b50                             	| [$5b39: bcc    $5b50]
	GET_REG_ADDRESS	0x2,d2                 	| [$5b3b: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b3d: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	BIT	#0x10,d0                           	| [$5b3f: bita   #$10]
	jne	l_5b46                             	| [$5b41: bne    $5b46]
l_5b43:
	JSR_0E_X |  [$5b43: jsr    [$0e,x]]
l_5b46:
	add.w	#0x20,d2                         	| [$5b46: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5b49: dec    $48]
	jne	l_5b2b                             	| [$5b4b: bne    $5b2b]
	movem.l	(sp)+,d2/d3/d4                 	| [$5b4d: puls   x,y,u]
	rts                                    	| [$5b4f: rts]

l_5b50:
	GET_REG_ADDRESS	0x2,d2                 	| [$5b50: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b52: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x10,d0                         	| [$5b54: anda   #$10]
	jne	l_5b46                             	| [$5b56: bne    $5b46]
	GET_REG_ADDRESS	0,d2                   	| [$5b58: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$5b5a: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$5b5c: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jra	l_5b43                             	| [$5b5e: bra    $5b43]
l_5b60:
	GET_REG_ADDRESS	0x2,d2                 	| [$5b60: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b62: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x30,d0                         	| [$5b64: anda   #$30]
	cmp.b	#0x30,d0                         	| [$5b66: cmpa   #$30]
	jne	l_5b46                             	| [$5b68: bne    $5b46]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b6a: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$5b6c: anda   #$0f]
	GET_REG_ADDRESS	0xd,d2                 	| [$5b6e: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_5b43                             	| [$5b70: bra    $5b43]
l_5b72:
	moveq	#0,d1                            	| [$5b72: clrb]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$5b73: lda    [$03,x]] [video_address]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x45,d0                         	| [$5b76: cmpa   #$45]
	jne	l_5b7e                             	| [$5b78: bne    $5b7e]
	jbsr	l_5b7f                            	| [$5b7a: bsr    $5b7f]
	move.b	#0x01,d1                        	| [$5b7c: ldb    #$01]
l_5b7e:
	rts                                    	| [$5b7e: rts]

l_5b7f:
	moveq	#0,d0                            	| [$5b7f: clra]
	jbsr	queue_sound_event_4ead            	| [$5b80: jsr    queue_sound_event_4ead]
	move.b	#0x01,d0                        	| [$5b83: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$5b83: ldd    #$0103]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x65                    	| [$5b86: std    $65]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$5b88: clr    $bc]
	move.b	#0x5c,d0                        	| [$5b8a: lda    #$5c]
	OP_W_ON_DP_ADDRESS	move,0xa1,d0         | [$5b8c: sta    $a1]
	rts                                    	| [$5b8e: rts]

l_5b8f:
	GET_REG_ADDRESS	0,d2                   	| [$5b8f: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_5ba4                             	| [$5b91: bne    $5ba4]
	move.w	#0xd493,d4                      	| [$5b93: ldu    #$d493]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5b96: lda    current_event_69]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$5b98: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$5b9a: cmpa   [$03,x]] [video_address]
	cmp.b	(a0),d0                          	| [...]
	jne	l_5ba4                             	| [$5b9d: bne    $5ba4]
	GET_REG_ADDRESS	0,d2                   	| [$5b9f: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_8387                            	| [$5ba1: jsr    $8387]
l_5ba4:
	rts                                    	| [$5ba4: rts]

l_5ba5:
	GET_REG_ADDRESS	0,d2                   	| [$5ba5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_5bbf                             	| [$5ba7: bne    $5bbf]
	GET_REG_INDIRECT_ADDRESS	0x03,d2       	| [$5ba9: lda    [$03,x]]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x5f,d0                         	| [$5bac: cmpa   #$5f]
	jne	l_5bbf                             	| [$5bae: bne    $5bbf]
	GET_REG_ADDRESS	0,d2                   	| [$5bb0: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$5bb2: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1b,d2                	| [$5bb4: suba   $1b,x]
	sub.b	(a0),d0                          	| [...]
	add.b	#0x08,d0                         	| [$5bb7: adda   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$5bb9: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x10,d0                        	| [$5bbb: lda    #$10]
	GET_REG_ADDRESS	0xd,d2                 	| [$5bbd: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
l_5bbf:
	rts                                    	| [$5bbf: rts]

l_5bc0:
	jbsr	l_4f8a                            	| [$5bc0: jsr    $4f8a]
	OP_R_ON_DP_ADDRESS	move,0x6b,d1         | [$5bc3: ldb    $6b]
	jeq	l_5bd0                             	| [$5bc5: beq    $5bd0]
	GET_REG_ADDRESS	0xd,d2                 	| [$5bc7: tst    $d,x]
	tst.b	(a0)                             	| [...]
	jne	l_5bd0                             	| [$5bc9: bne    $5bd0]
	GET_REG_ADDRESS	0x58,d2                	| [$5bcb: tst    $58,x]
	tst.b	(a0)                             	| [...]
	jne	l_5c26                             	| [$5bce: bne    $5c26]
l_5bd0:
	GET_REG_ADDRESS	0,d4                   	| [$5bd0: lda    ,u]
	move.b	(a0),d0                         	| [...]
	BIT	#0x02,d0                           	| [$5bd2: bita   #$02]
	jne	l_5c26                             	| [$5bd4: bne    $5c26]
	and.b	#0x01,d0                         	| [$5bd6: anda   #$01]
	jeq	l_5bea                             	| [$5bd8: beq    $5bea]
	GET_REG_ADDRESS	0x1,d4                 	| [$5bda: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$5bdc: anda   #$01]
	jeq	l_5bfe                             	| [$5bde: beq    $5bfe]
	GET_REG_ADDRESS	0x2,d4                 	| [$5be0: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$5be2: anda   #$01]
	jne	l_5bfe                             	| [$5be4: bne    $5bfe]
	jbsr	l_5c2b                            	| [$5be6: bsr    $5c2b]
	jra	l_5c28                             	| [$5be8: bra    $5c28]
l_5bea:
	GET_REG_ADDRESS	0x1,d4                 	| [$5bea: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$5bec: anda   #$01]
	jeq	l_5bfe                             	| [$5bee: beq    $5bfe]
	GET_REG_ADDRESS	0x2,d4                 	| [$5bf0: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x09,d0                         	| [$5bf2: anda   #$09] original ANDA   #$01
	jne	l_5bfe                             	| [$5bf4: bne    $5bfe]
	jbsr	l_5c3b                            	| [$5bf6: bsr    $5c3b]
	OP_1_ON_DP_ADDRESS	tst,0x48             | [$5bf8: tst    $48]
	jeq	l_5bfe                             	| [$5bfa: beq    $5bfe]
	jra	l_5c28                             	| [$5bfc: bra    $5c28]
l_5bfe:
	GET_REG_ADDRESS	0,d4                   	| [$5bfe: lda    ,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$5c00: anda   #$04]
	jeq	l_5c14                             	| [$5c02: beq    $5c14]
	GET_REG_ADDRESS	0x1,d4                 	| [$5c04: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$5c06: anda   #$04]
	jeq	l_5c26                             	| [$5c08: beq    $5c26]
	GET_REG_ADDRESS	0x2,d4                 	| [$5c0a: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$5c0c: anda   #$04]
	jne	l_5c26                             	| [$5c0e: bne    $5c26]
	jbsr	l_5c2b                            	| [$5c10: bsr    $5c2b]
	jra	l_5c28                             	| [$5c12: bra    $5c28]
l_5c14:
	GET_REG_ADDRESS	0x1,d4                 	| [$5c14: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$5c16: anda   #$04]
	jeq	l_5c26                             	| [$5c18: beq    $5c26]
	GET_REG_ADDRESS	0x2,d4                 	| [$5c1a: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x04,d0                         	| [$5c1c: anda   #$04]
	jne	l_5c26                             	| [$5c1e: bne    $5c26]
	jbsr	l_5c3b                            	| [$5c20: bsr    $5c3b]
	OP_1_ON_DP_ADDRESS	tst,0x48             | [$5c22: tst    $48]
	jne	l_5c28                             	| [$5c24: bne    $5c28]
l_5c26:
	moveq	#0,d1                            	| [$5c26: clrb]
	rts                                    	| [$5c27: rts]

l_5c28:
	move.b	#0x01,d1                        	| [$5c28: ldb    #$01]
	rts                                    	| [$5c2a: rts]

l_5c2b:
	move.w	#0x34f8,d4                      	| [$5c2b: ldu    #$34f8]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5c2e: lda    $19]
	and.l	#0xFF,d0                         	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d0,d4         	| [$5c30: inc    a,u]
	addq.b	#1,(a0)                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$5c32: ldb    a,u]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x06,d1                         	| [$5c34: cmpb   #$06]
	jne	l_5c3a                             	| [$5c36: bne    $5c3a]
	and.l	#0xFF,d0                         	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d0,d4         	| [$5c38: dec    a,u]
	subq.b	#1,(a0)                         	| [...]
l_5c3a:
	rts                                    	| [$5c3a: rts]

l_5c3b:
	move.w	#0x34f8,d4                      	| [$5c3b: ldu    #$34f8]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$5c3e: clr    $48]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$5c40: lda    $19]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$5c42: ldb    a,u]
	move.b	(a0),d1                         	| [...]
	jeq	l_5c4c                             	| [$5c44: beq    $5c4c]
	and.l	#0xFF,d0                         	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d0,d4         	| [$5c46: dec    a,u]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_5c4c                             	| [$5c48: beq    $5c4c]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$5c4a: inc    $48]
l_5c4c:
	rts                                    	| [$5c4c: rts]

l_5c4d:
	move.w	#0xd499,d3                      	| [$5c4d: ldy    #$d499]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5c51: lda    current_event_69]
	asl.b	#1,d0                            	| [$5c53: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$5c54: ldy    a,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	move.w	#0x25bf,d4                      	| [$5c57: ldu    #$25bf]
	GET_DP_ADDRESS	0xd1                    	| [$5c5a: stu    $d1]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.w	#0x2580,d4                      	| [$5c5c: ldu    #$2580]
	GET_DP_ADDRESS	0xb4                    	| [$5c5f: stu    $b4]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$5c61: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$5c61: ldd    ,y++]
	GET_DP_ADDRESS	0xb8                    	| [$5c63: std    $b8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xce,d1         | [$5c65: stb    $ce]
	OP_R_ON_DP_ADDRESS	move,0x10,d0         | [$5c67: lda    $10]
	and.b	#0x20,d0                         	| [$5c69: anda   #$20]
	jne	l_5c79                             	| [$5c6b: bne    $5c79]
	OP_R_ON_DP_ADDRESS	move,0xb8,d0         | [$5c6d: lda    $b8]
	BIT	#0x20,d0                           	| [$5c6f: bita   #$20]
	jeq	l_5c79                             	| [$5c71: beq    $5c79]
	and.b	#0xdf,d0                         	| [$5c73: anda   #$df]
	or.b	#0x40,d0                          	| [$5c75: ora    #$40]
	OP_W_ON_DP_ADDRESS	move,0xb8,d0         | [$5c77: sta    $b8]
l_5c79:
	jbsr	l_5c85                            	| [$5c79: bsr    $5c85]
	cmp.w	#0x25bf,d4                       	| [$5c7b: cmpu   #$25bf]
	jne	l_5c79                             	| [$5c7f: bne    $5c79]
	GET_DP_ADDRESS	0xb6                    	| [$5c81: sty    $b6]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	rts                                    	| [$5c84: rts]

l_5c85:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5c85: lda    current_event_69]
	tst.b	d0                               	| [$5c87: cmpa   #$00]
	jeq	l_5cbd                             	| [$5c89: beq    $5cbd]
	cmp.b	#0x02,d0                         	| [$5c8b: cmpa   #$02]
	jeq	l_5cbd                             	| [$5c8d: beq    $5cbd]
	cmp.b	#0x06,d0                         	| [$5c8f: cmpa   #$06]
	jeq	l_5ce3                             	| [$5c91: beq    $5ce3]
	cmp.b	#0x04,d0                         	| [$5c93: cmpa   #$04]
	jeq	l_5ce3                             	| [$5c95: beq    $5ce3]
l_5c97:
	move.b	#0x07,d0                        	| [$5c97: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5c99: sta    $4a]
l_5c9b:
	GET_REG_ADDRESS	0,d3                   	| [$5c9b: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5c9d: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,0xb8,d0         | [$5c9f: lda    $b8]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5ca1: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5ca5: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5ca8: dec    $4a]
	jne	l_5c9b                             	| [$5caa: bne    $5c9b]
	subq.w	#0x7,d3                         	| [$5cac: leay   -$7,y]
	OP_W_ON_DP_ADDRESS	subq,0xb9,#1         | [$5cae: dec    $b9]
	jne	l_5cb8                             	| [$5cb0: bne    $5cb8]
	addq.w	#0x7,d3                         	| [$5cb2: leay   $7,y]
	GET_REG_ADDRESS	0,d3                   	| [$5cb4: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xb9,d1         | [$5cb6: stb    $b9]
l_5cb8:
	add.w	#0x01c1,d4                       	| [$5cb8: leau   $01c1,u]
	rts                                    	| [$5cbc: rts]

l_5cbd:
	move.b	#0x05,d0                        	| [$5cbd: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5cbf: sta    $4a]
l_5cc1:
	GET_REG_ADDRESS	0,d3                   	| [$5cc1: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5cc3: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,0xb8,d0         | [$5cc5: lda    $b8]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5cc7: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5ccb: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5cce: dec    $4a]
	jne	l_5cc1                             	| [$5cd0: bne    $5cc1]
	subq.w	#0x5,d3                         	| [$5cd2: leay   -$5,y]
	OP_W_ON_DP_ADDRESS	subq,0xb9,#1         | [$5cd4: dec    $b9]
	jne	l_5cde                             	| [$5cd6: bne    $5cde]
	addq.w	#0x5,d3                         	| [$5cd8: leay   $5,y]
	GET_REG_ADDRESS	0,d3                   	| [$5cda: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xb9,d1         | [$5cdc: stb    $b9]
l_5cde:
	add.w	#0x0141,d4                       	| [$5cde: leau   $0141,u]
	rts                                    	| [$5ce2: rts]

l_5ce3:
	move.b	#0x08,d0                        	| [$5ce3: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5ce5: sta    $4a]
l_5ce7:
	GET_REG_ADDRESS	0,d3                   	| [$5ce7: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5ce9: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,0xb8,d0         | [$5ceb: lda    $b8]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5ced: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5cf1: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5cf4: dec    $4a]
	jne	l_5ce7                             	| [$5cf6: bne    $5ce7]
	sub.w	#0x8,d3                          	| [$5cf8: leay   -$8,y]
	OP_W_ON_DP_ADDRESS	subq,0xb9,#1         | [$5cfa: dec    $b9]
	jne	l_5d04                             	| [$5cfc: bne    $5d04]
	add.w	#0x8,d3                          	| [$5cfe: leay   $8,y]
	GET_REG_ADDRESS	0,d3                   	| [$5d00: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xb9,d1         | [$5d02: stb    $b9]
l_5d04:
	add.w	#0x0201,d4                       	| [$5d04: leau   $0201,u]
	rts                                    	| [$5d08: rts]

l_5d09:
	move.b	#0x00,d0                        	| [$5d09: lda    #$00]
	OP_W_ON_DP_ADDRESS	move,current_event_69,d0| [$5d0b: sta    current_event_69]
	move.b	#0x01,d0                        	| [$5d0d: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$5d0f: sta    $65]
l_5d11:
	move.b	#0x02,d0                        	| [$5d11: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5d13: sta    $4a]
	move.w	#0xe1b0,d2                      	| [$5d15: ldx    #$e1b0]
	OP_1_ON_DP_ADDRESS	tst,0x65             | [$5d18: tst    $65]
	jeq	l_5d1f                             	| [$5d1a: beq    $5d1f]
	move.w	#0xe261,d2                      	| [$5d1c: ldx    #$e261]
l_5d1f:
	move.w	#0x21c0,d4                      	| [$5d1f: ldu    #$21c0]
l_5d22:
	move.b	#0x20,d0                        	| [$5d22: lda    #$20]
	OP_W_ON_DP_ADDRESS	move,0x4b,d0         | [$5d24: sta    $4b]
	GET_REG_ADDRESS	0,d2                   	| [$5d26: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$5d26: ldd    ,x++]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5d28: stb    $49]
l_5d2a:
	move.b	#0x06,d1                        	| [$5d2a: ldb    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$5d2c: stb    $48]
l_5d2e:
	GET_REG_ADDRESS	0,d2                   	| [$5d2e: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5d30: stb    ,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5d32: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5d36: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5d39: dec    $48]
	jne	l_5d2e                             	| [$5d3b: bne    $5d2e]
	subq.w	#0x6,d2                         	| [$5d3d: leax   -$6,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$5d3f: dec    $49]
	jne	l_5d49                             	| [$5d41: bne    $5d49]
	addq.w	#0x6,d2                         	| [$5d43: leax   $6,x]
	GET_REG_ADDRESS	0,d2                   	| [$5d45: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5d47: stb    $49]
l_5d49:
	add.w	#0x0181,d4                       	| [$5d49: leau   $0181,u]
	OP_W_ON_DP_ADDRESS	subq,0x4b,#1         | [$5d4d: dec    $4b]
	jne	l_5d2a                             	| [$5d4f: bne    $5d2a]
	move.w	#0xe23d,d2                      	| [$5d51: ldx    #$e23d]
	OP_1_ON_DP_ADDRESS	tst,0x65             | [$5d54: tst    $65]
	jeq	l_5d5b                             	| [$5d56: beq    $5d5b]
	move.w	#0xe269,d2                      	| [$5d58: ldx    #$e269]
l_5d5b:
	move.w	#0x2740,d4                      	| [$5d5b: ldu    #$2740]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5d5e: dec    $4a]
	jne	l_5d22                             	| [$5d60: bne    $5d22]
	rts                                    	| [$5d62: rts]

l_5d63:
	move.w	#0xe06f,d2                      	| [$5d63: ldx    #$e06f]
	move.w	#0x2400,d4                      	| [$5d66: ldu    #$2400]
	GET_REG_ADDRESS	0,d2                   	| [$5d69: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$5d69: ldd    ,x++]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5d6b: stb    $49]
	OP_R_ON_DP_ADDRESS	move,0x10,d1         | [$5d6d: ldb    $10]
	and.b	#0x20,d1                         	| [$5d6f: andb   #$20]
	jne	l_5d7b                             	| [$5d71: bne    $5d7b]
	BIT	#0x20,d0                           	| [$5d73: bita   #$20]
	jeq	l_5d7b                             	| [$5d75: beq    $5d7b]
	and.b	#0xdf,d0                         	| [$5d77: anda   #$df]
	or.b	#0x40,d0                          	| [$5d79: ora    #$40]
l_5d7b:
	move.b	#0x04,d1                        	| [$5d7b: ldb    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$5d7d: stb    $48]
l_5d7f:
	GET_REG_ADDRESS	0,d2                   	| [$5d7f: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5d81: stb    ,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5d83: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5d87: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5d8a: dec    $48]
	jne	l_5d7f                             	| [$5d8c: bne    $5d7f]
	subq.w	#0x4,d2                         	| [$5d8e: leax   -$4,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$5d90: dec    $49]
	jne	l_5d9a                             	| [$5d92: bne    $5d9a]
	addq.w	#0x4,d2                         	| [$5d94: leax   $4,x]
	GET_REG_ADDRESS	0,d2                   	| [$5d96: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5d98: stb    $49]
l_5d9a:
	add.w	#0x0101,d4                       	| [$5d9a: leau   $0101,u]
	cmp.w	#0x2440,d4                       	| [$5d9e: cmpu   #$2440]
	jne	l_5d7b                             	| [$5da2: bne    $5d7b]
	rts                                    	| [$5da4: rts]

l_5da5:
	move.w	#0xd4c3,d2                      	| [$5da5: ldx    #$d4c3]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5da8: lda    current_event_69]
	asl.b	#1,d0                            	| [$5daa: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	move.w	d2,d3                           	| [$5dab: leay   a,x]
	add.w	d6,d3                            	| [$5dab: leay   a,x]
	GET_REG_ADDRESS	0,d3                   	| [$5dad: ldx    ,y]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5daf: lda    current_event_69]
	cmp.b	#0x06,d0                         	| [$5db1: cmpa   #$06]
	jeq	l_5dc0                             	| [$5db3: beq    $5dc0]
	cmp.b	#0x04,d0                         	| [$5db5: cmpa   #$04]
	jeq	l_5dc0                             	| [$5db7: beq    $5dc0]
	move.w	#0x23c0,d4                      	| [$5db9: ldu    #$23c0]
	jbsr	l_5e26                            	| [$5dbc: bsr    $5e26]
	GET_REG_ADDRESS	0xe,d3                 	| [$5dbe: ldx    $e,y]
	MOVE_W_TO_REG	a0,d2                         	| [...]
l_5dc0:
	move.w	#0x2380,d4                      	| [$5dc0: ldu    #$2380]
	GET_REG_ADDRESS	0,d2                   	| [$5dc3: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$5dc3: ldd    ,x++]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5dc5: stb    $49]
	OP_R_ON_DP_ADDRESS	move,0x10,d1         | [$5dc7: ldb    $10]
	and.b	#0x20,d1                         	| [$5dc9: andb   #$20]
	jne	l_5dd5                             	| [$5dcb: bne    $5dd5]
	BIT	#0x20,d0                           	| [$5dcd: bita   #$20]
	jeq	l_5dd5                             	| [$5dcf: beq    $5dd5]
	and.b	#0xdf,d0                         	| [$5dd1: anda   #$df]
	or.b	#0x40,d0                          	| [$5dd3: ora    #$40]
l_5dd5:
	move.b	#0x02,d1                        	| [$5dd5: ldb    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$5dd7: stb    $48]
l_5dd9:
	GET_REG_ADDRESS	0,d2                   	| [$5dd9: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5ddb: stb    ,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5ddd: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5de1: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5de4: dec    $48]
	jne	l_5dd9                             	| [$5de6: bne    $5dd9]
	subq.w	#0x2,d2                         	| [$5de8: leax   -$2,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$5dea: dec    $49]
	jne	l_5df4                             	| [$5dec: bne    $5df4]
	addq.w	#0x2,d2                         	| [$5dee: leax   $2,x]
	GET_REG_ADDRESS	0,d2                   	| [$5df0: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5df2: stb    $49]
l_5df4:
	add.w	#0x0081,d4                       	| [$5df4: leau   $0081,u]
	cmp.w	#0x23c0,d4                       	| [$5df8: cmpu   #$23c0]
	jne	l_5dd5                             	| [$5dfc: bne    $5dd5]
	rts                                    	| [$5dfe: rts]

l_5dff:
	move.b	#0x01,d0                        	| [$5dff: lda    #$01]
	jra	l_5e05                             	| [$5e01: bra    $5e05]
l_5e03:
	move.b	#0x02,d0                        	| [$5e03: lda    #$02]
l_5e05:
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5e05: sta    $4a]
	move.w	#0xd4b5,d2                      	| [$5e07: ldx    #$d4b5]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5e0a: lda    current_event_69]
	asl.b	#1,d0                            	| [$5e0c: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$5e0d: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0x25c0,d4                      	| [$5e0f: ldu    #$25c0]
	OP_1_ON_DP_ADDRESS	tst,0x65             | [$5e12: tst    $65]
	jeq	l_5e19                             	| [$5e14: beq    $5e19]
	move.w	#0xe332,d2                      	| [$5e16: ldx    #$e332]
l_5e19:
	jbsr	l_5e26                            	| [$5e19: bsr    $5e26]
	move.w	#0xe06c,d2                      	| [$5e1b: ldx    #$e06c]
	move.w	#0x2440,d4                      	| [$5e1e: ldu    #$2440]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5e21: dec    $4a]
	jne	l_5e19                             	| [$5e23: bne    $5e19]
	rts                                    	| [$5e25: rts]

l_5e26:
	move.b	#0x40,d0                        	| [$5e26: lda    #$40]
	OP_W_ON_DP_ADDRESS	move,0x4b,d0         | [$5e28: sta    $4b]
	GET_REG_ADDRESS	0,d2                   	| [$5e2a: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$5e2a: ldd    ,x++]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5e2c: stb    $49]
	OP_R_ON_DP_ADDRESS	move,0x10,d1         | [$5e2e: ldb    $10]
	and.b	#0x20,d1                         	| [$5e30: andb   #$20]
	jne	l_5e3c                             	| [$5e32: bne    $5e3c]
	BIT	#0x20,d0                           	| [$5e34: bita   #$20]
	jeq	l_5e3c                             	| [$5e36: beq    $5e3c]
	and.b	#0xdf,d0                         	| [$5e38: anda   #$df]
	or.b	#0x40,d0                          	| [$5e3a: ora    #$40]
l_5e3c:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5e3c: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d2                   	| [$5e40: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5e42: stb    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$5e44: dec    $49]
	jne	l_5e4e                             	| [$5e46: bne    $5e4e]
	addq.w	#0x1,d2                         	| [$5e48: leax   $1,x]
	GET_REG_ADDRESS	0,d2                   	| [$5e4a: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$5e4c: stb    $49]
l_5e4e:
	OP_W_ON_DP_ADDRESS	subq,0x4b,#1         | [$5e4e: dec    $4b]
	jne	l_5e3c                             	| [$5e50: bne    $5e3c]
	rts                                    	| [$5e52: rts]

l_5e53:
	move.w	#0xd4a7,d2                      	| [$5e53: ldx    #$d4a7]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5e56: lda    current_event_69]
	asl.b	#1,d0                            	| [$5e58: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$5e59: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0x2300,d4                      	| [$5e5b: ldu    #$2300]
	GET_REG_ADDRESS	0,d2                   	| [$5e5e: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x10,d0         | [$5e60: lda    $10]
	and.b	#0x20,d0                         	| [$5e62: anda   #$20]
	jne	l_5e6e                             	| [$5e64: bne    $5e6e]
	BIT	#0x20,d1                           	| [$5e66: bitb   #$20]
	jeq	l_5e6e                             	| [$5e68: beq    $5e6e]
	and.b	#0xdf,d1                         	| [$5e6a: andb   #$df]
	or.b	#0x40,d1                          	| [$5e6c: orb    #$40]
l_5e6e:
	move.b	#0x05,d0                        	| [$5e6e: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5e70: sta    $48]
l_5e72:
	GET_REG_ADDRESS	0,d2                   	| [$5e72: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5e74: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5e76: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5e7a: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5e7d: dec    $48]
	jne	l_5e72                             	| [$5e7f: bne    $5e72]
	add.w	#0x0141,d4                       	| [$5e81: leau   $0141,u]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5e85: lda    current_event_69]
	cmp.b	#0x06,d0                         	| [$5e87: cmpa   #$06]
	jeq	l_5e8f                             	| [$5e89: beq    $5e8f]
	cmp.b	#0x04,d0                         	| [$5e8b: cmpa   #$04]
	jne	l_5e95                             	| [$5e8d: bne    $5e95]
l_5e8f:
	move.b	#0x0e,d0                        	| [$5e8f: lda    #$0e]
	GET_REG_UNCHECKED_ADDRESS	0x07ff,d4              	| [$5e91: sta    $07ff,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_5e95:
	cmp.w	#0x2340,d4                       	| [$5e95: cmpu   #$2340]
	jne	l_5e6e                             	| [$5e99: bne    $5e6e]
	rts                                    	| [$5e9b: rts]

l_5e9c:
	OP_R_ON_DP_ADDRESS	move,0xba,d0         | [$5e9c: lda    $ba]
	and.b	#0x07,d0                         	| [$5e9e: anda   #$07]
	jne	l_5edf                             	| [$5ea0: bne    $5edf]
	GET_DP_ADDRESS	0xd1                    	| [$5ea2: ldu    $d1]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_DP_ADDRESS	0xb6                    	| [$5ea4: ldy    $b6]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_5c85                            	| [$5ea7: jsr    $5c85]
	cmp.w	#0x25c0,d4                       	| [$5eaa: cmpu   #$25c0]
	jne	l_5eb3                             	| [$5eae: bne    $5eb3]
	move.w	#0x2580,d4                      	| [$5eb0: ldu    #$2580]
l_5eb3:
	GET_DP_ADDRESS	0xd1                    	| [$5eb3: stu    $d1]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_DP_ADDRESS	0xb6                    	| [$5eb5: sty    $b6]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	addq.w	#0x1,d4                         	| [$5eb8: leau   $1,u]
	cmp.w	#0x25c0,d4                       	| [$5eba: cmpu   #$25c0]
	jne	l_5ec3                             	| [$5ebe: bne    $5ec3]
	move.w	#0x2580,d4                      	| [$5ec0: ldu    #$2580]
l_5ec3:
	GET_DP_ADDRESS	0xb4                    	| [$5ec3: stu    $b4]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5ec5: lda    current_event_69]
	tst.b	d0                               	| [$5ec7: cmpa   #$00]
	jne	l_5edf                             	| [$5ec9: bne    $5edf]
	OP_W_ON_DP_ADDRESS	addq,0xcf,#1         | [$5ecb: inc    $cf]
	OP_R_ON_DP_ADDRESS	move,0xcf,d0         | [$5ecd: lda    $cf]
	OP_R_ON_DP_ADDRESS	cmp,0xce,d0          | [$5ecf: cmpa   $ce]
	jne	l_5edf                             	| [$5ed1: bne    $5edf]
	GET_DP_ADDRESS	0xcc                    	| [$5ed3: ldu    $cc]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	addq.w	#0x6,d4                         	| [$5ed5: leau   $6,u]
	GET_REG_ADDRESS	-0x1,d4                	| [$5ed7: lda    -$1,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xce,d0         | [$5ed9: sta    $ce]
	OP_1_ON_DP_ADDRESS	clr,0xcf             | [$5edb: clr    $cf]
	GET_DP_ADDRESS	0xcc                    	| [$5edd: stu    $cc]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
l_5edf:
	rts                                    	| [$5edf: rts]

l_5ee0:
	OP_R_ON_DP_ADDRESS	move,0xc7,d0         | [$5ee0: lda    $c7]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$5ee2: sta    $48]
	move.w	#0xd439,d4                      	| [$5ee4: ldu    #$d439]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$5ee7: lda    current_event_69]
	asl.b	#1,d0                            	| [$5ee9: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$5eea: ldy    a,u]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_5eed:
	move.l	d3,-(sp)                        	| [$5eed: pshs   y]
	move.w	#0x36d8,d4                      	| [$5eef: ldu    #$36d8]
l_5ef2:
	OP_R_ON_DP_ADDRESS	move,0xba,d0         | [$5ef2: lda    $ba]
	GET_REG_ADDRESS	0,d3                   	| [$5ef4: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xff,d1                         	| [$5ef6: cmpb   #$ff]
	jeq	l_5f12                             	| [$5ef8: beq    $5f12]
	GET_REG_ADDRESS	-0x1,d3                	| [$5efa: anda   -$1,y]
	and.b	(a0),d0                          	| [...]
	jne	l_5f12                             	| [$5efc: bne    $5f12]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$5efe: lda    $02]
	jne	l_5f0c                             	| [$5f00: bne    $5f0c]
	GET_REG_ADDRESS	0,d4                   	| [$5f02: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jne	l_5f08                             	| [$5f04: bne    $5f08]
	GET_REG_ADDRESS	0x1,d4                 	| [$5f06: dec    $1,u]
	subq.b	#1,(a0)                         	| [...]
l_5f08:
	GET_REG_ADDRESS	0,d4                   	| [$5f08: dec    ,u]
	subq.b	#1,(a0)                         	| [...]
	jra	l_5f12                             	| [$5f0a: bra    $5f12]
l_5f0c:
	GET_REG_ADDRESS	0,d4                   	| [$5f0c: inc    ,u]
	addq.b	#1,(a0)                         	| [...]
	jne	l_5f12                             	| [$5f0e: bne    $5f12]
	GET_REG_ADDRESS	0x1,d4                 	| [$5f10: inc    $1,u]
	addq.b	#1,(a0)                         	| [...]
l_5f12:
	addq.w	#0x2,d4                         	| [$5f12: leau   $2,u]
	cmp.w	#0x36ee,d4                       	| [$5f14: cmpu   #$36ee]
	jne	l_5ef2                             	| [$5f18: bne    $5ef2]
	OP_W_ON_DP_ADDRESS	subq,0xba,#1         | [$5f1a: dec    $ba]
	jbsr	l_5f2b                            	| [$5f1c: bsr    $5f2b]
	movem.l	(sp)+,d3                       	| [$5f1e: puls   y]
	OP_R_ON_DP_ADDRESS	move,0xba,d0         | [$5f20: lda    $ba]
	cmp.b	#0x87,d0                         	| [$5f22: cmpa   #$87]
	jeq	l_5f2a                             	| [$5f24: beq    $5f2a]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$5f26: dec    $48]
	jne	l_5eed                             	| [$5f28: bne    $5eed]
l_5f2a:
	rts                                    	| [$5f2a: rts]

l_5f2b:
	OP_R_ON_DP_ADDRESS	move,0xba,d0         | [$5f2b: lda    $ba]
	and.b	#0x07,d0                         	| [$5f2d: anda   #$07]
	jne	l_5f6d                             	| [$5f2f: bne    $5f6d]
	GET_DP_ADDRESS	0xd1                    	| [$5f31: ldu    $d1]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_DP_ADDRESS	0xcc                    	| [$5f33: ldy    $cc]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xcf,d0         | [$5f36: lda    $cf]
	jeq	l_5f6e                             	| [$5f38: beq    $5f6e]
	move.b	#0x05,d0                        	| [$5f3a: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5f3c: sta    $4a]
l_5f3e:
	GET_REG_ADDRESS	0,d3                   	| [$5f3e: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5f40: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,0xb8,d0         | [$5f42: lda    $b8]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5f44: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5f48: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5f4b: dec    $4a]
	jne	l_5f3e                             	| [$5f4d: bne    $5f3e]
	subq.w	#0x5,d3                         	| [$5f4f: leay   -$5,y]
	OP_W_ON_DP_ADDRESS	subq,0xcf,#1         | [$5f51: dec    $cf]
	jne	l_5f5b                             	| [$5f53: bne    $5f5b]
	subq.w	#0x6,d3                         	| [$5f55: leay   -$6,y]
	GET_REG_ADDRESS	-0x1,d3                	| [$5f57: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xcf,d0         | [$5f59: sta    $cf]
l_5f5b:
	add.w	#0x013f,d4                       	| [$5f5b: leau   $013f,u]
l_5f5f:
	cmp.w	#0x257f,d4                       	| [$5f5f: cmpu   #$257f]
	jne	l_5f68                             	| [$5f63: bne    $5f68]
	move.w	#0x25bf,d4                      	| [$5f65: ldu    #$25bf]
l_5f68:
	GET_DP_ADDRESS	0xd1                    	| [$5f68: stu    $d1]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_DP_ADDRESS	0xcc                    	| [$5f6a: sty    $cc]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_5f6d:
	rts                                    	| [$5f6d: rts]

l_5f6e:
	subq.w	#0x6,d3                         	| [$5f6e: leay   -$6,y]
	move.b	#0x01,d0                        	| [$5f70: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcf,d0         | [$5f72: sta    $cf]
	jra	l_5f5f                             	| [$5f74: bra    $5f5f]
l_5f76:
	move.w	#0x30a0,d2                      	| [$5f76: ldx    #$30a0]
	move.b	#0x25,d0                        	| [$5f79: ldd    #$25ff]
	move.w	#0x25ff,d1                      	| [$5f79: ldd    #$25ff]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xd1                    	| [$5f7c: std    $d1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x25c0,d4                      	| [$5f7e: ldu    #$25c0]
	GET_DP_ADDRESS	0xb4                    	| [$5f81: stu    $b4]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x04,d0                        	| [$5f83: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$5f85: sta    $50]
l_5f87:
	move.w	#0xe335,d3                      	| [$5f87: ldy    #$e335]
	GET_REG_ADDRESS	0,d3                   	| [$5f8b: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$5f8b: ldd    ,y++]
	GET_REG_ADDRESS	0x18,d2                	| [$5f8d: std    $18,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_5f90:
	jbsr	l_5fba                            	| [$5f90: bsr    $5fba]
	GET_REG_ADDRESS	0x31,d2                	| [$5f92: cmpu   $31,x]
	CMP_W_TO_REG	a0,d4                          	| [...]
	jne	l_5f90                             	| [$5f96: bne    $5f90]
	GET_REG_ADDRESS	0x16,d2                	| [$5f98: sty    $16,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$5f9c: dec    $50]
	jne	l_5fa1                             	| [$5f9e: bne    $5fa1]
	rts                                    	| [$5fa0: rts]

l_5fa1:
	add.w	#0x60,d2                         	| [$5fa1: leax   $60,x]
	GET_REG_ADDRESS	-0x2f,d2               	| [$5fa4: ldu    -$2f,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	sub.w	#0x0100,d4                       	| [$5fa7: leau   -$0100,u]
	GET_REG_ADDRESS	0x31,d2                	| [$5fab: stu    $31,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	-0x4c,d2               	| [$5fae: ldu    -$4c,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	sub.w	#0x0100,d4                       	| [$5fb1: leau   -$0100,u]
	GET_REG_ADDRESS	0x14,d2                	| [$5fb5: stu    $14,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jra	l_5f87                             	| [$5fb8: bra    $5f87]
l_5fba:
	move.b	#0x04,d0                        	| [$5fba: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$5fbc: sta    $4a]
l_5fbe:
	GET_REG_ADDRESS	0,d3                   	| [$5fbe: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$5fc0: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0x18,d2                	| [$5fc2: lda    $18,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$5fc5: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$5fc9: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$5fcc: dec    $4a]
	jne	l_5fbe                             	| [$5fce: bne    $5fbe]
	subq.w	#0x4,d3                         	| [$5fd0: leay   -$4,y]
	GET_REG_ADDRESS	swimmer_19,d2                	| [$5fd2: dec    $19,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_5fde                             	| [$5fd5: bne    $5fde]
	addq.w	#0x4,d3                         	| [$5fd7: leay   $4,y]
	GET_REG_ADDRESS	0,d3                   	| [$5fd9: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	swimmer_19,d2                	| [$5fdb: sta    $19,x]
	move.b	d0,(a0)                         	| [...]
l_5fde:
	add.w	#0x0101,d4                       	| [$5fde: leau   $0101,u]
	rts                                    	| [$5fe2: rts]

l_5fe3:
	GET_REG_ADDRESS	screen_straight_1a,d2                	| [$5fe3: lda    $1a,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$5fe6: anda   #$07]
	jne	l_6010                             	| [$5fe8: bne    $6010]
	GET_REG_ADDRESS	0x31,d2                	| [$5fea: ldu    $31,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0x16,d2                	| [$5fed: ldy    $16,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_5fba                            	| [$5ff1: bsr    $5fba]
	GET_REG_ADDRESS	0x16,d2                	| [$5ff3: sty    $16,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	PUSH_SR
	move.w	d4,d1                           	| [$5ff7: tfr    u,d]
	ror.w	#8,d4                            	| [...]
	move.b	d4,d0                           	| [...] set MSB
	ror.w	#8,d4                            	| [...]
	POP_SR
	BIT	#0x3f,d1                           	| [$5ff9: bitb   #$3f]
	jne	l_6000                             	| [$5ffb: bne    $6000]
	MAKE_D                                 	| [...]
	sub.w	#0x0040,d1                       	| [$5ffd: subd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_6000:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x31,d2                	| [$6000: std    $31,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	add.w	#0x0001,d1                       	| [$6003: addd   #$0001]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	BIT	#0x3f,d1                           	| [$6006: bitb   #$3f]
	jne	l_600d                             	| [$6008: bne    $600d]
	MAKE_D                                 	| [...]
	sub.w	#0x0040,d1                       	| [$600a: subd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_600d:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x14,d2                	| [$600d: std    $14,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_6010:
	rts                                    	| [$6010: rts]

l_6011:
	GET_REG_ADDRESS	screen_straight_1a,d2                	| [$6011: lda    $1a,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$6014: anda   #$07]
	jne	l_6061                             	| [$6016: bne    $6061]
	GET_REG_ADDRESS	0x31,d2                	| [$6018: ldu    $31,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0x2c,d2                	| [$601b: ldy    $2c,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	move.b	#0x04,d0                        	| [$601f: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$6021: sta    $4a]
l_6023:
	GET_REG_ADDRESS	0,d3                   	| [$6023: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$6025: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0x18,d2                	| [$6027: lda    $18,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$602a: sta    $0800,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$602e: leau   -$40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$6031: dec    $4a]
	jne	l_6023                             	| [$6033: bne    $6023]
	subq.w	#0x4,d3                         	| [$6035: leay   -$4,y]
	GET_REG_ADDRESS	0x2f,d2                	| [$6037: dec    $2f,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_6043                             	| [$603a: bne    $6043]
	subq.w	#0x5,d3                         	| [$603c: leay   -$5,y]
	GET_REG_ADDRESS	-0x1,d3                	| [$603e: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2f,d2                	| [$6040: sta    $2f,x]
	move.b	d0,(a0)                         	| [...]
l_6043:
	add.w	#0x00ff,d4                       	| [$6043: leau   $00ff,u]
	PUSH_SR
	move.w	d4,d1                           	| [$6047: tfr    u,d]
	ror.w	#8,d4                            	| [...]
	move.b	d4,d0                           	| [...] set MSB
	ror.w	#8,d4                            	| [...]
	POP_SR
	OP_W_ON_DP_ADDRESS	move,0x54,d1         | [$6049: stb    $54]
	and.b	#0x3f,d1                         	| [$604b: andb   #$3f]
	cmp.b	#0x3f,d1                         	| [$604d: cmpb   #$3f]
	jne	l_6058                             	| [$604f: bne    $6058]
	OP_R_ON_DP_ADDRESS	move,0x54,d1         | [$6051: ldb    $54]
	MAKE_D                                 	| [...]
	add.w	#0x0040,d1                       	| [$6053: addd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jra	l_605a                             	| [$6056: bra    $605a]
l_6058:
	OP_R_ON_DP_ADDRESS	move,0x54,d1         | [$6058: ldb    $54]
l_605a:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x31,d2                	| [$605a: std    $31,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2c,d2                	| [$605d: sty    $2c,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_6061:
	rts                                    	| [$6061: rts]

l_6062:
	move.w	#0xe848,d3                      	| [$6062: ldy    #$e848]
	move.w	#0x2309,d4                      	| [$6066: ldu    #$2309]
	GET_DP_ADDRESS	0xb8                    	| [$6069: ldd    $b8]
	LOAD_D                                 	| [$6069: ldd    $b8]
	GET_DP_ADDRESS	0x65                    	| [$606b: std    $65]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$606d: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$606d: ldd    ,y++]
	GET_DP_ADDRESS	0xb8                    	| [$606f: std    $b8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_6071:
	jbsr	l_5cbd                            	| [$6071: jsr    $5cbd]
	cmp.w	#0x2317,d4                       	| [$6074: cmpu   #$2317]
	jne	l_6071                             	| [$6078: bne    $6071]
	GET_DP_ADDRESS	0x65                    	| [$607a: ldd    $65]
	LOAD_D                                 	| [$607a: ldd    $65]
	GET_DP_ADDRESS	0xb8                    	| [$607c: std    $b8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$607e: rts]

l_607f:
	move.w	#0xe85b,d3                      	| [$607f: ldy    #$e85b]
	move.w	#0x2481,d4                      	| [$6083: ldu    #$2481]
	GET_DP_ADDRESS	0xb8                    	| [$6086: ldd    $b8]
	LOAD_D                                 	| [$6086: ldd    $b8]
	GET_DP_ADDRESS	0x65                    	| [$6088: std    $65]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$608a: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$608a: ldd    ,y++]
	GET_DP_ADDRESS	0xb8                    	| [$608c: std    $b8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_608e:
	jbsr	l_5c97                            	| [$608e: jsr    $5c97]
	cmp.w	#0x248b,d4                       	| [$6091: cmpu   #$248b]
	jne	l_608e                             	| [$6095: bne    $608e]
	GET_DP_ADDRESS	0x65                    	| [$6097: ldd    $65]
	LOAD_D                                 	| [$6097: ldd    $65]
	GET_DP_ADDRESS	0xb8                    	| [$6099: std    $b8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$609b: rts]

triple_jump_609c:
	
	.ifndef	RELEASE
	move.w	#0xd4df,d2
	.endif
	lea	table_d4df,a2                  	| [$609c: ldx   #table_d4df]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$609f: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$60a1: asla]
	JMP_A_INDEXED	A2                   	| [$60a2: jra    [a,x]] [jump_table]

l_60a4:
	
	.ifndef	RELEASE
	move.w	#0xd4f3,d2
	.endif
	lea	table_d4f3,a2                  	| [$60a4: ldx   #table_d4f3]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$60a7: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$60a9: asla]
	JMP_A_INDEXED	A2                   	| [$60aa: jra    [a,x]] [jump_table]

l_60ac:
	move.w	#0x30a0,d2                      	| [$60ac: ldx    #$30a0]
	jbsr	l_82a7                            	| [$60af: jsr    $82a7]
	move.b	#0x25,d0                        	| [$60b2: ldd    #$259b]
	move.w	#0x259b,d1                      	| [$60b2: ldd    #$259b]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xe3                    	| [$60b5: std    $e3]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0xdf,d0                        	| [$60b7: ldd    #$df16]
	move.w	#0xdf16,d1                      	| [$60b7: ldd    #$df16]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xcc                    	| [$60ba: std    $cc]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x01,d0                        	| [$60bc: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xce,d0         | [$60be: sta    $ce]
	move.b	#0x0c,d0                        	| [$60c0: ldd    #$0c0a]
	move.w	#0x0c0a,d1                      	| [$60c0: ldd    #$0c0a]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$60c3: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x05,d0                        	| [$60c6: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0xe8,d0         | [$60c8: sta    $e8]
	move.b	#0x1e,d0                        	| [$60ca: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$60cc: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$60ce: inc    event_sub_state_2a]
	rts                                    	| [$60d0: rts]

l_60d1:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$60d1: dec    $2b]
	jne	l_60e9                             	| [$60d3: bne    $60e9]
	move.b	#0x27,d0                        	| [$60d5: lda    #$27]
	jbsr	queue_sound_event_4ead            	| [$60d7: jsr    queue_sound_event_4ead]
	move.b	#0x09,d0                        	| [$60da: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$60dc: sta    $c4]
	move.b	#0x10,d0                        	| [$60de: ldd    #$1066]
	move.w	#0x1066,d1                      	| [$60de: ldd    #$1066]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xf4                    	| [$60e1: std    $f4]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xf6             | [$60e3: clr    $f6]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$60e5: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$60e7: clr    event_sub_state_2a]
l_60e9:
	rts                                    	| [$60e9: rts]

l_60ea:
	jbsr	l_4fa1                            	| [$60ea: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$60ed: anda   #$05]
	jne	l_6115                             	| [$60ef: bne    $6115]
	jbsr	l_579f                            	| [$60f1: jsr    $579f]
	move.w	#0x34f1,d4                      	| [$60f4: ldu    #$34f1]
	GET_REG_ADDRESS	0x1,d4                 	| [$60f7: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0f,d0                         	| [$60f9: cmpa   #$0f]
	jeq	l_611d                             	| [$60fb: beq    $611d]
	GET_REG_ADDRESS	0,d4                   	| [$60fd: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jne	l_6114                             	| [$60ff: bne    $6114]
	GET_REG_ADDRESS	0x1,d4                 	| [$6101: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0e,d0                         	| [$6103: cmpa   #$0e]
	jeq	l_610f                             	| [$6105: beq    $610f]
	cmp.b	#0x0b,d0                         	| [$6107: cmpa   #$0b]
	jeq	l_610f                             	| [$6109: beq    $610f]
	cmp.b	#0x08,d0                         	| [$610b: cmpa   #$08]
	jne	l_6114                             	| [$610d: bne    $6114]
l_610f:
	move.b	#0x38,d0                        	| [$610f: lda    #$38]
	jbsr	l_4eb3                            	| [$6111: jsr    $4eb3]
l_6114:
	rts                                    	| [$6114: rts]

l_6115:
	move.b	#0xd9,d0                        	| [$6115: ldd    #$d99f]
	move.w	#0xd99f,d1                      	| [$6115: ldd    #$d99f]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xab                    	| [$6118: std    $ab]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$611a: inc    event_sub_state_28]
	rts                                    	| [$611c: rts]

l_611d:
	move.b	#0x08,d0                        	| [$611d: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$611f: sta    event_sub_state_28]
	move.b	#0x03,d0                        	| [$6121: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6123: sta    event_sub_state_2a]
	rts                                    	| [$6125: rts]

l_6126:
	move.w	#0x30a0,d2                      	| [$6126: ldx    #$30a0]
	jbsr	l_5982                            	| [$6129: jsr    $5982]
	jbsr	l_59b2                            	| [$612c: jsr    $59b2]
	jbsr	l_58bb                            	| [$612f: jsr    $58bb]
	move.b	#0x03,d0                        	| [$6132: lda    #$03]
	jbsr	queue_event_4e9a                  	| [$6134: jsr    queue_event_4e9a]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$6137: clr    $ca]
	jbsr	l_5035                            	| [$6139: jsr    $5035]
	jbsr	l_615a                            	| [$613c: bsr    $615a]
	move.w	#0x3220,d2                      	| [$613e: ldx    #$3220]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$6141: clr    $ca]
	jbsr	l_5035                            	| [$6143: jsr    $5035]
	jbsr	l_5b8f                            	| [$6146: jsr    $5b8f]
	OP_1_ON_DP_ADDRESS	tst,0xa0             | [$6149: tst    $a0]
	jeq	l_6150                             	| [$614b: beq    $6150]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$614d: inc    event_sub_state_28]
	rts                                    	| [$614f: rts]

l_6150:
	jbsr	l_c000                            	| [$6150: jsr    $c000]
	OP_R_ON_DP_ADDRESS	move,0x70,d0         | [$6153: lda    $70]
	cmp.b	#0x01,d0                         	| [$6155: cmpa   #$01]
	jeq	l_611d                             	| [$6157: beq    $611d]
	rts                                    	| [$6159: rts]

l_615a:
	OP_R_ON_DP_ADDRESS	move,0xe0,d0         | [$615a: lda    $e0]
	jne	l_6173                             	| [$615c: bne    $6173]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$615e: lda    [$03,x]] [video_address]
	move.b	(a0),d0                         	| [...]
l_6161:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$6161: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$6163: cmpb   #$06]
	jeq	l_616d                             	| [$6165: beq    $616d]
	cmp.b	#0x4b,d0                         	| [$6167: cmpa   #$4b]
	jne	l_6187                             	| [$6169: bne    $6187]
	jra	l_6171                             	| [$616b: bra    $6171]
l_616d:
	cmp.b	#0xaa,d0                         	| [$616d: cmpa   #$aa]
	jne	l_6187                             	| [$616f: bne    $6187]
l_6171:
	OP_W_ON_DP_ADDRESS	addq,0xe0,#1         | [$6171: inc    $e0]
l_6173:
	GET_REG_ADDRESS	0x7,d2                 	| [$6173: lda    $7,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$6175: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$6177: cmpb   #$06]
	jeq	l_6181                             	| [$6179: beq    $6181]
	cmp.b	#0x0f,d0                         	| [$617b: cmpa   #$0f]
	jne	l_6187                             	| [$617d: bne    $6187]
	jra	l_6185                             	| [$617f: bra    $6185]
l_6181:
	cmp.b	#0x0b,d0                         	| [$6181: cmpa   #$0b]
	jne	l_6187                             	| [$6183: bne    $6187]
l_6185:
	GET_REG_ADDRESS	0,d2                   	| [$6185: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
l_6187:
	rts                                    	| [$6187: rts]

l_6188:
	jbsr	l_c000                            	| [$6188: jsr    $c000]
	move.w	#0x30a0,d2                      	| [$618b: ldx    #$30a0]
	jbsr	l_59b2                            	| [$618e: jsr    $59b2]
	jbsr	l_58bb                            	| [$6191: jsr    $58bb]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$6194: clr    $ca]
	jbsr	l_5035                            	| [$6196: jsr    $5035]
	jbsr	l_7393                            	| [$6199: jsr    $7393]
	jbsr	l_5b72                            	| [$619c: jsr    $5b72]
	tst.b	d1                               	| [$619f: tstb]
	jne	l_6236                             	| [$61a0: lbne   $6236]
	move.w	#0x3220,d2                      	| [$61a4: ldx    #$3220]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$61a7: clr    $ca]
	jbsr	l_5035                            	| [$61a9: jsr    $5035]
	jbsr	l_5b8f                            	| [$61ac: jsr    $5b8f]
	move.w	#0x30a0,d2                      	| [$61af: ldx    #$30a0]
	jbsr	l_4fa1                            	| [$61b2: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$61b5: anda   #$02]
	jeq	l_6235                             	| [$61b7: beq    $6235]
	move.b	#0x0e,d0                        	| [$61b9: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$61bb: jsr    queue_sound_event_4ead]
	move.b	#swimmer_19,d0                        	| [$61be: lda    #$19]
	jbsr	queue_sound_event_4ead            	| [$61c0: jsr    queue_sound_event_4ead]
	move.b	#screen_straight_1a,d0                        	| [$61c3: lda    #$1a]
	jbsr	queue_sound_event_4ead            	| [$61c5: jsr    queue_sound_event_4ead]
	OP_W_ON_DP_ADDRESS	addq,0xfb,#1         | [$61c8: inc    $fb]
	jbsr	l_5145                            	| [$61ca: jsr    $5145]
	GET_DP_ADDRESS	0xec                    	| [$61cd: stu    $ec]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xbb,d0         | [$61cf: lda    $bb]
	OP_W_ON_DP_ADDRESS	move,0xee,d0         | [$61d1: sta    $ee]
	jbsr	l_7367                            	| [$61d3: jsr    $7367]
	jbsr	l_73df                            	| [$61d6: jsr    $73df]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$61d9: lda    $e8]
	cmp.b	#0x05,d0                         	| [$61db: cmpa   #$05]
	jcc	l_61e2                             	| [$61dd: bcc    $61e2]
	GET_ADDRESS	0x34e7                     	| [$61df: inc    $34e7]
	addq.b	#1,(a0)                         	| [...]
l_61e2:
	GET_DP_ADDRESS	speed_msb_b0            	| [$61e2: ldd    speed_msb_b0]
	LOAD_D                                 	| [$61e2: ldd    speed_msb_b0]
	sub.w	#0x0103,d1                       	| [$61e4: subd   #$0103]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcs	l_6209                             	| [$61e7: bcs    $6209]
	cmp.b	#0x02,d1                         	| [$61e9: cmpb   #$02]
	jcs	l_61ef                             	| [$61eb: bcs    $61ef]
	move.b	#0x02,d1                        	| [$61ed: ldb    #$02]
l_61ef:
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$61ef: stb    $48]
	OP_R_ON_DP_ADDRESS	move,0xb2,d0         | [$61f1: lda    $b2]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$61f3: sta    $49]
	move.b	#0x01,d0                        	| [$61f5: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$61f5: ldd    #$0103]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$61f8: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$61fa: lda    $48]
                                         | [$61fc: asla]
	asl.b	#2,d0                            	| [$61fd: asla]
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$61fe: ldb    $49]
	cmp.b	#0x05,d1                         	| [$6200: cmpb   #$05]
	jcs	l_6205                             	| [$6202: bcs    $6205]
	addq.b	#1,d0                           	| [$6204: inca]
l_6205:
	OP_W_ON_DP_ADDRESS	move,0xb2,d0         | [$6205: sta    $b2]
	OP_1_ON_DP_ADDRESS	clr,0xb3             | [$6207: clr    $b3]
l_6209:
	GET_DP_ADDRESS	speed_msb_b0            	| [$6209: ldd    speed_msb_b0]
	LOAD_D                                 	| [$6209: ldd    speed_msb_b0]
	GET_DP_ADDRESS	0xf0                    	| [$620b: std    $f0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0xb2                    	| [$620d: ldd    $b2]
	LOAD_D                                 	| [$620d: ldd    $b2]
	GET_DP_ADDRESS	0xf2                    	| [$620f: std    $f2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$6211: ldd    speed_msb_b0]
	LOAD_D                                 	| [$6211: ldd    speed_msb_b0]
	cmp.w	#0x0102,d1                       	| [$6213: cmpd   #$0102]
	jcs	l_6224                             	| [$6217: bcs    $6224]
	move.b	#0x01,d0                        	| [$6219: ldd    #$0102]
	move.w	#0x0102,d1                      	| [$6219: ldd    #$0102]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$621c: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xb2,d0         | [$621e: lda    $b2]
	OP_W_ON_DP_ADDRESS	move,0xb3,d0         | [$6220: sta    $b3]
	OP_1_ON_DP_ADDRESS	clr,0xb2             | [$6222: clr    $b2]
l_6224:
	GET_DP_ADDRESS	speed_msb_b0            	| [$6224: ldd    speed_msb_b0]
	LOAD_D                                 	| [$6224: ldd    speed_msb_b0]
	GET_DP_ADDRESS	0xdc                    	| [$6226: std    $dc]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0xb2                    	| [$6228: ldd    $b2]
	LOAD_D                                 	| [$6228: ldd    $b2]
	GET_DP_ADDRESS	0xde                    	| [$622a: std    $de]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xc5             | [$622c: clr    $c5]
	GET_REG_ADDRESS	0,d2                   	| [$622e: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_7427                            	| [$6230: jsr    $7427]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6233: inc    event_sub_state_28]
l_6235:
	rts                                    	| [$6235: rts]

l_6236:
	move.b	#0x09,d0                        	| [$6236: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6238: sta    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$623a: clr    event_sub_state_2a]
	rts                                    	| [$623c: rts]

l_623d:
	move.w	#0x30a0,d2                      	| [$623d: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd4f7,d4
	.endif
	lea	table_d4f7,a4                  	| [$6240: ldu   #table_d4f7]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6243: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$6245: asla]
	JMP_A_INDEXED	A4                   	| [$6246: jra    [a,u]] [jump_table]
l_6248:
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$6248: lda    $bc]
	jeq	l_6289                             	| [$624a: beq    $6289]
	cmp.b	#0x18,d0                         	| [$624c: cmpa   #$18]
	jeq	l_627d                             	| [$624e: beq    $627d]
	and.b	#0x07,d0                         	| [$6250: anda   #$07]
	jne	l_625d                             	| [$6252: bne    $625d]
	GET_REG_ADDRESS	0x2,d2                 	| [$6254: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x0a,d0                         	| [$6256: adda   #$0a]
	GET_REG_ADDRESS	0x2,d2                 	| [$6258: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_625a:
	jbsr	l_8295                            	| [$625a: jsr    $8295]
l_625d:
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$625d: inc    $bc]
	jbsr	l_4fa1                            	| [$625f: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$6262: anda   #$02]
	jeq	l_6288                             	| [$6264: beq    $6288]
	OP_W_ON_DP_ADDRESS	addq,0xfc,#1         | [$6266: inc    $fc]
	moveq	#0,d0                            	| [$6268: clra]
	jbsr	queue_sound_event_4ead            	| [$6269: jsr    queue_sound_event_4ead]
	move.b	#0x0e,d0                        	| [$626c: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$626e: jsr    queue_sound_event_4ead]
	move.b	#screen_straight_1a,d0                        	| [$6271: lda    #$1a]
	jbsr	queue_sound_event_4ead            	| [$6273: jsr    queue_sound_event_4ead]
	move.b	#0x1c,d0                        	| [$6276: lda    #$1c]
	jbsr	queue_sound_event_4ead            	| [$6278: jsr    queue_sound_event_4ead]
	jbsr	l_628e                            	| [$627b: bsr    $628e]
l_627d:
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$627d: clr    $bc]
	GET_REG_ADDRESS	0,d2                   	| [$627f: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_7427                            	| [$6281: jsr    $7427]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6284: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6286: clr    event_sub_state_2a]
l_6288:
	rts                                    	| [$6288: rts]

l_6289:
	jbsr	l_7367                            	| [$6289: jsr    $7367]
	jra	l_625a                             	| [$628c: bra    $625a]
l_628e:
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$628e: lda    $bc]
	move.b	#0x06,d1                        	| [$6290: ldb    #$06]
	jbsr	l_a606                            	| [$6292: jsr    $a606]
	move.w	#0xd4fb,d4                      	| [$6295: ldu    #$d4fb]
	asl.b	#1,d1                            	| [$6298: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$6299: ldd    b,u]
	LOAD_D                                 	| [$6299: ldd    b,u]
	GET_DP_ADDRESS	0x48                    	| [$629b: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x30b0,d4                      	| [$629d: ldu    #$30b0]
	jbsr	l_5120                            	| [$62a0: jsr    $5120]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$62a3: lda    $49]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$62a5: sta    $48]
	jra	l_510f                             	| [$62a7: jra    $510f]
	rts                                    	| [$62aa: rts]

l_62ab:
	move.w	#0x30a0,d2                      	| [$62ab: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd507,d4
	.endif
	lea	table_d507,a4                  	| [$62ae: ldu   #table_d507]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$62b1: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$62b3: asla]
	JMP_A_INDEXED	A4                   	| [$62b4: jra    [a,u]] [jump_table]
l_62b6:
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$62b6: lda    $bc]
	jeq	l_62fa                             	| [$62b8: beq    $62fa]
	cmp.b	#0x18,d0                         	| [$62ba: cmpa   #$18]
	jeq	l_62eb                             	| [$62bc: beq    $62eb]
	and.b	#0x07,d0                         	| [$62be: anda   #$07]
	jne	l_62cb                             	| [$62c0: bne    $62cb]
	GET_REG_ADDRESS	0x2,d2                 	| [$62c2: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x0a,d0                         	| [$62c4: adda   #$0a]
	GET_REG_ADDRESS	0x2,d2                 	| [$62c6: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_62c8:
	jbsr	l_8295                            	| [$62c8: jsr    $8295]
l_62cb:
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$62cb: inc    $bc]
	jbsr	l_4fa1                            	| [$62cd: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$62d0: anda   #$02]
	jeq	l_62f9                             	| [$62d2: beq    $62f9]
	OP_W_ON_DP_ADDRESS	addq,0xfd,#1         | [$62d4: inc    $fd]
	moveq	#0,d0                            	| [$62d6: clra]
	jbsr	queue_sound_event_4ead            	| [$62d7: jsr    queue_sound_event_4ead]
	move.b	#0x0e,d0                        	| [$62da: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$62dc: jsr    queue_sound_event_4ead]
	move.b	#0x1b,d0                        	| [$62df: lda    #$1b]
	jbsr	queue_sound_event_4ead            	| [$62e1: jsr    queue_sound_event_4ead]
	move.b	#0x1c,d0                        	| [$62e4: lda    #$1c]
	jbsr	queue_sound_event_4ead            	| [$62e6: jsr    queue_sound_event_4ead]
	jbsr	l_628e                            	| [$62e9: bsr    $628e]
l_62eb:
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$62eb: clr    $bc]
	GET_REG_ADDRESS	0,d2                   	| [$62ed: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_73df                            	| [$62ef: jsr    $73df]
	jbsr	l_7427                            	| [$62f2: jsr    $7427]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$62f5: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$62f7: clr    event_sub_state_2a]
l_62f9:
	rts                                    	| [$62f9: rts]

l_62fa:
	jbsr	l_7367                            	| [$62fa: jsr    $7367]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$62fd: clr    $ca]
	jbsr	l_5035                            	| [$62ff: jsr    $5035]
	jbsr	l_5145                            	| [$6302: jsr    $5145]
	GET_REG_ADDRESS	0,d4                   	| [$6305: lda    ,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x5e,d0                         	| [$6307: cmpa   #$5e]
	jeq	l_630f                             	| [$6309: beq    $630f]
	cmp.b	#0x2d,d0                         	| [$630b: cmpa   #$2d]
	jne	l_62c8                             	| [$630d: bne    $62c8]
l_630f:
	jbsr	l_5b7f                            	| [$630f: jsr    $5b7f]
	move.b	#0x09,d0                        	| [$6312: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6314: sta    event_sub_state_28]
	move.b	#0x02,d0                        	| [$6316: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6318: sta    event_sub_state_2a]
	rts                                    	| [$631a: rts]

l_631b:
	move.w	#0x30a0,d2                      	| [$631b: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd50b,d4
	.endif
	lea	table_d50b,a4                  	| [$631e: ldu   #table_d50b]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6321: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$6323: asla]
	JMP_A_INDEXED	A4                   	| [$6324: jra    [a,u]] [jump_table]
l_6326:
	moveq	#0,d0                            	| [$6326: clra]
	jbsr	queue_sound_event_4ead            	| [$6327: jsr    queue_sound_event_4ead]
	move.b	#0x0f,d0                        	| [$632a: lda    #$0f]
	jbsr	queue_sound_event_4ead            	| [$632c: jsr    queue_sound_event_4ead]
	GET_REG_ADDRESS	0,d2                   	| [$632f: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6331: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x06,d0                         	| [$6333: adda   #$06]
	GET_REG_ADDRESS	0x2,d2                 	| [$6335: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_82f7                            	| [$6337: jsr    $82f7]
	move.b	#0x1e,d0                        	| [$633a: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$633c: sta    $29]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$633e: clr    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$6340: clr    $ca]
	jbsr	l_5035                            	| [$6342: jsr    $5035]
	jbsr	l_5145                            	| [$6345: jsr    $5145]
	GET_REG_ADDRESS	0,d4                   	| [$6348: lda    ,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x5e,d0                         	| [$634a: cmpa   #$5e]
	jeq	l_6352                             	| [$634c: beq    $6352]
	cmp.b	#0x2d,d0                         	| [$634e: cmpa   #$2d]
	jne	l_636d                             	| [$6350: bne    $636d]
l_6352:
	GET_REG_ADDRESS	0x2,d2                 	| [$6352: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
	add.b	#0x04,d1                         	| [$6354: addb   #$04]
	OP_W_ON_DP_ADDRESS	move,0xeb,d1         | [$6356: stb    $eb]
	move.w	#0x32c0,d2                      	| [$6358: ldx    #$32c0]
	GET_REG_ADDRESS	0,d2                   	| [$635b: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x5a,d0                        	| [$635d: lda    #$5a]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$635f: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_833d                            	| [$6361: jsr    $833d]
	OP_R_ON_DP_ADDRESS	move,0xcb,d0         | [$6364: lda    $cb]
	jne	l_636b                             	| [$6366: bne    $636b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6368: inc    event_sub_state_28]
	rts                                    	| [$636a: rts]

l_636b:
	OP_W_ON_DP_ADDRESS	addq,nb_long_horse_turns_ef,#1| [$636b: inc    nb_long_horse_turns_ef]
l_636d:
	move.b	#0x01,d0                        	| [$636d: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$636f: sta    $cb]
	move.b	#0x08,d0                        	| [$6371: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6373: sta    event_sub_state_28]
	rts                                    	| [$6375: rts]

l_6376:
	move.w	#0x30a0,d2                      	| [$6376: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd50f,d4
	.endif
	lea	table_d50f,a4                  	| [$6379: ldu   #table_d50f]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$637c: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$637e: asla]
	JMP_A_INDEXED	A4                   	| [$637f: jra    [a,u]] [jump_table]
l_6381:
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$6381: dec    $29]
	jne	l_63a7                             	| [$6383: bne    $63a7]
	move.b	#0xda,d0                        	| [$6385: ldd    #$da04]
	move.w	#0xda04,d1                      	| [$6385: ldd    #$da04]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xab                    	| [$6388: std    $ab]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_8361                            	| [$638a: jsr    $8361]
	OP_R_ON_DP_ADDRESS	move,0xcb,d0         | [$638d: lda    $cb]
	jne	l_63a5                             	| [$638f: bne    $63a5]
	move.w	#0x3240,d2                      	| [$6391: ldx    #$3240]
	move.b	#0xde,d0                        	| [$6394: ldd    #$de1f]
	move.w	#0xde1f,d1                      	| [$6394: ldd    #$de1f]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$6397: std    $b,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_8398                            	| [$6399: jsr    $8398]
	moveq	#0,d0                            	| [$639c: clra]
	jbsr	l_4eb3                            	| [$639d: jsr    $4eb3]
	move.b	#0x24,d0                        	| [$63a0: lda    #$24]
	jbsr	l_4eb3                            	| [$63a2: jsr    $4eb3]
l_63a5:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$63a5: inc    event_sub_state_2a]
l_63a7:
	rts                                    	| [$63a7: rts]

l_63a8:
	GET_REG_ADDRESS	0,d2                   	| [$63a8: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x06,d0                         	| [$63aa: cmpa   #$06]
	jeq	l_63c2                             	| [$63ac: beq    $63c2]
	GET_REG_ADDRESS	0x2,d2                 	| [$63ae: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$63b0: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xf0,d0                         	| [$63b2: cmpa   #$f0]
	jcc	l_63bb                             	| [$63b4: bcc    $63bb]
	jbsr	l_8361                            	| [$63b6: jsr    $8361]
	jra	l_63c2                             	| [$63b9: bra    $63c2]
l_63bb:
	jbsr	l_82af                            	| [$63bb: jsr    $82af]
	move.b	#0x06,d0                        	| [$63be: lda    #$06]
	GET_REG_ADDRESS	0,d2                   	| [$63c0: sta    ,x]
	move.b	d0,(a0)                         	| [...]
l_63c2:
	move.w	#0x3240,d2                      	| [$63c2: ldx    #$3240]
	GET_REG_ADDRESS	0,d2                   	| [$63c5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$63c7: cmpa   #$02]
	jeq	l_63dd                             	| [$63c9: beq    $63dd]
	GET_REG_ADDRESS	0x2,d2                 	| [$63cb: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_8398                            	| [$63cd: jsr    $8398]
	GET_REG_ADDRESS	0x2,d2                 	| [$63d0: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0xeb,d0          | [$63d2: cmpa   $eb]
	jcs	l_63e6                             	| [$63d4: bcs    $63e6]
	GET_REG_ADDRESS	0,d2                   	| [$63d6: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x24,d0                        	| [$63d8: lda    #$24]
	jbsr	l_4eb3                            	| [$63da: jsr    $4eb3]
l_63dd:
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$63dd: lda    $a0]
	cmp.b	#0x06,d0                         	| [$63df: cmpa   #$06]
	jne	l_63e5                             	| [$63e1: bne    $63e5]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$63e3: inc    event_sub_state_2a]
l_63e5:
	rts                                    	| [$63e5: rts]

l_63e6:
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$63e6: clr    $ca]
	jbsr	l_5035                            	| [$63e8: jsr    $5035]
	GET_REG_ADDRESS	0x3,d2                 	| [$63eb: ldu    $3,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$63ed: lda    ,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x5e,d0                         	| [$63ef: cmpa   #$5e]
	jeq	l_63fd                             	| [$63f1: beq    $63fd]
	cmp.b	#0x2d,d0                         	| [$63f3: cmpa   #$2d]
	jeq	l_63fd                             	| [$63f5: beq    $63fd]
	cmp.b	#0x37,d0                         	| [$63f7: cmpa   #$37]
	jeq	l_6401                             	| [$63f9: beq    $6401]
	jra	l_6405                             	| [$63fb: bra    $6405]
l_63fd:
	move.b	#0x2f,d0                        	| [$63fd: lda    #$2f]
	jra	l_6403                             	| [$63ff: bra    $6403]
l_6401:
	move.b	#0x2e,d0                        	| [$6401: lda    #$2e]
l_6403:
	GET_REG_ADDRESS	0,d4                   	| [$6403: sta    ,u]
	move.b	d0,(a0)                         	| [...]
l_6405:
	move.w	#0x30f4,d2                      	| [$6405: ldx    #$30f4]
	move.w	#0xd8e0,d4                      	| [$6408: ldu    #$d8e0]
	GET_REG_ADDRESS	0x2,d2                 	| [$640b: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$640d: adda   $2,u]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6410: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6412: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$6414: adca   $1,u]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6417: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$6419: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$641b: adca   ,u]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$641e: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	move.w	#0x23e9,d4                      	| [$6420: ldu    #$23e9]
	move.w	#0x309c,d3                      	| [$6423: ldy    #$309c]
	move.b	#0x02,d0                        	| [$6427: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6429: sta    $48]
l_642b:
	GET_REG_ADDRESS	0,d2                   	| [$642b: lda    ,x]
	move.b	(a0),d0                         	| [...]
                                         | [$642d: lsra]
                                         | [$642e: lsra]
                                         | [$642f: lsra]
	lsr.b	#4,d0                            	| [$6430: lsra]
	GET_REG_ADDRESS	0,d3                   	| [$6431: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	jbsr	write_char_and_move_cursor_422c   	| [$6433: jsr    write_char_and_move_cursor_422c]
	GET_REG_ADDRESS	0,d2                   	| [$6436: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$6438: anda   #$0f]
	GET_REG_ADDRESS	0,d3                   	| [$643a: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	jbsr	write_char_and_move_cursor_422c   	| [$643c: jsr    write_char_and_move_cursor_422c]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$643f: dec    $48]
	jne	l_6444                             	| [$6441: bne    $6444]
	rts                                    	| [$6443: rts]

l_6444:
	addq.w	#0x1,d4                         	| [$6444: leau   $1,u]
	jra	l_642b                             	| [$6446: bra    $642b]
l_6448:
	jbsr	l_7e29                            	| [$6448: jsr    $7e29]
	jbsr	l_5466                            	| [$644b: jsr    $5466]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$644e: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6450: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$6452: inc    $26]
	rts                                    	| [$6454: rts]

l_6455:
	move.w	#0x30a0,d2                      	| [$6455: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd515,d4
	.endif
	lea	table_d515,a4                  	| [$6458: ldu   #table_d515]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$645b: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$645d: asla]
	JMP_A_INDEXED	A4                   	| [$645e: jra    [a,u]] [jump_table]
l_6460:
	move.b	#0x06,d0                        	| [$6460: lda    #$06]
	GET_REG_ADDRESS	0,d2                   	| [$6462: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,nb_long_horse_turns_ef,d0| [$6464: lda    nb_long_horse_turns_ef]
	jeq	l_64b9                             	| [$6466: beq    $64b9]
	GET_ADDRESS	0x3260                     	| [$6468: clr    $3260]
	clr.b	(a0)                         	| [...]
	move.b	#0x50,d0                        	| [$646b: ldd    #$5050]
	move.w	#0x5050,d1                      	| [$646b: ldd    #$5050]
	GET_DP_ADDRESS	0xd8                    	| [$646e: ldu    $d8]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6470: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6472: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_DP_ADDRESS	0xda                    	| [$6474: ldu    $da]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6476: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6478: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x10,d0                        	| [$647a: lda    #$10]
l_647c:
	GET_REG_ADDRESS	0,d2                   	| [$647c: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$647e: ldd    $1,x]
	LOAD_D                                 	| [$647e: ldd    $1,x]
	add.b	#0x04,d1                         	| [$6480: addb   #$04]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x32e1                     	| [$6482: std    $32e1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x32e0                     	| [$6485: inc    $32e0]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6488: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$648a: clr    $2,x]
	clr.b	(a0)                         	| [...]
	move.w	#0x32e0,d2                      	| [$648c: ldx    #$32e0]
	jbsr	l_82af                            	| [$648f: jsr    $82af]
	move.b	#0x04,d0                        	| [$6492: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$6494: sta    $c7]
	GET_DP_ADDRESS	0xd1                    	| [$6496: ldu    $d1]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	subq.w	#0x1,d4                         	| [$6498: leau   -$1,u]
	cmp.w	#0x257f,d4                       	| [$649a: cmpu   #$257f]
	jne	l_64a3                             	| [$649e: bne    $64a3]
	move.w	#0x25bf,d4                      	| [$64a0: ldu    #$25bf]
l_64a3:
	GET_DP_ADDRESS	0xd1                    	| [$64a3: stu    $d1]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3220                     	| [$64a5: lda    $3220]
	move.b	(a0),d0                         	| [...]
	jne	l_64b6                             	| [$64a8: bne    $64b6]
	move.b	#0x64,d0                        	| [$64aa: ldd    #$6400]
	move.w	#0x6400,d1                      	| [$64aa: ldd    #$6400]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3221                     	| [$64ad: std    $3221]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x24,d0                        	| [$64b0: ldd    #$24d7]
	move.w	#0x24d7,d1                      	| [$64b0: ldd    #$24d7]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3223                     	| [$64b3: std    $3223]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_64b6:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$64b6: inc    event_sub_state_2a]
	rts                                    	| [$64b8: rts]

l_64b9:
	GET_REG_ADDRESS	0x2,d2                 	| [$64b9: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x09,d0                         	| [$64bb: adda   #$09]
	GET_REG_ADDRESS	0x2,d2                 	| [$64bd: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_82a7                            	| [$64bf: jsr    $82a7]
	jra	l_64b6                             	| [$64c2: bra    $64b6]
l_64c4:
	OP_R_ON_DP_ADDRESS	move,nb_long_horse_turns_ef,d0| [$64c4: lda    nb_long_horse_turns_ef]
	jeq	l_64fc                             	| [$64c6: beq    $64fc]
	OP_R_ON_DP_ADDRESS	move,0xba,d0         | [$64c8: lda    $ba]
	cmp.b	#0x87,d0                         	| [$64ca: cmpa   #$87]
	jeq	l_64dd                             	| [$64cc: beq    $64dd]
	jbsr	l_5ee0                            	| [$64ce: jsr    $5ee0]
	jbsr	l_5b22                            	| [$64d1: jsr    $5b22]
	move.w	#0x3220,d2                      	| [$64d4: ldx    #$3220]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$64d7: clr    $ca]
	jbsr	l_5b8f                            	| [$64d9: jsr    $5b8f]
	rts                                    	| [$64dc: rts]

l_64dd:
	move.w	#0x3260,d2                      	| [$64dd: ldx    #$3260]
	GET_DP_ADDRESS	0xec                    	| [$64e0: ldd    $ec]
	LOAD_D                                 	| [$64e0: ldd    $ec]
	GET_DP_ADDRESS	0xe6                    	| [$64e2: subd   $e6]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	move.b	#0x08,d0                        	| [$64e4: lda    #$08]
	jbsr	multiply_ab                       	| [$64e6: mul]
	OP_R_ON_DP_ADDRESS	add,0xee,d1          | [$64e7: addb   $ee]
	add.b	#0x01,d1                         	| [$64e9: addb   #$01]
	sub.b	#0x08,d1                         	| [$64eb: subb   #$08]
	add.b	#0x28,d1                         	| [$64ed: addb   #$28]
	cmp.b	#0x28,d1                         	| [$64ef: cmpb   #$28]
	jcc	l_64f5                             	| [$64f1: bcc    $64f5]
	move.b	#0x28,d1                        	| [$64f3: ldb    #$28]
l_64f5:
	move.b	#0x5b,d0                        	| [$64f5: lda    #$5b]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$64f7: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_83a9                            	| [$64f9: jsr    $83a9]
l_64fc:
	move.w	#0x3220,d2                      	| [$64fc: ldx    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$64ff: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_650a                             	| [$6501: beq    $650a]
	move.b	#0x01,d0                        	| [$6503: lda    #$01]
	GET_REG_ADDRESS	0xd,d2                 	| [$6505: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8387                            	| [$6507: jsr    $8387]
l_650a:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$650a: inc    event_sub_state_2a]
	rts                                    	| [$650c: rts]

l_650d:
	move.w	#0x23e9,d4                      	| [$650d: ldu    #$23e9]
	jbsr	l_651f                            	| [$6510: bsr    $651f]
	jbsr	l_5466                            	| [$6512: jsr    $5466]
	GET_ADDRESS	0x34e7                     	| [$6515: clr    $34e7]
	clr.b	(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$6518: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$651a: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$651c: inc    $26]
	rts                                    	| [$651e: rts]

l_651f:
	move.w	#0xd51d,d2                      	| [$651f: ldx    #$d51d]
	move.w	#0x309a,d3                      	| [$6522: ldy    #$309a]
	move.b	#0x05,d0                        	| [$6526: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6528: sta    $48]
l_652a:
	GET_REG_ADDRESS	0,d2                   	| [$652a: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$652c: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	jbsr	write_char_and_move_cursor_422c   	| [$652e: jsr    write_char_and_move_cursor_422c]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6531: dec    $48]
	jne	l_652a                             	| [$6533: bne    $652a]
	rts                                    	| [$6535: rts]

l_6536:
	move.w	#0x30a0,d2                      	| [$6536: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd523,d4
	.endif
	lea	table_d523,a4                  	| [$6539: ldu   #table_d523]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$653c: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$653e: asla]
	JMP_A_INDEXED	A4                   	| [$653f: jra    [a,u]] [jump_table]
l_6541:
	GET_REG_ADDRESS	0x2,d2                 	| [$6541: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$6543: adda   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$6545: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8347                            	| [$6547: jsr    $8347]
	jbsr	l_6588                            	| [$654a: bsr    $6588]
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$654c: clr    $bc]
	move.b	#0x03,d0                        	| [$654e: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$6550: sta    $65]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6552: inc    event_sub_state_2a]
	rts                                    	| [$6554: rts]

l_6555:
	move.w	#0xd5f2,d4                      	| [$6555: ldu    #$d5f2]
	OP_R_ON_DP_ADDRESS	move,0xbc,d1         | [$6558: ldb    $bc]
	cmp.b	#0x13,d1                         	| [$655a: cmpb   #$13]
	jeq	l_6572                             	| [$655c: beq    $6572]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$655e: lda    b,u]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$6560: lsra]
	add.b	#0x5c,d0                         	| [$6561: adda   #$5c]
	GET_REG_ADDRESS	0x1,d2                 	| [$6563: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$6565: lda    $0f]
	lsr.b	#1,d0                            	| [$6567: lsra]
	jcs	l_656c                             	| [$6568: bcs    $656c]
	GET_REG_ADDRESS	0x2,d2                 	| [$656a: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
l_656c:
	jbsr	l_8347                            	| [$656c: jsr    $8347]
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$656f: inc    $bc]
	rts                                    	| [$6571: rts]

l_6572:
	jbsr	l_6588                            	| [$6572: bsr    $6588]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$6574: dec    $65]
	jne	l_6585                             	| [$6576: bne    $6585]
	GET_REG_ADDRESS	0x2,d2                 	| [$6578: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x08,d0                         	| [$657a: suba   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$657c: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$657e: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$657e: ldd    #$0103]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x65                    	| [$6581: std    $65]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6583: inc    event_sub_state_2a]
l_6585:
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$6585: clr    $bc]
	rts                                    	| [$6587: rts]

l_6588:
	move.b	#0x1e,d0                        	| [$6588: lda    #$1e]
	jbsr	l_4eb3                            	| [$658a: jsr    $4eb3]
	move.b	#0x1f,d0                        	| [$658d: lda    #$1f]
	jra	l_4eb3                             	| [$658f: jra    $4eb3]
l_6592:
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$6592: dec    $65]
	jne	l_65b4                             	| [$6594: bne    $65b4]
	OP_W_ON_DP_ADDRESS	subq,0x66,#1         | [$6596: dec    $66]
	jeq	l_65b5                             	| [$6598: beq    $65b5]
	GET_REG_ADDRESS	0x2,d2                 	| [$659a: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$659c: adda   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$659e: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_834d                            	| [$65a0: jsr    $834d]
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$65a3: inc    $bc]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$65a5: lda    $bc]
	cmp.b	#0x02,d0                         	| [$65a7: cmpa   #$02]
	jne	l_65b0                             	| [$65a9: bne    $65b0]
	move.b	#0x3f,d0                        	| [$65ab: lda    #$3f]
	jbsr	l_4eb3                            	| [$65ad: jsr    $4eb3]
l_65b0:
	move.b	#0x0c,d0                        	| [$65b0: lda    #$0c]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$65b2: sta    $65]
l_65b4:
	rts                                    	| [$65b4: rts]

l_65b5:
	jra	l_64fc                             	| [$65b5: jra    $64fc]

free_style_65b8:
	
	.ifndef	RELEASE
	move.w	#0xd52b,d2
	.endif
	lea	table_d52b,a2                  	| [$65b8: ldx   #table_d52b]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$65bb: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$65bd: asla]
	JMP_A_INDEXED	A2                   	| [$65be: jra    [a,x]] [jump_table]

l_65c0:
	
	.ifndef	RELEASE
	move.w	#0xd535,d2
	.endif
	lea	table_d535,a2                  	| [$65c0: ldx   #table_d535]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$65c3: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$65c5: asla]
	JMP_A_INDEXED	A2                   	| [$65c6: jra    [a,x]] [jump_table]

l_65c8:
	move.b	#0x01,d0                        	| [$65c8: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x73,d0         | [$65ca: sta    $73]
	move.b	#0x05,d0                        	| [$65cc: lda    #$05]
	jbsr	queue_event_4e9a                  	| [$65ce: jsr    queue_event_4e9a]
	move.w	#0x30a0,d2                      	| [$65d1: ldx    #$30a0]
	move.w	#0x3508,d4                      	| [$65d4: ldu    #$3508]
	move.b	#0x04,d0                        	| [$65d7: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$65d9: sta    $65]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$65db: clr    $19]
l_65dd:
	move.b	#0xdb,d0                        	| [$65dd: ldd    #$dbc9]
	move.w	#0xdbc9,d1                      	| [$65dd: ldd    #$dbc9]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$65e0: std    $b,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$65e2: ldd    #$0004]
	move.w	#0x0004,d1                      	| [$65e2: ldd    #$0004]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x10,d2                	| [$65e5: std    $10,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x06,d0                        	| [$65e8: lda    #$06]
	GET_REG_ADDRESS	0x5,d2                 	| [$65ea: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0xe3,d0                        	| [$65ec: ldd    #$e387]
	move.w	#0xe387,d1                      	| [$65ec: ldd    #$e387]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x2c,d2                	| [$65ef: std    $2c,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x17,d0                        	| [$65f2: lda    #$17]
	GET_REG_ADDRESS	0x2f,d2                	| [$65f4: sta    $2f,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$65f7: clr    ,u]
	clr.b	(a0)                         	| [...]
	add.w	#0x60,d2                         	| [$65f9: leax   $60,x]
	add.w	#0x20,d4                         	| [$65fc: leau   $20,u]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$65ff: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$6601: dec    $65]
	jne	l_65dd                             	| [$6603: bne    $65dd]
	jbsr	l_5600                            	| [$6605: jsr    $5600]
	move.w	#0x3220,d2                      	| [$6608: ldx    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$660b: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_8535                            	| [$660d: jsr    $8535]
	move.b	#0x1e,d0                        	| [$6610: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6612: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6614: inc    event_sub_state_2a]
	rts                                    	| [$6616: rts]

l_6617:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6617: dec    $2b]
	jne	l_661f                             	| [$6619: bne    $661f]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$661b: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$661d: clr    event_sub_state_2a]
l_661f:
	rts                                    	| [$661f: rts]

l_6620:
	move.w	#0x30a0,d2                      	| [$6620: ldx    #$30a0]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$6623: clr    $19]
	
	.ifndef	RELEASE
	move.w	#0xd539,d4
	.endif
	lea	table_d539,a4                  	| [$6625: ldu   #table_d539]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6628: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$662a: asla]
	JMP_A_INDEXED	A4                   	| [$662b: jra    [a,u]] [jump_table]
l_662d:
	move.b	#0x80,d0                        	| [$662d: lda    #$80]
	jbsr	queue_sound_event_4ead            	| [$662f: jsr    queue_sound_event_4ead]
	move.b	#0xff,d0                        	| [$6632: lda    #$ff]
	jbsr	queue_sound_event_4ead            	| [$6634: jsr    queue_sound_event_4ead]
	move.b	#0xa0,d0                        	| [$6637: lda    #$a0]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6639: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$663b: inc    event_sub_state_2a]
	rts                                    	| [$663d: rts]

l_663e:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$663e: dec    $2b]
	jne	l_6652                             	| [$6640: bne    $6652]
	move.b	#0x81,d0                        	| [$6642: lda    #$81]
	jbsr	queue_sound_event_4ead            	| [$6644: jsr    queue_sound_event_4ead]
	move.b	#0xff,d0                        	| [$6647: lda    #$ff]
	jbsr	queue_sound_event_4ead            	| [$6649: jsr    queue_sound_event_4ead]
	move.b	#0x1e,d0                        	| [$664c: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$664e: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6650: inc    event_sub_state_2a]
l_6652:
	rts                                    	| [$6652: rts]

l_6653:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6653: dec    $2b]
	jne	l_666d                             	| [$6655: bne    $666d]
	move.b	#0x04,d0                        	| [$6657: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6659: sta    $48]
l_665b:
	jbsr	select_diving_sprite_84db                            	| [$665b: jsr    $84db]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$665e: inc    $19]
	add.w	#0x60,d2                         	| [$6660: leax   $60,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6663: dec    $48]
	jne	l_665b                             	| [$6665: bne    $665b]
	move.b	#0x82,d0                        	| [$6667: lda    #$82]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6669: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$666b: inc    event_sub_state_2a]
l_666d:
	rts                                    	| [$666d: rts]

l_666e:
	move.b	#0x04,d0                        	| [$666e: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$6670: sta    $65]
l_6672:
	GET_REG_ADDRESS	0xd,d2                 	| [$6672: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	jne	l_6689                             	| [$6674: bne    $6689]
	jbsr	l_4f8a                            	| [$6676: jsr    $4f8a]
	GET_REG_ADDRESS	0x2,d4                 	| [$6679: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$667b: ora    $1,u]
	or.b	(a0),d0                           	| [...]
	not.b	d0                               	| [$667d: coma]
	GET_REG_ADDRESS	0,d4                   	| [$667e: anda   ,u]
	and.b	(a0),d0                          	| [...]
	and.b	#0x05,d0                         	| [$6680: anda   #$05]
	jeq	l_6689                             	| [$6682: beq    $6689]
	GET_REG_ADDRESS	0,d2                   	| [$6684: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6686: inc    event_sub_state_2a]
	rts                                    	| [$6688: rts]

l_6689:
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$6689: inc    $19]
	add.w	#0x60,d2                         	| [$668b: leax   $60,x]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$668e: dec    $65]
	jne	l_6672                             	| [$6690: bne    $6672]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6692: dec    $2b]
	jne	l_66c7                             	| [$6694: bne    $66c7]
	move.w	#0x3220,d2                      	| [$6696: ldx    #$3220]
	jbsr	l_853b                            	| [$6699: jsr    $853b]
	move.b	#0x10,d0                        	| [$669c: lda    #$10]
	jbsr	l_4eb3                            	| [$669e: jsr    $4eb3]
	move.b	#0x11,d0                        	| [$66a1: lda    #$11]
	jbsr	l_4eb3                            	| [$66a3: jsr    $4eb3]
	move.b	#0x12,d0                        	| [$66a6: lda    #$12]
	jbsr	l_4eb3                            	| [$66a8: jsr    $4eb3]
	GET_ADDRESS	0x313d                     	| [$66ab: lda    $313d]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$66ae: sta    $65]
	GET_ADDRESS	0x313e                     	| [$66b0: ldu    $313e]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_66b3:
	move.l	d4,-(sp)                        	| [$66b3: pshs   u]
	move.b	#0x0e,d1                        	| [$66b5: ldb    #$0e]
	jbsr	l_52f5                            	| [$66b7: jsr    $52f5]
	movem.l	(sp)+,d4                       	| [$66ba: puls   u]
	add.w	#0x40,d4                         	| [$66bc: leau   $40,u]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$66bf: dec    $65]
	jne	l_66b3                             	| [$66c1: bne    $66b3]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$66c3: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$66c5: clr    event_sub_state_2a]
l_66c7:
	rts                                    	| [$66c7: rts]

l_66c8:
	move.b	#0x04,d0                        	| [$66c8: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$66ca: sta    $65]
	OP_1_ON_DP_ADDRESS	clr,0x5a             | [$66cc: clr    $5a]
l_66ce:
	GET_REG_ADDRESS	0,d2                   	| [$66ce: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_66fa                             	| [$66d0: beq    $66fa]
	OP_1_ON_DP_ADDRESS	tst,0x5a             | [$66d2: tst    $5a]
	jeq	l_66da                             	| [$66d4: beq    $66da]
	GET_REG_ADDRESS	0,d2                   	| [$66d6: clr    ,x]
	clr.b	(a0)                         	| [...]
	jra	l_66fa                             	| [$66d8: bra    $66fa]
l_66da:
	OP_W_ON_DP_ADDRESS	addq,0x5a,#1         | [$66da: inc    $5a]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$66dc: lda    $bc]
	jne	l_66e9                             	| [$66de: bne    $66e9]
	GET_REG_ADDRESS	0x2,d2                 	| [$66e0: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x10,d0                         	| [$66e2: adda   #$10]
	GET_REG_ADDRESS	0x2,d2                 	| [$66e4: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	select_diving_sprite_84e0                            	| [$66e6: jsr    $84e0]
l_66e9:
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$66e9: lda    $bc]
	cmp.b	#0x12,d0                         	| [$66eb: cmpa   #$12]
	jne	l_66fa                             	| [$66ed: bne    $66fa]
	GET_REG_ADDRESS	0x2,d2                 	| [$66ef: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$66f1: adda   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$66f3: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	select_diving_sprite_84e5                            	| [$66f5: jsr    $84e5]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$66f8: inc    event_sub_state_2a]
l_66fa:
	add.w	#0x60,d2                         	| [$66fa: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$66fd: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$66ff: dec    $65]
	jne	l_66ce                             	| [$6701: bne    $66ce]
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$6703: inc    $bc]
	rts                                    	| [$6705: rts]

l_6706:
	move.b	#0x04,d0                        	| [$6706: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$6708: sta    $65]
l_670a:
	GET_REG_ADDRESS	0,d2                   	| [$670a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_6735                             	| [$670c: beq    $6735]
	GET_DP_ADDRESS	0xfe                    	| [$670e: stx    $fe]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$6710: lda    $19]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$6712: ldb    $1a]
	jeq	l_671d                             	| [$6714: beq    $671d]
	subq.b	#1,d0                           	| [$6716: deca]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$6717: ldb    $1b]
	jeq	l_671d                             	| [$6719: beq    $671d]
	add.b	#0x02,d0                         	| [$671b: adda   #$02]
l_671d:
	OP_W_ON_DP_ADDRESS	move,0xfd,d0         | [$671d: sta    $fd]
	jbsr	l_59b2                            	| [$671f: jsr    $59b2]
	GET_REG_ADDRESS	0x2,d2                 	| [$6722: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$6724: adda   $20,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6727: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	select_diving_sprite_84e5                            	| [$6729: jsr    $84e5]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$672c: lda    $bc]
	cmp.b	#0x14,d0                         	| [$672e: cmpa   #$14]
	jne	l_6735                             	| [$6730: bne    $6735]
	jbsr	l_7765                            	| [$6732: jsr    $7765]
l_6735:
	add.w	#0x60,d2                         	| [$6735: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$6738: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$673a: dec    $65]
	jne	l_670a                             	| [$673c: bne    $670a]
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$673e: inc    $bc]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$6740: lda    $bc]
	cmp.b	#0x28,d0                         	| [$6742: cmpa   #$28]
	jeq	l_678e                             	| [$6744: beq    $678e]
	cmp.b	#0x3c,d0                         	| [$6746: cmpa   #$3c]
	jne	l_679d                             	| [$6748: bne    $679d]
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$674a: clr    $bc]
	GET_DP_ADDRESS	0xfe                    	| [$674c: ldx    $fe]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x29,d2                	| [$674e: inc    $29,x]
	addq.b	#1,(a0)                         	| [...]
	move.w	#0x3500,d2                      	| [$6751: ldx    #$3500]
	OP_R_ON_DP_ADDRESS	move,0xfd,d0         | [$6754: lda    $fd]
	move.b	#0x20,d1                        	| [$6756: ldb    #$20]
	jbsr	multiply_ab                       	| [$6758: mul]
	add.w	d1,d2                            	| [$6759: leax   d,x]
	GET_DP_ADDRESS	0xfe                    	| [$675b: stx    $fe]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$675d: inc    $3,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_5600                            	| [$675f: jsr    $5600]
	move.w	#0x3220,d2                      	| [$6762: ldx    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$6765: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6767: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6769: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_853b                            	| [$676b: jsr    $853b]
	jbsr	l_607f                            	| [$676e: jsr    $607f]
	move.b	#0x02,d0                        	| [$6771: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,0xfd,d1         | [$6773: ldb    $fd]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d1         | [$6775: stb    $19]
	add.b	#0x29,d1                         	| [$6777: addb   #$29]
	jbsr	queue_event_4e9a                  	| [$6779: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$677c: ldd    #$021d]
	move.w	#0x021d,d1                      	| [$677c: ldd    #$021d]
	jbsr	queue_event_4e9a                  	| [$677f: jsr    queue_event_4e9a]
	move.w	#0x23c4,d4                      	| [$6782: ldu    #$23c4]
	jbsr	l_537e                            	| [$6785: jsr    $537e]
	move.b	#0xb4,d0                        	| [$6788: lda    #$b4]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$678a: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$678c: inc    event_sub_state_2a]
l_678e:
	move.b	#0x10,d0                        	| [$678e: lda    #$10]
	jbsr	l_4eb3                            	| [$6790: jsr    $4eb3]
	move.b	#0x11,d0                        	| [$6793: lda    #$11]
	jbsr	l_4eb3                            	| [$6795: jsr    $4eb3]
	move.b	#0x12,d0                        	| [$6798: lda    #$12]
	jbsr	l_4eb3                            	| [$679a: jsr    $4eb3]
l_679d:
	rts                                    	| [$679d: rts]

l_679e:
	jbsr	l_5506                            	| [$679e: jsr    $5506]
	OP_R_ON_DP_ADDRESS	move,0x2b,d0         | [$67a1: lda    $2b]
	cmp.b	#0xa0,d0                         	| [$67a3: cmpa   #$a0]
	jne	l_67b1                             	| [$67a5: bne    $67b1]
	move.b	#0xb3,d0                        	| [$67a7: lda    #$b3]
	jbsr	l_4eb3                            	| [$67a9: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$67ac: lda    #$ff]
	jbsr	l_4eb3                            	| [$67ae: jsr    $4eb3]
l_67b1:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$67b1: dec    $2b]
	jne	l_67c5                             	| [$67b3: bne    $67c5]
	GET_DP_ADDRESS	0xfe                    	| [$67b5: ldx    $fe]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$67b7: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$67b9: cmpa   #$02]
	jeq	l_67c6                             	| [$67bb: beq    $67c6]
	OP_W_ON_DP_ADDRESS	subq,0x26,#1         | [$67bd: dec    $26]
	move.b	#0x07,d0                        	| [$67bf: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$67c1: sta    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$67c3: clr    event_sub_state_2a]
l_67c5:
	rts                                    	| [$67c5: rts]

l_67c6:
	move.b	#0x02,d0                        	| [$67c6: ldd    #$021e]
	move.w	#0x021e,d1                      	| [$67c6: ldd    #$021e]
	jbsr	queue_event_4e9a                  	| [$67c9: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$67cc: ldd    #$021f]
	move.w	#0x021f,d1                      	| [$67cc: ldd    #$021f]
	jbsr	queue_event_4e9a                  	| [$67cf: jsr    queue_event_4e9a]
	move.b	#0xb4,d0                        	| [$67d2: lda    #$b4]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$67d4: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$67d6: inc    event_sub_state_2a]
	rts                                    	| [$67d8: rts]

l_67d9:
	jbsr	l_5506                            	| [$67d9: jsr    $5506]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$67dc: dec    $2b]
	jne	l_67ee                             	| [$67de: bne    $67ee]
	GET_DP_ADDRESS	0xfe                    	| [$67e0: ldx    $fe]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.b	#0x01,d0                        	| [$67e2: lda    #$01]
	GET_REG_ADDRESS	0x4,d2                 	| [$67e4: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$67e6: dec    $1,x]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_67ef                             	| [$67e8: beq    $67ef]
	move.b	#0x09,d0                        	| [$67ea: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$67ec: sta    event_sub_state_2a]
l_67ee:
	rts                                    	| [$67ee: rts]

l_67ef:
	GET_REG_ADDRESS	0,d2                   	| [$67ef: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$67f1: clr    $3,x]
	clr.b	(a0)                         	| [...]
	move.b	#0x3b,d0                        	| [$67f3: lda    #$3b]
	jbsr	l_4eb3                            	| [$67f5: jsr    $4eb3]
	move.b	#0x02,d0                        	| [$67f8: ldd    #$0208]
	move.w	#0x0208,d1                      	| [$67f8: ldd    #$0208]
	jbsr	queue_event_4e9a                  	| [$67fb: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$67fe: ldd    #$0209]
	move.w	#0x0209,d1                      	| [$67fe: ldd    #$0209]
	jbsr	queue_event_4e9a                  	| [$6801: jsr    queue_event_4e9a]
	move.b	#0xb4,d0                        	| [$6804: lda    #$b4]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6806: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6808: inc    event_sub_state_2a]
	rts                                    	| [$680a: rts]

l_680b:
	jbsr	l_5506                            	| [$680b: jsr    $5506]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$680e: dec    $2b]
	jne	l_6814                             	| [$6810: bne    $6814]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6812: inc    event_sub_state_2a]
l_6814:
	rts                                    	| [$6814: rts]

l_6815:
	move.w	#0x3500,d2                      	| [$6815: ldx    #$3500]
	move.b	#0x04,d0                        	| [$6818: lda    #$04]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$681a: ldb    $1a]
	jeq	l_6827                             	| [$681c: beq    $6827]
	move.b	#0x02,d0                        	| [$681e: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$6820: ldb    $1b]
	jeq	l_6827                             	| [$6822: beq    $6827]
	add.w	#0x40,d2                         	| [$6824: leax   $40,x]
l_6827:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6827: sta    $48]
l_6829:
	GET_REG_ADDRESS	0,d2                   	| [$6829: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_6831                             	| [$682b: beq    $6831]
	GET_REG_ADDRESS	0x4,d2                 	| [$682d: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_6844                             	| [$682f: beq    $6844]
l_6831:
	add.w	#0x20,d2                         	| [$6831: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6834: dec    $48]
	jne	l_6829                             	| [$6836: bne    $6829]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$6838: lda    $1a]
	jeq	l_684b                             	| [$683a: beq    $684b]
	OP_R_ON_DP_ADDRESS	move,0x1b,d0         | [$683c: lda    $1b]
	jne	l_684b                             	| [$683e: bne    $684b]
	OP_W_ON_DP_ADDRESS	addq,0x1b,#1         | [$6840: inc    $1b]
	jra	l_6815                             	| [$6842: bra    $6815]
l_6844:
	OP_W_ON_DP_ADDRESS	subq,0x26,#1         | [$6844: dec    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$6846: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6848: clr    event_sub_state_2a]
	rts                                    	| [$684a: rts]

l_684b:
	move.b	#0x06,d0                        	| [$684b: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x26,d0         | [$684d: sta    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$684f: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6851: clr    event_sub_state_2a]
	rts                                    	| [$6853: rts]

l_6854:
	jbsr	l_c000                            	| [$6854: jsr    $c000]
	GET_DP_ADDRESS	0x70                    	| [$6857: ldd    $70]
	LOAD_D                                 	| [$6857: ldd    $70]
	cmp.w	#0x0210,d1                       	| [$6859: cmpd   #$0210]
	jeq	l_6890                             	| [$685d: beq    $6890]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$685f: clr    $19]
	move.b	#0x04,d0                        	| [$6861: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$6863: sta    $65]
	OP_1_ON_DP_ADDRESS	clr,0x21             | [$6865: clr    $21]
	move.w	#0x30a0,d2                      	| [$6867: ldx    #$30a0]
l_686a:
	
	.ifndef	RELEASE
	move.w	#0xd54d,d4
	.endif
	lea	table_d54d,a4                  	| [$686a: ldu   #table_d54d]
	GET_REG_ADDRESS	0,d2                   	| [$686d: lda    ,x]
	move.b	(a0),d0                         	| [...]
l_686f:
	cmp.b	#0x07,d0                         	| [$686f: cmpa   #$07]
	jne	l_6875                             	| [$6871: bne    $6875]
	OP_W_ON_DP_ADDRESS	addq,0x21,#1         | [$6873: inc    $21]
l_6875:
	asl.b	#1,d0                            	| [$6875: asla]
	JSR_A_INDEXED	A4                   	| [$6876: jsr    [a,u]] [jump_table]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$6878: inc    $19]
	add.w	#0x60,d2                         	| [$687a: leax   $60,x]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$687d: dec    $65]
	jne	l_686a                             	| [$687f: bne    $686a]
	jbsr	l_7477                            	| [$6881: jsr    $7477]
	jbsr	l_75bc                            	| [$6884: jsr    $75bc]
	OP_R_ON_DP_ADDRESS	move,0x21,d0         | [$6887: lda    $21]
	cmp.b	#0x04,d0                         	| [$6889: cmpa   #$04]
	jne	l_688f                             	| [$688b: bne    $688f]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$688d: inc    event_sub_state_28]
l_688f:
	rts                                    	| [$688f: rts]

l_6890:
	OP_1_ON_DP_ADDRESS	clr,chrono_second_72 | [$6890: clr    chrono_second_72]
	move.w	#0x30a0,d2                      	| [$6892: ldx    #$30a0]
	move.b	#0x04,d0                        	| [$6895: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$6897: sta    $65]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$6899: clr    $19]
l_689b:
	GET_REG_ADDRESS	0,d2                   	| [$689b: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$689d: cmpa   #$07]
	jeq	l_68a7                             	| [$689f: beq    $68a7]
	jbsr	l_7980                            	| [$68a1: jsr    $7980]
	jbsr	l_84a3                            	| [$68a4: jsr    $84a3]
l_68a7:
	add.w	#0x60,d2                         	| [$68a7: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$68aa: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$68ac: dec    $65]
	jne	l_689b                             	| [$68ae: bne    $689b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$68b0: inc    event_sub_state_28]
	rts                                    	| [$68b2: rts]

l_68b3:
	GET_REG_ADDRESS	0x20,d2                	| [$68b3: clr    $20,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_4fa1                            	| [$68b6: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$68b9: anda   #$05]
	jeq	l_68e0                             	| [$68bb: beq    $68e0]
	cmp.b	#0x05,d0                         	| [$68bd: cmpa   #$05]
	jne	l_68c4                             	| [$68bf: bne    $68c4]
	GET_REG_ADDRESS	0x5b,d2                	| [$68c1: inc    $5b,x]
	addq.b	#1,(a0)                         	| [...]
l_68c4:
	GET_REG_ADDRESS	0,d2                   	| [$68c4: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$68c6: lda    $f,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x10,d0                         	| [$68c8: adda   #$10]
	GET_REG_ADDRESS	0xf,d2                 	| [$68ca: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x47,d2                	| [$68cc: lda    $47,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_68d7                             	| [$68cf: beq    $68d7]
	move.b	#0x10,d0                        	| [$68d1: lda    #$10]
	GET_REG_ADDRESS	0x20,d2                	| [$68d3: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$68d6: rts]

l_68d7:
	GET_REG_ADDRESS	0x2,d2                 	| [$68d7: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x10,d0                         	| [$68d9: adda   #$10]
	GET_REG_ADDRESS	0x2,d2                 	| [$68db: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	select_diving_sprite_84e0                            	| [$68dd: jsr    $84e0]
l_68e0:
	rts                                    	| [$68e0: rts]

l_68e1:
	jbsr	l_7455                            	| [$68e1: jsr    $7455]
	GET_REG_ADDRESS	0x5b,d2                	| [$68e4: tst    $5b,x]
	tst.b	(a0)                             	| [...]
	jeq	l_68f3                             	| [$68e7: beq    $68f3]
	jbsr	l_4fa1                            	| [$68e9: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$68ec: anda   #$02]
	jeq	l_68f3                             	| [$68ee: beq    $68f3]
	GET_REG_ADDRESS	0x5b,d2                	| [$68f0: inc    $5b,x]
	addq.b	#1,(a0)                         	| [...]
l_68f3:
	GET_REG_ADDRESS	0x20,d2                	| [$68f3: clr    $20,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1c,d2                	| [$68f6: inc    $1c,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1c,d2                	| [$68f9: lda    $1c,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x12,d0                         	| [$68fc: cmpa   #$12]
	jne	l_691d                             	| [$68fe: bne    $691d]
	GET_REG_ADDRESS	0x4b,d2                	| [$6900: inc    $4b,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$6903: lda    $f,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$6905: adda   #$08]
	GET_REG_ADDRESS	0xf,d2                 	| [$6907: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x47,d2                	| [$6909: lda    $47,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_6914                             	| [$690c: beq    $6914]
	move.b	#0x08,d0                        	| [$690e: lda    #$08]
	GET_REG_ADDRESS	0x20,d2                	| [$6910: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$6913: rts]

l_6914:
	GET_REG_ADDRESS	0x2,d2                 	| [$6914: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$6916: adda   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$6918: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	select_diving_sprite_84e5                            	| [$691a: jsr    $84e5]
l_691d:
	rts                                    	| [$691d: rts]

l_691e:
	jbsr	l_7455                            	| [$691e: jsr    $7455]
	jbsr	l_59b2                            	| [$6921: jsr    $59b2]
	jbsr	l_7759                            	| [$6924: jsr    $7759]
	GET_REG_ADDRESS	0x5b,d2                	| [$6927: tst    $5b,x]
	tst.b	(a0)                             	| [...]
	jeq	l_6936                             	| [$692a: beq    $6936]
	jbsr	l_4fa1                            	| [$692c: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$692f: anda   #$02]
	jeq	l_6936                             	| [$6931: beq    $6936]
	GET_REG_ADDRESS	0x5b,d2                	| [$6933: inc    $5b,x]
	addq.b	#1,(a0)                         	| [...]
l_6936:
	GET_REG_ADDRESS	0x1c,d2                	| [$6936: inc    $1c,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1c,d2                	| [$6939: lda    $1c,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x50,d0                         	| [$693c: cmpa   #$50]
	jeq	l_694d                             	| [$693e: beq    $694d]
	cmp.b	#0x1e,d0                         	| [$6940: cmpa   #$1e]
	jne	l_694c                             	| [$6942: bne    $694c]
	jbsr	l_7765                            	| [$6944: jsr    $7765]
	move.b	#0x15,d0                        	| [$6947: lda    #$15]
	jbsr	l_4eb3                            	| [$6949: jsr    $4eb3]
l_694c:
	rts                                    	| [$694c: rts]

l_694d:
	GET_REG_ADDRESS	0,d2                   	| [$694d: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1c,d2                	| [$694f: clr    $1c,x]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$6952: rts]

l_6953:
	jbsr	l_5982                            	| [$6953: jsr    $5982]
	jbsr	l_792a                            	| [$6956: jsr    $792a]
	jbsr	l_787b                            	| [$6959: jsr    $787b]
	jbsr	l_59b2                            	| [$695c: jsr    $59b2]
	jbsr	l_7759                            	| [$695f: jsr    $7759]
	GET_REG_ADDRESS	0xe,d2                 	| [$6962: ldd    $e,x]
	LOAD_D                                 	| [$6962: ldd    $e,x]
	sub.w	#0x03f8,d1                       	| [$6964: subd   #$03f8]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcs	l_69c4                             	| [$6967: bcs    $69c4]
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$6969: stb    $50]
	GET_REG_ADDRESS	0x2,d2                 	| [$696b: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x80,d0                         	| [$696d: cmpa   #$80]
	jne	l_6979                             	| [$696f: bne    $6979]
	GET_REG_ADDRESS	0x20,d2                	| [$6971: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x50,d0          | [$6974: suba   $50]
	jbsr	l_779d                            	| [$6976: jsr    $779d]
l_6979:
	move.b	#0x03,d0                        	| [$6979: ldd    #$03f8]
	move.w	#0x03f8,d1                      	| [$6979: ldd    #$03f8]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$697c: std    $e,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x80,d0                        	| [$697e: lda    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$6980: suba   $2,x]
	sub.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$6982: sta    $51]
	move.b	#0x80,d0                        	| [$6984: lda    #$80]
	OP_R_ON_DP_ADDRESS	add,0x50,d0          | [$6986: adda   $50]
	GET_REG_ADDRESS	0x2,d2                 	| [$6988: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$698a: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3a,d2                	| [$698c: inc    $3a,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_783e                            	| [$698f: jsr    $783e]
	GET_REG_ADDRESS	0x20,d2                	| [$6992: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x50,d0          | [$6995: suba   $50]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$6997: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$6999: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0xe0,d0                        	| [$699c: lda    #$e0]
	GET_REG_ADDRESS	screen_straight_1a,d2                	| [$699e: suba   $1a,x]
	sub.b	(a0),d0                          	| [...]
	jcs	l_69a8                             	| [$69a1: bcs    $69a8]
	jbsr	l_779d                            	| [$69a3: jsr    $779d]
	jra	l_69ac                             	| [$69a6: bra    $69ac]
l_69a8:
	neg.b	d0                               	| [$69a8: nega]
	jbsr	l_7806                            	| [$69a9: jsr    $7806]
l_69ac:
	GET_REG_ADDRESS	0x31,d2                	| [$69ac: ldu    $31,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	subq.w	#0x1,d4                         	| [$69af: leau   -$1,u]
	GET_REG_ADDRESS	0x31,d2                	| [$69b1: stu    $31,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xd8,d0         | [$69b4: lda    $d8]
	jne	l_69c4                             	| [$69b6: bne    $69c4]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$69b8: lda    $19]
	addq.b	#1,d0                           	| [$69ba: inca]
	OP_W_ON_DP_ADDRESS	move,0xd8,d0         | [$69bb: sta    $d8]
	GET_REG_ADDRESS	0x20,d2                	| [$69bd: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xe6,d0         | [$69c0: sta    $e6]
	OP_W_ON_DP_ADDRESS	addq,0xdd,#1         | [$69c2: inc    $dd]
l_69c4:
	rts                                    	| [$69c4: rts]

l_69c5:
	jbsr	l_5982                            	| [$69c5: jsr    $5982]
	jbsr	l_787b                            	| [$69c8: jsr    $787b]
	jbsr	l_59b2                            	| [$69cb: jsr    $59b2]
	GET_REG_ADDRESS	0x2,d2                 	| [$69ce: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$69d0: adda   $20,x]
	add.b	(a0),d0                          	| [...]
	cmp.b	#0xd0,d0                         	| [$69d3: cmpa   #$d0]
	jcs	l_69e8                             	| [$69d5: bcs    $69e8]
	move.b	#0x2a,d0                        	| [$69d7: lda    #$2a]
	jbsr	l_4eb3                            	| [$69d9: jsr    $4eb3]
	GET_REG_ADDRESS	0,d2                   	| [$69dc: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xd0,d0                        	| [$69de: lda    #$d0]
	GET_REG_ADDRESS	0x2,d2                 	| [$69e0: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_783e                            	| [$69e2: jsr    $783e]
	jra	l_84a3                             	| [$69e5: jra    $84a3]
l_69e8:
	GET_REG_ADDRESS	0x2,d2                 	| [$69e8: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_783e                             	| [$69ea: jra    $783e]
l_69ed:
	jbsr	l_7455                            	| [$69ed: jsr    $7455]
	GET_REG_ADDRESS	0x1c,d2                	| [$69f0: lda    $1c,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x1e,d0                         	| [$69f3: cmpa   #$1e]
	jeq	l_69fe                             	| [$69f5: beq    $69fe]
	jbsr	l_84ef                            	| [$69f7: jsr    $84ef]
	GET_REG_ADDRESS	0x1c,d2                	| [$69fa: inc    $1c,x]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$69fd: rts]

l_69fe:
	GET_REG_ADDRESS	0,d2                   	| [$69fe: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3a,d2                	| [$6a00: inc    $3a,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xd0,d0                        	| [$6a03: lda    #$d0]
	GET_REG_ADDRESS	0x2,d2                 	| [$6a05: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0xdb,d0                        	| [$6a07: ldd    #$dbf4]
	move.w	#0xdbf4,d1                      	| [$6a07: ldd    #$dbf4]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$6a0a: std    $b,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_83bb                            	| [$6a0c: jsr    $83bb]
	GET_REG_ADDRESS	0x20,d2                	| [$6a0f: clr    $20,x]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$6a12: rts]

l_6a13:
	jbsr	l_5982                            	| [$6a13: jsr    $5982]
	jbsr	l_792a                            	| [$6a16: jsr    $792a]
	jbsr	l_787b                            	| [$6a19: jsr    $787b]
	jbsr	l_59b2                            	| [$6a1c: jsr    $59b2]
	jbsr	l_7759                            	| [$6a1f: jsr    $7759]
	GET_REG_ADDRESS	0xe,d2                 	| [$6a22: ldd    $e,x]
	LOAD_D                                 	| [$6a22: ldd    $e,x]
	sub.w	#0x0828,d1                       	| [$6a24: subd   #$0828]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcc	l_6a6d                             	| [$6a27: bcc    $6a6d]
	OP_R_ON_DP_ADDRESS	move,0xdc,d0         | [$6a29: lda    $dc]
	jne	l_6a52                             	| [$6a2b: bne    $6a52]
	GET_REG_ADDRESS	0xe,d2                 	| [$6a2d: ldd    $e,x]
	LOAD_D                                 	| [$6a2d: ldd    $e,x]
	sub.w	#0x0448,d1                       	| [$6a2f: subd   #$0448]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcs	l_6a51                             	| [$6a32: bcs    $6a51]
	move.b	#0x04,d0                        	| [$6a34: ldd    #$0448]
	move.w	#0x0448,d1                      	| [$6a34: ldd    #$0448]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$6a37: std    $e,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6a39: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
	move.b	#0x80,d0                        	| [$6a3b: lda    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$6a3d: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	sub.b	#0x80,d1                         	| [$6a3f: subb   #$80]
	GET_REG_ADDRESS	0x20,d2                	| [$6a41: stb    $20,x]
	move.b	d1,(a0)                         	| [...]
	jbsr	l_783e                            	| [$6a44: jsr    $783e]
	GET_REG_ADDRESS	0x20,d2                	| [$6a47: clr    $20,x]
	clr.b	(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$6a4a: lda    $19]
	addq.b	#1,d0                           	| [$6a4c: inca]
	OP_W_ON_DP_ADDRESS	move,0xdc,d0         | [$6a4d: sta    $dc]
	OP_W_ON_DP_ADDRESS	addq,0xde,#1         | [$6a4f: inc    $de]
l_6a51:
	rts                                    	| [$6a51: rts]

l_6a52:
	OP_R_ON_DP_ADDRESS	move,0xde,d0         | [$6a52: lda    $de]
	jeq	l_6a6c                             	| [$6a54: beq    $6a6c]
	GET_REG_ADDRESS	0xe,d2                 	| [$6a56: ldd    $e,x]
	LOAD_D                                 	| [$6a56: ldd    $e,x]
	sub.w	#0x0448,d1                       	| [$6a58: subd   #$0448]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jls	l_6a6c                             	| [$6a5b: bls    $6a6c]
	OP_W_ON_DP_ADDRESS	move,0x51,d1         | [$6a5d: stb    $51]
	move.b	#0x04,d0                        	| [$6a5f: ldd    #$0448]
	move.w	#0x0448,d1                      	| [$6a5f: ldd    #$0448]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$6a62: std    $e,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$6a64: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$6a67: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$6a69: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
l_6a6c:
	rts                                    	| [$6a6c: rts]

l_6a6d:
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$6a6d: stb    $50]
	GET_REG_ADDRESS	0x2,d2                 	| [$6a6f: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x80,d0                         	| [$6a71: cmpa   #$80]
	jne	l_6a7f                             	| [$6a73: bne    $6a7f]
	GET_REG_ADDRESS	0x20,d2                	| [$6a75: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x50,d0          | [$6a78: suba   $50]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$6a7a: sta    $51]
	jbsr	l_7806                            	| [$6a7c: jsr    $7806]
l_6a7f:
	move.b	#0x08,d0                        	| [$6a7f: ldd    #$0828]
	move.w	#0x0828,d1                      	| [$6a7f: ldd    #$0828]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$6a82: std    $e,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6a84: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x80,d0                         	| [$6a86: suba   #$80]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$6a88: sta    $51]
	move.b	#0x80,d0                        	| [$6a8a: lda    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$6a8c: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$6a8e: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3a,d2                	| [$6a90: inc    $3a,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$6a93: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x50,d0          | [$6a96: suba   $50]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$6a98: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$6a9a: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	* reached when a player finishes (swimming event)
	jbsr	select_arriving_swimming_sprite_84ea                            	| [$6a9d: jsr    $84ea]
	GET_REG_ADDRESS	screen_straight_1a,d2                	| [$6aa0: lda    $1a,x]
	move.b	(a0),d0                         	| [...]
	jmi	l_6aaa                             	| [$6aa3: bmi    $6aaa]
	jbsr	l_7806                            	| [$6aa5: jsr    $7806]
	jra	l_6aae                             	| [$6aa8: bra    $6aae]
l_6aaa:
	neg.b	d0                               	| [$6aaa: nega]
	jbsr	l_779d                            	| [$6aab: jsr    $779d]
l_6aae:
	GET_REG_ADDRESS	0xd,d2                 	| [$6aae: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	jne	l_6ab4                             	| [$6ab0: bne    $6ab4]
	OP_R_ON_DP_ADDRESS	move,0xd9,d0         | [$6ab2: lda    $d9]
l_6ab4:
	jne	l_6ac2                             	| [$6ab4: bne    $6ac2]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$6ab6: lda    $19]
	addq.b	#1,d0                           	| [$6ab8: inca]
	OP_W_ON_DP_ADDRESS	move,0xd9,d0         | [$6ab9: sta    $d9]
	GET_REG_ADDRESS	0x20,d2                	| [$6abb: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf2,d0         | [$6abe: sta    $f2]
	OP_W_ON_DP_ADDRESS	addq,0xdf,#1         | [$6ac0: inc    $df]
l_6ac2:
	jbsr	l_7980                            	| [$6ac2: jsr    $7980]
	movem.l	d2/d4,-(sp)                    	| [$6ac5: pshs   u,x]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$6ac7: lda    $19]
	OP_W_ON_DP_ADDRESS	move,0x77,d0         | [$6ac9: sta    $77]
	
	.ifndef	RELEASE
	move.w	#0xd55d,d4
	.endif
	lea	table_d55d,a4                  	| [$6acb: ldu   #table_d55d]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$6ace: lda    $19]
	asl.b	#1,d0                            	| [$6ad0: asla]
	JSR_A_INDEXED	A4                   	| [$6ad1: jsr    [a,u]] [jump_table]
	OP_R_ON_DP_ADDRESS	move,0x77,d0         | [$6ad3: lda    $77]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$6ad5: sta    $19]
	movem.l	(sp)+,d2/d4                    	| [$6ad7: puls   x,u]
	jra	l_84a3                             	| [$6ad9: jra    $84a3]

l_6adc:
	GET_REG_ADDRESS	0x20,d2                	| [$6adc: clr    $20,x]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$6adf: rts]

l_6ae0:
	jbsr	l_7dbd                            	| [$6ae0: jsr    $7dbd]
	jbsr	l_81a0                            	| [$6ae3: jsr    $81a0]
	move.w	#0x3508,d2                      	| [$6ae6: ldx    #$3508]
	move.b	#0x04,d1                        	| [$6ae9: ldb    #$04]
l_6aeb:
	GET_REG_ADDRESS	0,d2                   	| [$6aeb: tst    ,x]
	tst.b	(a0)                             	| [...]
	jne	l_6afa                             	| [$6aed: bne    $6afa]
	add.w	#0x20,d2                         	| [$6aef: leax   $20,x]
	subq.b	#1,d1                           	| [$6af2: decb]
	jne	l_6aeb                             	| [$6af3: bne    $6aeb]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$6af5: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$6af7: clr    event_sub_state_28]
	rts                                    	| [$6af9: rts]

l_6afa:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6afa: inc    event_sub_state_28]
	move.b	#0x1d,d0                        	| [$6afc: lda    #$1d]
	jbsr	l_4eb3                            	| [$6afe: jsr    $4eb3]
	rts                                    	| [$6b01: rts]

l_6b02:
	
	.ifndef	RELEASE
	move.w	#0xd565,d2
	.endif
	lea	table_d565,a2                  	| [$6b02: ldx   #table_d565]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6b05: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$6b07: asla]
	JMP_A_INDEXED	A2                   	| [$6b08: jra    [a,x]] [jump_table]
l_6b0a:
	move.w	#0x3290,d2                      	| [$6b0a: ldx    #$3290]
	move.w	#0xd569,d4                      	| [$6b0d: ldu    #$d569]
	move.b	#0x04,d0                        	| [$6b10: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6b12: sta    $48]
l_6b14:
	GET_REG_ADDRESS	0,d2                   	| [$6b14: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6b16: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$6b16: ldd    ,u++]
	GET_REG_ADDRESS	0x1,d2                 	| [$6b18: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.w	#0x20,d2                         	| [$6b1a: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6b1d: dec    $48]
	jne	l_6b14                             	| [$6b1f: bne    $6b14]
	move.w	#0x3508,d2                      	| [$6b21: ldx    #$3508]
	move.w	#0x3290,d4                      	| [$6b24: ldu    #$3290]
	move.b	#0x04,d1                        	| [$6b27: ldb    #$04]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$6b29: tst    $1a]
	jeq	l_6b39                             	| [$6b2b: beq    $6b39]
	move.b	#0x02,d1                        	| [$6b2d: ldb    #$02]
	add.w	#0x20,d4                         	| [$6b2f: leau   $20,u]
	OP_1_ON_DP_ADDRESS	tst,0x1b             | [$6b32: tst    $1b]
	jeq	l_6b39                             	| [$6b34: beq    $6b39]
	move.w	#0x3548,d2                      	| [$6b36: ldx    #$3548]
l_6b39:
	GET_REG_ADDRESS	0,d2                   	| [$6b39: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_6b3f                             	| [$6b3b: beq    $6b3f]
	GET_REG_ADDRESS	0,d4                   	| [$6b3d: inc    ,u]
	addq.b	#1,(a0)                         	| [...]
l_6b3f:
	add.w	#0x20,d2                         	| [$6b3f: leax   $20,x]
	add.w	#0x20,d4                         	| [$6b42: leau   $20,u]
	subq.b	#1,d1                           	| [$6b45: decb]
	jne	l_6b39                             	| [$6b46: bne    $6b39]
	move.b	#0x3c,d0                        	| [$6b48: lda    #$3c]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6b4a: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6b4c: inc    event_sub_state_2a]
	rts                                    	| [$6b4e: rts]

l_6b4f:
	move.b	#0x3c,d0                        	| [$6b4f: lda    #$3c]
	OP_R_ON_DP_ADDRESS	sub,0x2b,d0          | [$6b51: suba   $2b]
	move.b	#0x0f,d1                        	| [$6b53: ldb    #$0f]
	jbsr	l_a606                            	| [$6b55: jsr    $a606]
	cmp.b	#0x02,d1                         	| [$6b58: cmpb   #$02]
	jcs	l_6b5e                             	| [$6b5a: bcs    $6b5e]
	move.b	#0x02,d1                        	| [$6b5c: ldb    #$02]
l_6b5e:
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$6b5e: stb    $50]
	move.w	#0x3290,d2                      	| [$6b60: ldx    #$3290]
	move.b	#0x04,d0                        	| [$6b63: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6b65: sta    $48]
	OP_1_ON_DP_ADDRESS	clr,0x51             | [$6b67: clr    $51]
l_6b69:
	jbsr	l_8230                            	| [$6b69: jsr    $8230]
	OP_W_ON_DP_ADDRESS	addq,0x51,#1         | [$6b6c: inc    $51]
	add.w	#0x20,d2                         	| [$6b6e: leax   $20,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6b71: dec    $48]
	jne	l_6b69                             	| [$6b73: bne    $6b69]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6b75: dec    $2b]
	jne	l_6bcb                             	| [$6b77: bne    $6bcb]
	move.w	#0x3290,d2                      	| [$6b79: ldx    #$3290]
	move.b	#0x04,d0                        	| [$6b7c: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6b7e: sta    $48]
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$6b80: clr    $49]
l_6b82:
	GET_REG_ADDRESS	0,d2                   	| [$6b82: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_6b95                             	| [$6b84: beq    $6b95]
	GET_REG_ADDRESS	0x1,d2                 	| [$6b86: ldd    $1,x]
	LOAD_D                                 	| [$6b86: ldd    $1,x]
	add.b	#0x0a,d0                         	| [$6b88: adda   #$0a]
	move.l	d2,-(sp)                        	| [$6b8a: pshs   x]
	sub.w	#0x10,d2                         	| [$6b8c: leax   -$10,x]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6b8e: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_8253                            	| [$6b90: jsr    $8253]
	movem.l	(sp)+,d2                       	| [$6b93: puls   x]
l_6b95:
	add.w	#0x20,d2                         	| [$6b95: leax   $20,x]
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$6b98: inc    $49]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6b9a: dec    $48]
	jne	l_6b82                             	| [$6b9c: bne    $6b82]
	move.w	#0x3508,d2                      	| [$6b9e: ldx    #$3508]
	OP_1_ON_DP_ADDRESS	clr,0x77             | [$6ba1: clr    $77]
	move.b	#0x04,d0                        	| [$6ba3: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x54,d0         | [$6ba5: sta    $54]
l_6ba7:
	GET_REG_ADDRESS	0,d2                   	| [$6ba7: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_6bb7                             	| [$6ba9: beq    $6bb7]
	move.l	d2,-(sp)                        	| [$6bab: pshs   x]
	move.b	#0x03,d0                        	| [$6bad: lda    #$03]
	GET_ADDRESS	0x34e6                     	| [$6baf: sta    $34e6]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_80f6                            	| [$6bb2: jsr    $80f6]
	movem.l	(sp)+,d2                       	| [$6bb5: puls   x]
l_6bb7:
	add.w	#0x20,d2                         	| [$6bb7: leax   $20,x]
	OP_W_ON_DP_ADDRESS	addq,0x77,#1         | [$6bba: inc    $77]
	OP_W_ON_DP_ADDRESS	subq,0x54,#1         | [$6bbc: dec    $54]
	jne	l_6ba7                             	| [$6bbe: bne    $6ba7]
	move.b	#0x39,d0                        	| [$6bc0: lda    #$39]
	jbsr	l_4eb3                            	| [$6bc2: jsr    $4eb3]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$6bc5: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6bc7: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$6bc9: inc    $26]
l_6bcb:
	rts                                    	| [$6bcb: rts]

long_horse_6bcc:
	move.w	#0x30a0,d2                      	| [$6bcc: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd571,d4
	.endif
	lea	table_d571,a4                  	| [$6bcf: ldu   #table_d571]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6bd2: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$6bd4: asla]
	JMP_A_INDEXED	A4                   	| [$6bd5: jra    [a,u]] [jump_table]

l_6bd7:
	
	.ifndef	RELEASE
	move.w	#0xd58d,d4
	.endif
	lea	table_d58d,a4                  	| [$6bd7: ldu   #table_d58d]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6bda: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$6bdc: asla]
	JMP_A_INDEXED	A4                   	| [$6bdd: jra    [a,u]] [jump_table]

l_6bdf:
	jbsr	l_82a7                            	| [$6bdf: jsr    $82a7]
	move.b	#0x0c,d0                        	| [$6be2: ldd    #$0c10]
	move.w	#0x0c10,d1                      	| [$6be2: ldd    #$0c10]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$6be5: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x2d,d0                        	| [$6be8: lda    #$2d]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$6bea: sta    $c4]
	move.w	#0x3280,d2                      	| [$6bec: ldx    #$3280]
	jbsr	l_85a0                            	| [$6bef: jsr    $85a0]
	move.w	#0x32a0,d2                      	| [$6bf2: ldx    #$32a0]
	jbsr	l_85a0                            	| [$6bf5: jsr    $85a0]
	move.b	#0x1e,d0                        	| [$6bf8: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6bfa: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6bfc: inc    event_sub_state_2a]
	rts                                    	| [$6bfe: rts]

l_6bff:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6bff: dec    $2b]
	jne	l_6c0c                             	| [$6c01: bne    $6c0c]
	move.b	#0x27,d0                        	| [$6c03: lda    #$27]
	jbsr	l_4eb3                            	| [$6c05: jsr    $4eb3]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6c08: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6c0a: clr    event_sub_state_2a]
l_6c0c:
	rts                                    	| [$6c0c: rts]

l_6c0d:
	
	.ifndef	RELEASE
	move.w	#0xd591,d4
	.endif
	lea	table_d591,a4                  	| [$6c0d: ldu   #table_d591]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6c10: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$6c12: asla]
	JMP_A_INDEXED	A4                   	| [$6c13: jra    [a,u]] [jump_table]
l_6c15:
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$6c15: tst    game_playing_00]
	jeq	l_6c20                             	| [$6c17: beq    $6c20]
	jbsr	l_4fa1                            	| [$6c19: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$6c1c: anda   #$05]
	jne	l_6c4c                             	| [$6c1e: bne    $6c4c]
l_6c20:
	jbsr	l_579f                            	| [$6c20: jsr    $579f]
	move.w	#0x34f1,d4                      	| [$6c23: ldu    #$34f1]
	GET_REG_ADDRESS	0x1,d4                 	| [$6c26: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0f,d0                         	| [$6c28: cmpa   #$0f]
	jeq	l_6c6d                             	| [$6c2a: beq    $6c6d]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$6c2c: tst    game_playing_00]
	jne	l_6c34                             	| [$6c2e: bne    $6c34]
	cmp.b	#0x01,d0                         	| [$6c30: cmpa   #$01]
	jeq	l_6c4c                             	| [$6c32: beq    $6c4c]
l_6c34:
	GET_REG_ADDRESS	0,d4                   	| [$6c34: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jne	l_6c4b                             	| [$6c36: bne    $6c4b]
	GET_REG_ADDRESS	0x1,d4                 	| [$6c38: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0e,d0                         	| [$6c3a: cmpa   #$0e]
	jeq	l_6c46                             	| [$6c3c: beq    $6c46]
	cmp.b	#0x0b,d0                         	| [$6c3e: cmpa   #$0b]
	jeq	l_6c46                             	| [$6c40: beq    $6c46]
	cmp.b	#0x08,d0                         	| [$6c42: cmpa   #$08]
	jne	l_6c4b                             	| [$6c44: bne    $6c4b]
l_6c46:
	move.b	#0x38,d0                        	| [$6c46: lda    #$38]
	jbsr	l_4eb3                            	| [$6c48: jsr    $4eb3]
l_6c4b:
	rts                                    	| [$6c4b: rts]

l_6c4c:
	GET_ADDRESS	0x34f1                     	| [$6c4c: ldd    $34f1]
	LOAD_D                                 	| [$6c4c: ldd    $34f1]
	cmp.w	#0x0002,d1                       	| [$6c4f: cmpd   #$0002]
	jne	l_6c5b                             	| [$6c53: bne    $6c5b]
	OP_W_ON_DP_ADDRESS	addq,0xe7,#1         | [$6c55: inc    $e7]
	move.b	#0x8a,d1                        	| [$6c57: ldb    #$8a]
	jbsr	l_6c83                            	| [$6c59: bsr    $6c83]
l_6c5b:
	move.b	#0xd9,d0                        	| [$6c5b: ldd    #$d99f]
	move.w	#0xd99f,d1                      	| [$6c5b: ldd    #$d99f]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xab                    	| [$6c5e: std    $ab]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x34f1                     	| [$6c60: clr    $34f1]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34f2                     	| [$6c63: clr    $34f2]
	clr.b	(a0)                         	| [...]
	move.b	#0x05,d0                        	| [$6c66: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6c68: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6c6a: inc    event_sub_state_2a]
	rts                                    	| [$6c6c: rts]

l_6c6d:
	move.b	#0x0d,d0                        	| [$6c6d: lda    #$0d]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6c6f: sta    event_sub_state_28]
	move.b	#0x01,d0                        	| [$6c71: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$6c73: sta    $29]
	rts                                    	| [$6c75: rts]

l_6c76:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6c76: dec    $2b]
	jne	l_6c82                             	| [$6c78: bne    $6c82]
	move.b	#0x80,d1                        	| [$6c7a: ldb    #$80]
	jbsr	l_6c83                            	| [$6c7c: bsr    $6c83]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6c7e: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6c80: inc    event_sub_state_28]
l_6c82:
	rts                                    	| [$6c82: rts]

l_6c83:
	move.w	#0x2247,d4                      	| [$6c83: ldu    #$2247]
	move.w	#0xd595,d3                      	| [$6c86: ldy    #$d595]
	move.b	#0x02,d0                        	| [$6c8a: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6c8c: sta    $48]
l_6c8e:
	move.b	#0x02,d0                        	| [$6c8e: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$6c90: sta    $49]
l_6c92:
	GET_REG_ADDRESS	0,d3                   	| [$6c92: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$6c94: jsr    $422d]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$6c97: dec    $49]
	jne	l_6c92                             	| [$6c99: bne    $6c92]
	add.w	#0x3e,d4                         	| [$6c9b: leau   $3e,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$6c9e: dec    $48]
	jne	l_6c8e                             	| [$6ca0: bne    $6c8e]
	rts                                    	| [$6ca2: rts]

l_6ca3:
	move.w	#0xd5c2,d4                      	| [$6ca3: ldu    #$d5c2]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$6ca6: lda    current_level_68]
	move.b	#0x07,d1                        	| [$6ca8: ldb    #$07]
	jbsr	l_a606                            	| [$6caa: jsr    $a606]
	cmp.b	#0x05,d1                         	| [$6cad: cmpb   #$05]
	jcs	l_6cb3                             	| [$6caf: bcs    $6cb3]
	move.b	#0x05,d1                        	| [$6cb1: ldb    #$05]
l_6cb3:
	move.b	#0x03,d0                        	| [$6cb3: lda    #$03]
	jbsr	multiply_ab                       	| [$6cb5: mul]
	add.w	d1,d4                            	| [$6cb6: leau   d,u]
	GET_REG_ADDRESS	0,d4                   	| [$6cb8: ldd    ,u]
	LOAD_D                                 	| [$6cb8: ldd    ,u]
	GET_DP_ADDRESS	0x50                    	| [$6cba: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$6cbc: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$6cbe: sta    $52]
	OP_1_ON_DP_ADDRESS	clr,0x53             | [$6cc0: clr    $53]
	jbsr	l_b014                            	| [$6cc2: jsr    $b014]
	jbsr	l_59b2                            	| [$6cc5: jsr    $59b2]
	jbsr	l_58bb                            	| [$6cc8: jsr    $58bb]
	move.b	#0x03,d0                        	| [$6ccb: lda    #$03]
	jbsr	queue_event_4e9a                  	| [$6ccd: jsr    queue_event_4e9a]
	jbsr	l_5035                            	| [$6cd0: jsr    $5035]
	jbsr	l_615a                            	| [$6cd3: jsr    $615a]
	OP_1_ON_DP_ADDRESS	tst,0xa0             | [$6cd6: tst    $a0]
	jeq	l_6cdc                             	| [$6cd8: beq    $6cdc]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6cda: inc    event_sub_state_28]
l_6cdc:
	rts                                    	| [$6cdc: rts]

l_6cdd:
	jbsr	l_59b2                            	| [$6cdd: jsr    $59b2]
	jbsr	l_58bb                            	| [$6ce0: jsr    $58bb]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$6ce3: clr    $ca]
	jbsr	l_5035                            	| [$6ce5: jsr    $5035]
	jbsr	l_5145                            	| [$6ce8: jsr    $5145]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$6ceb: lda    ,u] [video_address]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xab,d0                         	| [$6ced: cmpa   #$ab]
	jeq	l_6d1e                             	| [$6cef: beq    $6d1e]
	jbsr	l_4fa1                            	| [$6cf1: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$6cf4: anda   #$02]
	jne	l_6d06                             	| [$6cf6: bne    $6d06]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$6cf8: tst    game_playing_00]
	jne	l_6d1d                             	| [$6cfa: bne    $6d1d]
	jbsr	l_579f                            	| [$6cfc: jsr    $579f]
	GET_ADDRESS	0x34f1                     	| [$6cff: lda    $34f1]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0a,d0                         	| [$6d02: cmpa   #$0a]
	jne	l_6d1d                             	| [$6d04: bne    $6d1d]
l_6d06:
	jbsr	l_7ac1                            	| [$6d06: jsr    $7ac1]
	move.b	#0x0e,d0                        	| [$6d09: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$6d0b: jsr    queue_sound_event_4ead]
	OP_1_ON_DP_ADDRESS	tst,0xee             | [$6d0e: tst    $ee]
	jeq	l_6d17                             	| [$6d10: beq    $6d17]
	move.b	#0x22,d0                        	| [$6d12: lda    #$22]
	jbsr	queue_sound_event_4ead            	| [$6d14: jsr    queue_sound_event_4ead]
l_6d17:
	OP_1_ON_DP_ADDRESS	clr,0xc5             | [$6d17: clr    $c5]
	OP_W_ON_DP_ADDRESS	addq,0xa0,#1         | [$6d19: inc    $a0]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6d1b: inc    event_sub_state_28]
l_6d1d:
	rts                                    	| [$6d1d: rts]

l_6d1e:
	move.b	#0xd9,d0                        	| [$6d1e: ldd    #$d9ad]
	move.w	#0xd9ad,d1                      	| [$6d1e: ldd    #$d9ad]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$6d21: std    $b,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_82b7                            	| [$6d23: jsr    $82b7]
	jbsr	l_5b7f                            	| [$6d26: jsr    $5b7f]
	GET_REG_ADDRESS	0x2,d2                 	| [$6d29: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$6d2b: adda   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$6d2d: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x08,d0                        	| [$6d2f: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$6d31: sta    $29]
	move.b	#0x0c,d0                        	| [$6d33: lda    #$0c]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6d35: sta    event_sub_state_28]
	rts                                    	| [$6d37: rts]

l_6d38:
	
	.ifndef	RELEASE
	move.w	#0xd599,d4
	.endif
	lea	table_d599,a4                  	| [$6d38: ldu   #table_d599]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$6d3b: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$6d3d: asla]
	JMP_A_INDEXED	A4                   	| [$6d3e: jra    [a,u]] [jump_table]
l_6d40:
	move.w	#0xd59f,d4                      	| [$6d40: ldu    #$d59f]
	OP_R_ON_DP_ADDRESS	move,0xeb,d0         | [$6d43: lda    $eb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$6d45: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6d47: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$6d49: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x0c,d0                         	| [$6d4b: adda   #$0c]
	GET_REG_ADDRESS	0x2,d2                 	| [$6d4d: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8545                            	| [$6d4f: jsr    $8545]
	OP_1_ON_DP_ADDRESS	tst,0xee             | [$6d52: tst    $ee]
	jeq	l_6d5e                             	| [$6d54: beq    $6d5e]
	move.w	#0x24c7,d4                      	| [$6d56: ldu    #$24c7]
	move.w	#0xd5b1,d2                      	| [$6d59: ldx    #$d5b1]
	jbsr	l_6d74                            	| [$6d5c: bsr    $6d74]
l_6d5e:
	move.b	#0x06,d0                        	| [$6d5e: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$6d60: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6d62: inc    event_sub_state_2a]
	rts                                    	| [$6d64: rts]

l_6d65:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$6d65: dec    $2b]
	jne	l_6d73                             	| [$6d67: bne    $6d73]
	move.w	#0x24c7,d4                      	| [$6d69: ldu    #$24c7]
	move.w	#0xd5a6,d2                      	| [$6d6c: ldx    #$d5a6]
	jbsr	l_6d74                            	| [$6d6f: bsr    $6d74]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$6d71: inc    event_sub_state_2a]
l_6d73:
	rts                                    	| [$6d73: rts]

l_6d74:
	move.b	#0x02,d0                        	| [$6d74: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$6d76: sta    $65]
	GET_REG_ADDRESS	0,d2                   	| [$6d78: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x10,d0         | [$6d7a: lda    $10]
	and.b	#0x20,d0                         	| [$6d7c: anda   #$20]
	jne	l_6d86                             	| [$6d7e: bne    $6d86]
	cmp.b	#0xa0,d1                         	| [$6d80: cmpb   #$a0]
	jne	l_6d86                             	| [$6d82: bne    $6d86]
	move.b	#0xc0,d1                        	| [$6d84: ldb    #$c0]
l_6d86:
	move.b	#0x05,d0                        	| [$6d86: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x66,d0         | [$6d88: sta    $66]
l_6d8a:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$6d8a: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d2                   	| [$6d8e: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$6d90: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x66,#1         | [$6d92: dec    $66]
	jne	l_6d8a                             	| [$6d94: bne    $6d8a]
	add.w	#0x3b,d4                         	| [$6d96: leau   $3b,u]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$6d99: dec    $65]
	jne	l_6d86                             	| [$6d9b: bne    $6d86]
	rts                                    	| [$6d9d: rts]

l_6d9e:
	GET_DP_ADDRESS	speed_msb_b0            	| [$6d9e: ldd    speed_msb_b0]
	LOAD_D                                 	| [$6d9e: ldd    speed_msb_b0]
	GET_DP_ADDRESS	0xf0                    	| [$6da0: std    $f0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0xb2                    	| [$6da2: ldd    $b2]
	LOAD_D                                 	| [$6da2: ldd    $b2]
	GET_DP_ADDRESS	0xf2                    	| [$6da4: std    $f2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x01,d0                        	| [$6da6: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$6da6: ldd    #$0101]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$6da9: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xb2             | [$6dab: clr    $b2]
	OP_1_ON_DP_ADDRESS	clr,0xb3             | [$6dad: clr    $b3]
	move.w	#0x3140,d4                      	| [$6daf: ldu    #$3140]
	move.w	#0x337a,d3                      	| [$6db2: ldy    #$337a]
	jbsr	l_6e2b                            	| [$6db6: bsr    $6e2b]
	jbsr	l_c027                            	| [$6db8: jsr    $c027]
	GET_REG_ADDRESS	0x1,d2                 	| [$6dbb: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6dbd: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	move.w	#0x337a,d4                      	| [$6dbf: ldu    #$337a]
	move.w	#0x3140,d3                      	| [$6dc2: ldy    #$3140]
	jbsr	l_6e2b                            	| [$6dc6: bsr    $6e2b]
	GET_DP_ADDRESS	0xf0                    	| [$6dc8: ldd    $f0]
	LOAD_D                                 	| [$6dc8: ldd    $f0]
	GET_DP_ADDRESS	speed_msb_b0            	| [$6dca: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0xf2                    	| [$6dcc: ldd    $f2]
	LOAD_D                                 	| [$6dcc: ldd    $f2]
	GET_DP_ADDRESS	0xb2                    	| [$6dce: std    $b2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0xbc,#1         | [$6dd0: dec    $bc]
	move.w	#0x3146,d4                      	| [$6dd2: ldu    #$3146]
	move.w	#0x337a,d3                      	| [$6dd5: ldy    #$337a]
	jbsr	l_6e2b                            	| [$6dd9: bsr    $6e2b]
	jbsr	l_c027                            	| [$6ddb: jsr    $c027]
	OP_W_ON_DP_ADDRESS	move,0xc0,d0         | [$6dde: sta    $c0]
	move.w	#0x337a,d4                      	| [$6de0: ldu    #$337a]
	move.w	#0x3146,d3                      	| [$6de3: ldy    #$3146]
	jbsr	l_6e2b                            	| [$6de7: bsr    $6e2b]
	OP_R_ON_DP_ADDRESS	move,0xc5,d0         | [$6de9: lda    $c5]
	jne	l_6e05                             	| [$6deb: bne    $6e05]
	GET_REG_ADDRESS	0x2,d2                 	| [$6ded: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0xc0,d0          | [$6def: adda   $c0]
	cmp.b	#0x70,d0                         	| [$6df1: cmpa   #$70]
	jcs	l_6e01                             	| [$6df3: bcs    $6e01]
	sub.b	#0x70,d0                         	| [$6df5: suba   #$70]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$6df7: sta    $c7]
	move.b	#0x70,d0                        	| [$6df9: lda    #$70]
	GET_REG_ADDRESS	0x2,d2                 	| [$6dfb: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$6dfd: inc    $c5]
	jra	l_6e09                             	| [$6dff: bra    $6e09]
l_6e01:
	GET_REG_ADDRESS	0x2,d2                 	| [$6e01: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_6e0c                             	| [$6e03: bra    $6e0c]
l_6e05:
	OP_R_ON_DP_ADDRESS	move,0xc0,d0         | [$6e05: lda    $c0]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$6e07: sta    $c7]
l_6e09:
	jbsr	l_590e                            	| [$6e09: jsr    $590e]
l_6e0c:
	jbsr	l_8545                            	| [$6e0c: jsr    $8545]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$6e0f: lda    $bc]
	cmp.b	#0x37,d0                         	| [$6e11: cmpa   #$37]
	jne	l_6e2a                             	| [$6e13: bne    $6e2a]
	GET_REG_ADDRESS	0,d2                   	| [$6e15: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x74,d0                        	| [$6e17: lda    #$74]
	GET_REG_ADDRESS	0x1,d2                 	| [$6e19: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_5027                            	| [$6e1b: jsr    $5027]
	move.b	#0x50,d0                        	| [$6e1e: lda    #$50]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$6e20: sta    $c4]
	OP_1_ON_DP_ADDRESS	clr,0xc5             | [$6e22: clr    $c5]
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$6e24: clr    $bc]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$6e26: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6e28: inc    event_sub_state_28]
l_6e2a:
	rts                                    	| [$6e2a: rts]

l_6e2b:
	GET_REG_ADDRESS	0,d4                   	| [$6e2b: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$6e2b: ldd    ,u++]
	GET_REG_ADDRESS	0,d3                   	| [$6e2d: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6e2f: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$6e2f: ldd    ,u++]
	GET_REG_ADDRESS	0,d3                   	| [$6e31: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$6e33: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$6e33: ldd    ,u++]
	GET_REG_ADDRESS	0,d3                   	| [$6e35: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$6e37: rts]

l_6e38:
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$6e38: lda    $bc]
	jne	l_6e43                             	| [$6e3a: bne    $6e43]
	move.b	#0x0e,d0                        	| [$6e3c: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$6e3e: jsr    queue_sound_event_4ead]
	jra	l_6e57                             	| [$6e41: bra    $6e57]
l_6e43:
	cmp.b	#0x24,d0                         	| [$6e43: cmpa   #$24]
	jeq	l_6ef5                             	| [$6e45: lbeq   $6ef5]
	move.b	#0x0c,d1                        	| [$6e49: ldb    #$0c]
	jbsr	l_a606                            	| [$6e4b: jsr    $a606]
	tst.b	d0                               	| [$6e4e: tsta]
	jne	l_6e5a                             	| [$6e4f: bne    $6e5a]
	GET_REG_ADDRESS	0x2,d2                 	| [$6e51: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x02,d0                         	| [$6e53: adda   #$02]
	GET_REG_ADDRESS	0x2,d2                 	| [$6e55: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_6e57:
	jbsr	l_8560                            	| [$6e57: jsr    $8560]
l_6e5a:
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$6e5a: inc    $bc]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$6e5c: tst    game_playing_00]
	jne	l_6e66                             	| [$6e5e: bne    $6e66]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$6e60: lda    $bc]
	cmp.b	#0x1e,d0                         	| [$6e62: cmpa   #$1e]
	jeq	l_6e6f                             	| [$6e64: beq    $6e6f]
l_6e66:
	jbsr	l_4fa1                            	| [$6e66: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$6e69: anda   #$02]
	jeq	l_6ef4                             	| [$6e6b: lbeq   $6ef4]
l_6e6f:
	GET_ADDRESS	0x362d                     	| [$6e6f: clr    $362d]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x362f                     	| [$6e72: clr    $362f]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6e75: ldd    $1,x]
	LOAD_D                                 	| [$6e75: ldd    $1,x]
	add.b	#0x12,d0                         	| [$6e77: adda   #$12]
	add.b	#0x14,d1                         	| [$6e79: addb   #$14]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$6e7b: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xd5bc,d4                      	| [$6e7d: ldu    #$d5bc]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$6e80: lda    $bc]
	move.b	#0x06,d1                        	| [$6e82: ldb    #$06]
	jbsr	l_a606                            	| [$6e84: jsr    $a606]
	cmp.b	#0x05,d1                         	| [$6e87: cmpb   #$05]
	jcs	l_6e8d                             	| [$6e89: bcs    $6e8d]
	move.b	#0x05,d1                        	| [$6e8b: ldb    #$05]
l_6e8d:
	OP_W_ON_DP_ADDRESS	move,0xf4,d1         | [$6e8d: stb    $f4]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$6e8f: lda    b,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$6e91: sta    $c4]
	move.w	#0xd5ce,d4                      	| [$6e93: ldu    #$d5ce]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$6e96: lda    current_level_68]
	move.b	#0x07,d1                        	| [$6e98: ldb    #$07]
	jbsr	l_a606                            	| [$6e9a: jsr    $a606]
	cmp.b	#0x05,d1                         	| [$6e9d: cmpb   #$05]
	jcs	l_6ea3                             	| [$6e9f: bcs    $6ea3]
	move.b	#0x05,d1                        	| [$6ea1: ldb    #$05]
l_6ea3:
	move.b	#0x03,d0                        	| [$6ea3: lda    #$03]
	jbsr	multiply_ab                       	| [$6ea5: mul]
	add.w	d1,d4                            	| [$6ea6: leau   d,u]
	GET_REG_ADDRESS	0,d4                   	| [$6ea8: ldd    ,u]
	LOAD_D                                 	| [$6ea8: ldd    ,u]
	GET_DP_ADDRESS	speed_msb_b0            	| [$6eaa: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$6eac: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xb2,d0         | [$6eae: sta    $b2]
	OP_1_ON_DP_ADDRESS	clr,0xb3             | [$6eb0: clr    $b3]
	move.w	#0x30b0,d4                      	| [$6eb2: ldu    #$30b0]
	OP_R_ON_DP_ADDRESS	move,0xeb,d0         | [$6eb5: lda    $eb]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6eb7: sta    $48]
	jbsr	l_5120                            	| [$6eb9: jsr    $5120]
	move.b	#0x05,d0                        	| [$6ebc: lda    #$05]
	OP_R_ON_DP_ADDRESS	sub,0xf4,d0          | [$6ebe: suba   $f4]
	lsr.b	#1,d0                            	| [$6ec0: lsra]
	PUSH_SR
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$6ec1: sta    $49]
	POP_SR
	jcc	l_6ecc                             	| [$6ec3: bcc    $6ecc]
	move.b	#0x05,d0                        	| [$6ec5: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6ec7: sta    $48]
	jbsr	l_510f                            	| [$6ec9: jsr    $510f]
l_6ecc:
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$6ecc: lda    $49]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$6ece: sta    $48]
	jbsr	l_5120                            	| [$6ed0: jsr    $5120]
	OP_R_ON_DP_ADDRESS	move,0xf4,d0         | [$6ed3: lda    $f4]
	move.b	d0,d1                           	| [$6ed5: tfr    a,b]
	add.b	#0x08,d0                         	| [$6ed7: adda   #$08]
	add.b	#0x04,d1                         	| [$6ed9: addb   #$04]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$6edb: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x8e,d0                        	| [$6ede: lda    #$8e]
	jbsr	queue_sound_event_4ead            	| [$6ee0: jsr    queue_sound_event_4ead]
	move.b	#0xff,d0                        	| [$6ee3: lda    #$ff]
	jbsr	queue_sound_event_4ead            	| [$6ee5: jsr    queue_sound_event_4ead]
	move.b	#0x1b,d0                        	| [$6ee8: lda    #$1b]
	jbsr	queue_sound_event_4ead            	| [$6eea: jsr    queue_sound_event_4ead]
	move.b	#0x1c,d0                        	| [$6eed: lda    #$1c]
	jbsr	queue_sound_event_4ead            	| [$6eef: jsr    queue_sound_event_4ead]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6ef2: inc    event_sub_state_28]
l_6ef4:
	rts                                    	| [$6ef4: rts]

l_6ef5:
	GET_ADDRESS	0x362d                     	| [$6ef5: clr    $362d]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x362f                     	| [$6ef8: clr    $362f]
	clr.b	(a0)                         	| [...]
	move.b	#0x1e,d0                        	| [$6efb: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$6efd: sta    $c4]
	move.b	#0x09,d0                        	| [$6eff: lda    #$09]
	OP_R_ON_DP_ADDRESS	move,0xeb,d1         | [$6f01: ldb    $eb]
	lsr.b	#1,d1                            	| [$6f03: lsrb]
	add.b	#0x04,d1                         	| [$6f04: addb   #$04]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$6f06: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x8e,d0                        	| [$6f09: lda    #$8e]
	jbsr	l_4eb3                            	| [$6f0b: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$6f0e: lda    #$ff]
	jbsr	l_4eb3                            	| [$6f10: jsr    $4eb3]
	move.b	#0x07,d0                        	| [$6f13: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$6f15: sta    event_sub_state_28]
	rts                                    	| [$6f17: rts]

l_6f18:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$6f18: lda    $0f]
	lsr.b	#1,d0                            	| [$6f1a: lsra]
	jcs	l_6f2c                             	| [$6f1b: bcs    $6f2c]
	jbsr	l_c027                            	| [$6f1d: jsr    $c027]
	GET_REG_ADDRESS	0x1,d2                 	| [$6f20: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	cmp.b	#0x56,d1                         	| [$6f22: cmpb   #$56]
	jcs	l_6fcf                             	| [$6f24: lbcs   $6fcf]
	GET_REG_ADDRESS	0x1,d2                 	| [$6f28: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	jra	l_6f2d                             	| [$6f2a: bra    $6f2d]
l_6f2c:
	moveq	#0,d0                            	| [$6f2c: clra]
l_6f2d:
	OP_1_ON_DP_ADDRESS	tst,0xc5             | [$6f2d: tst    $c5]
	jne	l_6f47                             	| [$6f2f: bne    $6f47]
	GET_REG_ADDRESS	0x2,d2                 	| [$6f31: adda   $2,x]
	add.b	(a0),d0                          	| [...]
	cmp.b	#0xd0,d0                         	| [$6f33: cmpa   #$d0]
	jcs	l_6f43                             	| [$6f35: bcs    $6f43]
	sub.b	#0xd0,d0                         	| [$6f37: suba   #$d0]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$6f39: sta    $c7]
	move.b	#0xd0,d0                        	| [$6f3b: lda    #$d0]
	GET_REG_ADDRESS	0x2,d2                 	| [$6f3d: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$6f3f: inc    $c5]
	jra	l_6f49                             	| [$6f41: bra    $6f49]
l_6f43:
	GET_REG_ADDRESS	0x2,d2                 	| [$6f43: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_6f4c                             	| [$6f45: bra    $6f4c]
l_6f47:
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$6f47: sta    $c7]
l_6f49:
	jbsr	l_590e                            	| [$6f49: jsr    $590e]
l_6f4c:
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$6f4c: tst    game_playing_00]
	jne	l_6f5c                             	| [$6f4e: bne    $6f5c]
	OP_R_ON_DP_ADDRESS	move,nb_long_horse_turns_ef,d0| [$6f50: lda    nb_long_horse_turns_ef]
	cmp.b	#0x06,d0                         	| [$6f52: cmpa   #$06]
	jne	l_6f5c                             	| [$6f54: bne    $6f5c]
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$6f56: lda    $e6]
	cmp.b	#0x02,d0                         	| [$6f58: cmpa   #$02]
	jeq	l_6f72                             	| [$6f5a: beq    $6f72]
l_6f5c:
	jbsr	l_5bc0                            	| [$6f5c: jsr    $5bc0]
	tst.b	d1                               	| [$6f5f: tstb]
	jeq	l_6f72                             	| [$6f60: beq    $6f72]
	OP_W_ON_DP_ADDRESS	addq,0xe6,#1         | [$6f62: inc    $e6]
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$6f64: lda    $e6]
	cmp.b	#0x06,d0                         	| [$6f66: cmpa   #$06]
	jne	l_6f6c                             	| [$6f68: bne    $6f6c]
	OP_W_ON_DP_ADDRESS	addq,nb_long_horse_turns_ef,#1| [$6f6a: inc    nb_long_horse_turns_ef]
l_6f6c:
	cmp.b	#0x08,d0                         	| [$6f6c: cmpa   #$08]
	jne	l_6f72                             	| [$6f6e: bne    $6f72]
	OP_1_ON_DP_ADDRESS	clr,0xe6             | [$6f70: clr    $e6]
l_6f72:
	jbsr	l_858d                            	| [$6f72: jsr    $858d]
	jbsr	l_5035                            	| [$6f75: jsr    $5035]
	GET_REG_ADDRESS	0x3,d2                 	| [$6f78: ldu    $3,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.b	#0x02,d1                        	| [$6f7a: ldb    #$02]
	GET_REG_UNCHECKED_ADDRESS	-0x40,d4               	| [$6f7c: lda    -$40,u] [video_address]
	move.b	(a0),d0                         	| [...]
l_6f7f:
	cmp.b	#0xf0,d0                         	| [$6f7f: cmpa   #$f0]
	jeq	l_6f93                             	| [$6f81: beq    $6f93]
	cmp.b	#0xf1,d0                         	| [$6f83: cmpa   #$f1]
	jeq	l_6f93                             	| [$6f85: beq    $6f93]
	cmp.b	#0xf2,d0                         	| [$6f87: cmpa   #$f2]
	jeq	l_6f93                             	| [$6f89: beq    $6f93]
	subq.b	#1,d1                           	| [$6f8b: decb]
	jeq	l_6fb4                             	| [$6f8c: beq    $6fb4]
	GET_REG_UNCHECKED_ADDRESS	-0x3f,d4               	| [$6f8e: lda    -$3f,u] [video_address]
	move.b	(a0),d0                         	| [...]
	jra	l_6f7f                             	| [$6f91: bra    $6f7f]
l_6f93:
	move.b	#0x6e,d0                        	| [$6f93: lda    #$6e]
	GET_REG_ADDRESS	0x1,d2                 	| [$6f95: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_5027                            	| [$6f97: jsr    $5027]
	OP_W_ON_DP_ADDRESS	addq,0xff,#1         | [$6f9a: inc    $ff]
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$6f9c: clr    $bc]
	move.b	#0x1e,d0                        	| [$6f9e: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$6fa0: sta    $c4]
	move.b	#0x08,d0                        	| [$6fa2: ldd    #$0804]
	move.w	#0x0804,d1                      	| [$6fa2: ldd    #$0804]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$6fa5: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$6fa8: clra]
	jbsr	queue_sound_event_4ead            	| [$6fa9: jsr    queue_sound_event_4ead]
	move.b	#0x23,d0                        	| [$6fac: lda    #$23]
	jbsr	queue_sound_event_4ead            	| [$6fae: jsr    queue_sound_event_4ead]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$6fb1: inc    event_sub_state_28]
	rts                                    	| [$6fb3: rts]

l_6fb4:
	move.w	#0x2460,d4                      	| [$6fb4: ldu    #$2460]
	OP_R_ON_DP_ADDRESS	move,nb_long_horse_turns_ef,d0| [$6fb7: lda    nb_long_horse_turns_ef]
	jpl	l_6fbc                             	| [$6fb9: bpl    $6fbc]
	moveq	#0,d0                            	| [$6fbb: clra]
l_6fbc:
	jbsr	l_513a                            	| [$6fbc: jsr    $513a]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$6fbf: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$6fc1: lda    $49]
	jne	l_6fc7                             	| [$6fc3: bne    $6fc7]
	move.b	#0x10,d0                        	| [$6fc5: lda    #$10]
l_6fc7:
	jbsr	write_char_and_move_cursor_422c   	| [$6fc7: jsr    write_char_and_move_cursor_422c]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$6fca: lda    $48]
	jra	write_char_and_move_cursor_422c    	| [$6fcc: jra    write_char_and_move_cursor_422c]
l_6fcf:
	moveq	#0,d0                            	| [$6fcf: clra]
	jbsr	queue_sound_event_4ead            	| [$6fd0: jsr    queue_sound_event_4ead]
	OP_1_ON_DP_ADDRESS	tst,0xe7             | [$6fd3: tst    $e7]
	jeq	l_6fdb                             	| [$6fd5: beq    $6fdb]
	move.b	#0x03,d0                        	| [$6fd7: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0xe6,d0         | [$6fd9: sta    $e6]
l_6fdb:
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$6fdb: lda    $e6]
	OP_W_ON_DP_ADDRESS	move,0xfe,d0         | [$6fdd: sta    $fe]
	move.w	#0xd5e0,d4                      	| [$6fdf: ldu    #$d5e0]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$6fe2: lda    a,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf5,d0         | [$6fe4: sta    $f5]
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$6fe6: lda    $e6]
	jeq	l_6ff4                             	| [$6fe8: beq    $6ff4]
	move.b	#0x08,d1                        	| [$6fea: ldb    #$08]
	cmp.b	#0x05,d0                         	| [$6fec: cmpa   #$05]
	jcs	l_6ff6                             	| [$6fee: bcs    $6ff6]
	cmp.b	#0x06,d0                         	| [$6ff0: cmpa   #$06]
	jeq	l_6ff9                             	| [$6ff2: beq    $6ff9]
l_6ff4:
	move.b	#0x0a,d1                        	| [$6ff4: ldb    #$0a]
l_6ff6:
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d1| [$6ff6: stb    event_sub_state_28]
	rts                                    	| [$6ff8: rts]

l_6ff9:
	OP_R_ON_DP_ADDRESS	move,nb_long_horse_turns_ef,d0| [$6ff9: lda    nb_long_horse_turns_ef]
	cmp.b	#0x01,d0                         	| [$6ffb: cmpa   #$01]
	jne	l_7002                             	| [$6ffd: bne    $7002]
	GET_ADDRESS	0x34e7                     	| [$6fff: inc    $34e7]
	addq.b	#1,(a0)                         	| [...]
l_7002:
	move.b	#0x09,d1                        	| [$7002: ldb    #$09]
	jra	l_6ff6                             	| [$7004: bra    $6ff6]
l_7006:
	
	.ifndef	RELEASE
	move.w	#0xd5e8,d4
	.endif
	lea	table_d5e8,a4                  	| [$7006: ldu   #table_d5e8]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$7009: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$700b: asla]
	JMP_A_INDEXED	A4                   	| [$700c: jra    [a,u]] [jump_table]

l_700e:
	jbsr	l_c027                            	| [$700e: jsr    $c027]
	GET_REG_ADDRESS	0x2,d2                 	| [$7011: adda   $2,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7013: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$7015: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	OP_1_ON_DP_ADDRESS	tst,0xff             | [$7017: tst    $ff]
	jeq	l_7021                             	| [$7019: beq    $7021]
	cmp.b	#0x4a,d1                         	| [$701b: cmpb   #$4a]
	jcs	l_702a                             	| [$701d: bcs    $702a]
	jra	l_7025                             	| [$701f: bra    $7025]
l_7021:
	cmp.b	#0x56,d1                         	| [$7021: cmpb   #$56]
	jcs	l_702a                             	| [$7023: bcs    $702a]
l_7025:
	GET_REG_ADDRESS	0x1,d2                 	| [$7025: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	jra	l_85c3                             	| [$7027: jra    $85c3]

l_702a:
	move.b	#0x5c,d0                        	| [$702a: lda    #$5c]
	OP_1_ON_DP_ADDRESS	tst,0xff             | [$702c: tst    $ff]
	jra	l_7032                             	| [$702e: bra    $7032]
	move.b	#0x50,d0                        	| [$7030: lda    #$50]
l_7032:
	GET_REG_ADDRESS	0x1,d2                 	| [$7032: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_85c9                            	| [$7034: jsr    $85c9]
	move.b	#0x37,d0                        	| [$7037: lda    #$37]
	jbsr	l_4eb3                            	| [$7039: jsr    $4eb3]
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$703c: clr    $bc]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$703e: inc    event_sub_state_2a]
	rts                                    	| [$7040: rts]

l_7041:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$7041: lda    $0f]
	lsr.b	#1,d0                            	| [$7043: lsra]
	jcs	l_7068                             	| [$7044: bcs    $7068]
	move.w	#0xd5f2,d4                      	| [$7046: ldu    #$d5f2]
	OP_R_ON_DP_ADDRESS	move,0xbc,d1         | [$7049: ldb    $bc]
	cmp.b	#0x13,d1                         	| [$704b: cmpb   #$13]
	jeq	l_7069                             	| [$704d: beq    $7069]
	move.b	#0x5c,d0                        	| [$704f: lda    #$5c]
	OP_1_ON_DP_ADDRESS	tst,0xff             | [$7051: tst    $ff]
	jeq	l_7057                             	| [$7053: beq    $7057]
	move.b	#0x50,d0                        	| [$7055: lda    #$50]
l_7057:
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7057: adda   b,u]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$7059: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$705b: lda    $0f]
                                         | [$705d: lsra]
	lsr.b	#2,d0                            	| [$705e: lsra]
	jcs	l_7063                             	| [$705f: bcs    $7063]
	GET_REG_ADDRESS	0x2,d2                 	| [$7061: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
l_7063:
	jbsr	l_85c9                            	| [$7063: jsr    $85c9]
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$7066: inc    $bc]
l_7068:
	rts                                    	| [$7068: rts]

l_7069:
	move.b	#0x1e,d0                        	| [$7069: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$706b: sta    $29]
	move.b	#0x0d,d0                        	| [$706d: lda    #$0d]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$706f: sta    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$7071: clr    event_sub_state_2a]
	rts                                    	| [$7073: rts]

l_7074:
	jbsr	l_8077                            	| [$7074: jsr    $8077]
	move.w	#0x30a0,d2                      	| [$7077: ldx    #$30a0]
	
	.ifndef	RELEASE
	move.w	#0xd5ec,d4
	.endif
	lea	table_d5ec,a4                  	| [$707a: ldu   #table_d5ec]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$707d: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$707f: asla]
	JMP_A_INDEXED	A4                   	| [$7080: jra    [a,u]] [jump_table]
l_7082:
	move.b	#0x5c,d0                        	| [$7082: lda    #$5c]
	GET_REG_ADDRESS	0x1,d2                 	| [$7084: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x22,d0                        	| [$7086: lda    #$22]
	jbsr	queue_sound_event_4ead            	| [$7088: jsr    queue_sound_event_4ead]
	OP_R_ON_DP_ADDRESS	move,0xf5,d0         | [$708b: lda    $f5]
	jne	l_7092                             	| [$708d: bne    $7092]
	addq.b	#1,d0                           	| [$708f: inca]
	jra	l_7097                             	| [$7090: bra    $7097]
l_7092:
	jbsr	l_85d9                            	| [$7092: jsr    $85d9]
	move.b	#0x1e,d0                        	| [$7095: lda    #$1e]
l_7097:
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$7097: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$7099: inc    event_sub_state_2a]
	rts                                    	| [$709b: rts]

l_709c:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$709c: dec    $2b]
	jne	l_70b0                             	| [$709e: bne    $70b0]
	jbsr	l_85cf                            	| [$70a0: jsr    $85cf]
	move.b	#0x1e,d0                        	| [$70a3: lda    #$1e]
	GET_ADDRESS	0x34e7                     	| [$70a5: tst    $34e7]
	tst.b	(a0)                             	| [...]
	jeq	l_70ac                             	| [$70a8: beq    $70ac]
	move.b	#0x80,d0                        	| [$70aa: lda    #$80]
l_70ac:
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$70ac: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$70ae: inc    event_sub_state_2a]
l_70b0:
	rts                                    	| [$70b0: rts]

l_70b1:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$70b1: dec    $2b]
	jne	l_70b9                             	| [$70b3: bne    $70b9]
	move.b	#0x0b,d0                        	| [$70b5: lda    #$0b]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$70b7: sta    event_sub_state_28]
l_70b9:
	rts                                    	| [$70b9: rts]

l_70ba:
	move.w	#0x30a0,d2                      	| [$70ba: ldx    #$30a0]
	move.w	#0xd5f2,d4                      	| [$70bd: ldu    #$d5f2]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$70c0: lda    $e8]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$70c2: lda    a,u]
	move.b	(a0),d0                         	| [...]
	add.b	#0x57,d0                         	| [$70c4: adda   #$57]
	GET_REG_ADDRESS	0x1,d2                 	| [$70c6: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xe8,#1         | [$70c8: inc    $e8]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$70ca: lda    $e8]
	cmp.b	#0x12,d0                         	| [$70cc: cmpa   #$12]
	jne	l_70d2                             	| [$70ce: bne    $70d2]
	OP_1_ON_DP_ADDRESS	clr,0xe8             | [$70d0: clr    $e8]
l_70d2:
	OP_R_ON_DP_ADDRESS	move,0xc5,d0         | [$70d2: lda    $c5]
	jne	l_70e2                             	| [$70d4: bne    $70e2]
	GET_REG_ADDRESS	0x2,d2                 	| [$70d6: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$70d8: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xd0,d0                         	| [$70da: cmpa   #$d0]
	jne	l_70e0                             	| [$70dc: bne    $70e0]
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$70de: inc    $c5]
l_70e0:
	jra	l_70f3                             	| [$70e0: bra    $70f3]
l_70e2:
	move.b	#0x01,d0                        	| [$70e2: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$70e4: sta    $c7]
	OP_W_ON_DP_ADDRESS	addq,0xe9,#1         | [$70e6: inc    $e9]
	OP_R_ON_DP_ADDRESS	move,0xe9,d0         | [$70e8: lda    $e9]
	cmp.b	#0x30,d0                         	| [$70ea: cmpa   #$30]
	jne	l_70f0                             	| [$70ec: bne    $70f0]
	OP_W_ON_DP_ADDRESS	addq,0xea,#1         | [$70ee: inc    $ea]
l_70f0:
	jbsr	l_590e                            	| [$70f0: jsr    $590e]
l_70f3:
	jbsr	l_858d                            	| [$70f3: jsr    $858d]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$70f6: lda    $e8]
	cmp.b	#0x01,d0                         	| [$70f8: cmpa   #$01]
	jne	l_710a                             	| [$70fa: bne    $710a]
	move.b	#0x23,d0                        	| [$70fc: lda    #$23]
	jbsr	l_4eb3                            	| [$70fe: jsr    $4eb3]
	OP_R_ON_DP_ADDRESS	move,0xea,d0         | [$7101: lda    $ea]
	jeq	l_710a                             	| [$7103: beq    $710a]
	jbsr	l_8063                            	| [$7105: jsr    $8063]
	OP_W_ON_DP_ADDRESS	subq,event_sub_state_28,#1| [$7108: dec    event_sub_state_28]
l_710a:
	rts                                    	| [$710a: rts]

l_710b:
	
	.ifndef	RELEASE
	move.w	#0xd605,d4
	.endif
	lea	table_d605,a4                  	| [$710b: ldu   #table_d605]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$710e: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$7110: asla]
	JMP_A_INDEXED	A4                   	| [$7111: jra    [a,u]] [jump_table]
l_7113:
	move.b	#0x56,d0                        	| [$7113: lda    #$56]
	GET_REG_ADDRESS	0x1,d2                 	| [$7115: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x64,d0                        	| [$7117: lda    #$64]
	jbsr	l_4eb3                            	| [$7119: jsr    $4eb3]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$711c: inc    event_sub_state_2a]
	rts                                    	| [$711e: rts]

l_711f:
	OP_R_ON_DP_ADDRESS	move,0xc5,d0         | [$711f: lda    $c5]
	jne	l_712f                             	| [$7121: bne    $712f]
	GET_REG_ADDRESS	0x2,d2                 	| [$7123: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7125: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xd0,d0                         	| [$7127: cmpa   #$d0]
	jne	l_712d                             	| [$7129: bne    $712d]
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$712b: inc    $c5]
l_712d:
	jra	l_7140                             	| [$712d: bra    $7140]
l_712f:
	move.b	#0x01,d0                        	| [$712f: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$7131: sta    $c7]
	OP_W_ON_DP_ADDRESS	addq,0xe9,#1         | [$7133: inc    $e9]
	OP_R_ON_DP_ADDRESS	move,0xe9,d0         | [$7135: lda    $e9]
	cmp.b	#0x30,d0                         	| [$7137: cmpa   #$30]
	jne	l_713d                             	| [$7139: bne    $713d]
	OP_W_ON_DP_ADDRESS	addq,0xea,#1         | [$713b: inc    $ea]
l_713d:
	jbsr	l_590e                            	| [$713d: jsr    $590e]
l_7140:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$7140: lda    $0f]
	lsr.b	#1,d0                            	| [$7142: lsra]
	jcs	l_714f                             	| [$7143: bcs    $714f]
	OP_W_ON_DP_ADDRESS	addq,0xe6,#1         | [$7145: inc    $e6]
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$7147: lda    $e6]
	cmp.b	#0x08,d0                         	| [$7149: cmpa   #$08]
	jne	l_714f                             	| [$714b: bne    $714f]
	OP_1_ON_DP_ADDRESS	clr,0xe6             | [$714d: clr    $e6]
l_714f:
	jbsr	l_858d                            	| [$714f: jsr    $858d]
	OP_R_ON_DP_ADDRESS	move,0xea,d0         | [$7152: lda    $ea]
	jeq	l_7167                             	| [$7154: beq    $7167]
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$7156: lda    $e6]
	cmp.b	#0x02,d0                         	| [$7158: cmpa   #$02]
	jne	l_7167                             	| [$715a: bne    $7167]
	move.b	#0x64,d0                        	| [$715c: lda    #$64]
	jbsr	l_4eb3                            	| [$715e: jsr    $4eb3]
	move.b	#0x08,d0                        	| [$7161: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$7163: sta    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$7165: clr    event_sub_state_2a]
l_7167:
	rts                                    	| [$7167: rts]

l_7168:
	jbsr	l_7b0e                            	| [$7168: jsr    $7b0e]
	move.w	#0x309b,d2                      	| [$716b: ldx    #$309b]
	move.w	#0x24a5,d4                      	| [$716e: ldu    #$24a5]
	jbsr	l_43d8                            	| [$7171: jsr    $43d8]
	jbsr	l_5466                            	| [$7174: jsr    $5466]
	jbsr	l_7e7f                            	| [$7177: jsr    $7e7f]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$717a: inc    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$717c: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$717e: clr    event_sub_state_2a]
	rts                                    	| [$7180: rts]

l_7181:
	
	.ifndef	RELEASE
	move.w	#0xd609,d4
	.endif
	lea	table_d609,a4                  	| [$7181: ldu   #table_d609]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$7184: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$7186: asla]
	JMP_A_INDEXED	A4                   	| [$7187: jra    [a,u]] [jump_table]
l_7189:
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$7189: dec    $29]
	jne	l_718f                             	| [$718b: bne    $718f]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$718d: inc    event_sub_state_2a]
l_718f:
	rts                                    	| [$718f: rts]

l_7190:
	move.b	#0x1e,d0                        	| [$7190: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$7192: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$7194: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$7196: clr    event_sub_state_2a]
	rts                                    	| [$7198: rts]

l_7199:
	
	.ifndef	RELEASE
	move.w	#0xd613,d4
	.endif
	lea	table_d613,a4                  	| [$7199: ldu   #table_d613]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$719c: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$719e: asla]
	JMP_A_INDEXED	A4                   	| [$719f: jra    [a,u]] [jump_table]
l_71a1:
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$71a1: dec    $29]
	jne	l_71a7                             	| [$71a3: bne    $71a7]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$71a5: inc    event_sub_state_2a]
l_71a7:
	rts                                    	| [$71a7: rts]

l_71a8:
	move.w	#0x24a6,d4                      	| [$71a8: ldu    #$24a6]
	jbsr	l_651f                            	| [$71ab: jsr    $651f]
	jbsr	l_5466                            	| [$71ae: jsr    $5466]
	move.w	#0x3508,d2                      	| [$71b1: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$71b4: lda    $19]
	move.b	#0x20,d1                        	| [$71b6: ldb    #$20]
	jbsr	multiply_ab                       	| [$71b8: mul]
	add.w	d1,d2                            	| [$71b9: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$71bb: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$71bd: clr    $1,x]
	clr.b	(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$71bf: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$71c1: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$71c3: inc    $26]
	rts                                    	| [$71c5: rts]

l_71c6:
	jbsr	l_c027                            	| [$71c6: jsr    $c027]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$71c9: sta    $c7]
	GET_REG_ADDRESS	0x1,d2                 	| [$71cb: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$71cd: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$71cf: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$71d1: cmpa   #$04]
	jne	l_71d7                             	| [$71d3: bne    $71d7]
	add.b	#0x09,d1                         	| [$71d5: addb   #$09]
l_71d7:
	GET_REG_ADDRESS	0x1d,d2                	| [$71d7: cmpb   $1d,x]
	cmp.b	(a0),d1                          	| [...]
	jcs	l_726f                             	| [$71da: lbcs   $726f]
	jbsr	l_72b4                            	| [$71de: jsr    $72b4]
	GET_REG_ADDRESS	0x3,d3                 	| [$71e1: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	jeq	l_720a                             	| [$71e3: beq    $720a]
	GET_REG_ADDRESS	0,d3                   	| [$71e5: lda    ,y]
	move.b	(a0),d0                         	| [...]
	jne	l_7205                             	| [$71e7: bne    $7205]
	jbsr	l_4f8a                            	| [$71e9: jsr    $4f8a]
	GET_REG_ADDRESS	0,d4                   	| [$71ec: lda    ,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x02,d0                         	| [$71ee: anda   #$02]
	jeq	l_71fc                             	| [$71f0: beq    $71fc]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$71f2: lda    $c4]
	addq.b	#1,d0                           	| [$71f4: inca]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$71f5: sta    $c4]
	addq.b	#1,d0                           	| [$71f7: inca]
	cmp.b	#0x51,d0                         	| [$71f8: cmpa   #$51]
	jne	l_7203                             	| [$71fa: bne    $7203]
l_71fc:
	GET_REG_ADDRESS	0,d3                   	| [$71fc: inc    ,y]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_73ee                            	| [$71fe: jsr    $73ee]
	jra	l_7205                             	| [$7201: bra    $7205]
l_7203:
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$7203: sta    $c4]
l_7205:
	move.b	#0x04,d0                        	| [$7205: lda    #$04]
	jbsr	queue_event_4e9a                  	| [$7207: jsr    queue_event_4e9a]
l_720a:
	jbsr	l_4fa1                            	| [$720a: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$720d: anda   #$05]
	jeq	l_721e                             	| [$720f: beq    $721e]
	move.w	#0x30b0,d4                      	| [$7211: ldu    #$30b0]
	move.b	#0x01,d0                        	| [$7214: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7216: sta    $48]
	jbsr	l_509f                            	| [$7218: jsr    $509f]
	jbsr	l_7427                            	| [$721b: jsr    $7427]
l_721e:
	OP_R_ON_DP_ADDRESS	move,0xc5,d0         | [$721e: lda    $c5]
	jne	l_7240                             	| [$7220: bne    $7240]
l_7222:
	GET_REG_ADDRESS	0x2,d2                 	| [$7222: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0xc7,d0          | [$7224: adda   $c7]
	move.w	#0xd617,d4                      	| [$7226: ldu    #$d617]
	GET_REG_ADDRESS	0,d2                   	| [$7229: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$722b: cmpa   b,u]
	cmp.b	(a0),d0                          	| [...]
	jcc	l_7236                             	| [$722d: bcc    $7236]
	GET_REG_ADDRESS	0x2,d2                 	| [$722f: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8274                            	| [$7231: jsr    $8274]
	jra	l_726d                             	| [$7234: bra    $726d]
l_7236:
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7236: suba   b,u]
	sub.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0xc7,d0         | [$7238: sta    $c7]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$723a: lda    b,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$723c: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$723e: inc    $c5]
l_7240:
	GET_REG_ADDRESS	0,d2                   	| [$7240: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$7242: cmpa   #$04]
	jne	l_7258                             	| [$7244: bne    $7258]
	move.b	#0x01,d0                        	| [$7246: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xca,d0         | [$7248: sta    $ca]
	jbsr	l_5035                            	| [$724a: jsr    $5035]
	GET_REG_INDIRECT_ADDRESS	0x1e,d2       	| [$724d: lda    [$1e,x]]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x2d,d0                         	| [$7250: cmpa   #$2d]
	jne	l_7258                             	| [$7252: bne    $7258]
	OP_1_ON_DP_ADDRESS	clr,0xc5             | [$7254: clr    $c5]
	jra	l_7222                             	| [$7256: bra    $7222]
l_7258:
	jbsr	l_590e                            	| [$7258: jsr    $590e]
	jbsr	l_8274                            	| [$725b: jsr    $8274]
	move.l	d2,-(sp)                        	| [$725e: pshs   x]
	move.w	#0x3240,d2                      	| [$7260: ldx    #$3240]
	OP_1_ON_DP_ADDRESS	clr,0xca             | [$7263: clr    $ca]
	jbsr	l_5035                            	| [$7265: jsr    $5035]
	jbsr	l_5ba5                            	| [$7268: jsr    $5ba5]
	movem.l	(sp)+,d2                       	| [$726b: puls   x]
l_726d:
	jra	l_72bf                             	| [$726d: bra    $72bf]
l_726f:
	jbsr	l_5027                            	| [$726f: jsr    $5027]
	OP_R_ON_DP_ADDRESS	move,0xbd,d0         | [$7272: lda    $bd]
	GET_REG_ADDRESS	0x1,d2                 	| [$7274: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7276: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$7278: cmpa   #$04]
	jeq	l_727f                             	| [$727a: beq    $727f]
	jbsr	l_7314                            	| [$727c: jsr    $7314]
l_727f:
	OP_1_ON_DP_ADDRESS	clr,0xbc             | [$727f: clr    $bc]
	move.w	#0x30dc,d4                      	| [$7281: ldu    #$30dc]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$7284: lda    $a0]
	cmp.b	#0x02,d0                         	| [$7286: cmpa   #$02]
	jeq	l_728d                             	| [$7288: beq    $728d]
	move.w	#0x30f0,d4                      	| [$728a: ldu    #$30f0]
l_728d:
	GET_REG_ADDRESS	0,d4                   	| [$728d: ldd    ,u]
	LOAD_D                                 	| [$728d: ldd    ,u]
	GET_DP_ADDRESS	speed_msb_b0            	| [$728f: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$7291: ldd    $2,u]
	LOAD_D                                 	| [$7291: ldd    $2,u]
	GET_DP_ADDRESS	0xb2                    	| [$7293: std    $b2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x30b0,d4                      	| [$7295: ldu    #$30b0]
	move.b	#0x05,d0                        	| [$7298: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$729a: sta    $48]
	OP_R_ON_DP_ADDRESS	move,0xa0,d1         | [$729c: ldb    $a0]
	cmp.b	#0x03,d1                         	| [$729e: cmpb   #$03]
	jeq	l_72a7                             	| [$72a0: beq    $72a7]
	jbsr	l_510f                            	| [$72a2: jsr    $510f]
	jra	l_72b1                             	| [$72a5: bra    $72b1]
l_72a7:
	move.b	#0x05,d0                        	| [$72a7: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$72a9: sta    $48]
	jbsr	l_50d1                            	| [$72ab: jsr    $50d1]
	jbsr	l_73df                            	| [$72ae: jsr    $73df]
l_72b1:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$72b1: inc    event_sub_state_2a]
	rts                                    	| [$72b3: rts]

l_72b4:
	move.w	#0x30f8,d3                      	| [$72b4: ldy    #$30f8]
	GET_REG_ADDRESS	0,d2                   	| [$72b8: lda    ,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x02,d0                         	| [$72ba: suba   #$02]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$72bc: leay   a,y]
	rts                                    	| [$72be: rts]

l_72bf:
	jbsr	l_72b4                            	| [$72bf: bsr    $72b4]
	GET_REG_ADDRESS	0x3,d3                 	| [$72c1: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	jne	l_7307                             	| [$72c3: bne    $7307]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$72c5: lda    $bc]
	cmp.b	#0x06,d0                         	| [$72c7: cmpa   #$06]
	jcc	l_7308                             	| [$72c9: bcc    $7308]
	jbsr	l_4fa1                            	| [$72cb: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$72ce: anda   #$02]
	jeq	l_7307                             	| [$72d0: beq    $7307]
	GET_REG_ADDRESS	0x3,d3                 	| [$72d2: inc    $3,y]
	addq.b	#1,(a0)                         	| [...]
	move.w	#0x30b0,d4                      	| [$72d4: ldu    #$30b0]
	move.b	#0x05,d0                        	| [$72d7: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$72d9: sta    $48]
	jbsr	l_510f                            	| [$72db: jsr    $510f]
	move.b	#0x01,d0                        	| [$72de: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$72e0: sta    $48]
	jbsr	l_5120                            	| [$72e2: jsr    $5120]
	moveq	#0,d0                            	| [$72e5: clra]
	jbsr	queue_sound_event_4ead            	| [$72e6: jsr    queue_sound_event_4ead]
	move.b	#0x0e,d0                        	| [$72e9: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$72eb: jsr    queue_sound_event_4ead]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$72ee: lda    $a0]
	cmp.b	#0x04,d0                         	| [$72f0: cmpa   #$04]
	jeq	l_72fd                             	| [$72f2: beq    $72fd]
	move.b	#screen_straight_1a,d0                        	| [$72f4: lda    #$1a]
	jbsr	queue_sound_event_4ead            	| [$72f6: jsr    queue_sound_event_4ead]
	move.b	#0x1c,d0                        	| [$72f9: lda    #$1c]
	jra	l_7304                             	| [$72fb: bra    $7304]
l_72fd:
	move.b	#0x1b,d0                        	| [$72fd: lda    #$1b]
	jbsr	queue_sound_event_4ead            	| [$72ff: jsr    queue_sound_event_4ead]
	move.b	#0x1c,d0                        	| [$7302: lda    #$1c]
l_7304:
	jbsr	queue_sound_event_4ead            	| [$7304: jsr    queue_sound_event_4ead]
l_7307:
	rts                                    	| [$7307: rts]

l_7308:
	jbsr	l_5b7f                            	| [$7308: jsr    $5b7f]
	move.b	#0x09,d0                        	| [$730b: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$730d: sta    event_sub_state_28]
	move.b	#0x02,d0                        	| [$730f: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$7311: sta    event_sub_state_2a]
	rts                                    	| [$7313: rts]

l_7314:
	move.b	#0x09,d0                        	| [$7314: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$7316: sta    $c4]
	move.w	#0xd61c,d4                      	| [$7318: ldu    #$d61c]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$731b: lda    $a0]
                                         | [$731d: deca]
	subq.b	#2,d0                           	| [$731e: deca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$731f: lda    a,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7321: sta    $48]
	GET_DP_ADDRESS	0xb4                    	| [$7323: ldd    $b4]
	LOAD_D                                 	| [$7323: ldd    $b4]
	OP_R_ON_DP_ADDRESS	add,0x48,d1          | [$7325: addb   $48]
	BIT	#0x40,d1                           	| [$7327: bitb   #$40]
	jeq	l_732e                             	| [$7329: beq    $732e]
	MAKE_D                                 	| [...]
	sub.w	#0x0040,d1                       	| [$732b: subd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_732e:
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xe3                    	| [$732e: std    $e3]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$7330: lda    $a0]
	cmp.b	#0x03,d0                         	| [$7332: cmpa   #$03]
	jeq	l_734f                             	| [$7334: beq    $734f]
	GET_DP_ADDRESS	0xe3                    	| [$7336: ldd    $e3]
	LOAD_D                                 	| [$7336: ldd    $e3]
	cmp.b	#0x9f,d1                         	| [$7338: cmpb   #$9f]
	jcs	l_734b                             	| [$733a: bcs    $734b]
	cmp.b	#0xae,d1                         	| [$733c: cmpb   #$ae]
	jcs	l_7342                             	| [$733e: bcs    $7342]
	move.b	#0xad,d1                        	| [$7340: ldb    #$ad]
l_7342:
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xe3                    	| [$7342: std    $e3]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xd8                    	| [$7344: std    $d8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x04,d1                         	| [$7346: addb   #$04]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xe1                    	| [$7348: std    $e1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$734a: rts]

l_734b:
	move.b	#0x9f,d1                        	| [$734b: ldb    #$9f]
	jra	l_7342                             	| [$734d: bra    $7342]
l_734f:
	GET_DP_ADDRESS	0xe3                    	| [$734f: ldd    $e3]
	LOAD_D                                 	| [$734f: ldd    $e3]
	cmp.w	#0x25b2,d1                       	| [$7351: cmpd   #$25b2]
	jcc	l_7362                             	| [$7355: bcc    $7362]
	OP_R_ON_DP_ADDRESS	cmp,0xe2,d1          | [$7357: cmpb   $e2]
	jcc	l_735d                             	| [$7359: bcc    $735d]
	GET_DP_ADDRESS	0xe1                    	| [$735b: ldd    $e1]
	LOAD_D                                 	| [$735b: ldd    $e1]
l_735d:
	GET_DP_ADDRESS	0xe3                    	| [$735d: std    $e3]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xda                    	| [$735f: std    $da]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$7361: rts]

l_7362:
	move.b	#0x25,d0                        	| [$7362: ldd    #$25b1]
	move.w	#0x25b1,d1                      	| [$7362: ldd    #$25b1]
	jra	l_735d                             	| [$7365: bra    $735d]
l_7367:
	move.l	d2,-(sp)                        	| [$7367: pshs   x]
	move.w	#0xd61e,d4                      	| [$7369: ldu    #$d61e]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$736c: lda    $a0]
	subq.b	#1,d0                           	| [$736e: deca]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$736f: sta    $49]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7371: ldb    a,u]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$7373: stb    $48]
	move.w	#0x3260,d2                      	| [$7375: ldx    #$3260]
	move.b	#0x20,d1                        	| [$7378: ldb    #$20]
	jbsr	multiply_ab                       	| [$737a: mul]
	add.w	d1,d2                            	| [$737b: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$737d: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$737f: lda    $49]
	add.b	#0x20,d0                         	| [$7381: adda   #$20]
	GET_REG_ADDRESS	0xd,d2                 	| [$7383: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x5b,d0                        	| [$7385: lda    #$5b]
	OP_R_ON_DP_ADDRESS	move,0xa2,d1         | [$7387: ldb    $a2]
	OP_R_ON_DP_ADDRESS	add,0x48,d1          | [$7389: addb   $48]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$738b: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_83a9                            	| [$738d: jsr    $83a9]
	movem.l	(sp)+,d2                       	| [$7390: puls   x]
	rts                                    	| [$7392: rts]

l_7393:
	OP_R_ON_DP_ADDRESS	move,0xe5,d0         | [$7393: lda    $e5]
	jne	l_73a5                             	| [$7395: bne    $73a5]
	jbsr	l_5145                            	| [$7397: jsr    $5145]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$739a: lda    ,u] [video_address]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x32,d0                         	| [$739c: cmpa   #$32]
	jeq	l_73a1                             	| [$739e: beq    $73a1]
	rts                                    	| [$73a0: rts]

l_73a1:
	GET_DP_ADDRESS	0xe6                    	| [$73a1: stu    $e6]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xe5,#1         | [$73a3: inc    $e5]
l_73a5:
	GET_REG_ADDRESS	0x3,d2                 	| [$73a5: ldu    $3,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_DP_ADDRESS	0xe6                    	| [$73a7: cmpu   $e6]
	CMP_W_TO_REG	a0,d4                          	| [...]
	jeq	l_73bc                             	| [$73aa: beq    $73bc]
	jbsr	l_5145                            	| [$73ac: jsr    $5145]
	GET_DP_ADDRESS	0xe6                    	| [$73af: cmpu   $e6]
	CMP_W_TO_REG	a0,d4                          	| [...]
	jeq	l_73c4                             	| [$73b2: beq    $73c4]
l_73b4:
	move.b	#0x01,d0                        	| [$73b4: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$73b6: sta    $cb]
	GET_ADDRESS	0x34e7                     	| [$73b8: clr    $34e7]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$73bb: rts]

l_73bc:
	GET_REG_ADDRESS	0x2,d2                 	| [$73bc: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0xbb,d0          | [$73be: suba   $bb]
	add.b	#0x07,d0                         	| [$73c0: adda   #$07]
	jra	l_73cc                             	| [$73c2: bra    $73cc]
l_73c4:
	GET_REG_ADDRESS	0x2,d2                 	| [$73c4: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0xbb,d0          | [$73c6: suba   $bb]
	add.b	#0x08,d0                         	| [$73c8: adda   #$08]
	add.b	#0x07,d0                         	| [$73ca: adda   #$07]
l_73cc:
	GET_REG_ADDRESS	0x2,d2                 	| [$73cc: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
	add.b	#0x07,d1                         	| [$73ce: addb   #$07]
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$73d0: stb    $50]
	OP_R_ON_DP_ADDRESS	sub,0x50,d0          | [$73d2: suba   $50]
	jcs	l_73b4                             	| [$73d4: bcs    $73b4]
	cmp.b	#0x05,d0                         	| [$73d6: cmpa   #$05]
	jcs	l_73dc                             	| [$73d8: bcs    $73dc]
	move.b	#0x05,d0                        	| [$73da: lda    #$05]
l_73dc:
	OP_W_ON_DP_ADDRESS	move,0xe8,d0         | [$73dc: sta    $e8]
	rts                                    	| [$73de: rts]

l_73df:
	move.w	#0xd621,d4                      	| [$73df: ldu    #$d621]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$73e2: lda    $e8]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$73e4: lda    a,u]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$73e6: sta    $48]
	move.w	#0x30b0,d4                      	| [$73e8: ldu    #$30b0]
	jra	l_50d1                             	| [$73eb: jra    $50d1]
l_73ee:
	move.w	#0xd627,d4                      	| [$73ee: ldu    #$d627]
	OP_R_ON_DP_ADDRESS	move,0xa0,d1         | [$73f1: ldb    $a0]
	sub.b	#0x02,d1                         	| [$73f3: subb   #$02]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$73f5: lda    $c4]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$73f7: cmpa   b,u]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_73fe                             	| [$73f9: beq    $73fe]
	GET_ADDRESS	0x34e7                     	| [$73fb: clr    $34e7]
	clr.b	(a0)                         	| [...]
l_73fe:
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$73fe: suba   b,u]
	sub.b	(a0),d0                          	| [...]
	jcc	l_7403                             	| [$7400: bcc    $7403]
	neg.b	d0                               	| [$7402: nega]
l_7403:
	cmp.b	#0x0f,d0                         	| [$7403: cmpa   #$0f]
	jcs	l_7409                             	| [$7405: bcs    $7409]
	move.b	#0x0f,d0                        	| [$7407: lda    #$0f]
l_7409:
	OP_W_ON_DP_ADDRESS	move,0xe9,d0         | [$7409: sta    $e9]
	move.w	#0x30b0,d4                      	| [$740b: ldu    #$30b0]
	asl.b	#1,d0                            	| [$740e: asla]
	jeq	l_7420                             	| [$740f: beq    $7420]
	jbsr	l_513a                            	| [$7411: jsr    $513a]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$7414: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_510f                            	| [$7416: jsr    $510f]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$7419: lda    $49]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$741b: sta    $48]
	jra	l_5120                             	| [$741d: jra    $5120]
l_7420:
	move.b	#0x03,d0                        	| [$7420: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7422: sta    $48]
	jra	l_50d1                             	| [$7424: jra    $50d1]
l_7427:
	
	.ifndef	RELEASE
	move.w	#0xd62a,d4
	.endif
	lea	table_d62a,a4                  	| [$7427: ldu   #table_d62a]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$742a: lda    $a0]
	sub.b	#0x02,d0                         	| [$742c: suba   #$02]
	asl.b	#1,d0                            	| [$742e: asla]
	JMP_A_INDEXED	A4                   	| [$742f: jra    [a,u]] [jump_table]
l_7431:
	GET_DP_ADDRESS	speed_msb_b0            	| [$7431: ldd    speed_msb_b0]
	LOAD_D                                 	| [$7431: ldd    speed_msb_b0]
	cmp.w	#0x0105,d1                       	| [$7433: cmpd   #$0105]
	jcs	l_7442                             	| [$7437: bcs    $7442]
	move.b	#0x01,d0                        	| [$7439: ldd    #$0105]
	move.w	#0x0105,d1                      	| [$7439: ldd    #$0105]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$743c: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xb2             | [$743e: clr    $b2]
	OP_1_ON_DP_ADDRESS	clr,0xb3             | [$7440: clr    $b3]
l_7442:
	rts                                    	| [$7442: rts]

l_7443:
	GET_DP_ADDRESS	speed_msb_b0            	| [$7443: ldd    speed_msb_b0]
	LOAD_D                                 	| [$7443: ldd    speed_msb_b0]
	cmp.w	#0x0103,d1                       	| [$7445: cmpd   #$0103]
	jcs	l_7454                             	| [$7449: bcs    $7454]
	move.b	#0x01,d0                        	| [$744b: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$744b: ldd    #$0103]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$744e: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xb2             | [$7450: clr    $b2]
	OP_1_ON_DP_ADDRESS	clr,0xb3             | [$7452: clr    $b3]
l_7454:
	rts                                    	| [$7454: rts]

l_7455:
	jbsr	l_4fa1                            	| [$7455: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$7458: anda   #$05]
	jeq	l_7476                             	| [$745a: beq    $7476]
	GET_REG_ADDRESS	0,d2                   	| [$745c: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$745e: cmpa   #$03]
	jcc	l_7465                             	| [$7460: bcc    $7465]
	GET_REG_ADDRESS	0x5b,d2                	| [$7462: clr    $5b,x]
	clr.b	(a0)                         	| [...]
l_7465:
	move.w	d2,d4                           	| [$7465: leau   $10,x]
	add.w	#0x10,d4                         	| [$7465: leau   $10,x]
	move.b	#0x05,d0                        	| [$7468: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$746a: sta    $48]
	jbsr	l_50dd                            	| [$746c: jsr    $50dd]
	move.b	#0x01,d0                        	| [$746f: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7471: sta    $48]
	jbsr	l_510f                            	| [$7473: jsr    $510f]
l_7476:
	rts                                    	| [$7476: rts]

l_7477:
	OP_R_ON_DP_ADDRESS	move,0xe0,d0         | [$7477: lda    $e0]
	OP_W_ON_DP_ADDRESS	move,0xe1,d0         | [$7479: sta    $e1]
	OP_1_ON_DP_ADDRESS	clr,0xe0             | [$747b: clr    $e0]
	move.w	#0x30e0,d3                      	| [$747d: ldy    #$30e0]
	OP_R_ON_DP_ADDRESS	move,0xd8,d0         | [$7481: lda    $d8]
	jeq	l_748d                             	| [$7483: beq    $748d]
	subq.b	#1,d0                           	| [$7485: deca]
	GET_REG_ADDRESS	0,d3                   	| [$7486: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_774e                            	| [$7488: jsr    $774e]
	jra	l_7490                             	| [$748b: bra    $7490]
l_748d:
	jbsr	l_772a                            	| [$748d: jsr    $772a]
l_7490:
	move.w	#0x30e0,d2                      	| [$7490: ldx    #$30e0]
l_7493:
	GET_REG_ADDRESS	-0x6,d2                	| [$7493: lda    -$6,x]
	move.b	(a0),d0                         	| [...]
	jne	l_74a9                             	| [$7495: bne    $74a9]
	GET_REG_ADDRESS	0x2,d2                 	| [$7497: ldd    $2,x]
	LOAD_D                                 	| [$7497: ldd    $2,x]
	GET_REG_ADDRESS	0x4,d2                 	| [$7499: std    $4,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$749b: ldd    ,u]
	LOAD_D                                 	| [$749b: ldd    ,u]
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$749d: tst    $d8]
	jeq	l_74a4                             	| [$749f: beq    $74a4]
	move.b	#0x03,d0                        	| [$74a1: ldd    #$03f8]
	move.w	#0x03f8,d1                      	| [$74a1: ldd    #$03f8]
l_74a4:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	-0x32,d2               	| [$74a4: subd   -$32,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$74a7: std    $2,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_74a9:
	add.w	#0x60,d2                         	| [$74a9: leax   $60,x]
	cmp.w	#0x3260,d2                       	| [$74ac: cmpx   #$3260]
	jne	l_7493                             	| [$74af: bne    $7493]
	move.w	#0x30a0,d2                      	| [$74b1: ldx    #$30a0]
	OP_R_ON_DP_ADDRESS	move,0xe0,d0         | [$74b4: lda    $e0]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$74b6: sta    $19]
	move.b	#0x60,d1                        	| [$74b8: ldb    #$60]
	jbsr	multiply_ab                       	| [$74ba: mul]
	add.w	d1,d2                            	| [$74bb: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0xd8,d0         | [$74bd: lda    $d8]
	jeq	l_74d1                             	| [$74bf: beq    $74d1]
	GET_DP_ADDRESS	0xfe                    	| [$74c1: stx    $fe]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$74c3: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xe8,d0         | [$74c5: sta    $e8]
	OP_R_ON_DP_ADDRESS	move,0xdd,d0         | [$74c7: lda    $dd]
	jne	l_74cd                             	| [$74c9: bne    $74cd]
	OP_1_ON_DP_ADDRESS	clr,0xe6             | [$74cb: clr    $e6]
l_74cd:
	OP_1_ON_DP_ADDRESS	clr,0xdd             | [$74cd: clr    $dd]
	jra	l_7510                             	| [$74cf: bra    $7510]
l_74d1:
	OP_R_ON_DP_ADDRESS	move,0xe0,d0         | [$74d1: lda    $e0]
	OP_R_ON_DP_ADDRESS	cmp,0xe1,d0          | [$74d3: cmpa   $e1]
	jeq	l_74ff                             	| [$74d5: beq    $74ff]
	move.b	#0x80,d0                        	| [$74d7: lda    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$74d9: suba   $2,x]
	sub.b	(a0),d0                          	| [...]
	jeq	l_74ff                             	| [$74db: beq    $74ff]
	GET_REG_ADDRESS	0,d2                   	| [$74dd: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x02,d1                         	| [$74df: cmpb   #$02]
	jcs	l_74ff                             	| [$74e1: bcs    $74ff]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$74e3: sta    $51]
	move.b	#0x80,d0                        	| [$74e5: lda    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$74e7: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$74e9: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$74ec: sta    $52]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$74ee: suba   $51]
	jeq	l_74f8                             	| [$74f0: beq    $74f8]
	GET_REG_ADDRESS	0x20,d2                	| [$74f2: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_7832                            	| [$74f5: jsr    $7832]
l_74f8:
	OP_R_ON_DP_ADDRESS	move,0x52,d0         | [$74f8: lda    $52]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$74fa: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$74fc: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
l_74ff:
	GET_DP_ADDRESS	0xfe                    	| [$74ff: stx    $fe]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7501: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xe8,d0         | [$7503: sta    $e8]
	GET_REG_ADDRESS	0x20,d2                	| [$7505: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xe6,d0         | [$7508: sta    $e6]
	jbsr	l_779a                            	| [$750a: jsr    $779a]
	jbsr	l_7832                            	| [$750d: jsr    $7832]
l_7510:
	move.b	#0x04,d0                        	| [$7510: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x66,d0         | [$7512: sta    $66]
	move.w	#0x30a0,d2                      	| [$7514: ldx    #$30a0]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$7517: clr    $19]
l_7519:
	GET_DP_ADDRESS	0xfe                    	| [$7519: cmpx   $fe]
	CMP_W_TO_REG	a0,d2                          	| [...]
	jeq	l_757c                             	| [$751b: beq    $757c]
	GET_REG_ADDRESS	0x3a,d2                	| [$751d: lda    $3a,x]
	move.b	(a0),d0                         	| [...]
	jne	l_757c                             	| [$7520: bne    $757c]
	GET_REG_ADDRESS	0x42,d2                	| [$7522: ldd    $42,x]
	LOAD_D                                 	| [$7522: ldd    $42,x]
	cmp.w	#0x0070,d1                       	| [$7525: cmpd   #$0070]
	jhi	l_759b                             	| [$7529: bhi    $759b]
	GET_REG_ADDRESS	0x47,d2                	| [$752b: lda    $47,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_7557                             	| [$752e: beq    $7557]
	GET_REG_ADDRESS	0x47,d2                	| [$7530: clr    $47,x]
	clr.b	(a0)                         	| [...]
	move.b	#0x70,d0                        	| [$7533: lda    #$70]
	GET_REG_ADDRESS	0x43,d2                	| [$7535: suba   $43,x]
	sub.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$7538: sta    $51]
	GET_REG_ADDRESS	0x20,d2                	| [$753a: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$753d: sta    $52]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$753f: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$7541: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7544: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0x51,d0          | [$7546: adda   $51]
	GET_REG_ADDRESS	0x2,d2                 	| [$7548: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_779a                            	| [$754a: jsr    $779a]
	OP_R_ON_DP_ADDRESS	move,0x52,d0         | [$754d: lda    $52]
	GET_REG_ADDRESS	0x20,d2                	| [$754f: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_7832                            	| [$7552: jsr    $7832]
	jra	l_757c                             	| [$7555: bra    $757c]
l_7557:
	OP_1_ON_DP_ADDRESS	clr,0x4d             | [$7557: clr    $4d]
	GET_REG_ADDRESS	0x42,d2                	| [$7559: ldd    $42,x]
	LOAD_D                                 	| [$7559: ldd    $42,x]
	GET_REG_ADDRESS	0x44,d2                	| [$755c: subd   $44,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcc	l_7569                             	| [$755f: bcc    $7569]
	OP_W_ON_DP_ADDRESS	addq,0x4d,#1         | [$7561: inc    $4d]
	GET_REG_ADDRESS	0x44,d2                	| [$7563: ldd    $44,x]
	LOAD_D                                 	| [$7563: ldd    $44,x]
	GET_REG_ADDRESS	0x42,d2                	| [$7566: subd   $42,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_7569:
	OP_W_ON_DP_ADDRESS	move,0x4e,d1         | [$7569: stb    $4e]
	OP_1_ON_DP_ADDRESS	tst,0x4d             | [$756b: tst    $4d]
	jeq	l_7590                             	| [$756d: beq    $7590]
	GET_REG_ADDRESS	0x2,d2                 	| [$756f: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$7571: adda   $20,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7574: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_7832                            	| [$7576: jsr    $7832]
	jbsr	l_7781                            	| [$7579: jsr    $7781]
l_757c:
	GET_REG_ADDRESS	0x4b,d2                	| [$757c: lda    $4b,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_7586                             	| [$757f: beq    $7586]
	GET_REG_ADDRESS	0,d2                   	| [$7581: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x4b,d2                	| [$7583: clr    $4b,x]
	clr.b	(a0)                         	| [...]
l_7586:
	add.w	#0x60,d2                         	| [$7586: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$7589: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x66,#1         | [$758b: dec    $66]
	jne	l_7519                             	| [$758d: bne    $7519]
	rts                                    	| [$758f: rts]

l_7590:
	jbsr	l_779a                            	| [$7590: jsr    $779a]
	jbsr	l_7785                            	| [$7593: jsr    $7785]
	jbsr	l_7832                            	| [$7596: jsr    $7832]
	jra	l_757c                             	| [$7599: bra    $757c]
l_759b:
	GET_REG_ADDRESS	0x47,d2                	| [$759b: tst    $47,x]
	tst.b	(a0)                             	| [...]
	jne	l_75b4                             	| [$759e: bne    $75b4]
	GET_REG_ADDRESS	0x47,d2                	| [$75a0: inc    $47,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$75a3: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x10,d0                         	| [$75a5: suba   #$10]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$75a7: sta    $4e]
	jbsr	l_779a                            	| [$75a9: jsr    $779a]
	jbsr	l_7785                            	| [$75ac: jsr    $7785]
	jbsr	l_7832                            	| [$75af: jsr    $7832]
	jra	l_757c                             	| [$75b2: bra    $757c]
l_75b4:
	jbsr	l_779a                            	| [$75b4: jsr    $779a]
	jbsr	l_7832                            	| [$75b7: jsr    $7832]
	jra	l_757c                             	| [$75ba: bra    $757c]
l_75bc:
	OP_R_ON_DP_ADDRESS	move,0xec,d0         | [$75bc: lda    $ec]
	OP_W_ON_DP_ADDRESS	move,0xed,d0         | [$75be: sta    $ed]
	OP_1_ON_DP_ADDRESS	clr,0xec             | [$75c0: clr    $ec]
	move.w	#0x30ec,d3                      	| [$75c2: ldy    #$30ec]
	OP_R_ON_DP_ADDRESS	move,0xd9,d0         | [$75c6: lda    $d9]
	jeq	l_75d2                             	| [$75c8: beq    $75d2]
	subq.b	#1,d0                           	| [$75ca: deca]
	GET_REG_ADDRESS	0,d3                   	| [$75cb: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_774e                            	| [$75cd: jsr    $774e]
	jra	l_75d5                             	| [$75d0: bra    $75d5]
l_75d2:
	jbsr	l_772a                            	| [$75d2: jsr    $772a]
l_75d5:
	move.w	#0x30ec,d2                      	| [$75d5: ldx    #$30ec]
l_75d8:
	GET_REG_ADDRESS	0x2,d2                 	| [$75d8: ldd    $2,x]
	LOAD_D                                 	| [$75d8: ldd    $2,x]
	GET_REG_ADDRESS	0x4,d2                 	| [$75da: std    $4,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$75dc: ldd    ,u]
	LOAD_D                                 	| [$75dc: ldd    ,u]
	OP_1_ON_DP_ADDRESS	tst,0xd9             | [$75de: tst    $d9]
	jeq	l_75e5                             	| [$75e0: beq    $75e5]
	move.b	#0x08,d0                        	| [$75e2: ldd    #$0828]
	move.w	#0x0828,d1                      	| [$75e2: ldd    #$0828]
l_75e5:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	-0x3e,d2               	| [$75e5: subd   -$3e,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$75e8: std    $2,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.w	#0x60,d2                         	| [$75ea: leax   $60,x]
	cmp.w	#0x326c,d2                       	| [$75ed: cmpx   #$326c]
	jne	l_75d8                             	| [$75f0: bne    $75d8]
	OP_R_ON_DP_ADDRESS	move,0xdc,d0         | [$75f2: lda    $dc]
	jeq	l_7704                             	| [$75f4: lbeq   $7704]
	OP_R_ON_DP_ADDRESS	move,0xde,d0         | [$75f8: lda    $de]
	jne	l_7704                             	| [$75fa: lbne   $7704]
	move.w	#0x30a0,d2                      	| [$75fe: ldx    #$30a0]
	OP_R_ON_DP_ADDRESS	move,0xec,d0         | [$7601: lda    $ec]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7603: sta    $19]
	move.b	#0x60,d1                        	| [$7605: ldb    #$60]
	jbsr	multiply_ab                       	| [$7607: mul]
	add.w	d1,d2                            	| [$7608: leax   d,x]
	GET_REG_ADDRESS	0x3a,d2                	| [$760a: lda    $3a,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$760d: cmpa   #$02]
	jeq	l_7621                             	| [$760f: beq    $7621]
	GET_DP_ADDRESS	0xfc                    	| [$7611: stx    $fc]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7613: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf4,d0         | [$7615: sta    $f4]
	OP_R_ON_DP_ADDRESS	move,0xdf,d0         | [$7617: lda    $df]
	jne	l_761d                             	| [$7619: bne    $761d]
	OP_1_ON_DP_ADDRESS	clr,0xf2             | [$761b: clr    $f2]
l_761d:
	OP_1_ON_DP_ADDRESS	clr,0xdf             | [$761d: clr    $df]
	jra	l_7656                             	| [$761f: bra    $7656]
l_7621:
	OP_R_ON_DP_ADDRESS	move,0xec,d0         | [$7621: lda    $ec]
	OP_R_ON_DP_ADDRESS	cmp,0xed,d0          | [$7623: cmpa   $ed]
	jeq	l_7645                             	| [$7625: beq    $7645]
	GET_REG_ADDRESS	0x2,d2                 	| [$7627: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x80,d0                         	| [$7629: suba   #$80]
	jeq	l_7645                             	| [$762b: beq    $7645]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$762d: sta    $51]
	move.b	#0x80,d1                        	| [$762f: ldb    #$80]
	GET_REG_ADDRESS	0x2,d2                 	| [$7631: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$7633: ldb    $20,x]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d1         | [$7636: stb    $52]
	GET_REG_ADDRESS	0x20,d2                	| [$7638: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_783e                            	| [$763b: jsr    $783e]
	OP_R_ON_DP_ADDRESS	move,0x52,d0         | [$763e: lda    $52]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$7640: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$7642: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
l_7645:
	GET_DP_ADDRESS	0xfc                    	| [$7645: stx    $fc]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7647: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf4,d0         | [$7649: sta    $f4]
	GET_REG_ADDRESS	0x20,d2                	| [$764b: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf2,d0         | [$764e: sta    $f2]
	jbsr	l_7803                            	| [$7650: jsr    $7803]
	jbsr	l_783e                            	| [$7653: jsr    $783e]
l_7656:
	move.b	#0x04,d0                        	| [$7656: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x66,d0         | [$7658: sta    $66]
	move.w	#0x30a0,d2                      	| [$765a: ldx    #$30a0]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$765d: clr    $19]
l_765f:
	GET_DP_ADDRESS	0xfc                    	| [$765f: cmpx   $fc]
	CMP_W_TO_REG	a0,d2                          	| [...]
	jeq	l_76c4                             	| [$7661: beq    $76c4]
	GET_REG_ADDRESS	0x3a,d2                	| [$7663: lda    $3a,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$7666: cmpa   #$02]
	jne	l_76c4                             	| [$7668: bne    $76c4]
	GET_REG_ADDRESS	0x4e,d2                	| [$766a: ldd    $4e,x]
	LOAD_D                                 	| [$766a: ldd    $4e,x]
	cmp.w	#0x0050,d1                       	| [$766d: cmpd   #$0050]
	jhi	l_76e3                             	| [$7671: bhi    $76e3]
	GET_REG_ADDRESS	0x53,d2                	| [$7673: lda    $53,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_769f                             	| [$7676: beq    $769f]
	GET_REG_ADDRESS	0x53,d2                	| [$7678: clr    $53,x]
	clr.b	(a0)                         	| [...]
	move.b	#0x50,d0                        	| [$767b: lda    #$50]
	GET_REG_ADDRESS	0x4f,d2                	| [$767d: suba   $4f,x]
	sub.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$7680: sta    $51]
	GET_REG_ADDRESS	0x20,d2                	| [$7682: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7685: sta    $52]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$7687: suba   $51]
	GET_REG_ADDRESS	0x20,d2                	| [$7689: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$768c: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x51,d0          | [$768e: suba   $51]
	GET_REG_ADDRESS	0x2,d2                 	| [$7690: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_7803                            	| [$7692: jsr    $7803]
	OP_R_ON_DP_ADDRESS	move,0x52,d0         | [$7695: lda    $52]
	GET_REG_ADDRESS	0x20,d2                	| [$7697: sta    $20,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_7832                            	| [$769a: jsr    $7832]
	jra	l_76c4                             	| [$769d: bra    $76c4]
l_769f:
	OP_1_ON_DP_ADDRESS	clr,0x4d             | [$769f: clr    $4d]
	GET_REG_ADDRESS	0x4e,d2                	| [$76a1: ldd    $4e,x]
	LOAD_D                                 	| [$76a1: ldd    $4e,x]
	GET_REG_ADDRESS	0x50,d2                	| [$76a4: subd   $50,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcc	l_76b1                             	| [$76a7: bcc    $76b1]
	OP_W_ON_DP_ADDRESS	addq,0x4d,#1         | [$76a9: inc    $4d]
	GET_REG_ADDRESS	0x50,d2                	| [$76ab: ldd    $50,x]
	LOAD_D                                 	| [$76ab: ldd    $50,x]
	GET_REG_ADDRESS	0x4e,d2                	| [$76ae: subd   $4e,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_76b1:
	OP_W_ON_DP_ADDRESS	move,0x4e,d1         | [$76b1: stb    $4e]
	OP_1_ON_DP_ADDRESS	tst,0x4d             | [$76b3: tst    $4d]
	jeq	l_76d8                             	| [$76b5: beq    $76d8]
	GET_REG_ADDRESS	0x2,d2                 	| [$76b7: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$76b9: suba   $20,x]
	sub.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$76bc: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_7832                            	| [$76be: jsr    $7832]
	jbsr	l_77f0                            	| [$76c1: jsr    $77f0]
l_76c4:
	GET_REG_ADDRESS	0x4b,d2                	| [$76c4: lda    $4b,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_76ce                             	| [$76c7: beq    $76ce]
	GET_REG_ADDRESS	0,d2                   	| [$76c9: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x4b,d2                	| [$76cb: clr    $4b,x]
	clr.b	(a0)                         	| [...]
l_76ce:
	add.w	#0x60,d2                         	| [$76ce: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$76d1: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x66,#1         | [$76d3: dec    $66]
	jne	l_765f                             	| [$76d5: bne    $765f]
	rts                                    	| [$76d7: rts]

l_76d8:
	jbsr	l_7803                            	| [$76d8: jsr    $7803]
	jbsr	l_77f4                            	| [$76db: jsr    $77f4]
	jbsr	l_7832                            	| [$76de: jsr    $7832]
	jra	l_76c4                             	| [$76e1: bra    $76c4]
l_76e3:
	GET_REG_ADDRESS	0x47,d2                	| [$76e3: tst    $47,x]
	tst.b	(a0)                             	| [...]
	jne	l_76fc                             	| [$76e6: bne    $76fc]
	GET_REG_ADDRESS	0x53,d2                	| [$76e8: inc    $53,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xd0,d0                        	| [$76eb: lda    #$d0]
	GET_REG_ADDRESS	0x2,d2                 	| [$76ed: suba   $2,x]
	sub.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$76ef: sta    $4e]
	jbsr	l_7803                            	| [$76f1: jsr    $7803]
	jbsr	l_77f4                            	| [$76f4: jsr    $77f4]
	jbsr	l_7832                            	| [$76f7: jsr    $7832]
	jra	l_76c4                             	| [$76fa: bra    $76c4]
l_76fc:
	jbsr	l_7803                            	| [$76fc: jsr    $7803]
	jbsr	l_7832                            	| [$76ff: jsr    $7832]
	jra	l_76c4                             	| [$7702: bra    $76c4]
l_7704:
	OP_1_ON_DP_ADDRESS	clr,0xde             | [$7704: clr    $de]
	move.b	#0x04,d0                        	| [$7706: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$7708: sta    $65]
	move.w	#0x30a0,d2                      	| [$770a: ldx    #$30a0]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$770d: clr    $19]
l_770f:
	GET_REG_ADDRESS	0x3a,d2                	| [$770f: lda    $3a,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$7712: cmpa   #$02]
	jne	l_7720                             	| [$7714: bne    $7720]
	GET_REG_ADDRESS	0x2,d2                 	| [$7716: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x20,d2                	| [$7718: suba   $20,x]
	sub.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$771b: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_783e                            	| [$771d: jsr    $783e]
l_7720:
	add.w	#0x60,d2                         	| [$7720: leax   $60,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$7723: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$7725: dec    $65]
	jne	l_770f                             	| [$7727: bne    $770f]
	rts                                    	| [$7729: rts]

l_772a:
	GET_DP_ADDRESS	0xae                    	| [$772a: ldd    $ae]
	LOAD_D                                 	| [$772a: ldd    $ae]
	GET_ADDRESS	0x310e                     	| [$772c: cmpd   $310e]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcc	l_7737                             	| [$7730: bcc    $7737]
	GET_REG_ADDRESS	0,d3                   	| [$7732: inc    ,y]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x310e                     	| [$7734: ldd    $310e]
	LOAD_D                                 	| [$7734: ldd    $310e]
l_7737:
	MAKE_D
	GET_ADDRESS	0x316e                     	| [$7737: cmpd   $316e]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcc	l_7744                             	| [$773b: bcc    $7744]
	move.b	#0x02,d0                        	| [$773d: lda    #$02]
	GET_REG_ADDRESS	0,d3                   	| [$773f: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x316e                     	| [$7741: ldd    $316e]
	LOAD_D                                 	| [$7741: ldd    $316e]
l_7744:
	MAKE_D
	GET_ADDRESS	0x31ce                     	| [$7744: cmpd   $31ce]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcc	l_774e                             	| [$7748: bcc    $774e]
	move.b	#0x03,d0                        	| [$774a: lda    #$03]
	GET_REG_ADDRESS	0,d3                   	| [$774c: sta    ,y]
	move.b	d0,(a0)                         	| [...]
l_774e:
	move.w	#0x30ae,d4                      	| [$774e: ldu    #$30ae]
	GET_REG_ADDRESS	0,d3                   	| [$7751: lda    ,y]
	move.b	(a0),d0                         	| [...]
	move.b	#0x60,d1                        	| [$7753: ldb    #$60]
	jbsr	multiply_ab                       	| [$7755: mul]
	add.w	d1,d4                            	| [$7756: leau   d,u]
	rts                                    	| [$7758: rts]

l_7759:
	GET_REG_ADDRESS	0x20,d2                	| [$7759: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$775c: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	jcc	l_7762                             	| [$775e: bcc    $7762]
	GET_REG_ADDRESS	0xe,d2                 	| [$7760: inc    $e,x]
	addq.b	#1,(a0)                         	| [...]
l_7762:
	GET_REG_ADDRESS	0xf,d2                 	| [$7762: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$7764: rts]

l_7765:
	move.l	d2,-(sp)                        	| [$7765: pshs   x]
	move.w	#0x3260,d4                      	| [$7767: ldu    #$3260]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$776a: lda    $19]
	move.b	#0x20,d1                        	| [$776c: ldb    #$20]
	jbsr	multiply_ab                       	| [$776e: mul]
	add.w	d1,d4                            	| [$776f: leau   d,u]
	GET_REG_ADDRESS	0,d4                   	| [$7771: inc    ,u]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$7773: ldd    $1,x]
	LOAD_D                                 	| [$7773: ldd    $1,x]
	add.b	#0x20,d1                         	| [$7775: addb   #$20]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7777: std    $1,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	d4,d2                           	| [$7779: tfr    u,x]
	jbsr	l_851e                            	| [$777b: jsr    $851e]
	movem.l	(sp)+,d2                       	| [$777e: puls   x]
	rts                                    	| [$7780: rts]

l_7781:
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$7781: lda    $e6]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$7783: sta    $4e]
l_7785:
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$7785: lda    $e8]
	cmp.b	#0x02,d0                         	| [$7787: cmpa   #$02]
	jcs	l_77e7                             	| [$7789: bcs    $77e7]
	OP_R_ON_DP_ADDRESS	move,0x4e,d0         | [$778b: lda    $4e]
	GET_REG_ADDRESS	0x2,d2                 	| [$778d: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x4e,d1          | [$778f: subb   $4e]
	GET_REG_ADDRESS	0x2,d2                 	| [$7791: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	jbsr	l_8507                            	| [$7793: jsr    $8507]
	OP_R_ON_DP_ADDRESS	move,0x4e,d0         | [$7796: lda    $4e]
	jra	l_779d                             	| [$7798: bra    $779d]
l_779a:
	GET_REG_ADDRESS	0x20,d2                	| [$779a: lda    $20,x]
	move.b	(a0),d0                         	| [...]
l_779d:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$779d: sta    $49]
	OP_W_ON_DP_ADDRESS	move,0x53,d0         | [$779f: sta    $53]
	jeq	l_77e7                             	| [$77a1: beq    $77e7]
	move.w	#0xd636,d3                      	| [$77a3: ldy    #$d636]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$77a7: lda    $19]
                                         | [$77a9: asla]
	asl.b	#2,d0                            	| [$77aa: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$77ab: leay   a,y]
l_77ad:
	GET_REG_ADDRESS	0,d3                   	| [$77ad: ldu    ,y]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_77af:
	GET_REG_ADDRESS	0,d4                   	| [$77af: inc    ,u++]
	addq.w	#2,d4                           	| [...]
	addq.b	#1,(a0)                         	| [...]
	jne	l_77b5                             	| [$77b1: bne    $77b5]
	GET_REG_ADDRESS	-0x1,d4                	| [$77b3: inc    -$1,u]
	addq.b	#1,(a0)                         	| [...]
l_77b5:
	GET_REG_ADDRESS	0x2,d3                 	| [$77b5: cmpu   $2,y]
	CMP_W_TO_REG	a0,d4                          	| [...]
	jne	l_77af                             	| [$77b8: bne    $77af]
	GET_REG_ADDRESS	screen_straight_1a,d2                	| [$77ba: inc    $1a,x]
	addq.b	#1,(a0)                         	| [...]
	move.l	d3,-(sp)                        	| [$77bd: pshs   y]
	jbsr	l_5fe3                            	| [$77bf: jsr    $5fe3]
	jbsr	l_7855                            	| [$77c2: jsr    $7855]
	movem.l	(sp)+,d3                       	| [$77c5: puls   y]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$77c7: dec    $49]
	jne	l_77ad                             	| [$77c9: bne    $77ad]
	OP_1_ON_DP_ADDRESS	tst,swimmer_19             | [$77cb: tst    $19]
	jne	l_77e7                             	| [$77cd: bne    $77e7]
	move.l	d2,-(sp)                        	| [$77cf: pshs   x]
	move.w	#0x3220,d2                      	| [$77d1: ldx    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$77d4: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_77e5                             	| [$77d6: beq    $77e5]
	GET_REG_ADDRESS	0x2,d2                 	| [$77d8: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0x53,d0          | [$77da: suba   $53]
	cmp.b	#0x10,d0                         	| [$77dc: cmpa   #$10]
	jcs	l_77e8                             	| [$77de: bcs    $77e8]
	GET_REG_ADDRESS	0x2,d2                 	| [$77e0: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_77e2:
	jbsr	l_853b                            	| [$77e2: jsr    $853b]
l_77e5:
	movem.l	(sp)+,d2                       	| [$77e5: puls   x]
l_77e7:
	rts                                    	| [$77e7: rts]

l_77e8:
	GET_REG_ADDRESS	0,d2                   	| [$77e8: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$77ea: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$77ec: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jra	l_77e2                             	| [$77ee: bra    $77e2]
l_77f0:
	OP_R_ON_DP_ADDRESS	move,0xf2,d0         | [$77f0: lda    $f2]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$77f2: sta    $4e]
l_77f4:
	OP_R_ON_DP_ADDRESS	move,0x4e,d0         | [$77f4: lda    $4e]
	GET_REG_ADDRESS	0x2,d2                 	| [$77f6: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0x4e,d1          | [$77f8: addb   $4e]
	GET_REG_ADDRESS	0x2,d2                 	| [$77fa: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	jbsr	l_8507                            	| [$77fc: jsr    $8507]
	OP_R_ON_DP_ADDRESS	move,0x4e,d0         | [$77ff: lda    $4e]
	jra	l_7806                             	| [$7801: bra    $7806]
l_7803:
	GET_REG_ADDRESS	0x20,d2                	| [$7803: lda    $20,x]
	move.b	(a0),d0                         	| [...]
l_7806:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$7806: sta    $49]
	jeq	l_7831                             	| [$7808: beq    $7831]
	move.w	#0xd636,d3                      	| [$780a: ldy    #$d636]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$780e: lda    $19]
                                         | [$7810: asla]
	asl.b	#2,d0                            	| [$7811: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$7812: leay   a,y]
l_7814:
	GET_REG_ADDRESS	0,d3                   	| [$7814: ldu    ,y]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_7816:
	GET_REG_ADDRESS	0,d4                   	| [$7816: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jne	l_781c                             	| [$7818: bne    $781c]
	GET_REG_ADDRESS	0x1,d4                 	| [$781a: dec    $1,u]
	subq.b	#1,(a0)                         	| [...]
l_781c:
	GET_REG_ADDRESS	0,d4                   	| [$781c: dec    ,u++]
	addq.w	#2,d4                           	| [...]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$781e: cmpu   $2,y]
	CMP_W_TO_REG	a0,d4                          	| [...]
	jne	l_7816                             	| [$7821: bne    $7816]
	GET_REG_ADDRESS	screen_straight_1a,d2                	| [$7823: dec    $1a,x]
	subq.b	#1,(a0)                         	| [...]
	move.l	d3,-(sp)                        	| [$7826: pshs   y]
	jbsr	l_6011                            	| [$7828: jsr    $6011]
	movem.l	(sp)+,d3                       	| [$782b: puls   y]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$782d: dec    $49]
	jne	l_7814                             	| [$782f: bne    $7814]
l_7831:
	rts                                    	| [$7831: rts]

l_7832:
	
	.ifndef	RELEASE
	move.w	#0xd630,d4
	.endif
	lea	table_d630,a4                  	| [$7832: ldu   #table_d630]
	GET_REG_ADDRESS	0,d2                   	| [$7835: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$7837: cmpa   #$03]
	jcc	l_783e                             	| [$7839: bcc    $783e]
	asl.b	#1,d0                            	| [$783b: asla]
	JMP_A_INDEXED	A4                   	| [$783c: jra    [a,u]] [jump_table]
l_783e:
	GET_REG_ADDRESS	0x58,d2                	| [$783e: tst    $58,x]
	tst.b	(a0)                             	| [...]
	jne	l_7852                             	| [$7841: bne    $7852]
	GET_REG_ADDRESS	0x20,d2                	| [$7843: lda    $20,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_7851                             	| [$7846: beq    $7851]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$7848: sta    $49]
l_784a:
	jbsr	l_83bb                            	| [$784a: jsr    $83bb]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$784d: dec    $49]
	jne	l_784a                             	| [$784f: bne    $784a]
l_7851:
	rts                                    	| [$7851: rts]

l_7852:
	jra	l_8411                             	| [$7852: jra    $8411]
l_7855:
	move.l	d2,-(sp)                        	| [$7855: pshs   x]
	move.w	#0x3260,d2                      	| [$7857: ldx    #$3260]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$785a: lda    $19]
	move.b	#0x20,d1                        	| [$785c: ldb    #$20]
	jbsr	multiply_ab                       	| [$785e: mul]
	add.w	d1,d2                            	| [$785f: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$7861: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_7870                             	| [$7863: beq    $7870]
	GET_REG_ADDRESS	0x2,d2                 	| [$7865: dec    $2,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7867: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xf0,d0                         	| [$7869: cmpa   #$f0]
	jeq	l_7873                             	| [$786b: beq    $7873]
l_786d:
	jbsr	l_851e                            	| [$786d: jsr    $851e]
l_7870:
	movem.l	(sp)+,d2                       	| [$7870: puls   x]
	rts                                    	| [$7872: rts]

l_7873:
	GET_REG_ADDRESS	0,d2                   	| [$7873: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$7875: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7877: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jra	l_786d                             	| [$7879: bra    $786d]
l_787b:
	GET_REG_ADDRESS	0x5b,d2                	| [$787b: lda    $5b,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$787e: cmpa   #$04]
	jne	l_7883                             	| [$7880: bne    $7883]
	rts                                    	| [$7882: rts]

l_7883:
	GET_REG_ADDRESS	0x58,d2                	| [$7883: tst    $58,x]
	tst.b	(a0)                             	| [...]
	jeq	l_7913                             	| [$7886: lbeq   $7913]
	GET_REG_ADDRESS	0x55,d2                	| [$788a: lda    $55,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_78b5                             	| [$788d: beq    $78b5]
	cmp.b	#0x01,d0                         	| [$788f: cmpa   #$01]
	jeq	l_78dc                             	| [$7891: beq    $78dc]
	GET_REG_ADDRESS	0xd,d2                 	| [$7893: tst    $d,x]
	tst.b	(a0)                             	| [...]
	jne	l_78a1                             	| [$7895: bne    $78a1]
	move.w	d2,d4                           	| [$7897: leau   $10,x]
	add.w	#0x10,d4                         	| [$7897: leau   $10,x]
	move.b	#0x01,d0                        	| [$789a: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$789c: sta    $48]
	jbsr	l_510f                            	| [$789e: jsr    $510f]
l_78a1:
	GET_REG_ADDRESS	0x56,d2                	| [$78a1: dec    $56,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_78b4                             	| [$78a4: bne    $78b4]
	moveq	#0,d0                            	| [$78a6: clra]
	moveq	#0,d1                            	| [$78a7: clrb]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x55,d2                	| [$78a8: std    $55,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x57,d2                	| [$78ab: std    $57,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x59,d2                	| [$78ae: sta    $59,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_83bb                            	| [$78b1: jsr    $83bb]
l_78b4:
	rts                                    	| [$78b4: rts]

l_78b5:
	move.w	d2,d4                           	| [$78b5: leau   $10,x]
	add.w	#0x10,d4                         	| [$78b5: leau   $10,x]
	move.b	#0x06,d0                        	| [$78b8: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$78ba: sta    $48]
	jbsr	l_50dd                            	| [$78bc: jsr    $50dd]
	jbsr	l_4f8a                            	| [$78bf: jsr    $4f8a]
	and.b	#0x02,d0                         	| [$78c2: anda   #$02]
	jeq	l_78db                             	| [$78c4: beq    $78db]
	move.b	#0x65,d0                        	| [$78c6: lda    #$65]
	jbsr	l_4eb3                            	| [$78c8: jsr    $4eb3]
	move.b	#0x66,d0                        	| [$78cb: lda    #$66]
	jbsr	l_4eb3                            	| [$78cd: jsr    $4eb3]
	GET_REG_ADDRESS	0x59,d2                	| [$78d0: inc    $59,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x55,d2                	| [$78d3: inc    $55,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x10,d0                        	| [$78d6: lda    #$10]
	GET_REG_ADDRESS	0x56,d2                	| [$78d8: sta    $56,x]
	move.b	d0,(a0)                         	| [...]
l_78db:
	rts                                    	| [$78db: rts]

l_78dc:
	GET_REG_ADDRESS	0x59,d2                	| [$78dc: tst    $59,x]
	tst.b	(a0)                             	| [...]
	jeq	l_78f7                             	| [$78df: beq    $78f7]
	jbsr	l_4f8a                            	| [$78e1: jsr    $4f8a]
	and.b	#0x02,d0                         	| [$78e4: anda   #$02]
	jne	l_78ed                             	| [$78e6: bne    $78ed]
	GET_REG_ADDRESS	0x59,d2                	| [$78e8: clr    $59,x]
	clr.b	(a0)                         	| [...]
	jra	l_78f7                             	| [$78eb: bra    $78f7]
l_78ed:
	move.w	d2,d4                           	| [$78ed: leau   $10,x]
	add.w	#0x10,d4                         	| [$78ed: leau   $10,x]
	move.b	#0x03,d0                        	| [$78f0: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$78f2: sta    $48]
	jbsr	l_50dd                            	| [$78f4: jsr    $50dd]
l_78f7:
	GET_REG_ADDRESS	0x56,d2                	| [$78f7: tst    $56,x]
	tst.b	(a0)                             	| [...]
	jeq	l_7901                             	| [$78fa: beq    $7901]
	GET_REG_ADDRESS	0x56,d2                	| [$78fc: dec    $56,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_7912                             	| [$78ff: bne    $7912]
l_7901:
	GET_REG_ADDRESS	0x59,d2                	| [$7901: tst    $59,x]
	tst.b	(a0)                             	| [...]
	jne	l_7912                             	| [$7904: bne    $7912]
	GET_REG_ADDRESS	0x55,d2                	| [$7906: clr    $55,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x57,d2                	| [$7909: clr    $57,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x58,d2                	| [$790c: clr    $58,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_83bb                            	| [$790f: jsr    $83bb]
l_7912:
	rts                                    	| [$7912: rts]

l_7913:
	GET_REG_ADDRESS	0,d2                   	| [$7913: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$7915: cmpa   #$05]
	jeq	l_7929                             	| [$7917: beq    $7929]
	jbsr	l_4f8a                            	| [$7919: jsr    $4f8a]
	and.b	#0x02,d0                         	| [$791c: anda   #$02]
	jeq	l_7929                             	| [$791e: beq    $7929]
	GET_REG_ADDRESS	0x58,d2                	| [$7920: inc    $58,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$7923: ldd    #$023c]
	move.w	#0x023c,d1                      	| [$7923: ldd    #$023c]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x55,d2                	| [$7926: std    $55,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_7929:
	rts                                    	| [$7929: rts]

l_792a:
	GET_REG_ADDRESS	0xd,d2                 	| [$792a: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_795a                             	| [$792c: beq    $795a]
	move.w	#0x30a0,d4                      	| [$792e: ldu    #$30a0]
l_7931:
	GET_REG_ADDRESS	0xd,d4                 	| [$7931: tst    $d,u]
	tst.b	(a0)                             	| [...]
	jeq	l_793a                             	| [$7933: beq    $793a]
	add.w	#0x60,d4                         	| [$7935: leau   $60,u]
	jra	l_7931                             	| [$7938: bra    $7931]
l_793a:
	GET_REG_ADDRESS	0xe,d4                 	| [$793a: ldd    $e,u]
	LOAD_D                                 	| [$793a: ldd    $e,u]
	GET_REG_ADDRESS	0xe,d2                 	| [$793c: subd   $e,x]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jcc	l_795b                             	| [$793e: bcc    $795b]
	move.w	d2,d4                           	| [$7940: leau   $10,x]
	add.w	#0x10,d4                         	| [$7940: leau   $10,x]
	move.b	#0x05,d0                        	| [$7943: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7945: sta    $48]
	jbsr	l_510f                            	| [$7947: jsr    $510f]
	move.w	#0xd646,d3                      	| [$794a: ldy    #$d646]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$794e: lda    $19]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$7950: ldb    a,y]
	move.b	(a0),d1                         	| [...]
	moveq	#0,d0                            	| [$7952: clra]
	MAKE_D
	GET_REG_ADDRESS	0,d4                   	| [$7953: cmpd   ,u]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcs	l_795a                             	| [$7956: bcs    $795a]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7958: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_795a:
	rts                                    	| [$795a: rts]

l_795b:
	MAKE_D
	cmp.w	#0x0048,d1                       	| [$795b: cmpd   #$0048]
	jcs	l_797f                             	| [$795f: bcs    $797f]
	cmp.w	#0x30a0,d2                       	| [$7961: cmpx   #$30a0]
	jeq	l_797f                             	| [$7964: beq    $797f]
	cmp.w	#0x31c0,d2                       	| [$7966: cmpx   #$31c0]
	jeq	l_797f                             	| [$7969: beq    $797f]
	move.w	d2,d4                           	| [$796b: leau   $10,x]
	add.w	#0x10,d4                         	| [$796b: leau   $10,x]
	move.b	#0x05,d0                        	| [$796e: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7970: sta    $48]
	jbsr	l_50d1                            	| [$7972: jsr    $50d1]
	move.b	#0x01,d0                        	| [$7975: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$7975: ldd    #$0103]
	MAKE_D
	GET_REG_ADDRESS	0,d4                   	| [$7978: cmpd   ,u]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcc	l_797f                             	| [$797b: bcc    $797f]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$797d: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_797f:
	rts                                    	| [$797f: rts]

l_7980:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7980: lda    $19]
	OP_W_ON_DP_ADDRESS	move,0x77,d0         | [$7982: sta    $77]
	move.l	d2,-(sp)                        	| [$7984: pshs   x]
	move.w	#0x3380,d2                      	| [$7986: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7989: lda    $19]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$798b: ldb    $1a]
	jeq	l_799d                             	| [$798d: beq    $799d]
	tst.b	d0                               	| [$798f: tsta]
	jeq	l_79db                             	| [$7990: beq    $79db]
	cmp.b	#0x03,d0                         	| [$7992: cmpa   #$03]
	jeq	l_79db                             	| [$7994: beq    $79db]
	subq.b	#1,d0                           	| [$7996: deca]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$7997: ldb    $1b]
	jeq	l_799d                             	| [$7999: beq    $799d]
	add.b	#0x02,d0                         	| [$799b: adda   #$02]
l_799d:
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$799d: sta    $19]
	move.b	#0x0f,d1                        	| [$799f: ldb    #$0f]
	jbsr	multiply_ab                       	| [$79a1: mul]
	add.w	d1,d2                            	| [$79a2: leax   d,x]
	move.w	#0x3070,d4                      	| [$79a4: ldu    #$3070]
	move.w	#0x34a8,d3                      	| [$79a7: ldy    #$34a8]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$79ab: lda    $19]
	and.b	#0x01,d0                         	| [$79ad: anda   #$01]
	move.b	#0x05,d1                        	| [$79af: ldb    #$05]
	jbsr	multiply_ab                       	| [$79b1: mul]
	add.w	d1,d3                            	| [$79b2: leay   d,y]
	GET_REG_ADDRESS	0,d4                   	| [$79b4: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$79b6: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$79b8: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x02,d1                        	| [$79ba: ldb    #$02]
l_79bc:
	GET_REG_ADDRESS	0,d4                   	| [$79bc: lda    ,u]
	move.b	(a0),d0                         	| [...]
                                         | [$79be: lsra]
                                         | [$79bf: lsra]
                                         | [$79c0: lsra]
	lsr.b	#4,d0                            	| [$79c1: lsra]
	GET_REG_ADDRESS	0,d2                   	| [$79c2: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$79c4: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$79c6: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$79c8: anda   #$0f]
	GET_REG_ADDRESS	0,d2                   	| [$79ca: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$79cc: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$79ce: decb]
	jne	l_79bc                             	| [$79cf: bne    $79bc]
	subq.w	#0x5,d2                         	| [$79d1: leax   -$5,x]
	jbsr	l_5171                            	| [$79d3: jsr    $5171]
	move.b	#0x06,d0                        	| [$79d6: lda    #$06]
	jbsr	queue_event_4e9a                  	| [$79d8: jsr    queue_event_4e9a]
l_79db:
	movem.l	(sp)+,d2                       	| [$79db: puls   x]
	OP_R_ON_DP_ADDRESS	move,0x77,d0         | [$79dd: lda    $77]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$79df: sta    $19]
	rts                                    	| [$79e1: rts]

l_79e2:
	jbsr	l_79eb                            	| [$79e2: bsr    $79eb]
	jbsr	l_7a10                            	| [$79e4: bsr    $7a10]
	jbsr	l_7a44                            	| [$79e6: bsr    $7a44]
	jra	l_7a78                             	| [$79e8: jra    $7a78]
l_79eb:
	move.w	#0x2585,d4                      	| [$79eb: ldu    #$2585]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$79ee: lda    $1a]
	jeq	l_79fe                             	| [$79f0: beq    $79fe]
	move.w	#0xd659,d2                      	| [$79f2: ldx    #$d659]
	jbsr	l_7a9a                            	| [$79f5: jsr    $7a9a]
	moveq	#0,d0                            	| [$79f8: clra]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$79f9: sta    $48]
	jra	l_7aae                             	| [$79fb: jra    $7aae]
l_79fe:
	move.w	#0xd64d,d2                      	| [$79fe: ldx    #$d64d]
	jbsr	l_7a9a                            	| [$7a01: jsr    $7a9a]
	move.b	#0x01,d0                        	| [$7a04: lda    #$01]
	OP_1_ON_DP_ADDRESS	tst,0xad             | [$7a06: tst    $ad]
	jeq	l_7a0b                             	| [$7a08: beq    $7a0b]
	moveq	#0,d0                            	| [$7a0a: clra]
l_7a0b:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a0b: sta    $48]
	jra	l_7aae                             	| [$7a0d: jra    $7aae]
l_7a10:
	move.w	#0x2485,d4                      	| [$7a10: ldu    #$2485]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$7a13: lda    $1a]
	jeq	l_7a33                             	| [$7a15: beq    $7a33]
	move.w	#0xd64d,d2                      	| [$7a17: ldx    #$d64d]
	move.b	#0x01,d0                        	| [$7a1a: lda    #$01]
	OP_1_ON_DP_ADDRESS	tst,0x1b             | [$7a1c: tst    $1b]
	jeq	l_7a25                             	| [$7a1e: beq    $7a25]
	move.w	#0xd653,d2                      	| [$7a20: ldx    #$d653]
	move.b	#0x03,d0                        	| [$7a23: lda    #$03]
l_7a25:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a25: sta    $48]
	jbsr	l_7a9a                            	| [$7a27: bsr    $7a9a]
	GET_ADDRESS	0x310d                     	| [$7a29: tst    $310d]
	tst.b	(a0)                             	| [...]
	jeq	l_7a31                             	| [$7a2c: beq    $7a31]
	moveq	#0,d0                            	| [$7a2e: clra]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a2f: sta    $48]
l_7a31:
	jra	l_7aae                             	| [$7a31: bra    $7aae]
l_7a33:
	move.w	#0xd650,d2                      	| [$7a33: ldx    #$d650]
	jbsr	l_7a9a                            	| [$7a36: bsr    $7a9a]
	move.b	#0x02,d0                        	| [$7a38: lda    #$02]
	GET_ADDRESS	0x310d                     	| [$7a3a: tst    $310d]
	tst.b	(a0)                             	| [...]
	jeq	l_7a40                             	| [$7a3d: beq    $7a40]
	moveq	#0,d0                            	| [$7a3f: clra]
l_7a40:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a40: sta    $48]
	jra	l_7aae                             	| [$7a42: bra    $7aae]
l_7a44:
	move.w	#0x2385,d4                      	| [$7a44: ldu    #$2385]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$7a47: lda    $1a]
	jeq	l_7a67                             	| [$7a49: beq    $7a67]
	move.w	#0xd650,d2                      	| [$7a4b: ldx    #$d650]
	move.b	#0x02,d0                        	| [$7a4e: lda    #$02]
	OP_1_ON_DP_ADDRESS	tst,0x1b             | [$7a50: tst    $1b]
	jeq	l_7a59                             	| [$7a52: beq    $7a59]
	move.w	#0xd656,d2                      	| [$7a54: ldx    #$d656]
	move.b	#0x04,d0                        	| [$7a57: lda    #$04]
l_7a59:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a59: sta    $48]
	jbsr	l_7a9a                            	| [$7a5b: bsr    $7a9a]
	GET_ADDRESS	0x316d                     	| [$7a5d: tst    $316d]
	tst.b	(a0)                             	| [...]
	jeq	l_7a65                             	| [$7a60: beq    $7a65]
	moveq	#0,d0                            	| [$7a62: clra]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a63: sta    $48]
l_7a65:
	jra	l_7aae                             	| [$7a65: bra    $7aae]
l_7a67:
	move.w	#0xd653,d2                      	| [$7a67: ldx    #$d653]
	jbsr	l_7a9a                            	| [$7a6a: bsr    $7a9a]
	move.b	#0x03,d0                        	| [$7a6c: lda    #$03]
	GET_ADDRESS	0x316d                     	| [$7a6e: tst    $316d]
	tst.b	(a0)                             	| [...]
	jeq	l_7a74                             	| [$7a71: beq    $7a74]
	moveq	#0,d0                            	| [$7a73: clra]
l_7a74:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a74: sta    $48]
	jra	l_7aae                             	| [$7a76: bra    $7aae]
l_7a78:
	move.w	#0x2285,d4                      	| [$7a78: ldu    #$2285]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d0         | [$7a7b: lda    $1a]
	jeq	l_7a89                             	| [$7a7d: beq    $7a89]
	move.w	#0xd659,d2                      	| [$7a7f: ldx    #$d659]
	jbsr	l_7a9a                            	| [$7a82: bsr    $7a9a]
	moveq	#0,d0                            	| [$7a84: clra]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a85: sta    $48]
	jra	l_7aae                             	| [$7a87: bra    $7aae]
l_7a89:
	move.w	#0xd656,d2                      	| [$7a89: ldx    #$d656]
	jbsr	l_7a9a                            	| [$7a8c: bsr    $7a9a]
	move.b	#0x04,d0                        	| [$7a8e: lda    #$04]
	GET_ADDRESS	0x31cd                     	| [$7a90: tst    $31cd]
	tst.b	(a0)                             	| [...]
	jeq	l_7a96                             	| [$7a93: beq    $7a96]
	moveq	#0,d0                            	| [$7a95: clra]
l_7a96:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7a96: sta    $48]
	jra	l_7aae                             	| [$7a98: bra    $7aae]
l_7a9a:
	move.b	#0x0d,d1                        	| [$7a9a: ldb    #$0d]
	GET_REG_ADDRESS	0,d2                   	| [$7a9c: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$7a9e: jsr    $422d]
	GET_REG_ADDRESS	0,d2                   	| [$7aa1: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$7aa3: jsr    $422d]
	GET_REG_ADDRESS	0,d2                   	| [$7aa6: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$7aa8: jsr    $422d]
	addq.w	#0x1,d4                         	| [$7aab: leau   $1,u]
	rts                                    	| [$7aad: rts]

l_7aae:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$7aae: lda    $48]
	jeq	l_7abc                             	| [$7ab0: beq    $7abc]
	subq.b	#1,d0                           	| [$7ab2: deca]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7ab3: sta    $19]
	move.b	#0x0d,d0                        	| [$7ab5: lda    #$0d]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$7ab7: sta    $50]
	jra	l_5380                             	| [$7ab9: jra    $5380]
l_7abc:
	move.w	#0xd64a,d2                      	| [$7abc: ldx    #$d64a]
	jra	l_7a9a                             	| [$7abf: bra    $7a9a]
l_7ac1:
	jbsr	l_5145                            	| [$7ac1: jsr    $5145]
	moveq	#0,d1                            	| [$7ac4: clrb]
	move.w	#0xd65c,d3                      	| [$7ac5: ldy    #$d65c]
l_7ac9:
	GET_REG_ADDRESS	0,d3                   	| [$7ac9: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7acb: cmpa   ,u] [video_address]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_7ad2                             	| [$7acd: beq    $7ad2]
	addq.b	#1,d1                           	| [$7acf: incb]
	jra	l_7ac9                             	| [$7ad0: bra    $7ac9]
l_7ad2:
	OP_W_ON_DP_ADDRESS	move,0xeb,d1         | [$7ad2: stb    $eb]
	move.b	#0x08,d0                        	| [$7ad4: lda    #$08]
	OP_R_ON_DP_ADDRESS	sub,0xbb,d0          | [$7ad6: suba   $bb]
	OP_W_ON_DP_ADDRESS	move,0xec,d0         | [$7ad8: sta    $ec]
	move.w	#0x30b0,d4                      	| [$7ada: ldu    #$30b0]
	move.b	#0x01,d0                        	| [$7add: ldd    #$0102]
	move.w	#0x0102,d1                      	| [$7add: ldd    #$0102]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7ae0: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$7ae2: clr    $2,u]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$7ae4: clr    $3,u]
	clr.b	(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xeb,d0         | [$7ae6: lda    $eb]
	cmp.b	#0x02,d0                         	| [$7ae8: cmpa   #$02]
	jcs	l_7af3                             	| [$7aea: bcs    $7af3]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7aec: sta    $48]
	jbsr	l_50d1                            	| [$7aee: jsr    $50d1]
	jra	l_7afd                             	| [$7af1: bra    $7afd]
l_7af3:
	move.b	#0x01,d0                        	| [$7af3: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$7af3: ldd    #$0101]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7af6: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x08,d0                        	| [$7af8: ldd    #$0800]
	move.w	#0x0800,d1                      	| [$7af8: ldd    #$0800]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$7afb: std    $2,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_7afd:
	moveq	#0,d0                            	| [$7afd: clra]
	OP_R_ON_DP_ADDRESS	move,0xba,d1         | [$7afe: ldb    $ba]
	BIT	#0x80,d1                           	| [$7b00: bitb   #$80]
	jne	l_7b05                             	| [$7b02: bne    $7b05]
	addq.b	#1,d0                           	| [$7b04: inca]
l_7b05:
	MAKE_D
	cmp.w	#0x0110,d1                       	| [$7b05: cmpd   #$0110]
	jcs	l_7b0d                             	| [$7b09: bcs    $7b0d]
	OP_W_ON_DP_ADDRESS	addq,0xee,#1         | [$7b0b: inc    $ee]
l_7b0d:
	rts                                    	| [$7b0d: rts]

l_7b0e:
	move.w	#0x3508,d4                      	| [$7b0e: ldu    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7b11: lda    $19]
	move.b	#0x20,d1                        	| [$7b13: ldb    #$20]
	jbsr	multiply_ab                       	| [$7b15: mul]
	GET_REG_ADDRESS_FROM_REG	d1,d4         	| [$7b16: ldd    d,u]
	LOAD_D                                 	| [$7b16: ldd    d,u]
	GET_DP_ADDRESS	0xfc                    	| [$7b18: std    $fc]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xd663,d4                      	| [$7b1a: ldu    #$d663]
	OP_R_ON_DP_ADDRESS	move,0xeb,d0         | [$7b1d: lda    $eb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7b1f: ldb    a,u]
	move.b	(a0),d1                         	| [...]
	moveq	#0,d0                            	| [$7b21: clra]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xf6                    	| [$7b22: std    $f6]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xfe,d0         | [$7b24: lda    $fe]
	asl.b	#1,d0                            	| [$7b26: asla]
	move.w	#0xd66a,d4                      	| [$7b27: ldu    #$d66a]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7b2a: ldd    a,u]
	LOAD_D                                 	| [$7b2a: ldd    a,u]
	GET_DP_ADDRESS	0xf8                    	| [$7b2c: std    $f8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xd67a,d4                      	| [$7b2e: ldu    #$d67a]
	OP_R_ON_DP_ADDRESS	move,nb_long_horse_turns_ef,d0| [$7b31: lda    nb_long_horse_turns_ef]
	cmp.b	#0x16,d0                         	| [$7b33: cmpa   #$16]
	jcs	l_7b39                             	| [$7b35: bcs    $7b39]
	move.b	#0x16,d0                        	| [$7b37: lda    #$16]
l_7b39:
	asl.b	#1,d0                            	| [$7b39: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7b3a: ldd    a,u]
	LOAD_D                                 	| [$7b3a: ldd    a,u]
	GET_DP_ADDRESS	0xfa                    	| [$7b3c: std    $fa]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_7ee6                            	| [$7b3e: jsr    $7ee6]
	move.w	#0x30f6,d3                      	| [$7b41: ldy    #$30f6]
	move.b	#0x04,d1                        	| [$7b45: ldb    #$04]
l_7b47:
	move.b	#0x01,d0                        	| [$7b47: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7b49: sta    $52]
	jbsr	l_7ef0                            	| [$7b4b: jsr    $7ef0]
	addq.w	#0x2,d3                         	| [$7b4e: leay   $2,y]
	subq.b	#1,d1                           	| [$7b50: decb]
	jne	l_7b47                             	| [$7b51: bne    $7b47]
	move.w	#0x3098,d4                      	| [$7b53: ldu    #$3098]
	OP_1_ON_DP_ADDRESS	clr,0x9b             | [$7b56: clr    $9b]
	move.w	d4,d3                           	| [$7b58: leay   $4,u]
	addq.w	#0x4,d3                         	| [$7b58: leay   $4,u]
	move.b	#0x02,d1                        	| [$7b5a: ldb    #$02]
l_7b5c:
	GET_REG_ADDRESS	0,d4                   	| [$7b5c: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7b5e: sta    $48]
                                         | [$7b60: lsra]
                                         | [$7b61: lsra]
                                         | [$7b62: lsra]
	lsr.b	#4,d0                            	| [$7b63: lsra]
	GET_REG_ADDRESS	0,d3                   	| [$7b64: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$7b66: lda    $48]
	and.b	#0x0f,d0                         	| [$7b68: anda   #$0f]
	GET_REG_ADDRESS	0,d3                   	| [$7b6a: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$7b6c: decb]
	jne	l_7b5c                             	| [$7b6d: bne    $7b5c]
	OP_R_ON_DP_ADDRESS	move,0x9c,d0         | [$7b6f: lda    $9c]
	jeq	l_7b79                             	| [$7b71: beq    $7b79]
	OP_1_ON_DP_ADDRESS	clr,0x9d             | [$7b73: clr    $9d]
	OP_1_ON_DP_ADDRESS	clr,0x9e             | [$7b75: clr    $9e]
	OP_1_ON_DP_ADDRESS	clr,0x9f             | [$7b77: clr    $9f]
l_7b79:
	move.w	#0x3508,d4                      	| [$7b79: ldu    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7b7c: lda    $19]
	move.b	#0x20,d1                        	| [$7b7e: ldb    #$20]
	jbsr	multiply_ab                       	| [$7b80: mul]
	add.w	d1,d4                            	| [$7b81: leau   d,u]
	GET_REG_ADDRESS	0,d4                   	| [$7b83: clr    ,u]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7b85: clr    $1,u]
	clr.b	(a0)                         	| [...]
	move.w	#0x309b,d2                      	| [$7b87: ldx    #$309b]
	jbsr	l_52a3                            	| [$7b8a: jsr    $52a3]
	OP_1_ON_DP_ADDRESS	tst,0x6c             | [$7b8d: tst    $6c]
	jeq	l_7b95                             	| [$7b8f: beq    $7b95]
	move.b	#0x05,d0                        	| [$7b91: lda    #$05]
	GET_REG_ADDRESS	0x1,d4                 	| [$7b93: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
l_7b95:
	rts                                    	| [$7b95: rts]

l_7b96:
	
	.ifndef	RELEASE
	move.w	#0xd6a8,d2
	.endif
	lea	table_d6a8,a2                  	| [$7b96: ldx   #table_d6a8]
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$7b99: lda    $24]
	asl.b	#1,d0                            	| [$7b9b: asla]
	JMP_A_INDEXED	A2                   	| [$7b9c: jra    [a,x]] [jump_table]
l_7b9e:
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$7b9e: lda    $0c]
	and.b	#0x0f,d0                         	| [$7ba0: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$7ba2: cmpa   #$0f]
	jeq	l_7bad                             	| [$7ba4: beq    $7bad]
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$7ba6: lda    $03]
	jeq	l_7bb4                             	| [$7ba8: beq    $7bb4]
	jra	l_7c20                             	| [$7baa: jra    $7c20]
l_7bad:
	jbsr	l_5869                            	| [$7bad: jsr    $5869]
	tst.b	d0                               	| [$7bb0: tsta]
	jeq	l_7bb4                             	| [$7bb1: beq    $7bb4]
	rts                                    	| [$7bb3: rts]

l_7bb4:
	moveq	#0,d0                            	| [$7bb4: clra]
	moveq	#0,d1                            	| [$7bb5: clrb]
	move.w	#current_level_3068,d2          	| [$7bb6: ldx    #current_level_3068]
l_7bb9:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7bb9: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3070,d2                       	| [$7bbb: cmpx   #$3070]
	jne	l_7bb9                             	| [$7bbe: bne    $7bb9]
	move.w	#0xd6ae,d2                      	| [$7bc0: ldx    #$d6ae]
	OP_W_ON_DP_ADDRESS	addq,0x7e,#1         | [$7bc3: inc    $7e]
	OP_R_ON_DP_ADDRESS	move,0x7e,d0         | [$7bc5: lda    $7e]
	move.b	#0x03,d1                        	| [$7bc7: ldb    #$03]
	jbsr	l_a606                            	| [$7bc9: jsr    $a606]
* select next demo
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$7bcc: lda    a,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,current_event_69,d0| [$7bce: sta    current_event_69]
	move.b	#0x01,d0                        	| [$7bd0: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x0f,d0         | [$7bd2: sta    $0f]
	GET_ADDRESS	0x336c                     	| [$7bd4: clr    $336c]
	clr.b	(a0)                         	| [...]
	move.b	#0x97,d0                        	| [$7bd7: lda    #$97]
	GET_ADDRESS	0x336d                     	| [$7bd9: sta    $336d]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$7bdc: inc    $24]
	rts                                    	| [$7bde: rts]

l_7bdf:
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$7bdf: lda    $0c]
	and.b	#0x0f,d0                         	| [$7be1: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$7be3: cmpa   #$0f]
	jeq	l_7bee                             	| [$7be5: beq    $7bee]
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$7be7: lda    $03]
	jeq	l_7bf5                             	| [$7be9: beq    $7bf5]
	jra	l_7c20                             	| [$7beb: jra    $7c20]
l_7bee:
	jbsr	l_5869                            	| [$7bee: jsr    $5869]
	tst.b	d0                               	| [$7bf1: tsta]
	jeq	l_7bf5                             	| [$7bf2: beq    $7bf5]
	rts                                    	| [$7bf4: rts]

l_7bf5:
	
	.ifndef	RELEASE
	move.w	#0xd6b1,d2
	.endif
	lea	table_d6b1,a2                  	| [$7bf5: ldx   #table_d6b1]
	OP_R_ON_DP_ADDRESS	move,0x26,d0         | [$7bf8: lda    $26]
	asl.b	#1,d0                            	| [$7bfa: asla]
	JMP_A_INDEXED	A2                   	| [$7bfb: jra    [a,x]] [jump_table]
l_7bfd:
	move.w	#0x3500,d2                      	| [$7bfd: ldx    #$3500]
	moveq	#0,d0                            	| [$7c00: clra]
	moveq	#0,d1                            	| [$7c01: clrb]
l_7c02:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7c02: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7c04: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3580,d2                       	| [$7c06: cmpx   #$3580]
	jne	l_7c02                             	| [$7c09: bne    $7c02]
	OP_R_ON_DP_ADDRESS	move,0x22,d0         | [$7c0b: lda    $22]
	OP_1_ON_DP_ADDRESS	clr,0x22             | [$7c0d: clr    $22]
	cmp.b	#0x03,d0                         	| [$7c0f: cmpa   #$03]
	jeq	l_7c17                             	| [$7c11: beq    $7c17]
	move.b	#0x02,d0                        	| [$7c13: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x22,d0         | [$7c15: sta    $22]
l_7c17:
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$7c17: clr    $24]
	OP_1_ON_DP_ADDRESS	clr,0x26             | [$7c19: clr    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$7c1b: clr    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0x2b             | [$7c1d: clr    $2b]
	rts                                    	| [$7c1f: rts]

l_7c20:
	move.b	#0x01,d0                        	| [$7c20: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x20,d0         | [$7c22: sta    $20]
	OP_1_ON_DP_ADDRESS	clr,0x22             | [$7c24: clr    $22]
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$7c26: clr    $24]
	OP_1_ON_DP_ADDRESS	clr,0x26             | [$7c28: clr    $26]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$7c2a: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$7c2c: clr    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0x2c             | [$7c2e: clr    $2c]
	rts                                    	| [$7c30: rts]

l_7c31:
	jbsr	l_afc1                            	| [$7c31: jsr    $afc1]
	move.w	#0x2200,d4                      	| [$7c34: ldu    #$2200]
	move.b	#0x10,d0                        	| [$7c37: lda    #$10]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7c39: sta    $48]
	move.b	#0x10,d0                        	| [$7c3b: lda    #$10]
l_7c3d:
	move.b	#0x20,d1                        	| [$7c3d: ldb    #$20]
l_7c3f:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$7c3f: clr    $0800,u]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7c43: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7c45: decb]
	jne	l_7c3f                             	| [$7c46: bne    $7c3f]
	add.w	#0x20,d4                         	| [$7c48: leau   $20,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$7c4b: dec    $48]
	jne	l_7c3d                             	| [$7c4d: bne    $7c3d]
	rts                                    	| [$7c4f: rts]

l_7c50:
	move.w	#0x2242,d4                      	| [$7c50: ldu    #$2242]
	move.b	#0x1b,d0                        	| [$7c53: ldd    #$1b0d]
	move.w	#0x1b0d,d1                      	| [$7c53: ldd    #$1b0d]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$7c56: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_7c58:
	move.b	#0x7a,d0                        	| [$7c58: lda    #$7a]
	jra	l_7c5e                             	| [$7c5a: bra    $7c5e]
	move.b	#0x7b,d0                        	| [$7c5c: lda    #$7b]
l_7c5e:
	GET_DP_ADDRESS	0x4b                    	| [$7c5e: stu    $4b]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$7c60: ldb    $48]
	OP_W_ON_DP_ADDRESS	move,0x4d,d1         | [$7c62: stb    $4d]
	jbsr	l_7c7e                            	| [$7c64: bsr    $7c7e]
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$7c66: ldb    $49]
	OP_W_ON_DP_ADDRESS	move,0x4d,d1         | [$7c68: stb    $4d]
	jbsr	l_7c8b                            	| [$7c6a: bsr    $7c8b]
	GET_DP_ADDRESS	0x4b                    	| [$7c6c: ldu    $4b]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	add.w	#0x40,d4                         	| [$7c6e: leau   $40,u]
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$7c71: ldb    $49]
	OP_W_ON_DP_ADDRESS	move,0x4d,d1         | [$7c73: stb    $4d]
	jbsr	l_7c8b                            	| [$7c75: bsr    $7c8b]
	sub.w	#0x3f,d4                         	| [$7c77: leau   -$3f,u]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$7c7a: ldb    $48]
	OP_W_ON_DP_ADDRESS	move,0x4d,d1         | [$7c7c: stb    $4d]
l_7c7e:
	OP_R_ON_DP_ADDRESS	move,0x4a,d1         | [$7c7e: ldb    $4a]
l_7c80:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$7c80: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7c84: sta    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x4d,#1         | [$7c86: dec    $4d]
	jne	l_7c80                             	| [$7c88: bne    $7c80]
	rts                                    	| [$7c8a: rts]

l_7c8b:
	OP_R_ON_DP_ADDRESS	move,0x4a,d1         | [$7c8b: ldb    $4a]
l_7c8d:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$7c8d: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7c91: sta    ,u]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x40,d4                         	| [$7c93: leau   $40,u]
	OP_W_ON_DP_ADDRESS	subq,0x4d,#1         | [$7c96: dec    $4d]
	jne	l_7c8d                             	| [$7c98: bne    $7c8d]
	rts                                    	| [$7c9a: rts]

l_7c9b:
	move.w	#0x2915,d2                      	| [$7c9b: ldx    #$2915]
	GET_ADDRESS	0x33f4                     	| [$7c9e: lda    $33f4]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$7ca1: deca]
	move.b	#0x40,d1                        	| [$7ca2: ldb    #$40]
	jbsr	multiply_ab                       	| [$7ca4: mul]
	add.w	d1,d2                            	| [$7ca5: leax   d,x]
	move.b	#0x0a,d0                        	| [$7ca7: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$7ca9: sta    $48]
	move.b	#0x00,d0                        	| [$7cab: lda    #$00]
	OP_R_ON_DP_ADDRESS	move,0x0f,d1         | [$7cad: ldb    $0f]
	and.b	#0x08,d1                         	| [$7caf: andb   #$08]
	jeq	l_7cb5                             	| [$7cb1: beq    $7cb5]
	move.b	#0x03,d0                        	| [$7cb3: lda    #$03]
l_7cb5:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$7cb5: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$7cb7: dec    $48]
	jne	l_7cb5                             	| [$7cb9: bne    $7cb5]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$7cbb: lda    $0f]
	and.b	#0x03,d0                         	| [$7cbd: anda   #$03]
	jne	l_7ccb                             	| [$7cbf: bne    $7ccb]
	move.w	#0x2a42,d4                      	| [$7cc1: ldu    #$2a42]
	move.b	#0x1b,d0                        	| [$7cc4: ldd    #$1b0d]
	move.w	#0x1b0d,d1                      	| [$7cc4: ldd    #$1b0d]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$7cc7: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_7d1d                            	| [$7cc9: bsr    $7d1d]
l_7ccb:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$7ccb: lda    $0f]
	and.b	#0x04,d0                         	| [$7ccd: anda   #$04]
	jeq	l_7ce9                             	| [$7ccf: beq    $7ce9]
	move.b	#0x01,d0                        	| [$7cd1: ldd    #$0103]
	move.w	#0x0103,d1                      	| [$7cd1: ldd    #$0103]
	jbsr	queue_event_4e9a                  	| [$7cd4: jsr    queue_event_4e9a]
	jbsr	l_7cf5                            	| [$7cd7: bsr    $7cf5]
	move.b	#0x01,d0                        	| [$7cd9: ldd    #$010a]
	move.w	#0x010a,d1                      	| [$7cd9: ldd    #$010a]
	jbsr	queue_event_4e9a                  	| [$7cdc: jsr    queue_event_4e9a]
	jbsr	l_7cfb                            	| [$7cdf: bsr    $7cfb]
	move.b	#0x01,d0                        	| [$7ce1: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$7ce1: ldd    #$0101]
	jbsr	queue_event_4e9a                  	| [$7ce4: jsr    queue_event_4e9a]
	jra	l_7d11                             	| [$7ce7: bra    $7d11]
l_7ce9:
	move.b	#0x01,d0                        	| [$7ce9: ldd    #$0100]
	move.w	#0x0100,d1                      	| [$7ce9: ldd    #$0100]
	jbsr	queue_event_4e9a                  	| [$7cec: jsr    queue_event_4e9a]
	jbsr	l_7cf5                            	| [$7cef: bsr    $7cf5]
	jbsr	l_7cfb                            	| [$7cf1: bsr    $7cfb]
	jra	l_7d11                             	| [$7cf3: bra    $7d11]
l_7cf5:
	move.b	#0x02,d0                        	| [$7cf5: ldd    #$0220]
	move.w	#0x0220,d1                      	| [$7cf5: ldd    #$0220]
	jra	queue_event_4e9a                   	| [$7cf8: jra    queue_event_4e9a]
l_7cfb:
	move.b	#0x02,d0                        	| [$7cfb: ldd    #$0221]
	move.w	#0x0221,d1                      	| [$7cfb: ldd    #$0221]
	jbsr	queue_event_4e9a                  	| [$7cfe: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$7d01: lda    #$02]
	GET_ADDRESS	0x33f4                     	| [$7d03: ldb    $33f4]
	move.b	(a0),d1                         	| [...]
	add.b	#0x24,d1                         	| [$7d06: addb   #$24]
	jbsr	queue_event_4e9a                  	| [$7d08: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$7d0b: ldd    #$0222]
	move.w	#0x0222,d1                      	| [$7d0b: ldd    #$0222]
	jra	queue_event_4e9a                   	| [$7d0e: jra    queue_event_4e9a]
l_7d11:
	move.b	#0x02,d0                        	| [$7d11: ldd    #$0223]
	move.w	#0x0223,d1                      	| [$7d11: ldd    #$0223]
	jbsr	queue_event_4e9a                  	| [$7d14: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$7d17: ldd    #$0224]
	move.w	#0x0224,d1                      	| [$7d17: ldd    #$0224]
	jra	queue_event_4e9a                   	| [$7d1a: jra    queue_event_4e9a]
l_7d1d:
	OP_W_ON_DP_ADDRESS	addq,0x65,#1         | [$7d1d: inc    $65]
	move.w	#0xd6bb,d2                      	| [$7d1f: ldx    #$d6bb]
	OP_R_ON_DP_ADDRESS	move,0x65,d0         | [$7d22: lda    $65]
	and.b	#0x03,d0                         	| [$7d24: anda   #$03]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$7d26: leax   a,x]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$7d28: ldb    $48]
l_7d2a:
	GET_REG_ADDRESS	0,d2                   	| [$7d2a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d2c: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d2e: decb]
	jeq	l_7d46                             	| [$7d2f: beq    $7d46]
	GET_REG_ADDRESS	0x1,d2                 	| [$7d31: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d33: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d35: decb]
	jeq	l_7d46                             	| [$7d36: beq    $7d46]
	GET_REG_ADDRESS	0x2,d2                 	| [$7d38: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d3a: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d3c: decb]
	jeq	l_7d46                             	| [$7d3d: beq    $7d46]
	GET_REG_ADDRESS	0x3,d2                 	| [$7d3f: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d41: sta    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d43: decb]
	jne	l_7d2a                             	| [$7d44: bne    $7d2a]
l_7d46:
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$7d46: ldb    $49]
l_7d48:
	GET_REG_ADDRESS	0,d2                   	| [$7d48: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d4a: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x40,d4                         	| [$7d4c: leau   $40,u]
	subq.b	#1,d1                           	| [$7d4f: decb]
	jeq	l_7d70                             	| [$7d50: beq    $7d70]
	GET_REG_ADDRESS	0x1,d2                 	| [$7d52: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d54: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x40,d4                         	| [$7d56: leau   $40,u]
	subq.b	#1,d1                           	| [$7d59: decb]
	jeq	l_7d70                             	| [$7d5a: beq    $7d70]
	GET_REG_ADDRESS	0x2,d2                 	| [$7d5c: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d5e: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x40,d4                         	| [$7d60: leau   $40,u]
	subq.b	#1,d1                           	| [$7d63: decb]
	jeq	l_7d70                             	| [$7d64: beq    $7d70]
	GET_REG_ADDRESS	0x3,d2                 	| [$7d66: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d68: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x40,d4                         	| [$7d6a: leau   $40,u]
	subq.b	#1,d1                           	| [$7d6d: decb]
	jne	l_7d48                             	| [$7d6e: bne    $7d48]
l_7d70:
	addq.w	#0x1,d4                         	| [$7d70: leau   $1,u]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$7d72: ldb    $48]
l_7d74:
	GET_REG_ADDRESS	0,d2                   	| [$7d74: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.w	#1,d4                           	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d76: sta    ,-u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d78: decb]
	jeq	l_7d90                             	| [$7d79: beq    $7d90]
	GET_REG_ADDRESS	0x1,d2                 	| [$7d7b: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	subq.w	#1,d4                           	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d7d: sta    ,-u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d7f: decb]
	jeq	l_7d90                             	| [$7d80: beq    $7d90]
	GET_REG_ADDRESS	0x2,d2                 	| [$7d82: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	subq.w	#1,d4                           	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d84: sta    ,-u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d86: decb]
	jeq	l_7d90                             	| [$7d87: beq    $7d90]
	GET_REG_ADDRESS	0x3,d2                 	| [$7d89: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	subq.w	#1,d4                           	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d8b: sta    ,-u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$7d8d: decb]
	jne	l_7d74                             	| [$7d8e: bne    $7d74]
l_7d90:
	subq.w	#0x1,d4                         	| [$7d90: leau   -$1,u]
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$7d92: ldb    $49]
l_7d94:
	GET_REG_ADDRESS	0,d2                   	| [$7d94: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7d96: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$7d98: leau   -$40,u]
	subq.b	#1,d1                           	| [$7d9b: decb]
	jeq	l_7dbc                             	| [$7d9c: beq    $7dbc]
	GET_REG_ADDRESS	0x1,d2                 	| [$7d9e: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7da0: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$7da2: leau   -$40,u]
	subq.b	#1,d1                           	| [$7da5: decb]
	jeq	l_7dbc                             	| [$7da6: beq    $7dbc]
	GET_REG_ADDRESS	0x2,d2                 	| [$7da8: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7daa: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$7dac: leau   -$40,u]
	subq.b	#1,d1                           	| [$7daf: decb]
	jeq	l_7dbc                             	| [$7db0: beq    $7dbc]
	GET_REG_ADDRESS	0x3,d2                 	| [$7db2: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$7db4: sta    ,u] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d4                         	| [$7db6: leau   -$40,u]
	subq.b	#1,d1                           	| [$7db9: decb]
	jne	l_7d94                             	| [$7dba: bne    $7d94]
l_7dbc:
	rts                                    	| [$7dbc: rts]

l_7dbd:
	move.w	#0x3380,d2                      	| [$7dbd: ldx    #$3380]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$7dc0: clr    $19]
	move.b	#0x04,d0                        	| [$7dc2: lda    #$04]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$7dc4: ldb    $1a]
	jeq	l_7dd3                             	| [$7dc6: beq    $7dd3]
	move.b	#0x02,d0                        	| [$7dc8: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$7dca: ldb    $1b]
	jeq	l_7dd3                             	| [$7dcc: beq    $7dd3]
	add.w	#event_pointer_1e,d2             	| [$7dce: leax   event_pointer_1e,x]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7dd1: sta    $19]
l_7dd3:
	OP_W_ON_DP_ADDRESS	move,0x65,d0         | [$7dd3: sta    $65]
l_7dd5:
	jbsr	l_7ee6                            	| [$7dd5: jsr    $7ee6]
	move.w	#0x3504,d3                      	| [$7dd8: ldy    #$3504]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7ddc: lda    $19]
	move.b	#0x20,d1                        	| [$7dde: ldb    #$20]
	jbsr	multiply_ab                       	| [$7de0: mul]
	GET_REG_ADDRESS_FROM_REG	d1,d3         	| [$7de1: lda    d,y]
	move.b	(a0),d0                         	| [...]
	jne	l_7e20                             	| [$7de3: bne    $7e20]
	GET_REG_ADDRESS	0,d2                   	| [$7de5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x06,d1                        	| [$7de7: ldb    #$06]
	jbsr	multiply_ab                       	| [$7de9: mul]
	GET_REG_ADDRESS	0x1,d2                 	| [$7dea: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d1         | [$7dec: stb    $52]
	cmp.b	#0x0b,d1                         	| [$7dee: cmpb   #$0b]
	jcc	l_7e19                             	| [$7df0: bcc    $7e19]
	move.b	#0x0a,d0                        	| [$7df2: lda    #$0a]
	OP_R_ON_DP_ADDRESS	sub,0x52,d0          | [$7df4: suba   $52]
	jeq	l_7e01                             	| [$7df6: beq    $7e01]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7df8: sta    $52]
	move.w	#0xd6cd,d3                      	| [$7dfa: ldy    #$d6cd]
	jbsr	l_7ef0                            	| [$7dfe: jsr    $7ef0]
l_7e01:
	GET_REG_ADDRESS	0x2,d2                 	| [$7e01: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$7e03: ldb    #$0a]
	jbsr	multiply_ab                       	| [$7e05: mul]
	GET_REG_ADDRESS	0x3,d2                 	| [$7e06: addb   $3,x]
	add.b	(a0),d1                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d1         | [$7e08: stb    $52]
	move.b	#0x64,d0                        	| [$7e0a: lda    #$64]
	OP_R_ON_DP_ADDRESS	sub,0x52,d0          | [$7e0c: suba   $52]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7e0e: sta    $52]
	jeq	l_7e19                             	| [$7e10: beq    $7e19]
	move.w	#0xd6c3,d3                      	| [$7e12: ldy    #$d6c3]
	jbsr	l_7ef0                            	| [$7e16: jsr    $7ef0]
l_7e19:
	move.l	d2,-(sp)                        	| [$7e19: pshs   x]
	jbsr	l_7f0a                            	| [$7e1b: jsr    $7f0a]
	movem.l	(sp)+,d2                       	| [$7e1e: puls   x]
l_7e20:
	add.w	#0xf,d2                          	| [$7e20: leax   $f,x]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$7e22: inc    $19]
	OP_W_ON_DP_ADDRESS	subq,0x65,#1         | [$7e24: dec    $65]
	jne	l_7dd5                             	| [$7e26: bne    $7dd5]
	rts                                    	| [$7e28: rts]

l_7e29:
	move.w	#0x309c,d2                      	| [$7e29: ldx    #$309c]
	jbsr	l_7ee6                            	| [$7e2c: jsr    $7ee6]
	GET_REG_ADDRESS	0,d2                   	| [$7e2f: lda    ,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$7e31: ldb    #$0a]
	jbsr	multiply_ab                       	| [$7e33: mul]
	GET_REG_ADDRESS	0x1,d2                 	| [$7e34: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	cmp.b	#0x0b,d1                         	| [$7e36: cmpb   #$0b]
	jcs	l_7e76                             	| [$7e38: bcs    $7e76]
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$7e3a: stb    $50]
	sub.b	#0x0b,d1                         	| [$7e3c: subb   #$0b]
	jeq	l_7e49                             	| [$7e3e: beq    $7e49]
	OP_W_ON_DP_ADDRESS	move,0x52,d1         | [$7e40: stb    $52]
	move.w	#0xd6d5,d3                      	| [$7e42: ldy    #$d6d5]
	jbsr	l_7ef0                            	| [$7e46: jsr    $7ef0]
l_7e49:
	GET_REG_ADDRESS	0x2,d2                 	| [$7e49: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$7e4b: ldb    #$0a]
	jbsr	multiply_ab                       	| [$7e4d: mul]
	GET_REG_ADDRESS	0x3,d2                 	| [$7e4e: addb   $3,x]
	add.b	(a0),d1                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x52,d1         | [$7e50: stb    $52]
	jeq	l_7e5b                             	| [$7e52: beq    $7e5b]
	move.w	#0xd6d1,d3                      	| [$7e54: ldy    #$d6d1]
	jbsr	l_7ef0                            	| [$7e58: jsr    $7ef0]
l_7e5b:
	move.b	#0x02,d0                        	| [$7e5b: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7e5d: sta    $52]
	move.w	#0xd6d3,d3                      	| [$7e5f: ldy    #$d6d3]
	jbsr	l_7ef0                            	| [$7e63: jsr    $7ef0]
	OP_R_ON_DP_ADDRESS	move,0x50,d0         | [$7e66: lda    $50]
	cmp.b	#0x13,d0                         	| [$7e68: cmpa   #$13]
	jcs	l_7e76                             	| [$7e6a: bcs    $7e76]
	move.b	#0x0a,d0                        	| [$7e6c: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7e6e: sta    $52]
	move.w	#0xd6cf,d3                      	| [$7e70: ldy    #$d6cf]
	jbsr	l_7ef0                            	| [$7e74: bsr    $7ef0]
l_7e76:
	GET_REG_ADDRESS	0,d4                   	| [$7e76: ldd    ,u]
	LOAD_D                                 	| [$7e76: ldd    ,u]
	GET_REG_ADDRESS	0x1,d4                 	| [$7e78: std    $1,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7e7a: clr    ,u]
	clr.b	(a0)                         	| [...]
	jra	l_7f0a                             	| [$7e7c: jra    $7f0a]
l_7e7f:
	move.w	#0x309c,d2                      	| [$7e7f: ldx    #$309c]
	jbsr	l_7ee6                            	| [$7e82: bsr    $7ee6]
	GET_REG_ADDRESS	0,d2                   	| [$7e84: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$7e86: cmpa   #$01]
	jeq	l_7edf                             	| [$7e88: beq    $7edf]
	GET_REG_ADDRESS	0x1,d2                 	| [$7e8a: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$7e8c: ldb    #$0a]
	jbsr	multiply_ab                       	| [$7e8e: mul]
	GET_REG_ADDRESS	0x2,d2                 	| [$7e8f: addb   $2,x]
	add.b	(a0),d1                          	| [...]
	cmp.b	#0x3e,d1                         	| [$7e91: cmpb   #$3e]
	jcs	l_7edd                             	| [$7e93: bcs    $7edd]
	sub.b	#0x3e,d1                         	| [$7e95: subb   #$3e]
	OP_W_ON_DP_ADDRESS	move,0x53,d1         | [$7e97: stb    $53]
	jeq	l_7ea9                             	| [$7e99: beq    $7ea9]
	cmp.b	#0x20,d1                         	| [$7e9b: cmpb   #$20]
	jcs	l_7ea1                             	| [$7e9d: bcs    $7ea1]
	move.b	#0x20,d1                        	| [$7e9f: ldb    #$20]
l_7ea1:
	OP_W_ON_DP_ADDRESS	move,0x52,d1         | [$7ea1: stb    $52]
	move.w	#0xd6c7,d3                      	| [$7ea3: ldy    #$d6c7]
	jbsr	l_7ef0                            	| [$7ea7: bsr    $7ef0]
l_7ea9:
	OP_R_ON_DP_ADDRESS	move,0x53,d0         | [$7ea9: lda    $53]
	cmp.b	#0x20,d0                         	| [$7eab: cmpa   #$20]
	jcc	l_7ec1                             	| [$7ead: bcc    $7ec1]
	GET_REG_ADDRESS	0x3,d2                 	| [$7eaf: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$7eb1: cmpa   #$05]
	jne	l_7ebf                             	| [$7eb3: bne    $7ebf]
	move.b	#0x01,d0                        	| [$7eb5: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7eb7: sta    $52]
	move.w	#0xd6c5,d3                      	| [$7eb9: ldy    #$d6c5]
	jbsr	l_7ef0                            	| [$7ebd: bsr    $7ef0]
l_7ebf:
	jra	l_7f0a                             	| [$7ebf: bra    $7f0a]
l_7ec1:
	sub.b	#0x20,d0                         	| [$7ec1: suba   #$20]
	jeq	l_7ecd                             	| [$7ec3: beq    $7ecd]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7ec5: sta    $52]
	move.w	#0xd6cb,d3                      	| [$7ec7: ldy    #$d6cb]
	jbsr	l_7ef0                            	| [$7ecb: bsr    $7ef0]
l_7ecd:
	GET_REG_ADDRESS	0x3,d2                 	| [$7ecd: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$7ecf: cmpa   #$05]
	jne	l_7edd                             	| [$7ed1: bne    $7edd]
	move.b	#0x01,d0                        	| [$7ed3: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x52,d0         | [$7ed5: sta    $52]
	move.w	#0xd6c9,d3                      	| [$7ed7: ldy    #$d6c9]
	jbsr	l_7ef0                            	| [$7edb: bsr    $7ef0]
l_7edd:
	jra	l_7f0a                             	| [$7edd: bra    $7f0a]
l_7edf:
	move.b	#0x10,d0                        	| [$7edf: ldd    #$1000]
	move.w	#0x1000,d1                      	| [$7edf: ldd    #$1000]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7ee2: std    $1,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_7f0a                             	| [$7ee4: bra    $7f0a]
l_7ee6:
	move.w	#0x3097,d4                      	| [$7ee6: ldu    #$3097]
	GET_REG_ADDRESS	0,d4                   	| [$7ee9: clr    ,u]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7eeb: clr    $1,u]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$7eed: clr    $2,u]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$7eef: rts]

l_7ef0:
	GET_REG_ADDRESS	0x2,d4                 	| [$7ef0: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$7ef2: adda   $1,y]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$7ef5: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7ef7: lda    $1,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$7ef9: adca   ,y]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7efc: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7efe: lda    ,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x00,d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7f03: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x52,#1         | [$7f05: dec    $52]
	jne	l_7ef0                             	| [$7f07: bne    $7ef0]
	rts                                    	| [$7f09: rts]

l_7f0a:
	move.w	#0x3480,d2                      	| [$7f0a: ldx    #$3480]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$7f0d: lda    $19]
	move.b	#0x03,d1                        	| [$7f0f: ldb    #$03]
	jbsr	multiply_ab                       	| [$7f11: mul]
	add.w	d1,d2                            	| [$7f12: leax   d,x]
	move.w	#0x3097,d4                      	| [$7f14: ldu    #$3097]
	jbsr	l_7f21                            	| [$7f17: bsr    $7f21]
	jbsr	l_553c                            	| [$7f19: jsr    $553c]
	move.b	#0x07,d0                        	| [$7f1c: lda    #$07]
	jra	queue_event_4e9a                   	| [$7f1e: jra    queue_event_4e9a]
l_7f21:
	GET_REG_ADDRESS	0x2,d2                 	| [$7f21: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$7f23: adda   $2,u]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$7f26: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$7f28: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d4                 	| [$7f2a: adca   $1,u]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$7f2d: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7f2f: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7f31: adca   ,u]
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$7f34: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$7f36: rts]

l_7f37:
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$7f37: lda    current_level_68]
	move.b	#0x07,d1                        	| [$7f39: ldb    #$07]
	jbsr	l_a606                            	| [$7f3b: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$7f3e: stb    $48]
	cmp.b	#0x03,d1                         	| [$7f40: cmpb   #$03]
	jcc	l_7f4d                             	| [$7f42: bcc    $7f4d]
	GET_ADDRESS	0x3f00                     	| [$7f44: ldd    $3f00]
	LOAD_D                                 	| [$7f44: ldd    $3f00]
	cmp.w	#0x0102,d1                       	| [$7f47: cmpd   #$0102]
	jeq	l_7fa7                             	| [$7f4b: beq    $7fa7]
l_7f4d:
	move.w	#0xd6de,d2                      	| [$7f4d: ldx    #$d6de]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$7f50: ldb    $48]
	cmp.b	#0x05,d1                         	| [$7f52: cmpb   #$05]
	jcs	l_7f58                             	| [$7f54: bcs    $7f58]
	move.b	#0x05,d1                        	| [$7f56: ldb    #$05]
l_7f58:
	asl.b	#1,d1                            	| [$7f58: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$7f59: ldx    b,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	cmp.b	#0x04,d1                         	| [$7f5b: cmpb   #$04]
	jcc	l_7f6e                             	| [$7f5d: bcc    $7f6e]
	OP_R_ON_DP_ADDRESS	move,0x0e,d0         | [$7f5f: lda    $0e]
	tst.b	d1                               	| [$7f61: tstb]
	jeq	l_7f69                             	| [$7f62: beq    $7f69]
	move.w	#0xd6ea,d4                      	| [$7f64: ldu    #$d6ea]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7f67: lda    a,u]
	move.b	(a0),d0                         	| [...]
l_7f69:
	move.b	#0x07,d1                        	| [$7f69: ldb    #$07]
	jbsr	multiply_ab                       	| [$7f6b: mul]
	add.w	d1,d2                            	| [$7f6c: leax   d,x]
l_7f6e:
	move.w	#0xd79b,d4                      	| [$7f6e: ldu    #$d79b]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$7f71: lda    current_event_69]
	move.b	d0,d1                           	| [$7f73: tfr    a,b]
	asl.b	#1,d0                            	| [$7f75: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7f76: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.b	#0x03,d0                        	| [$7f78: lda    #$03]
	cmp.b	#0x03,d1                         	| [$7f7a: cmpb   #$03]
	jeq	l_7f80                             	| [$7f7c: beq    $7f80]
	move.b	#0x02,d0                        	| [$7f7e: lda    #$02]
l_7f80:
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$7f80: ldb    b,x]
	move.b	(a0),d1                         	| [...]
	jbsr	multiply_ab                       	| [$7f82: mul]
	add.w	d1,d4                            	| [$7f83: leau   d,u]
	move.w	#0x3060,d2                      	| [$7f85: ldx    #$3060]
	moveq	#0,d0                            	| [$7f88: clra]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$7f89: ldb    current_event_69]
	cmp.b	#0x03,d1                         	| [$7f8b: cmpb   #$03]
	jne	l_7f91                             	| [$7f8d: bne    $7f91]
	GET_REG_ADDRESS	0,d4                   	| [$7f8f: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
l_7f91:
	GET_REG_ADDRESS	0,d2                   	| [$7f91: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x02,d1                        	| [$7f93: ldb    #$02]
l_7f95:
	GET_REG_ADDRESS	0,d4                   	| [$7f95: lda    ,u]
	move.b	(a0),d0                         	| [...]
                                         | [$7f97: lsra]
                                         | [$7f98: lsra]
                                         | [$7f99: lsra]
	lsr.b	#4,d0                            	| [$7f9a: lsra]
	GET_REG_ADDRESS	0,d2                   	| [$7f9b: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7f9d: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$7f9f: anda   #$0f]
	GET_REG_ADDRESS	0,d2                   	| [$7fa1: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$7fa3: decb]
	jne	l_7f95                             	| [$7fa4: bne    $7f95]
	rts                                    	| [$7fa6: rts]

l_7fa7:
	move.w	#0x3f10,d2                      	| [$7fa7: ldx    #$3f10]
	move.b	#0x1d,d0                        	| [$7faa: lda    #$1d]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$7fac: ldb    $48]
	jbsr	multiply_ab                       	| [$7fae: mul]
	add.w	d1,d2                            	| [$7faf: leax   d,x]
	move.w	#0xd6d7,d4                      	| [$7fb1: ldu    #$d6d7]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$7fb4: lda    current_event_69]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$7fb6: ldb    a,u]
	move.b	(a0),d1                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$7fb8: leax   b,x]
	move.w	#0x3060,d4                      	| [$7fba: ldu    #$3060]
	move.b	#0x05,d1                        	| [$7fbd: ldb    #$05]
	cmp.b	#0x03,d0                         	| [$7fbf: cmpa   #$03]
	jeq	l_7fc7                             	| [$7fc1: beq    $7fc7]
	move.b	#0x04,d1                        	| [$7fc3: ldb    #$04]
	GET_REG_ADDRESS	0,d4                   	| [$7fc5: clr    ,u+]
	addq.w	#1,d4                           	| [...]
	clr.b	(a0)                         	| [...]
l_7fc7:
	GET_REG_ADDRESS	0,d2                   	| [$7fc7: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$7fc9: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$7fcb: decb]
	jne	l_7fc7                             	| [$7fcc: bne    $7fc7]
	rts                                    	| [$7fce: rts]

l_7fcf:
	move.w	#0x3630,d4                      	| [$7fcf: ldu    #$3630]
	move.w	#0xd84e,d3                      	| [$7fd2: ldy    #$d84e]
	GET_ADDRESS	0x3263                     	| [$7fd6: lda    $3263]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$7fd9: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$7fda: leay   a,y]
	jra	l_894b                             	| [$7fdc: jra    $894b]

l_8000:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$8000: lda    current_event_69]
	tst.b	d0                               	| [$8002: cmpa   #$00]
	jne	l_8019                             	| [$8004: bne    $8019]
	move.w	#0x3260,d2                      	| [$8006: ldx    #$3260]
	GET_REG_ADDRESS	0,d2                   	| [$8009: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34e7                     	| [$800b: lda    $34e7]
	move.b	(a0),d0                         	| [...]
	jeq	l_8019                             	| [$800e: beq    $8019]
	GET_REG_ADDRESS	0,d2                   	| [$8010: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xb0,d0                        	| [$8012: ldd    #$b0f0]
	move.w	#0xb0f0,d1                      	| [$8012: ldd    #$b0f0]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8015: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_8053                            	| [$8017: bsr    $8053]
l_8019:
	rts                                    	| [$8019: rts]

l_801a:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$801a: lda    current_event_69]
	tst.b	d0                               	| [$801c: cmpa   #$00]
	jne	l_8052                             	| [$801e: bne    $8052]
	move.w	#0x3260,d2                      	| [$8020: ldx    #$3260]
	GET_REG_ADDRESS	0,d2                   	| [$8023: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_8052                             	| [$8025: beq    $8052]
	GET_REG_ADDRESS	0x2,d2                 	| [$8027: dec    $2,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$8029: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0f,d0                         	| [$802b: cmpa   #$0f]
	jeq	l_803d                             	| [$802d: beq    $803d]
	cmp.b	#0x30,d0                         	| [$802f: cmpa   #$30]
	jcs	l_8037                             	| [$8031: bcs    $8037]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$8033: clr    $48]
	jra	l_8053                             	| [$8035: bra    $8053]
l_8037:
	move.b	#0x01,d0                        	| [$8037: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$8039: sta    $48]
	jra	l_8053                             	| [$803b: bra    $8053]
l_803d:
	GET_REG_ADDRESS	0,d2                   	| [$803d: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$803f: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$8041: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_8053                            	| [$8043: bsr    $8053]
	move.b	#0x03,d0                        	| [$8045: lda    #$03]
	GET_ADDRESS	0x34e6                     	| [$8047: sta    $34e6]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_80f6                            	| [$804a: jsr    $80f6]
	move.b	#0x39,d0                        	| [$804d: lda    #$39]
	jbsr	l_4eb3                            	| [$804f: jsr    $4eb3]
l_8052:
	rts                                    	| [$8052: rts]

l_8053:
	move.w	#0xd834,d4                      	| [$8053: ldu    #$d834]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$8056: lda    $48]
	move.b	#0x03,d1                        	| [$8058: ldb    #$03]
	jbsr	multiply_ab                       	| [$805a: mul]
	move.w	d4,d3                           	| [$805b: leay   d,u]
	add.w	d1,d3                            	| [$805b: leay   d,u]
	move.w	#0x3600,d4                      	| [$805d: ldu    #$3600]
	jra	l_890f                             	| [$8060: jra    $890f]
l_8063:
	move.w	#0x3250,d2                      	| [$8063: ldx    #$3250]
	GET_REG_ADDRESS	0,d2                   	| [$8066: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34e7                     	| [$8068: lda    $34e7]
	move.b	(a0),d0                         	| [...]
	jeq	l_8076                             	| [$806b: beq    $8076]
	GET_REG_ADDRESS	0,d2                   	| [$806d: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0xf0,d0                        	| [$806f: ldd    #$f070]
	move.w	#0xf070,d1                      	| [$806f: ldd    #$f070]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8072: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_80d8                            	| [$8074: bsr    $80d8]
l_8076:
	rts                                    	| [$8076: rts]

l_8077:
	GET_ADDRESS	0x34e7                     	| [$8077: tst    $34e7]
	tst.b	(a0)                             	| [...]
	jeq	l_809d                             	| [$807a: beq    $809d]
	move.w	#0x3250,d2                      	| [$807c: ldx    #$3250]
	
	.ifndef	RELEASE
	move.w	#0xd82e,d4
	.endif
	lea	table_d82e,a4                  	| [$807f: ldu   #table_d82e]
	GET_REG_ADDRESS	0,d2                   	| [$8082: lda    ,x]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$8084: asla]
	JMP_A_INDEXED	A4                   	| [$8085: jra    [a,u]] [jump_table]
l_8087:
	GET_REG_ADDRESS	0x1,d2                 	| [$8087: dec    $1,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8089: dec    $1,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$808b: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x5d,d0                         	| [$808d: cmpa   #$5d]
	jcs	l_8093                             	| [$808f: bcs    $8093]
	jra	l_80d8                             	| [$8091: bra    $80d8]
l_8093:
	GET_REG_ADDRESS	0,d2                   	| [$8093: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x5c,d0                        	| [$8095: lda    #$5c]
	GET_REG_ADDRESS	0x1,d2                 	| [$8097: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xe8             | [$8099: clr    $e8]
	OP_1_ON_DP_ADDRESS	clr,0x65             | [$809b: clr    $65]
l_809d:
	rts                                    	| [$809d: rts]

l_809e:
	move.w	#0xd5f2,d4                      	| [$809e: ldu    #$d5f2]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$80a1: lda    $e8]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$80a3: lda    a,u]
	move.b	(a0),d0                         	| [...]
	add.b	#0x5c,d0                         	| [$80a5: adda   #$5c]
	GET_REG_ADDRESS	0x1,d2                 	| [$80a7: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xe8,#1         | [$80a9: inc    $e8]
	OP_R_ON_DP_ADDRESS	move,0xe8,d0         | [$80ab: lda    $e8]
	cmp.b	#0x12,d0                         	| [$80ad: cmpa   #$12]
	jne	l_80b3                             	| [$80af: bne    $80b3]
	OP_1_ON_DP_ADDRESS	clr,0xe8             | [$80b1: clr    $e8]
l_80b3:
	cmp.b	#0x01,d0                         	| [$80b3: cmpa   #$01]
	jne	l_80c4                             	| [$80b5: bne    $80c4]
	move.b	#0x23,d0                        	| [$80b7: lda    #$23]
	jbsr	l_4eb3                            	| [$80b9: jsr    $4eb3]
	OP_W_ON_DP_ADDRESS	addq,0x65,#1         | [$80bc: inc    $65]
	OP_R_ON_DP_ADDRESS	move,0x65,d0         | [$80be: lda    $65]
	cmp.b	#0x04,d0                         	| [$80c0: cmpa   #$04]
	jeq	l_80c8                             	| [$80c2: beq    $80c8]
l_80c4:
	GET_REG_ADDRESS	0x2,d2                 	| [$80c4: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	jra	l_80d8                             	| [$80c6: bra    $80d8]
l_80c8:
	GET_REG_ADDRESS	0,d2                   	| [$80c8: clr    ,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_80e2                            	| [$80ca: bsr    $80e2]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$80cc: lda    $19]
	OP_W_ON_DP_ADDRESS	move,0x77,d0         | [$80ce: sta    $77]
	move.b	#0x03,d0                        	| [$80d0: lda    #$03]
	GET_ADDRESS	0x34e6                     	| [$80d2: sta    $34e6]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_80f6                            	| [$80d5: bsr    $80f6]
	rts                                    	| [$80d7: rts]

l_80d8:
	move.w	#0x3600,d4                      	| [$80d8: ldu    #$3600]
	move.w	#0xd83a,d3                      	| [$80db: ldy    #$d83a]
	jra	l_894b                             	| [$80df: jra    $894b]
l_80e2:
	move.w	#0x3258,d2                      	| [$80e2: ldx    #$3258]
	GET_ADDRESS	0x3251                     	| [$80e5: ldd    $3251]
	LOAD_D                                 	| [$80e5: ldd    $3251]
	add.b	#0x10,d0                         	| [$80e8: adda   #$10]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$80ea: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x3604,d4                      	| [$80ec: ldu    #$3604]
	move.w	#0xd83c,d3                      	| [$80ef: ldy    #$d83c]
	jra	l_894b                             	| [$80f3: jra    $894b]
l_80f6:
	move.w	#0x3480,d2                      	| [$80f6: ldx    #$3480]
	OP_R_ON_DP_ADDRESS	move,0x77,d0         | [$80f9: lda    $77]
	move.b	#0x03,d1                        	| [$80fb: ldb    #$03]
	jbsr	multiply_ab                       	| [$80fd: mul]
	add.w	d1,d2                            	| [$80fe: leax   d,x]
	move.w	#0xd869,d4                      	| [$8100: ldu    #$d869]
	GET_ADDRESS	0x34e6                     	| [$8103: lda    $34e6]
	move.b	(a0),d0                         	| [...]
	jeq	l_8119                             	| [$8106: beq    $8119]
	subq.b	#1,d0                           	| [$8108: deca]
	move.b	#0x03,d1                        	| [$8109: ldb    #$03]
	jbsr	multiply_ab                       	| [$810b: mul]
	add.w	d1,d4                            	| [$810c: leau   d,u]
	jbsr	l_7f21                            	| [$810e: jsr    $7f21]
	jbsr	l_553c                            	| [$8111: jsr    $553c]
	move.b	#0x07,d0                        	| [$8114: lda    #$07]
	jbsr	queue_event_4e9a                  	| [$8116: jsr    queue_event_4e9a]
l_8119:
	rts                                    	| [$8119: rts]

l_811a:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$811a: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$811c: cmpa   #$02]
	jne	l_813c                             	| [$811e: bne    $813c]
	move.w	#0x3260,d2                      	| [$8120: ldx    #$3260]
	GET_REG_ADDRESS	0,d2                   	| [$8123: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34e7                     	| [$8125: lda    $34e7]
	move.b	(a0),d0                         	| [...]
	jeq	l_813c                             	| [$8128: beq    $813c]
	GET_REG_ADDRESS	0,d2                   	| [$812a: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x4c,d0                        	| [$812c: ldd    #$4c58]
	move.w	#0x4c58,d1                      	| [$812c: ldd    #$4c58]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$812f: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	add.w	#0x000f,d1                       	| [$8131: addd   #$000f]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$8134: std    $4,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3263                     	| [$8136: clr    $3263]
	clr.b	(a0)                         	| [...]
	jbsr	l_7fcf                            	| [$8139: jsr    $7fcf]
l_813c:
	rts                                    	| [$813c: rts]

l_813d:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$813d: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$813f: cmpa   #$02]
	jne	l_818c                             	| [$8141: bne    $818c]
	move.w	#0x3260,d2                      	| [$8143: ldx    #$3260]
	GET_REG_ADDRESS	0,d2                   	| [$8146: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_818c                             	| [$8148: beq    $818c]
	OP_R_ON_DP_ADDRESS	move,0x29,d0         | [$814a: lda    $29]
	cmp.b	#0xe0,d0                         	| [$814c: cmpa   #$e0]
	jeq	l_816a                             	| [$814e: beq    $816a]
	cmp.b	#0xd0,d0                         	| [$8150: cmpa   #$d0]
	jeq	l_816a                             	| [$8152: beq    $816a]
	cmp.b	#0xc0,d0                         	| [$8154: cmpa   #$c0]
	jeq	l_816a                             	| [$8156: beq    $816a]
	cmp.b	#0xb0,d0                         	| [$8158: cmpa   #$b0]
	jeq	l_816a                             	| [$815a: beq    $816a]
	cmp.b	#0x90,d0                         	| [$815c: cmpa   #$90]
	jeq	l_816a                             	| [$815e: beq    $816a]
	cmp.b	#0x70,d0                         	| [$8160: cmpa   #$70]
	jeq	l_8173                             	| [$8162: beq    $8173]
	cmp.b	#0x01,d0                         	| [$8164: cmpa   #$01]
	jeq	l_8178                             	| [$8166: beq    $8178]
	jra	l_818c                             	| [$8168: bra    $818c]
l_816a:
	GET_ADDRESS	0x3263                     	| [$816a: inc    $3263]
	addq.b	#1,(a0)                         	| [...]
	move.w	#0x3260,d2                      	| [$816d: ldx    #$3260]
	jra	l_7fcf                             	| [$8170: jra    $7fcf]
l_8173:
	move.w	#0x3263,d2                      	| [$8173: ldx    #$3263]
	jra	l_818d                             	| [$8176: bra    $818d]
l_8178:
	GET_REG_ADDRESS	0,d2                   	| [$8178: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$817a: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$817c: clr    $2,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$817e: clr    $3,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$8180: clr    $4,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$8182: clr    $5,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_7fcf                            	| [$8184: jsr    $7fcf]
	jbsr	l_818d                            	| [$8187: bsr    $818d]
	jbsr	l_80f6                            	| [$8189: lbsr   $80f6]
l_818c:
	rts                                    	| [$818c: rts]

l_818d:
	move.w	#0x362c,d4                      	| [$818d: ldu    #$362c]
	move.w	#0xd85a,d3                      	| [$8190: ldy    #$d85a]
	GET_ADDRESS	0x34e6                     	| [$8194: lda    $34e6]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$8197: deca]
	move.b	#0x03,d1                        	| [$8198: ldb    #$03]
	jbsr	multiply_ab                       	| [$819a: mul]
	add.w	d1,d3                            	| [$819b: leay   d,y]
	jra	l_890f                             	| [$819d: jra    $890f]
l_81a0:
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$81a0: tst    $1a]
	jne	l_81f1                             	| [$81a2: bne    $81f1]
	move.w	#0x33d1,d2                      	| [$81a4: ldx    #$33d1]
	jbsr	l_52a3                            	| [$81a7: jsr    $52a3]
	OP_1_ON_DP_ADDRESS	tst,0x6c             | [$81aa: tst    $6c]
	jeq	l_81f0                             	| [$81ac: beq    $81f0]
	move.w	d2,d3                           	| [$81ae: leay   $6,x]
	addq.w	#0x6,d3                         	| [$81ae: leay   $6,x]
	move.b	#0x05,d0                        	| [$81b0: lda    #$05]
	movem.l	d2/d3,-(sp)                    	| [$81b2: pshs   y,x]
	jbsr	l_a6c1                            	| [$81b4: jsr    $a6c1]
	movem.l	(sp)+,d2/d3                    	| [$81b7: puls   x,y]
	tst.b	d0                               	| [$81b9: tsta]
	jne	l_81f0                             	| [$81ba: bne    $81f0]
	move.b	#0x02,d0                        	| [$81bc: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$81be: sta    $48]
	GET_REG_ADDRESS	-0x1,d2                	| [$81c0: lda    -$1,x]
	move.b	(a0),d0                         	| [...]
l_81c2:
	BIT	#0x10,d0                           	| [$81c2: bita   #$10]
	jne	l_81c8                             	| [$81c4: bne    $81c8]
	jbsr	l_8226                            	| [$81c6: bsr    $8226]
l_81c8:
	GET_ADDRESS	0x33d6                     	| [$81c8: lda    $33d6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$81cb: dec    $48]
	jne	l_81c2                             	| [$81cd: bne    $81c2]
	move.b	#0x02,d0                        	| [$81cf: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$81d1: sta    $48]
	move.w	d2,d3                           	| [$81d3: leay   $c,x]
	add.w	#0xc,d3                          	| [$81d3: leay   $c,x]
l_81d5:
	move.b	#0x05,d0                        	| [$81d5: lda    #$05]
	movem.l	d2/d3,-(sp)                    	| [$81d7: pshs   y,x]
	jbsr	l_a6c1                            	| [$81d9: jsr    $a6c1]
	movem.l	(sp)+,d2/d3                    	| [$81dc: puls   x,y]
	tst.b	d0                               	| [$81de: tsta]
	jne	l_81e9                             	| [$81df: bne    $81e9]
	GET_REG_ADDRESS	-0x1,d3                	| [$81e1: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	BIT	#0x10,d0                           	| [$81e3: bita   #$10]
	jne	l_81e9                             	| [$81e5: bne    $81e9]
	jbsr	l_8226                            	| [$81e7: bsr    $8226]
l_81e9:
	move.w	d2,d3                           	| [$81e9: leay   $12,x]
	add.w	#0x12,d3                         	| [$81e9: leay   $12,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$81ec: dec    $48]
	jne	l_81d5                             	| [$81ee: bne    $81d5]
l_81f0:
	rts                                    	| [$81f0: rts]

l_81f1:
	move.w	#0x34a8,d2                      	| [$81f1: ldx    #$34a8]
	jbsr	l_52a3                            	| [$81f4: jsr    $52a3]
	OP_1_ON_DP_ADDRESS	tst,0x6c             | [$81f7: tst    $6c]
	jeq	l_8225                             	| [$81f9: beq    $8225]
	move.w	#0x34ad,d3                      	| [$81fb: ldy    #$34ad]
	move.b	#0x05,d0                        	| [$81ff: lda    #$05]
	jbsr	l_a6c1                            	| [$8201: jsr    $a6c1]
	tst.b	d0                               	| [$8204: tsta]
	jne	l_8225                             	| [$8205: bne    $8225]
	move.w	#0x310d,d2                      	| [$8207: ldx    #$310d]
	move.w	#0x3500,d4                      	| [$820a: ldu    #$3500]
	OP_1_ON_DP_ADDRESS	tst,0x1b             | [$820d: tst    $1b]
	jeq	l_8214                             	| [$820f: beq    $8214]
	move.w	#0x3540,d4                      	| [$8211: ldu    #$3540]
l_8214:
	move.b	#0x02,d1                        	| [$8214: ldb    #$02]
l_8216:
	GET_REG_ADDRESS	0,d2                   	| [$8216: tst    ,x]
	tst.b	(a0)                             	| [...]
	jne	l_821c                             	| [$8218: bne    $821c]
	GET_REG_ADDRESS	0x8,d4                 	| [$821a: inc    $8,u]
	addq.b	#1,(a0)                         	| [...]
l_821c:
	add.w	#0x60,d2                         	| [$821c: leax   $60,x]
	add.w	#0x20,d4                         	| [$821f: leau   $20,u]
	subq.b	#1,d1                           	| [$8222: decb]
	jne	l_8216                             	| [$8223: bne    $8216]
l_8225:
	rts                                    	| [$8225: rts]

l_8226:
	move.w	#0x3508,d4                      	| [$8226: ldu    #$3508]
	subq.b	#1,d0                           	| [$8229: deca]
	move.b	#0x20,d1                        	| [$822a: ldb    #$20]
	jbsr	multiply_ab                       	| [$822c: mul]
	and.l	#0xFFFF,d1                       	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d1,d4         	| [$822d: inc    d,u]
	addq.b	#1,(a0)                         	| [...]
l_822f:
	rts                                    	| [$822f: rts]

l_8230:
	GET_REG_ADDRESS	0,d2                   	| [$8230: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_822f                             	| [$8232: beq    $822f]
	move.w	#0xd83e,d4                      	| [$8234: ldu    #$d83e]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$8237: tst    $1a]
	jne	l_8242                             	| [$8239: bne    $8242]
	cmp.w	#0x32d0,d2                       	| [$823b: cmpx   #$32d0]
	jcs	l_8242                             	| [$823e: bcs    $8242]
	addq.w	#0x6,d4                         	| [$8240: leau   $6,u]
l_8242:
	OP_R_ON_DP_ADDRESS	move,0x50,d0         | [$8242: lda    $50]
	asl.b	#1,d0                            	| [$8244: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	move.w	d4,d3                           	| [$8245: leay   a,u]
	add.w	d6,d3                            	| [$8245: leay   a,u]
	move.w	#0x3610,d4                      	| [$8247: ldu    #$3610]
	OP_R_ON_DP_ADDRESS	move,0x51,d0         | [$824a: lda    $51]
                                         | [$824c: asla]
	asl.b	#2,d0                            	| [$824d: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$824e: leau   a,u]
	jra	l_894b                             	| [$8250: jra    $894b]
l_8253:
	move.w	#0xd84a,d3                      	| [$8253: ldy    #$d84a]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$8257: tst    $1a]
	jne	l_8268                             	| [$8259: bne    $8268]
	cmp.w	#0x32c0,d2                       	| [$825b: cmpx   #$32c0]
	jcs	l_8268                             	| [$825e: bcs    $8268]
	addq.w	#0x2,d3                         	| [$8260: leay   $2,y]
	GET_REG_ADDRESS	0x1,d2                 	| [$8262: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x14,d0                         	| [$8264: suba   #$14]
	GET_REG_ADDRESS	0x1,d2                 	| [$8266: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
l_8268:
	move.w	#0x3600,d4                      	| [$8268: ldu    #$3600]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$826b: lda    $49]
                                         | [$826d: asla]
	asl.b	#2,d0                            	| [$826e: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$826f: leau   a,u]
	jra	l_894b                             	| [$8271: jra    $894b]
l_8274:
	move.w	#0xd878,d4                      	| [$8274: ldu    #$d878]
	GET_REG_ADDRESS	0,d2                   	| [$8277: lda    ,x]
	move.b	(a0),d0                         	| [...]
                                         | [$8279: deca]
	subq.b	#2,d0                           	| [$827a: deca]
	asl.b	#1,d0                            	| [$827b: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$827c: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$827e: lda    $bc]
	move.b	#0x0a,d1                        	| [$8280: ldb    #$0a]
	jbsr	l_a606                            	| [$8282: jsr    $a606]
	cmp.b	#0x05,d1                         	| [$8285: cmpb   #$05]
	jcs	l_828b                             	| [$8287: bcs    $828b]
	move.b	#0x04,d1                        	| [$8289: ldb    #$04]
l_828b:
	move.b	#0x07,d0                        	| [$828b: lda    #$07]
	jbsr	multiply_ab                       	| [$828d: mul]
	move.w	d4,d3                           	| [$828e: leay   d,u]
	add.w	d1,d3                            	| [$828e: leay   d,u]
	jbsr	l_869a                            	| [$8290: jsr    $869a]
	jra	l_82fd                             	| [$8293: bra    $82fd]
l_8295:
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$8295: lda    $bc]
                                         | [$8297: lsra]
                                         | [$8298: lsra]
	lsr.b	#3,d0                            	| [$8299: lsra]
	move.w	#0xdb34,d4                      	| [$829a: ldu    #$db34]
	move.b	#0x07,d1                        	| [$829d: ldb    #$07]
	jbsr	multiply_ab                       	| [$829f: mul]
	move.w	d4,d3                           	| [$82a0: leay   d,u]
	add.w	d1,d3                            	| [$82a0: leay   d,u]
	jbsr	l_869a                            	| [$82a2: jsr    $869a]
	jra	l_82fd                             	| [$82a5: bra    $82fd]
l_82a7:
	move.b	#0xd9,d0                        	| [$82a7: ldd    #$d998]
	move.w	#0xd998,d1                      	| [$82a7: ldd    #$d998]
	jbsr	l_8698                            	| [$82aa: jsr    $8698]
	jra	l_82fd                             	| [$82ad: bra    $82fd]
l_82af:
	move.b	#0xd9,d0                        	| [$82af: ldd    #$d9f6]
	move.w	#0xd9f6,d1                      	| [$82af: ldd    #$d9f6]
	jbsr	l_8698                            	| [$82b2: jsr    $8698]
	jra	l_82fd                             	| [$82b5: bra    $82fd]
l_82b7:
	GET_REG_ADDRESS	0,d2                   	| [$82b7: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x01,d0                         	| [$82b9: cmpa   #$01]
	jeq	l_82ec                             	| [$82bb: beq    $82ec]
	GET_REG_ADDRESS	0x5,d2                 	| [$82bd: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_82e1                             	| [$82bf: bne    $82e1]
	GET_REG_ADDRESS	0xb,d2                 	| [$82c1: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	addq.w	#0x7,d3                         	| [$82c4: leay   $7,y]
	GET_REG_ADDRESS	0,d3                   	| [$82c6: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$82c8: cmpa   #$ff]
	jne	l_82cf                             	| [$82ca: bne    $82cf]
	GET_REG_ADDRESS	0x1,d3                 	| [$82cc: ldy    $1,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_82cf:
	GET_REG_ADDRESS	0xb,d2                 	| [$82cf: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$82d2: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0f,d0                         	| [$82d4: cmpa   #$0f]
	jne	l_82dd                             	| [$82d6: bne    $82dd]
	move.b	#0x01,d0                        	| [$82d8: lda    #$01]
	jbsr	l_4eb3                            	| [$82da: jsr    $4eb3]
l_82dd:
	move.b	#0x06,d0                        	| [$82dd: lda    #$06]
	GET_REG_ADDRESS	0x5,d2                 	| [$82df: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
l_82e1:
	GET_REG_ADDRESS	0xb,d2                 	| [$82e1: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	move.w	#0x361c,d4                      	| [$82e4: ldu    #$361c]
	jbsr	l_86ee                            	| [$82e7: jsr    $86ee]
	jra	l_82fd                             	| [$82ea: bra    $82fd]
l_82ec:
	GET_REG_ADDRESS	0xb,d2                 	| [$82ec: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	move.w	#0x361c,d4                      	| [$82ef: ldu    #$361c]
	jbsr	l_86ee                            	| [$82f2: jsr    $86ee]
	jra	l_82fd                             	| [$82f5: bra    $82fd]
l_82f7:
	move.b	#0xdb,d0                        	| [$82f7: ldd    #$dbb2]
	move.w	#0xdbb2,d1                      	| [$82f7: ldd    #$dbb2]
	jbsr	l_8698                            	| [$82fa: jsr    $8698]
l_82fd:
	move.l	d2,-(sp)                        	| [$82fd: pshs   x]
	move.w	#0x3200,d2                      	| [$82ff: ldx    #$3200]
	GET_DP_ADDRESS	0xa1                    	| [$8302: ldd    $a1]
	LOAD_D                                 	| [$8302: ldd    $a1]
	jeq	l_8328                             	| [$8304: beq    $8328]
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$8306: lda    $a0]
	cmp.b	#0x10,d0                         	| [$8308: cmpa   #$10]
	jeq	l_8332                             	| [$830a: beq    $8332]
	move.w	#0xd8e6,d4                      	| [$830c: ldu    #$d8e6]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$830f: lda    current_event_69]
	move.b	#0x0c,d1                        	| [$8311: ldb    #$0c]
	jbsr	multiply_ab                       	| [$8313: mul]
	GET_REG_ADDRESS_FROM_REG	d1,d4         	| [$8314: lda    d,u]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x08,d0                         	| [$8316: suba   #$08]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$8318: ldb    current_event_69]
	cmp.b	#0x06,d1                         	| [$831a: cmpb   #$06]
	jeq	l_8335                             	| [$831c: beq    $8335]
	cmp.b	#0x02,d1                         	| [$831e: cmpb   #$02]
	jne	l_8326                             	| [$8320: bne    $8326]
	OP_R_ON_DP_ADDRESS	move,0xa1,d0         | [$8322: lda    $a1]
	sub.b	#0x09,d0                         	| [$8324: suba   #$09]
l_8326:
	OP_R_ON_DP_ADDRESS	move,0xa2,d1         | [$8326: ldb    $a2]
l_8328:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8328: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	addq.w	#0x4,d3                         	| [$832a: leay   $4,y]
	move.w	#0x3658,d4                      	| [$832c: ldu    #$3658]
	jbsr	l_890f                            	| [$832f: jsr    $890f]
l_8332:
	movem.l	(sp)+,d2                       	| [$8332: puls   x]
	rts                                    	| [$8334: rts]

l_8335:
	OP_1_ON_DP_ADDRESS	tst,0xff             | [$8335: tst    $ff]
	jeq	l_8326                             	| [$8337: beq    $8326]
	move.b	#0x48,d0                        	| [$8339: lda    #$48]
	jra	l_8326                             	| [$833b: bra    $8326]
l_833d:
	move.w	#0xde10,d3                      	| [$833d: ldy    #$de10]
	move.w	#0x366c,d4                      	| [$8341: ldu    #$366c]
	jra	l_894b                             	| [$8344: jra    $894b]
l_8347:
	move.w	#0xde3d,d3                      	| [$8347: ldy    #$de3d]
	jra	l_8359                             	| [$834b: bra    $8359]
l_834d:
	move.w	#0xde3d,d3                      	| [$834d: ldy    #$de3d]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$8351: lda    $bc]
	jeq	l_8359                             	| [$8353: beq    $8359]
	move.w	#0xde44,d3                      	| [$8355: ldy    #$de44]
l_8359:
	move.w	#0x361c,d4                      	| [$8359: ldu    #$361c]
	jbsr	l_86ee                            	| [$835c: jsr    $86ee]
	jra	l_82fd                             	| [$835f: bra    $82fd]
l_8361:
	move.w	#0x361c,d4                      	| [$8361: ldu    #$361c]
	move.b	#0x06,d0                        	| [$8364: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x67,d0         | [$8366: sta    $67]
	jbsr	l_86d1                            	| [$8368: jsr    $86d1]
	jra	l_82fd                             	| [$836b: bra    $82fd]
l_836d:
	OP_R_ON_DP_ADDRESS	move,0xa0,d0         | [$836d: lda    $a0]
	cmp.b	#0x10,d0                         	| [$836f: cmpa   #$10]
	jeq	l_8386                             	| [$8371: beq    $8386]
	move.w	#0x361c,d4                      	| [$8373: ldu    #$361c]
	move.b	#0x10,d0                        	| [$8376: lda    #$10]
	GET_ADDRESS	0x34f4                     	| [$8378: ldb    $34f4]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x01,d1                         	| [$837b: cmpb   #$01]
	jne	l_8381                             	| [$837d: bne    $8381]
	move.b	#0x08,d0                        	| [$837f: lda    #$08]
l_8381:
	OP_W_ON_DP_ADDRESS	move,0x67,d0         | [$8381: sta    $67]
	jbsr	l_86d1                            	| [$8383: jsr    $86d1]
l_8386:
	rts                                    	| [$8386: rts]

l_8387:
	move.w	#0xde16,d3                      	| [$8387: ldy    #$de16]
	GET_REG_ADDRESS	0xd,d2                 	| [$838b: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x03,d1                        	| [$838d: ldb    #$03]
	jbsr	multiply_ab                       	| [$838f: mul]
	add.w	d1,d3                            	| [$8390: leay   d,y]
	move.w	#0x367c,d4                      	| [$8392: ldu    #$367c]
	jra	l_889d                             	| [$8395: jra    $889d]
l_8398:
	move.b	#0x04,d0                        	| [$8398: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x67,d0         | [$839a: sta    $67]
	move.b	#0x06,d0                        	| [$839c: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$839e: sta    $48]
	jbsr	l_86b1                            	| [$83a0: jsr    $86b1]
	move.w	#0x362c,d4                      	| [$83a3: ldu    #$362c]
	jra	l_87fb                             	| [$83a6: jra    $87fb]
l_83a9:
	move.w	#0xde0e,d3                      	| [$83a9: ldy    #$de0e]
	move.w	#0x3660,d4                      	| [$83ad: ldu    #$3660]
	GET_REG_ADDRESS	0xd,d2                 	| [$83b0: lda    $d,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$83b2: anda   #$0f]
                                         | [$83b4: asla]
	asl.b	#2,d0                            	| [$83b5: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$83b6: leau   a,u]
	jra	l_894b                             	| [$83b8: jra    $894b]
l_83bb:
	GET_REG_ADDRESS	0x5,d2                 	| [$83bb: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_840b                             	| [$83bd: bne    $840b]
	GET_REG_ADDRESS	0xb,d2                 	| [$83bf: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	addq.w	#0x4,d3                         	| [$83c2: leay   $4,y]
	GET_REG_ADDRESS	0,d3                   	| [$83c4: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$83c6: cmpa   #$ff]
	jne	l_83cd                             	| [$83c8: bne    $83cd]
	GET_REG_ADDRESS	0x1,d3                 	| [$83ca: ldy    $1,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_83cd:
	GET_REG_ADDRESS	0xb,d2                 	| [$83cd: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$83d0: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#swimmer_19,d0                         	| [$83d2: cmpa   #$19]
	jeq	l_83dc                             	| [$83d4: beq    $83dc]
	GET_REG_ADDRESS	0x3,d3                 	| [$83d6: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#swimmer_19,d0                         	| [$83d8: cmpa   #$19]
	jne	l_83f6                             	| [$83da: bne    $83f6]
l_83dc:
	GET_REG_ADDRESS	0,d2                   	| [$83dc: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$83de: cmpa   #$04]
	jeq	l_83f6                             	| [$83e0: beq    $83f6]
	GET_REG_ADDRESS	0x5b,d2                	| [$83e2: lda    $5b,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$83e5: cmpa   #$04]
	jeq	l_83f6                             	| [$83e7: beq    $83f6]
	GET_REG_ADDRESS	0x57,d2                	| [$83e9: inc    $57,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x57,d2                	| [$83ec: ldb    $57,x]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x04,d1                         	| [$83ef: cmpb   #$04]
	jne	l_83f6                             	| [$83f1: bne    $83f6]
	GET_REG_ADDRESS	0x58,d2                	| [$83f3: inc    $58,x]
	addq.b	#1,(a0)                         	| [...]
l_83f6:
	GET_REG_ADDRESS	0x1,d3                 	| [$83f6: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x12,d0                         	| [$83f8: cmpa   #$12]
	jeq	l_8402                             	| [$83fa: beq    $8402]
	GET_REG_ADDRESS	0x3,d3                 	| [$83fc: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x12,d0                         	| [$83fe: cmpa   #$12]
	jne	l_8407                             	| [$8400: bne    $8407]
l_8402:
	move.b	#0x14,d0                        	| [$8402: lda    #$14]
	jbsr	l_4eb3                            	| [$8404: jsr    $4eb3]
l_8407:
	move.b	#0x0a,d0                        	| [$8407: lda    #$0a]
	GET_REG_ADDRESS	0x5,d2                 	| [$8409: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
l_840b:
	GET_REG_ADDRESS	0xb,d2                 	| [$840b: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jra	l_84d0                             	| [$840e: jra    $84d0]
l_8411:
	GET_REG_ADDRESS	0x55,d2                	| [$8411: lda    $55,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_8440                             	| [$8414: beq    $8440]
	cmp.b	#0x01,d0                         	| [$8416: cmpa   #$01]
	jeq	l_8495                             	| [$8418: beq    $8495]
	move.w	#0xdc33,d4                      	| [$841a: ldu    #$dc33]
	GET_REG_ADDRESS	0,d2                   	| [$841d: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$841f: cmpa   #$05]
	jcs	l_8426                             	| [$8421: bcs    $8426]
	move.w	#0xdc43,d4                      	| [$8423: ldu    #$dc43]
l_8426:
	GET_REG_ADDRESS	0x56,d2                	| [$8426: lda    $56,x]
	move.b	(a0),d0                         	| [...]
	BIT	#0x07,d0                           	| [$8429: bita   #$07]
	jne	l_8437                             	| [$842b: bne    $8437]
	move.b	#0xb4,d0                        	| [$842d: lda    #$b4]
	jbsr	l_4eb3                            	| [$842f: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$8432: lda    #$ff]
	jbsr	l_4eb3                            	| [$8434: jsr    $4eb3]
l_8437:
	and.b	#0x08,d0                         	| [$8437: anda   #$08]
	jne	l_843d                             	| [$8439: bne    $843d]
	addq.w	#0x4,d4                         	| [$843b: leau   $4,u]
l_843d:
	jra	select_sprite_84ce                             	| [$843d: jra    $84ce]
l_8440:
	GET_REG_ADDRESS	0,d2                   	| [$8440: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$8442: cmpa   #$05]
	jcs	l_845a                             	| [$8444: bcs    $845a]
	move.w	#0xdc3b,d4                      	| [$8446: ldu    #$dc3b]
	jbsr	select_sprite_84ce                            	| [$8449: jsr    $84ce]
	GET_REG_ADDRESS	0xd,d2                 	| [$844c: tst    $d,x]
	tst.b	(a0)                             	| [...]
	jne	l_8494                             	| [$844e: bne    $8494]
	jbsr	l_84b9                            	| [$8450: bsr    $84b9]
	GET_REG_ADDRESS	0x2,d2                 	| [$8452: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x08,d0                         	| [$8454: suba   #$08]
	GET_REG_ADDRESS	0x2,d4                 	| [$8456: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	jra	l_846b                             	| [$8458: bra    $846b]
l_845a:
	move.w	#0xdc2b,d4                      	| [$845a: ldu    #$dc2b]
	jbsr	select_sprite_84ce                            	| [$845d: bsr    $84ce]
	GET_REG_ADDRESS	0xd,d2                 	| [$845f: tst    $d,x]
	tst.b	(a0)                             	| [...]
	jne	l_8494                             	| [$8461: bne    $8494]
	jbsr	l_84b9                            	| [$8463: bsr    $84b9]
	GET_REG_ADDRESS	0x2,d2                 	| [$8465: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x18,d0                         	| [$8467: adda   #$18]
	GET_REG_ADDRESS	0x2,d4                 	| [$8469: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
l_846b:
	GET_REG_ADDRESS	0x1,d2                 	| [$846b: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x0c,d0                         	| [$846d: adda   #$0c]
	move.l	d2,-(sp)                        	| [$846f: pshs   x]
	move.w	d4,d2                           	| [$8471: tfr    u,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$8473: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xdc7a,d3                      	| [$8475: ldy    #$dc7a]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$8479: tst    $1a]
	jne	l_848d                             	| [$847b: bne    $848d]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$847d: lda    $19]
	cmp.b	#0x02,d0                         	| [$847f: cmpa   #$02]
	jcs	l_848d                             	| [$8481: bcs    $848d]
	move.w	#0xdc7d,d3                      	| [$8483: ldy    #$dc7d]
	GET_REG_ADDRESS	0x1,d2                 	| [$8487: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x18,d0                         	| [$8489: suba   #$18]
	GET_REG_ADDRESS	0x1,d2                 	| [$848b: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
l_848d:
	jbsr	l_84c3                            	| [$848d: bsr    $84c3]
	jbsr	l_890f                            	| [$848f: jsr    $890f]
	movem.l	(sp)+,d2                       	| [$8492: puls   x]
l_8494:
	rts                                    	| [$8494: rts]

l_8495:
	move.w	#0xdc2f,d4                      	| [$8495: ldu    #$dc2f]
	GET_REG_ADDRESS	0,d2                   	| [$8498: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$849a: cmpa   #$05]
	jcs	l_84a1                             	| [$849c: bcs    $84a1]
	move.w	#0xdc3f,d4                      	| [$849e: ldu    #$dc3f]
l_84a1:
	jbsr	select_sprite_84ce                            	| [$84a1: bsr    $84ce]
l_84a3:
	jbsr	l_84b9                            	| [$84a3: bsr    $84b9]
	move.l	d2,-(sp)                        	| [$84a5: pshs   x]
	move.w	d4,d2                           	| [$84a7: tfr    u,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$84a9: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$84ab: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_84c3                            	| [$84ad: bsr    $84c3]
	move.w	#0xdc7a,d3                      	| [$84af: ldy    #$dc7a]
	jbsr	l_890f                            	| [$84b3: jsr    $890f]
	movem.l	(sp)+,d2                       	| [$84b6: puls   x]
	rts                                    	| [$84b8: rts]

l_84b9:
	move.w	#0x3400,d4                      	| [$84b9: ldu    #$3400]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$84bc: lda    $19]
                                         | [$84be: asla]
	asl.b	#2,d0                            	| [$84bf: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$84c0: leau   a,u]
	rts                                    	| [$84c2: rts]

l_84c3:
	move.w	#0x3660,d4                      	| [$84c3: ldu    #$3660]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$84c6: lda    $19]
                                         | [$84c8: asla]
                                         | [$84c9: asla]
	asl.b	#3,d0                            	| [$84ca: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$84cb: leau   a,u]
	rts                                    	| [$84cd: rts]

* < D4: rom address of sprite block
* < $3019: contestant index
select_sprite_84ce:
	move.w	d4,d3                           	| [$84ce: tfr    u,y]
l_84d0:
	jbsr	get_sprite_shadow_ram_address_86a6                            	| [$84d0: jsr    $86a6]
	jra	l_87fb                             	| [$84d3: jra    $87fb]
select_standing_sprite_84d6:
	move.w	#0xdbb9,d4                      	| [$84d6: ldu    #$dbb9]  standing on diving board
	jra	select_sprite_84ce                             	| [$84d9: bra    $84ce]
select_diving_sprite_84db:
	move.w	#0xdbbd,d4                      	| [$84db: ldu    #$dbbd] ready to dive
	jra	select_sprite_84ce                             	| [$84de: bra    $84ce]
select_diving_sprite_84e0:
	move.w	#0xdbc1,d4                      	| [$84e0: ldu    #$dbc1] half extended
	jra	select_sprite_84ce                             	| [$84e3: bra    $84ce]
select_diving_sprite_84e5:
	move.w	#0xdbc5,d4                      	| [$84e5: ldu    #$dbc5] fully extended
	jra	select_sprite_84ce                             	| [$84e8: bra    $84ce]
select_arriving_swimming_sprite_84ea:
	ENABLE_LOG_REGS
	move.w	#0xdc4b,d4                      	| [$84ea: ldu    #$dc4b]
	jra	select_sprite_84ce                             	| [$84ed: bra    $84ce]
l_84ef:
	GET_REG_ADDRESS	0x1c,d2                	| [$84ef: lda    $1c,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$84f2: ldb    #$0a]
	jbsr	l_a606                            	| [$84f4: jsr    $a606]
	cmp.b	#0x03,d1                         	| [$84f7: cmpb   #$03]
	jcs	l_84fd                             	| [$84f9: bcs    $84fd]
	move.b	#0x02,d1                        	| [$84fb: ldb    #$02]
l_84fd:
	move.w	#0xdc1f,d3                      	| [$84fd: ldy    #$dc1f]
                                         | [$8501: aslb]
	asl.b	#2,d1                            	| [$8502: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$8503: leay   b,y]
	jra	l_84d0                             	| [$8505: bra    $84d0]
l_8507:
	jbsr	get_sprite_shadow_ram_address_86a6                            	| [$8507: jsr    $86a6]
	jra	l_8971                             	| [$850a: jra    $8971]
l_850d:
	GET_REG_ADDRESS	0,d2                   	| [$850d: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x10,d0                         	| [$850f: cmpa   #$10]
	jne	l_8514                             	| [$8511: bne    $8514]
	rts                                    	| [$8513: rts]

l_8514:
	jbsr	get_sprite_shadow_ram_address_86a6                            	| [$8514: jsr    $86a6]
	move.b	#0x10,d0                        	| [$8517: lda    #$10]
	OP_W_ON_DP_ADDRESS	move,0x67,d0         | [$8519: sta    $67]
	jra	l_87db                             	| [$851b: jra    $87db]
l_851e:
	move.w	#0x3600,d4                      	| [$851e: ldu    #$3600]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$8521: lda    $19]
	move.b	#0x0c,d1                        	| [$8523: ldb    #$0c]
	jbsr	multiply_ab                       	| [$8525: mul]
	add.w	d1,d4                            	| [$8526: leau   d,u]
	move.w	#0xdc55,d3                      	| [$8528: ldy    #$dc55]
	GET_REG_ADDRESS	0x1,d3                 	| [$852c: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$852e: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$8530: lda    ,y]
	move.b	(a0),d0                         	| [...]
	jra	l_8836                             	| [$8532: jra    $8836]
l_8535:
	move.w	#0xdc4f,d3                      	| [$8535: ldy    #$dc4f]
	jra	l_853f                             	| [$8539: bra    $853f]
l_853b:
	move.w	#0xdc52,d3                      	| [$853b: ldy    #$dc52]
l_853f:
	move.w	#0x3660,d4                      	| [$853f: ldu    #$3660]
	jra	l_890f                             	| [$8542: jra    $890f]
l_8545:
	move.w	#0xdd30,d4                      	| [$8545: ldu    #$dd30]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$8548: lda    $bc]
	move.b	#0x18,d1                        	| [$854a: ldb    #$18]
	jbsr	l_a606                            	| [$854c: jsr    $a606]
	cmp.b	#0x02,d1                         	| [$854f: cmpb   #$02]
	jcs	l_8555                             	| [$8551: bcs    $8555]
	move.b	#0x02,d1                        	| [$8553: ldb    #$02]
l_8555:
	move.b	#0x07,d0                        	| [$8555: lda    #$07]
	jbsr	multiply_ab                       	| [$8557: mul]
	move.w	d4,d3                           	| [$8558: leay   d,u]
	add.w	d1,d3                            	| [$8558: leay   d,u]
	jbsr	l_86a0                            	| [$855a: jsr    $86a0]
	jra	l_82fd                             	| [$855d: jra    $82fd]
l_8560:
	move.w	#0xdd45,d4                      	| [$8560: ldu    #$dd45]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$8563: lda    $bc]
	move.b	#0x0c,d1                        	| [$8565: ldb    #$0c]
	jbsr	l_a606                            	| [$8567: jsr    $a606]
	move.b	#0x07,d0                        	| [$856a: lda    #$07]
	jbsr	multiply_ab                       	| [$856c: mul]
	move.w	d4,d3                           	| [$856d: leay   d,u]
	add.w	d1,d3                            	| [$856d: leay   d,u]
	jbsr	l_86a0                            	| [$856f: jsr    $86a0]
	jbsr	l_82fd                            	| [$8572: jsr    $82fd]
	move.w	#0xdd5a,d4                      	| [$8575: ldu    #$dd5a]
	OP_R_ON_DP_ADDRESS	move,0xbc,d0         | [$8578: lda    $bc]
	move.b	#0x0c,d1                        	| [$857a: ldb    #$0c]
	jbsr	l_a606                            	| [$857c: jsr    $a606]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	move.w	d4,d3                           	| [$857f: leay   b,u]
	add.w	d6,d3                            	| [$857f: leay   b,u]
	GET_REG_ADDRESS	0x1,d2                 	| [$8581: ldd    $1,x]
	LOAD_D                                 	| [$8581: ldd    $1,x]
	add.b	#0x20,d0                         	| [$8583: adda   #$20]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x51                    	| [$8585: std    $51]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x362c,d4                      	| [$8587: ldu    #$362c]
	jra	l_8952                             	| [$858a: jra    $8952]
l_858d:
	move.w	#0xdced,d4                      	| [$858d: ldu    #$dced]
	OP_R_ON_DP_ADDRESS	move,0xe6,d0         | [$8590: lda    $e6]
	move.b	#0x08,d1                        	| [$8592: ldb    #$08]
	jbsr	multiply_ab                       	| [$8594: mul]
	move.w	d4,d3                           	| [$8595: leay   d,u]
	add.w	d1,d3                            	| [$8595: leay   d,u]
	move.w	#0x361c,d4                      	| [$8597: ldu    #$361c]
	jbsr	l_87b4                            	| [$859a: jsr    $87b4]
	jra	l_82fd                             	| [$859d: jra    $82fd]
l_85a0:
	move.w	#0xdd72,d3                      	| [$85a0: ldy    #$dd72]
	move.w	#0x3260,d4                      	| [$85a4: ldu    #$3260]
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$85a7: clr    $50]
l_85a9:
	GET_DP_ADDRESS	0x51                    	| [$85a9: stu    $51]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_DP_ADDRESS	0x51                    	| [$85ab: cmpx   $51]
	CMP_W_TO_REG	a0,d2                          	| [...]
	jeq	l_85b6                             	| [$85ad: beq    $85b6]
	OP_W_ON_DP_ADDRESS	addq,0x50,#1         | [$85af: inc    $50]
	add.w	#0x20,d4                         	| [$85b1: leau   $20,u]
	jra	l_85a9                             	| [$85b4: bra    $85a9]
l_85b6:
	move.w	#0x3638,d4                      	| [$85b6: ldu    #$3638]
	OP_R_ON_DP_ADDRESS	move,0x50,d0         | [$85b9: lda    $50]
	move.b	#0x08,d1                        	| [$85bb: ldb    #$08]
	jbsr	multiply_ab                       	| [$85bd: mul]
	add.w	d1,d4                            	| [$85be: leau   d,u]
	jra	l_889d                             	| [$85c0: jra    $889d]
l_85c3:
	move.w	#0xdd64,d3                      	| [$85c3: ldy    #$dd64]
	jra	l_85d3                             	| [$85c7: bra    $85d3]
l_85c9:
	move.w	#0xdd6b,d3                      	| [$85c9: ldy    #$dd6b]
	jra	l_85d3                             	| [$85cd: bra    $85d3]
l_85cf:
	move.w	#0xdd5d,d3                      	| [$85cf: ldy    #$dd5d]
l_85d3:
	jbsr	l_86a0                            	| [$85d3: jsr    $86a0]
	jra	l_82fd                             	| [$85d6: jra    $82fd]
l_85d9:
	move.w	#0xdd75,d4                      	| [$85d9: ldu    #$dd75]
	OP_R_ON_DP_ADDRESS	move,0xf5,d0         | [$85dc: lda    $f5]
	subq.b	#1,d0                           	| [$85de: deca]
	move.b	#0x07,d1                        	| [$85df: ldb    #$07]
	jbsr	multiply_ab                       	| [$85e1: mul]
	move.w	d4,d3                           	| [$85e2: leay   d,u]
	add.w	d1,d3                            	| [$85e2: leay   d,u]
	jra	l_85d3                             	| [$85e4: bra    $85d3]
l_85e6:
	move.w	#0x30a0,d2                      	| [$85e6: ldx    #$30a0]
	move.b	#0x48,d0                        	| [$85e9: ldd    #$4877]
	move.w	#0x4877,d1                      	| [$85e9: ldd    #$4877]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$85ec: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x02,d0                        	| [$85ee: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x67,d0         | [$85f0: sta    $67]
	move.b	#0x10,d0                        	| [$85f2: lda    #$10]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$85f4: sta    $48]
	jbsr	l_86b1                            	| [$85f6: jsr    $86b1]
	move.w	#0x3628,d4                      	| [$85f9: ldu    #$3628]
	jra	l_af13                             	| [$85fc: jra    $af13]
l_85ff:
	move.w	#0x3420,d2                      	| [$85ff: ldx    #$3420]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$8602: lda    $19]
	move.b	#0x10,d1                        	| [$8604: ldb    #$10]
	jbsr	multiply_ab                       	| [$8606: mul]
	add.w	d1,d2                            	| [$8607: leax   d,x]
	move.w	#0x3600,d4                      	| [$8609: ldu    #$3600]
	GET_REG_ADDRESS	0,d2                   	| [$860c: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_8683                             	| [$860e: lbeq   $8683]
	move.w	#0xd87e,d3                      	| [$8612: ldy    #$d87e]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$8616: clr    $48]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$8618: lda    $19]
	OP_R_ON_DP_ADDRESS	move,0x6b,d1         | [$861a: ldb    $6b]
	jeq	l_8622                             	| [$861c: beq    $8622]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$861e: ldb    $1a]
	jeq	l_8626                             	| [$8620: beq    $8626]
l_8622:
	and.b	#0x01,d0                         	| [$8622: anda   #$01]
	jra	l_8628                             	| [$8624: bra    $8628]
l_8626:
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$8626: inc    $48]
l_8628:
	move.b	#0x07,d1                        	| [$8628: ldb    #$07]
	jbsr	multiply_ab                       	| [$862a: mul]
	add.w	d1,d3                            	| [$862b: leay   d,y]
	GET_REG_ADDRESS	0,d3                   	| [$862d: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$862d: ldd    ,y++]
	GET_REG_ADDRESS	0x1,d2                 	| [$862f: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$8631: lda    $0f]
	BIT	#0x10,d0                           	| [$8633: bita   #$10]
	jeq	l_863c                             	| [$8635: beq    $863c]
	jbsr	l_879e                            	| [$8637: jsr    $879e]
	jra	l_863f                             	| [$863a: bra    $863f]
l_863c:
	jbsr	l_89b7                            	| [$863c: jsr    $89b7]
l_863f:
	add.w	#0x10,d4                         	| [$863f: leau   $10,u]
	move.w	#0x5ad0,d2                      	| [$8642: ldx    #$5ad0]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$8645: lda    $19]
	lsr.b	#1,d0                            	| [$8647: lsra]
	jcc	l_864d                             	| [$8648: bcc    $864d]
	move.w	#0x5a20,d2                      	| [$864a: ldx    #$5a20]
l_864d:
	PUSH_SR
	move.w	d2,d1                           	| [$864d: tfr    x,d]
	ror.w	#8,d2                            	| [...]
	move.b	d2,d0                           	| [...] set MSB
	ror.w	#8,d2                            	| [...]
	POP_SR
	move.w	#0x3410,d2                      	| [$864f: ldx    #$3410]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8652: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xde79,d3                      	| [$8654: ldy    #$de79]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$8658: lda    $19]
	move.b	#0x03,d1                        	| [$865a: ldb    #$03]
	jbsr	multiply_ab                       	| [$865c: mul]
	add.w	d1,d3                            	| [$865d: leay   d,y]
	OP_1_ON_DP_ADDRESS	tst,0x48             | [$865f: tst    $48]
	jeq	l_8675                             	| [$8661: beq    $8675]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$8663: lda    $19]
	and.b	#0x02,d0                         	| [$8665: anda   #$02]
	jeq	l_8675                             	| [$8667: beq    $8675]
	GET_REG_ADDRESS	0x1,d2                 	| [$8669: ldd    $1,x]
	LOAD_D                                 	| [$8669: ldd    $1,x]
	neg.b	d0                               	| [$866b: nega]
	sub.b	#0x10,d0                         	| [$866c: suba   #$10]
	neg.b	d1                               	| [$866e: negb]
	sub.b	#0x10,d1                         	| [$866f: subb   #$10]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8671: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	addq.w	#0x6,d3                         	| [$8673: leay   $6,y]
l_8675:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$8675: lda    $0f]
	and.b	#0x10,d0                         	| [$8677: anda   #$10]
	jeq	l_8680                             	| [$8679: beq    $8680]
	jbsr	l_890f                            	| [$867b: jsr    $890f]
	jra	l_8683                             	| [$867e: bra    $8683]
l_8680:
	jbsr	l_89c2                            	| [$8680: jsr    $89c2]
l_8683:
	move.w	#0x3400,d2                      	| [$8683: ldx    #$3400]
	add.w	#0x8,d4                          	| [$8686: leau   $8,u]
	move.w	#0xde3b,d3                      	| [$8688: ldy    #$de3b]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$868c: lda    $0f]
	and.b	#0x10,d0                         	| [$868e: anda   #$10]
	jeq	l_8695                             	| [$8690: beq    $8695]
	jra	l_894b                             	| [$8692: jra    $894b]
l_8695:
	jra	l_89c9                             	| [$8695: jra    $89c9]
l_8698:
	PUSH_SR
	MAKE_D                                 	| [...]
	move.w	d1,d3                           	| [$8698: tfr    d,y]
	POP_SR
l_869a:
	move.w	#0x361c,d4                      	| [$869a: ldu    #$361c]
	jra	l_86ee                             	| [$869d: jra    $86ee]
l_86a0:
	move.w	#0x361c,d4                      	| [$86a0: ldu    #$361c]
	jra	l_be6d                             	| [$86a3: jra    $be6d]
* > D4: sprite shadow ram address $3630+@$3019*$c
get_sprite_shadow_ram_address_86a6:
	move.w	#0x3630,d4                      	| [$86a6: ldu    #$3630]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$86a9: lda    $19]
	move.b	#0x0c,d1                        	| [$86ab: ldb    #$0c]
	jbsr	multiply_ab                       	| [$86ad: mul]
	add.w	d1,d4                            	| [$86ae: leau   d,u]
	rts                                    	| [$86b0: rts]

l_86b1:
	GET_REG_ADDRESS	0xb,d2                 	| [$86b1: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$86b4: lda    $5,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_86bc                             	| [$86b6: beq    $86bc]
	GET_REG_ADDRESS	0x5,d2                 	| [$86b8: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jra	l_86d0                             	| [$86ba: bra    $86d0]
l_86bc:
	OP_R_ON_DP_ADDRESS	move,0x67,d0         | [$86bc: lda    $67]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$86be: leay   a,y]
	GET_REG_ADDRESS	0,d3                   	| [$86c0: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$86c2: cmpa   #$ff]
	jne	l_86c9                             	| [$86c4: bne    $86c9]
	GET_REG_ADDRESS	0x1,d3                 	| [$86c6: ldy    $1,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_86c9:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$86c9: lda    $48]
	GET_REG_ADDRESS	0x5,d2                 	| [$86cb: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$86cd: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_86d0:
	rts                                    	| [$86d0: rts]

l_86d1:
	GET_REG_ADDRESS	0xb,d2                 	| [$86d1: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$86d4: lda    $5,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_86dc                             	| [$86d6: beq    $86dc]
	GET_REG_ADDRESS	0x5,d2                 	| [$86d8: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jra	l_86ee                             	| [$86da: bra    $86ee]
l_86dc:
	addq.w	#0x7,d3                         	| [$86dc: leay   $7,y]
	GET_REG_ADDRESS	0,d3                   	| [$86de: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$86e0: cmpa   #$ff]
	jne	l_86e7                             	| [$86e2: bne    $86e7]
	GET_REG_ADDRESS	0x1,d3                 	| [$86e4: ldy    $1,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_86e7:
	OP_R_ON_DP_ADDRESS	move,0x67,d0         | [$86e7: lda    $67]
	GET_REG_ADDRESS	0x5,d2                 	| [$86e9: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$86eb: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_86ee:
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$86ee: lda    $02]
	jne	l_8746                             	| [$86f0: bne    $8746]
	GET_REG_ADDRESS	0,d3                   	| [$86f2: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$86f4: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d2                 	| [$86f6: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x40,d0                        	| [$86f8: lda    #$40]
	GET_DP_ADDRESS	swimmer_19                    	| [$86fa: ora    $19]
	or.b	(a0),d0                           	| [...]
	addq.b	#1,d0                           	| [$86fc: inca]
	GET_REG_ADDRESS	0,d4                   	| [$86fd: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$86ff: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
l_8701:
	GET_REG_ADDRESS	0x1,d2                 	| [$8701: ldd    $1,x]
	LOAD_D                                 	| [$8701: ldd    $1,x]
	jeq	l_89b7                             	| [$8703: lbeq   $89b7]
	addq.b	#1,d0                           	| [$8707: inca]
	GET_REG_ADDRESS	0x1,d4                 	| [$8708: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$870a: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$870c: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x6,d4                 	| [$870e: sta    $6,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$8710: sta    $8,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8712: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$8714: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8716: ldd    $1,x]
	LOAD_D                                 	| [$8716: ldd    $1,x]
	addq.b	#1,d0                           	| [$8718: inca]
	sub.b	#0x10,d1                         	| [$8719: subb   #$10]
	GET_REG_ADDRESS	0x5,d4                 	| [$871b: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$871d: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$871f: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xa,d4                 	| [$8721: sta    $a,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x9,d2                 	| [$8723: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8725: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x8,d4                 	| [$8727: sta    $8,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8729: ldd    $1,x]
	LOAD_D                                 	| [$8729: ldd    $1,x]
	add.b	#0x11,d0                         	| [$872b: adda   #$11]
	GET_REG_ADDRESS	0x9,d4                 	| [$872d: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$872f: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d3                 	| [$8731: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xe,d4                 	| [$8733: sta    $e,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xa,d2                 	| [$8735: sta    $a,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8737: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xc,d4                 	| [$8739: sta    $c,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$873b: ldd    $1,x]
	LOAD_D                                 	| [$873b: ldd    $1,x]
	add.b	#0x11,d0                         	| [$873d: adda   #$11]
	sub.b	#0x10,d1                         	| [$873f: subb   #$10]
	GET_REG_ADDRESS	0xd,d4                 	| [$8741: sta    $d,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xf,d4                 	| [$8743: stb    $f,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$8745: rts]

l_8746:
	GET_REG_ADDRESS	0,d3                   	| [$8746: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$8748: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d2                 	| [$874a: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x00,d0                        	| [$874c: lda    #$00]
	GET_DP_ADDRESS	swimmer_19                    	| [$874e: ora    $19]
	or.b	(a0),d0                           	| [...]
	addq.b	#1,d0                           	| [$8750: inca]
	GET_REG_ADDRESS	0,d4                   	| [$8751: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8753: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
l_8755:
	GET_REG_ADDRESS	0x1,d2                 	| [$8755: ldd    $1,x]
	LOAD_D                                 	| [$8755: ldd    $1,x]
	jeq	l_89b7                             	| [$8757: lbeq   $89b7]
	neg.b	d1                               	| [$875b: negb]
	sub.b	#0x10,d1                         	| [$875c: subb   #$10]
	subq.b	#1,d0                           	| [$875e: deca]
	GET_REG_ADDRESS	0x1,d4                 	| [$875f: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$8761: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$8763: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x6,d4                 	| [$8765: sta    $6,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$8767: sta    $8,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8769: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$876b: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$876d: ldd    $1,x]
	LOAD_D                                 	| [$876d: ldd    $1,x]
	neg.b	d1                               	| [$876f: negb]
	subq.b	#1,d0                           	| [$8770: deca]
	GET_REG_ADDRESS	0x5,d4                 	| [$8771: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$8773: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$8775: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xa,d4                 	| [$8777: sta    $a,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x9,d2                 	| [$8779: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$877b: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x8,d4                 	| [$877d: sta    $8,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$877f: ldd    $1,x]
	LOAD_D                                 	| [$877f: ldd    $1,x]
	neg.b	d1                               	| [$8781: negb]
	add.b	#0x0f,d0                         	| [$8782: adda   #$0f]
	sub.b	#0x10,d1                         	| [$8784: subb   #$10]
	GET_REG_ADDRESS	0x9,d4                 	| [$8786: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$8788: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d3                 	| [$878a: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xe,d4                 	| [$878c: sta    $e,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xa,d2                 	| [$878e: sta    $a,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8790: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xc,d4                 	| [$8792: sta    $c,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8794: ldd    $1,x]
	LOAD_D                                 	| [$8794: ldd    $1,x]
	neg.b	d1                               	| [$8796: negb]
	add.b	#0x0f,d0                         	| [$8797: adda   #$0f]
	GET_REG_ADDRESS	0xd,d4                 	| [$8799: sta    $d,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xf,d4                 	| [$879b: stb    $f,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$879d: rts]

l_879e:
	GET_REG_ADDRESS	0,d3                   	| [$879e: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_89a9                            	| [$87a0: jsr    $89a9]
	GET_REG_ADDRESS	0,d4                   	| [$87a3: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$87a5: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$87a7: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$87a9: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$87ab: lda    $02]
	jne	l_87b2                             	| [$87ad: bne    $87b2]
	jra	l_8701                             	| [$87af: jra    $8701]
l_87b2:
	jra	l_8755                             	| [$87b2: bra    $8755]
l_87b4:
	GET_REG_ADDRESS	0,d3                   	| [$87b4: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,0x02             | [$87b6: tst    $02]
	jeq	l_87c4                             	| [$87b8: beq    $87c4]
	BIT	#0x40,d0                           	| [$87ba: bita   #$40]
	jeq	l_87c2                             	| [$87bc: beq    $87c2]
	and.b	#0xbf,d0                         	| [$87be: anda   #$bf]
	jra	l_87c4                             	| [$87c0: bra    $87c4]
l_87c2:
	or.b	#0x40,d0                          	| [$87c2: ora    #$40]
l_87c4:
	GET_DP_ADDRESS	swimmer_19                    	| [$87c4: ora    $19]
	or.b	(a0),d0                           	| [...]
	addq.b	#1,d0                           	| [$87c6: inca]
	GET_REG_ADDRESS	0,d4                   	| [$87c7: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$87c9: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$87cb: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$87cd: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d2                 	| [$87cf: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$87d1: lda    $02]
	jne	l_87d8                             	| [$87d3: bne    $87d8]
	jra	l_8701                             	| [$87d5: jra    $8701]
l_87d8:
	jra	l_8755                             	| [$87d8: jra    $8755]
l_87db:
	GET_REG_ADDRESS	0xb,d2                 	| [$87db: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$87de: lda    $5,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_87e6                             	| [$87e0: beq    $87e6]
	GET_REG_ADDRESS	0x5,d2                 	| [$87e2: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jra	l_87fb                             	| [$87e4: bra    $87fb]
l_87e6:
	addq.w	#0x4,d3                         	| [$87e6: leay   $4,y]
	GET_REG_ADDRESS	0,d3                   	| [$87e8: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$87ea: cmpa   #$ff]
	jne	l_87f1                             	| [$87ec: bne    $87f1]
	GET_REG_ADDRESS	0x1,d3                 	| [$87ee: ldy    $1,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_87f1:
	OP_R_ON_DP_ADDRESS	move,0x67,d0         | [$87f1: lda    $67]
	GET_REG_ADDRESS	0x5,d2                 	| [$87f3: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$87f5: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$87f8: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	
* < D3: rom address
* < D4: shadow sprite address
* < D2: shadow sprite address
l_87fb:
	GET_REG_ADDRESS	0x1,d3                 	| [$87fb: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$87fd: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d2                 	| [$87ff: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$8801: lda    ,y]
	move.b	(a0),d0                         	| [...]
	jbsr	l_89a9                            	| [$8803: jsr    $89a9]
	cmp.w	#0x3240,d2                       	| [$8806: cmpx   #$3240]
	jeq	l_8836                             	| [$8809: beq    $8836]
	GET_REG_ADDRESS	0xd,d2                 	| [$880b: ldb    $d,x]
	move.b	(a0),d1                         	| [...]
	jeq	l_8813                             	| [$880d: beq    $8813]
	or.b	#0x09,d0                          	| [$880f: ora    #$09]
	jra	l_8822                             	| [$8811: bra    $8822]
l_8813:
	GET_DP_ADDRESS	swimmer_19                    	| [$8813: ora    $19]
	or.b	(a0),d0                           	| [...]
	OP_R_ON_DP_ADDRESS	move,screen_straight_1a,d1         | [$8815: ldb    $1a]
	jeq	l_8821                             	| [$8817: beq    $8821]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$8819: ldb    $1b]
	jeq	l_8822                             	| [$881b: beq    $8822]
	add.b	#0x02,d0                         	| [$881d: adda   #$02]
	jra	l_8822                             	| [$881f: bra    $8822]
l_8821:
	addq.b	#1,d0                           	| [$8821: inca]
l_8822:
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$8822: tst    $1a]
	jne	l_8836                             	| [$8824: bne    $8836]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$8826: ldb    $19]
	cmp.b	#0x02,d1                         	| [$8828: cmpb   #$02]
	jcs	l_8836                             	| [$882a: bcs    $8836]
	BIT	#0x80,d0                           	| [$882c: bita   #$80]
	jne	l_8834                             	| [$882e: bne    $8834]
	* set flip bit
	or.b	#0x80,d0                          	| [$8830: ora    #$80]
	jra	l_8836                             	| [$8832: bra    $8836]
l_8834:
	and.b	#0x7f,d0                         	| [$8834: anda   #$7f]
l_8836:
	GET_REG_ADDRESS	0,d4                   	| [$8836: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8838: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$883a: lda    $02]
	jne	l_886c                             	| [$883c: bne    $886c]
	GET_REG_ADDRESS	0x1,d2                 	| [$883e: ldd    $1,x]
	LOAD_D                                 	| [$883e: ldd    $1,x]
	addq.b	#1,d0                           	| [$8840: inca]
	add.b	#0x10,d1                         	| [$8841: addb   #$10]
	GET_REG_ADDRESS	0x1,d4                 	| [$8843: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$8845: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$8847: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x6,d4                 	| [$8849: sta    $6,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$884b: sta    $8,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$884d: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$884f: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8851: ldd    $1,x]
	LOAD_D                                 	| [$8851: ldd    $1,x]
	addq.b	#1,d0                           	| [$8853: inca]
	GET_REG_ADDRESS	0x5,d4                 	| [$8854: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$8856: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d3                 	| [$8858: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xa,d4                 	| [$885a: sta    $a,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x9,d2                 	| [$885c: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$885e: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x8,d4                 	| [$8860: sta    $8,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8862: ldd    $1,x]
	LOAD_D                                 	| [$8862: ldd    $1,x]
	addq.b	#1,d0                           	| [$8864: inca]
	sub.b	#0x10,d1                         	| [$8865: subb   #$10]
	GET_REG_ADDRESS	0x9,d4                 	| [$8867: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$8869: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$886b: rts]

l_886c:
	GET_REG_ADDRESS	0x1,d2                 	| [$886c: ldd    $1,x]
	LOAD_D                                 	| [$886c: ldd    $1,x]
	subq.b	#1,d0                           	| [$886e: deca]
	neg.b	d1                               	| [$886f: negb]
	sub.b	#0x20,d1                         	| [$8870: subb   #$20]
	GET_REG_ADDRESS	0x1,d4                 	| [$8872: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$8874: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$8876: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x6,d4                 	| [$8878: sta    $6,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$887a: sta    $8,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$887c: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$887e: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8880: ldd    $1,x]
	LOAD_D                                 	| [$8880: ldd    $1,x]
	subq.b	#1,d0                           	| [$8882: deca]
	neg.b	d1                               	| [$8883: negb]
	sub.b	#0x10,d1                         	| [$8884: subb   #$10]
	GET_REG_ADDRESS	0x5,d4                 	| [$8886: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$8888: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d3                 	| [$888a: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xa,d4                 	| [$888c: sta    $a,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x9,d2                 	| [$888e: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8890: lda    $6,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x8,d4                 	| [$8892: sta    $8,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8894: ldd    $1,x]
	LOAD_D                                 	| [$8894: ldd    $1,x]
	subq.b	#1,d0                           	| [$8896: deca]
	neg.b	d1                               	| [$8897: negb]
	GET_REG_ADDRESS	0x9,d4                 	| [$8898: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$889a: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$889c: rts]

l_889d:
	GET_REG_ADDRESS	0x2,d3                 	| [$889d: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x6,d4                 	| [$889f: sta    $6,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$88a1: lda    $02]
	jne	l_88d4                             	| [$88a3: bne    $88d4]
	GET_REG_ADDRESS	0,d3                   	| [$88a5: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$88a7: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$88a9: ldd    $1,x]
	LOAD_D                                 	| [$88a9: ldd    $1,x]
	jeq	l_89c2                             	| [$88ab: lbeq   $89c2]
	add.b	#0x10,d0                         	| [$88af: adda   #$10]
	cmp.w	#0x3670,d4                       	| [$88b1: cmpu   #$3670]
	jcc	l_88b8                             	| [$88b5: bcc    $88b8]
	addq.b	#1,d0                           	| [$88b7: inca]
l_88b8:
	GET_REG_ADDRESS	0x5,d4                 	| [$88b8: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$88ba: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
l_88bc:
	GET_REG_ADDRESS	0x1,d3                 	| [$88bc: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$88be: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d2                 	| [$88c0: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$88c2: ldb    ,y]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$88c4: stb    ,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$88c6: ldd    $1,x]
	LOAD_D                                 	| [$88c6: ldd    $1,x]
	cmp.w	#0x3670,d4                       	| [$88c8: cmpu   #$3670]
	jcc	l_88cf                             	| [$88cc: bcc    $88cf]
	addq.b	#1,d0                           	| [$88ce: inca]
l_88cf:
	GET_REG_ADDRESS	0x1,d4                 	| [$88cf: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$88d1: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$88d3: rts]

l_88d4:
	GET_REG_ADDRESS	0,d3                   	| [$88d4: lda    ,y]
	move.b	(a0),d0                         	| [...]
	jbsr	l_89a9                            	| [$88d6: jsr    $89a9]
	GET_REG_ADDRESS	0x4,d4                 	| [$88d9: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$88db: ldd    $1,x]
	LOAD_D                                 	| [$88db: ldd    $1,x]
	jeq	l_89c2                             	| [$88dd: lbeq   $89c2]
	neg.b	d1                               	| [$88e1: negb]
	add.b	#0x10,d0                         	| [$88e2: adda   #$10]
	sub.b	#0x10,d1                         	| [$88e4: subb   #$10]
	cmp.w	#0x3670,d4                       	| [$88e6: cmpu   #$3670]
	jcc	l_88ed                             	| [$88ea: bcc    $88ed]
	subq.b	#1,d0                           	| [$88ec: deca]
l_88ed:
	GET_REG_ADDRESS	0x5,d4                 	| [$88ed: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$88ef: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
l_88f1:
	GET_REG_ADDRESS	0x1,d3                 	| [$88f1: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$88f3: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d2                 	| [$88f5: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$88f7: lda    ,y]
	move.b	(a0),d0                         	| [...]
	jbsr	l_89a9                            	| [$88f9: jsr    $89a9]
	GET_REG_ADDRESS	0,d4                   	| [$88fc: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$88fe: ldd    $1,x]
	LOAD_D                                 	| [$88fe: ldd    $1,x]
	neg.b	d1                               	| [$8900: negb]
	sub.b	#0x10,d1                         	| [$8901: subb   #$10]
	cmp.w	#0x3670,d4                       	| [$8903: cmpu   #$3670]
	jcc	l_890a                             	| [$8907: bcc    $890a]
	subq.b	#1,d0                           	| [$8909: deca]
l_890a:
	GET_REG_ADDRESS	0x1,d4                 	| [$890a: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$890c: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$890e: rts]

l_890f:
	GET_REG_ADDRESS	0x2,d3                 	| [$890f: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x6,d4                 	| [$8911: sta    $6,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$8913: lda    $02]
	jne	l_8930                             	| [$8915: bne    $8930]
	GET_REG_ADDRESS	0,d3                   	| [$8917: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$8919: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$891b: ldd    $1,x]
	LOAD_D                                 	| [$891b: ldd    $1,x]
	jeq	l_89c2                             	| [$891d: lbeq   $89c2]
	cmp.w	#0x3670,d4                       	| [$8921: cmpu   #$3670]
	jcc	l_8928                             	| [$8925: bcc    $8928]
	addq.b	#1,d0                           	| [$8927: inca]
l_8928:
	sub.b	#0x10,d1                         	| [$8928: subb   #$10]
	GET_REG_ADDRESS	0x5,d4                 	| [$892a: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$892c: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	jra	l_88bc                             	| [$892e: bra    $88bc]
l_8930:
	GET_REG_ADDRESS	0,d3                   	| [$8930: lda    ,y]
	move.b	(a0),d0                         	| [...]
	jbsr	l_89a9                            	| [$8932: jsr    $89a9]
	GET_REG_ADDRESS	0x4,d4                 	| [$8935: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8937: ldd    $1,x]
	LOAD_D                                 	| [$8937: ldd    $1,x]
	jeq	l_89c2                             	| [$8939: lbeq   $89c2]
	cmp.w	#0x3670,d4                       	| [$893d: cmpu   #$3670]
	jcc	l_8944                             	| [$8941: bcc    $8944]
	subq.b	#1,d0                           	| [$8943: deca]
l_8944:
	neg.b	d1                               	| [$8944: negb]
	GET_REG_ADDRESS	0x5,d4                 	| [$8945: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$8947: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	jra	l_88f1                             	| [$8949: bra    $88f1]
l_894b:
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$894b: lda    $02]
	jne	l_88f1                             	| [$894d: bne    $88f1]
	jra	l_88bc                             	| [$894f: jra    $88bc]
l_8952:
	GET_REG_ADDRESS	0,d3                   	| [$8952: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$8954: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xa6,d0         | [$8956: lda    $a6]
	GET_REG_ADDRESS	0,d4                   	| [$8958: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$895a: lda    $02]
	jne	l_8966                             	| [$895c: bne    $8966]
	GET_DP_ADDRESS	0x51                    	| [$895e: ldd    $51]
	LOAD_D                                 	| [$895e: ldd    $51]
	addq.b	#1,d0                           	| [$8960: inca]
	GET_REG_ADDRESS	0x1,d4                 	| [$8961: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$8963: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$8965: rts]

l_8966:
	GET_DP_ADDRESS	0x51                    	| [$8966: ldd    $51]
	LOAD_D                                 	| [$8966: ldd    $51]
	neg.b	d1                               	| [$8968: negb]
	subq.b	#1,d0                           	| [$8969: deca]
	sub.b	#0x10,d1                         	| [$896a: subb   #$10]
	GET_REG_ADDRESS	0x1,d4                 	| [$896c: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$896e: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$8970: rts]

l_8971:
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$8971: lda    $02]
	jne	l_898f                             	| [$8973: bne    $898f]
	GET_REG_ADDRESS	0x1,d2                 	| [$8975: ldd    $1,x]
	LOAD_D                                 	| [$8975: ldd    $1,x]
	addq.b	#1,d0                           	| [$8977: inca]
	add.b	#0x10,d1                         	| [$8978: addb   #$10]
	GET_REG_ADDRESS	0x1,d4                 	| [$897a: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$897c: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$897e: ldd    $1,x]
	LOAD_D                                 	| [$897e: ldd    $1,x]
	addq.b	#1,d0                           	| [$8980: inca]
	GET_REG_ADDRESS	0x5,d4                 	| [$8981: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$8983: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8985: ldd    $1,x]
	LOAD_D                                 	| [$8985: ldd    $1,x]
	addq.b	#1,d0                           	| [$8987: inca]
	sub.b	#0x10,d1                         	| [$8988: subb   #$10]
	GET_REG_ADDRESS	0x9,d4                 	| [$898a: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$898c: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$898e: rts]

l_898f:
	GET_REG_ADDRESS	0x1,d2                 	| [$898f: ldd    $1,x]
	LOAD_D                                 	| [$898f: ldd    $1,x]
	subq.b	#1,d0                           	| [$8991: deca]
	sub.b	#0x20,d1                         	| [$8992: subb   #$20]
	GET_REG_ADDRESS	0x1,d4                 	| [$8994: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$8996: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8998: ldd    $1,x]
	LOAD_D                                 	| [$8998: ldd    $1,x]
	subq.b	#1,d0                           	| [$899a: deca]
	sub.b	#0x10,d1                         	| [$899b: subb   #$10]
	GET_REG_ADDRESS	0x5,d4                 	| [$899d: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$899f: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$89a1: ldd    $1,x]
	LOAD_D                                 	| [$89a1: ldd    $1,x]
	subq.b	#1,d0                           	| [$89a3: deca]
	GET_REG_ADDRESS	0x9,d4                 	| [$89a4: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$89a6: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$89a8: rts]

l_89a9:
	OP_R_ON_DP_ADDRESS	move,0x02,d1         | [$89a9: ldb    $02]
	jeq	l_89b3                             	| [$89ab: beq    $89b3]
	BIT	#0x40,d0                           	| [$89ad: bita   #$40]
	jne	l_89b4                             	| [$89af: bne    $89b4]
	or.b	#0x40,d0                          	| [$89b1: ora    #$40]
l_89b3:
	rts                                    	| [$89b3: rts]

l_89b4:
	and.b	#0xbf,d0                         	| [$89b4: anda   #$bf]
	rts                                    	| [$89b6: rts]

l_89b7:
	move.b	#0xff,d0                        	| [$89b7: ldd    #$ff00]
	move.w	#0xff00,d1                      	| [$89b7: ldd    #$ff00]
	GET_REG_ADDRESS	0xd,d4                 	| [$89ba: sta    $d,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xf,d4                 	| [$89bc: stb    $f,u]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x9,d4                 	| [$89be: sta    $9,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d4                 	| [$89c0: stb    $b,u]
	move.b	d1,(a0)                         	| [...]
l_89c2:
	move.b	#0xff,d0                        	| [$89c2: ldd    #$ff00]
	move.w	#0xff00,d1                      	| [$89c2: ldd    #$ff00]
	GET_REG_ADDRESS	0x5,d4                 	| [$89c5: sta    $5,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x7,d4                 	| [$89c7: stb    $7,u]
	move.b	d1,(a0)                         	| [...]
l_89c9:
	move.b	#0xff,d0                        	| [$89c9: ldd    #$ff00]
	move.w	#0xff00,d1                      	| [$89c9: ldd    #$ff00]
	GET_REG_ADDRESS	0x1,d4                 	| [$89cc: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$89ce: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$89d0: rts]

l_89d1:
	move.w	#0x3360,d2                      	| [$89d1: ldx    #$3360]
	move.w	#0xd8a4,d4                      	| [$89d4: ldu    #$d8a4]
	move.b	#0x0c,d1                        	| [$89d7: ldb    #$0c]
l_89d9:
	GET_REG_ADDRESS	0,d2                   	| [$89d9: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$89db: cmpa   ,u+]
	addq.w	#1,d4                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jne	l_89e2                             	| [$89dd: bne    $89e2]
	subq.b	#1,d1                           	| [$89df: decb]
	jne	l_89d9                             	| [$89e0: bne    $89d9]
l_89e2:
	rts                                    	| [$89e2: rts]

l_89e3:
	move.b	#0x01,d0                        	| [$89e3: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$89e5: sta    $48]
	move.b	#0x07,d1                        	| [$89e7: ldb    #$07]
	OP_R_ON_DP_ADDRESS	move,0x14,d0         | [$89e9: lda    $14]
	GET_DP_ADDRESS	0x15                    	| [$89eb: ora    $15]
	or.b	(a0),d0                           	| [...]
	not.b	d0                               	| [$89ed: coma]
	GET_DP_ADDRESS	0x13                    	| [$89ee: anda   $13]
	and.b	(a0),d0                          	| [...]
l_89f0:
	lsr.b	#1,d0                            	| [$89f0: lsra]
	jcs	l_8a0a                             	| [$89f1: bcs    $8a0a]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$89f3: inc    $48]
	subq.b	#1,d1                           	| [$89f5: decb]
	jne	l_89f0                             	| [$89f6: bne    $89f0]
	move.b	#0x07,d1                        	| [$89f8: ldb    #$07]
	OP_R_ON_DP_ADDRESS	move,0x17,d0         | [$89fa: lda    $17]
	GET_DP_ADDRESS	0x18                    	| [$89fc: ora    $18]
	or.b	(a0),d0                           	| [...]
	not.b	d0                               	| [$89fe: coma]
	GET_DP_ADDRESS	0x16                    	| [$89ff: anda   $16]
	and.b	(a0),d0                          	| [...]
l_8a01:
	lsr.b	#1,d0                            	| [$8a01: lsra]
	jcs	l_8a0a                             	| [$8a02: bcs    $8a0a]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$8a04: inc    $48]
	subq.b	#1,d1                           	| [$8a06: decb]
	jne	l_8a01                             	| [$8a07: bne    $8a01]
	rts                                    	| [$8a09: rts]

l_8a0a:
	move.w	#0xd8cf,d2                      	| [$8a0a: ldx    #$d8cf]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$8a0d: lda    $48]
	GET_ADDRESS	0x34e4                     	| [$8a0f: ldb    $34e4]
	move.b	(a0),d1                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$8a12: cmpa   b,x]
	cmp.b	(a0),d0                          	| [...]
	jne	l_8a29                             	| [$8a14: bne    $8a29]
	GET_ADDRESS	0x34e4                     	| [$8a16: inc    $34e4]
	addq.b	#1,(a0)                         	| [...]
                                         | [$8a19: lda    $34e4]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0e,d0                         	| [$8a1c: cmpa   #$0e]
	jne	l_8a28                             	| [$8a1e: bne    $8a28]
	move.b	#0x01,d0                        	| [$8a20: lda    #$01]
	GET_ADDRESS	0x34e5                     	| [$8a22: sta    $34e5]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x34e4                     	| [$8a25: clr    $34e4]
	clr.b	(a0)                         	| [...]
l_8a28:
	rts                                    	| [$8a28: rts]

l_8a29:
	GET_ADDRESS	0x34e4                     	| [$8a29: clr    $34e4]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$8a2c: rts]

l_8a2d:
	
	.ifndef	RELEASE
	move.w	#0xd89a,d2
	.endif
	lea	table_d89a,a2                  	| [$8a2d: ldx   #table_d89a]
	OP_R_ON_DP_ADDRESS	move,0x26,d0         | [$8a30: lda    $26]
	asl.b	#1,d0                            	| [$8a32: asla]
	JMP_A_INDEXED	A2                   	| [$8a33: jra    [a,x]] [jump_table]
l_8a35:
	moveq	#0,d0                            	| [$8a35: clra]
	moveq	#0,d1                            	| [$8a36: clrb]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x70                    	| [$8a37: std    $70]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	chrono_second_72        	| [$8a39: std    chrono_second_72]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f1                     	| [$8a3b: std    $34f1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$8a3e: inc    $26]
	rts                                    	| [$8a40: rts]

l_8a41:
	jbsr	l_c000                            	| [$8a41: jsr    $c000]
	OP_R_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d0| [$8a44: lda    chrono_hundredth_second_71]
	cmp.b	#0x12,d0                         	| [$8a46: cmpa   #$12]
	jeq	l_8a65                             	| [$8a48: beq    $8a65]
	OP_R_ON_DP_ADDRESS	move,0x13,d0         | [$8a4a: lda    $13]
	and.b	#0x57,d0                         	| [$8a4c: anda   #$57]
	cmp.b	#0x57,d0                         	| [$8a4e: cmpa   #$57]
	jne	l_8a5f                             	| [$8a50: bne    $8a5f]
	jbsr	l_579f                            	| [$8a52: jsr    $579f]
	GET_ADDRESS	0x34f2                     	| [$8a55: lda    $34f2]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$8a58: cmpa   #$04]
	jne	l_8a5e                             	| [$8a5a: bne    $8a5e]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$8a5c: inc    $26]
l_8a5e:
	rts                                    	| [$8a5e: rts]

l_8a5f:
	moveq	#0,d0                            	| [$8a5f: clra]
	moveq	#0,d1                            	| [$8a60: clrb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f1                     	| [$8a61: std    $34f1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$8a64: rts]

l_8a65:
	OP_W_ON_DP_ADDRESS	addq,0x20,#1         | [$8a65: inc    $20]
	moveq	#0,d0                            	| [$8a67: clra]
	moveq	#0,d1                            	| [$8a68: clrb]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x22                    	| [$8a69: std    $22]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x24                    	| [$8a6b: std    $24]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x26                    	| [$8a6d: std    $26]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_28      	| [$8a6f: std    event_sub_state_28]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$8a71: rts]

l_8a72:
	moveq	#0,d0                            	| [$8a72: clra]
	jbsr	queue_event_4e9a                  	| [$8a73: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$8a76: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x27,d0         | [$8a78: sta    $27]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$8a7a: inc    $26]
	rts                                    	| [$8a7c: rts]

l_8a7d:
	OP_W_ON_DP_ADDRESS	subq,0x27,#1         | [$8a7d: dec    $27]
	jne	l_8aad                             	| [$8a7f: bne    $8aad]
	move.w	#0xd8b0,d2                      	| [$8a81: ldx    #$d8b0]
	move.w	#0x2305,d4                      	| [$8a84: ldu    #$2305]
	move.b	#0x16,d0                        	| [$8a87: lda    #$16]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$8a89: sta    $48]
l_8a8b:
	GET_REG_ADDRESS	0,d2                   	| [$8a8b: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x0b,d0                         	| [$8a8d: suba   #$0b]
	jbsr	write_char_and_move_cursor_422c   	| [$8a8f: jsr    write_char_and_move_cursor_422c]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$8a92: dec    $48]
	jne	l_8a8b                             	| [$8a94: bne    $8a8b]
	move.w	#0xd8c6,d2                      	| [$8a96: ldx    #$d8c6]
	move.w	#0x2410,d4                      	| [$8a99: ldu    #$2410]
	move.b	#0x09,d0                        	| [$8a9c: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$8a9e: sta    $48]
l_8aa0:
	GET_REG_ADDRESS	0,d2                   	| [$8aa0: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x16,d0                         	| [$8aa2: suba   #$16]
	jbsr	write_char_and_move_cursor_422c   	| [$8aa4: jsr    write_char_and_move_cursor_422c]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$8aa7: dec    $48]
	jne	l_8aa0                             	| [$8aa9: bne    $8aa0]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$8aab: inc    $26]
l_8aad:
	rts                                    	| [$8aad: rts]

l_8aae:
	rts                                    	| [$8aae: rts]

skeet_shooting_8aaf:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$8aaf: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$8ab1: asla]
	
	.ifndef	RELEASE
	move.w	#0xecea,d2
	.endif
	lea	table_ecea,a2                  	| [$8ab2: ldx   #table_ecea]
	JMP_A_INDEXED	A2                   	| [$8ab5: jra    [a,x]] [jump_table]

l_8ab7:
	move.w	#0x31c0,d2                      	| [$8ab7: ldx    #$31c0]
	move.b	#0x60,d0                        	| [$8aba: ldd    #$608e]
	move.w	#0x608e,d1                      	| [$8aba: ldd    #$608e]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8abd: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x62,d1                        	| [$8abf: ldb    #$62]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$8ac1: std    $b,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x02,d0                        	| [$8ac3: lda    #$02]
	GET_REG_ADDRESS	0x5,d2                 	| [$8ac5: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x0b,d0                        	| [$8ac7: lda    #$0b]
	GET_REG_ADDRESS	0x6,d2                 	| [$8ac9: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x31d0                     	| [$8acb: sta    $31d0]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_90cc                            	| [$8ace: jsr    $90cc]
	move.w	#0x3097,d2                      	| [$8ad1: ldx    #$3097]
	move.b	#0x09,d0                        	| [$8ad4: lda    #$09]
l_8ad6:
	GET_REG_ADDRESS	0,d2                   	| [$8ad6: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d0                           	| [$8ad8: deca]
	jne	l_8ad6                             	| [$8ad9: bne    $8ad6]
	move.b	#0x27,d0                        	| [$8adb: lda    #$27]
	jbsr	l_4eb3                            	| [$8add: jsr    $4eb3]
	jbsr	l_9076                            	| [$8ae0: jsr    $9076]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$8ae3: inc    event_sub_state_28]
	move.b	#0xff,d0                        	| [$8ae5: lda    #$ff]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d1| [$8ae7: ldb    current_level_68]
	subq.b	#1,d1                           	| [$8ae9: decb]
l_8aea:
	addq.b	#1,d0                           	| [$8aea: inca]
	sub.b	#0x07,d1                         	| [$8aeb: subb   #$07]
	jpl	l_8aea                             	| [$8aed: bpl    $8aea]
	cmp.b	#0x06,d0                         	| [$8aef: cmpa   #$06]
	jcs	l_8af5                             	| [$8af1: bcs    $8af5]
	move.b	#0x05,d0                        	| [$8af3: lda    #$05]
l_8af5:
	OP_W_ON_DP_ADDRESS	move,0xf0,d0         | [$8af5: sta    $f0]
	move.w	#0x2200,d4                      	| [$8af7: ldu    #$2200]
	move.b	d0,d1                           	| [$8afa: tfr    a,b]
	addq.b	#1,d1                           	| [$8afc: incb]
	GET_REG_UNCHECKED_ADDRESS	0x1,d4                 	| [$8afd: stb    $1,u] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	tst.b	d0                               	| [$8aff: tsta]
	jeq	l_8b05                             	| [$8b00: beq    $8b05]
	addq.b	#1,d0                           	| [$8b02: inca]
	OP_W_ON_DP_ADDRESS	move,0xe7,d0         | [$8b03: sta    $e7]
l_8b05:
	OP_W_ON_DP_ADDRESS	move,0xeb,d0         | [$8b05: sta    $eb]
	add.b	#0x0a,d0                         	| [$8b07: adda   #$0a]
	OP_W_ON_DP_ADDRESS	move,0xe8,d0         | [$8b09: sta    $e8]
	move.w	#0x3508,d2                      	| [$8b0b: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$8b0e: ldb    $19]
	ABX                                    	| [$8b10: abx]
	GET_REG_ADDRESS	0,d2                   	| [$8b11: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xf0,d1         | [$8b13: ldb    $f0]
	BIT	#0x01,d1                           	| [$8b15: bitb   #$01]
	jeq	l_8b21                             	| [$8b17: beq    $8b21]
	add.b	#0x03,d0                         	| [$8b19: adda   #$03]
	cmp.b	#0x06,d0                         	| [$8b1b: cmpa   #$06]
	jcs	l_8b21                             	| [$8b1d: bcs    $8b21]
	sub.b	#0x06,d0                         	| [$8b1f: suba   #$06]
l_8b21:
	move.b	d0,d1                           	| [$8b21: tfr    a,b]
	add.b	#0x11,d1                         	| [$8b23: addb   #$11]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$8b25: stb    ,u] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x0f,d1                        	| [$8b27: ldb    #$0f]
	jbsr	multiply_ab                       	| [$8b29: mul]
	move.w	#0xecf2,d2                      	| [$8b2a: ldx    #$ecf2]
	MAKE_D                                 	| [...]
	add.w	d1,d2                            	| [$8b2d: leax   d,x]
	GET_DP_ADDRESS	0xfc                    	| [$8b2f: stx    $fc]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.b	#0x05,d0                        	| [$8b31: ldd    #$0505]
	move.w	#0x0505,d1                      	| [$8b31: ldd    #$0505]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$8b34: std    $0800,u] [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.w	#0x31d1,d2                      	| [$8b38: ldx    #$31d1]
	move.b	#0x02,d0                        	| [$8b3b: lda    #$02]
	GET_REG_ADDRESS	0,d2                   	| [$8b3d: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$8b3f: lda    #$02]
	GET_REG_ADDRESS	0,d2                   	| [$8b41: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xea,d0         | [$8b43: sta    $ea]
	move.b	#0x10,d0                        	| [$8b45: lda    #$10]
	GET_REG_ADDRESS	0,d2                   	| [$8b47: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x3c,d0                        	| [$8b49: lda    #$3c]
	GET_REG_ADDRESS	0,d2                   	| [$8b4b: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x0b,d0                        	| [$8b4d: lda    #$0b]
	GET_REG_ADDRESS	0,d2                   	| [$8b4f: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x5a,d0                        	| [$8b51: lda    #$5a]
	OP_W_ON_DP_ADDRESS	move,0xb5,d0         | [$8b53: sta    $b5]
	move.b	#0x04,d0                        	| [$8b55: lda    #$04]
	OP_1_ON_DP_ADDRESS	tst,0xf0             | [$8b57: tst    $f0]
	jeq	l_8b5c                             	| [$8b59: beq    $8b5c]
	subq.b	#1,d0                           	| [$8b5b: deca]
l_8b5c:
	OP_W_ON_DP_ADDRESS	move,0xe1,d0         | [$8b5c: sta    $e1]
	OP_1_ON_DP_ADDRESS	clr,0x2f             | [$8b5e: clr    $2f]
	rts                                    	| [$8b60: rts]

l_8b61:
	OP_W_ON_DP_ADDRESS	subq,0xb5,#1         | [$8b61: dec    $b5]
	jeq	l_8b6c                             	| [$8b63: beq    $8b6c]
	jbsr	l_4f8a                            	| [$8b65: jsr    $4f8a]
	GET_REG_ADDRESS	0,d4                   	| [$8b68: lda    ,u]
	move.b	(a0),d0                         	| [...]
	jeq	l_8b78                             	| [$8b6a: beq    $8b78]
l_8b6c:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$8b6c: inc    event_sub_state_28]
	move.b	#0x01,d0                        	| [$8b6e: ldd    #$0105]
	move.w	#0x0105,d1                      	| [$8b6e: ldd    #$0105]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$8b71: tst    game_playing_00]
	jne	l_8b76                             	| [$8b73: bne    $8b76]
	moveq	#0,d1                            	| [$8b75: clrb]
l_8b76:
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x70                    	| [$8b76: std    $70]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_8b78:
	rts                                    	| [$8b78: rts]

l_8b79:
	jbsr	l_afaf                            	| [$8b79: jsr    $afaf]
	jbsr	l_9076                            	| [$8b7c: jsr    $9076]
	move.b	#0xff,d0                        	| [$8b7f: lda    #$ff]
	GET_ADDRESS	0x31c0                     	| [$8b81: sta    $31c0]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x31ca                     	| [$8b84: sta    $31ca]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xf3             | [$8b87: clr    $f3]
	OP_1_ON_DP_ADDRESS	clr,0xf6             | [$8b89: clr    $f6]
	OP_1_ON_DP_ADDRESS	clr,0x2d             | [$8b8b: clr    $2d]
	jbsr	l_4fa1                            	| [$8b8d: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$8b90: anda   #$05]
	jeq	l_8bd7                             	| [$8b92: beq    $8bd7]
	move.b	d0,d1                           	| [$8b94: tfr    a,b]
	and.b	#0x04,d1                         	| [$8b96: andb   #$04]
	OP_W_ON_DP_ADDRESS	move,0xde,d1         | [$8b98: stb    $de]
	GET_ADDRESS	0x31c5                     	| [$8b9a: ldb    $31c5]
	move.b	(a0),d1                         	| [...]
	jeq	l_8bcd                             	| [$8b9d: beq    $8bcd]
	cmp.b	#0x05,d0                         	| [$8b9f: cmpa   #$05]
	jne	l_8baa                             	| [$8ba1: bne    $8baa]
	subq.b	#1,d1                           	| [$8ba3: decb]
	jne	l_8baa                             	| [$8ba4: bne    $8baa]
	and.b	#0x01,d0                         	| [$8ba6: anda   #$01]
	jra	l_8bab                             	| [$8ba8: bra    $8bab]
l_8baa:
	subq.b	#1,d1                           	| [$8baa: decb]
l_8bab:
	GET_ADDRESS	0x31c5                     	| [$8bab: stb    $31c5]
	move.b	d1,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$8bae: sta    $2d]
	move.b	#0x03,d0                        	| [$8bb0: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x2c,d0         | [$8bb2: sta    $2c]
	moveq	#0,d0                            	| [$8bb4: clra]
	jbsr	queue_sound_event_4ead            	| [$8bb5: jsr    queue_sound_event_4ead]
	move.b	#0x04,d0                        	| [$8bb8: lda    #$04]
	jbsr	queue_sound_event_4ead            	| [$8bba: jsr    queue_sound_event_4ead]
	move.b	#0x03,d0                        	| [$8bbd: lda    #$03]
	jbsr	queue_sound_event_4ead            	| [$8bbf: jsr    queue_sound_event_4ead]
	move.b	#0x02,d0                        	| [$8bc2: lda    #$02]
	jbsr	queue_sound_event_4ead            	| [$8bc4: jsr    queue_sound_event_4ead]
	move.b	#0x14,d0                        	| [$8bc7: lda    #$14]
	OP_W_ON_DP_ADDRESS	move,0xe5,d0         | [$8bc9: sta    $e5]
l_8bcb:
	jra	l_8bd7                             	| [$8bcb: bra    $8bd7]
l_8bcd:
	move.b	#0x60,d0                        	| [$8bcd: lda    #$60]
	jbsr	l_4eb3                            	| [$8bcf: jsr    $4eb3]
	move.b	#0x22,d0                        	| [$8bd2: lda    #$22]
	jbsr	l_4eb3                            	| [$8bd4: jsr    $4eb3]
l_8bd7:
	jbsr	l_90cc                            	| [$8bd7: jsr    $90cc]
	OP_1_ON_DP_ADDRESS	tst,0xd7             | [$8bda: tst    $d7]
	jeq	l_8be1                             	| [$8bdc: beq    $8be1]
	jra	l_922c                             	| [$8bde: jra    $922c]
l_8be1:
	OP_1_ON_DP_ADDRESS	tst,0xf1             | [$8be1: tst    $f1]
	jne	l_8c0c                             	| [$8be3: bne    $8c0c]
	OP_1_ON_DP_ADDRESS	tst,0x2f             | [$8be5: tst    $2f]
	jeq	l_8bed                             	| [$8be7: beq    $8bed]
	OP_W_ON_DP_ADDRESS	subq,0x2f,#1         | [$8be9: dec    $2f]
	jra	l_8c0c                             	| [$8beb: bra    $8c0c]
l_8bed:
	OP_W_ON_DP_ADDRESS	subq,0xe9,#1         | [$8bed: dec    $e9]
	move.w	#0x3100,d2                      	| [$8bef: ldx    #$3100]
l_8bf2:
	GET_REG_ADDRESS	0,d2                   	| [$8bf2: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_8c00                             	| [$8bf4: beq    $8c00]
	add.w	#0x30,d2                         	| [$8bf6: leax   $30,x]
	cmp.w	#0x3190,d2                       	| [$8bf9: cmpx   #$3190]
	jhi	l_8c0c                             	| [$8bfc: bhi    $8c0c]
	jra	l_8bf2                             	| [$8bfe: bra    $8bf2]
l_8c00:
	move.b	#0x08,d0                        	| [$8c00: lda    #$08]
	jbsr	l_4eb3                            	| [$8c02: jsr    $4eb3]
	jbsr	l_8fb8                            	| [$8c05: jsr    $8fb8]
	move.b	#0x1e,d0                        	| [$8c08: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x2f,d0         | [$8c0a: sta    $2f]
l_8c0c:
	move.w	#0x364c,d4                      	| [$8c0c: ldu    #$364c]
	move.w	#0x30d0,d2                      	| [$8c0f: ldx    #$30d0]
l_8c12:
	add.w	#0x30,d2                         	| [$8c12: leax   $30,x]
	cmp.w	#0x3190,d2                       	| [$8c15: cmpx   #$3190]
	jcc	l_8d94                             	| [$8c18: lbcc   $8d94]
	GET_REG_ADDRESS	0,d2                   	| [$8c1c: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_8c12                             	| [$8c1e: beq    $8c12]
	GET_REG_ADDRESS	0x8,d2                 	| [$8c20: ldd    $8,x]
	LOAD_D                                 	| [$8c20: ldd    $8,x]
	GET_ADDRESS	0x3375                     	| [$8c22: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0xa,d2                 	| [$8c25: ldd    $a,x]
	LOAD_D                                 	| [$8c25: ldd    $a,x]
	GET_ADDRESS	0x337a                     	| [$8c27: std    $337a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0xc,d2                 	| [$8c2a: ldd    $c,x]
	LOAD_D                                 	| [$8c2a: ldd    $c,x]
	GET_ADDRESS	0x337c                     	| [$8c2c: std    $337c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$8c2f: ldd    $e,x]
	LOAD_D                                 	| [$8c2f: ldd    $e,x]
	GET_ADDRESS	0x337e                     	| [$8c31: std    $337e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_c027                            	| [$8c34: jsr    $c027]
	GET_REG_ADDRESS	0x18,d2                	| [$8c37: stb    $18,x]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8c3a: addb   $1,x]
	add.b	(a0),d1                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8c3c: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	move.b	d0,d1                           	| [$8c3e: tfr    a,b]
	GET_REG_ADDRESS	0x4,d2                 	| [$8c40: addb   $4,x]
	add.b	(a0),d1                          	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$8c42: stb    $4,x]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$8c44: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	and.b	#0x01,d1                         	| [$8c46: andb   #$01]
	jeq	l_8c4b                             	| [$8c48: beq    $8c4b]
	neg.b	d0                               	| [$8c4a: nega]
l_8c4b:
	GET_REG_ADDRESS	0x2,d2                 	| [$8c4b: adda   $2,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$8c4d: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8c4f: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0xf8,d0                         	| [$8c51: cmpa   #$f8]
	jhi	l_8c59                             	| [$8c53: bhi    $8c59]
	cmp.b	#0x05,d0                         	| [$8c55: cmpa   #$05]
	jcc	l_8c5e                             	| [$8c57: bcc    $8c5e]
l_8c59:
	jbsr	l_9187                            	| [$8c59: jsr    $9187]
	jra	l_8c72                             	| [$8c5c: bra    $8c72]
l_8c5e:
	GET_ADDRESS	0x3375                     	| [$8c5e: ldd    $3375]
	LOAD_D                                 	| [$8c5e: ldd    $3375]
	GET_REG_ADDRESS	0x8,d2                 	| [$8c61: std    $8,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x337a                     	| [$8c63: ldd    $337a]
	LOAD_D                                 	| [$8c63: ldd    $337a]
	GET_REG_ADDRESS	0xa,d2                 	| [$8c66: std    $a,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x337c                     	| [$8c68: ldd    $337c]
	LOAD_D                                 	| [$8c68: ldd    $337c]
	GET_REG_ADDRESS	0xc,d2                 	| [$8c6b: std    $c,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x337e                     	| [$8c6d: ldd    $337e]
	LOAD_D                                 	| [$8c6d: ldd    $337e]
	GET_REG_ADDRESS	0xe,d2                 	| [$8c70: std    $e,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_8c72:
	addq.w	#0x4,d4                         	| [$8c72: leau   $4,u]
	move.w	#0xdc8c,d3                      	| [$8c74: ldy    #$dc8c]
	GET_REG_ADDRESS	0,d2                   	| [$8c78: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jpl	l_8c83                             	| [$8c7a: bpl    $8c83]
	and.b	#0x70,d0                         	| [$8c7c: anda   #$70]
                                         | [$8c7e: lsra]
                                         | [$8c7f: lsra]
	lsr.b	#3,d0                            	| [$8c80: lsra]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$8c81: leay   a,y]
l_8c83:
	jbsr	l_894b                            	| [$8c83: jsr    $894b]
	GET_REG_ADDRESS	0x4,d2                 	| [$8c86: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$8c88: suba   $3,x]
	sub.b	(a0),d0                          	| [...]
	jcs	l_8c90                             	| [$8c8a: bcs    $8c90]
	GET_REG_ADDRESS	0x4,d2                 	| [$8c8c: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$8c8e: inc    $5,x]
	addq.b	#1,(a0)                         	| [...]
l_8c90:
	GET_REG_ADDRESS	0x1,d2                 	| [$8c90: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$8c92: cmpa   $5,x]
	cmp.b	(a0),d0                          	| [...]
	jhi	l_8ca0                             	| [$8c94: bhi    $8ca0]
	GET_REG_ADDRESS	0x5,d2                 	| [$8c96: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_9187                            	| [$8c98: jsr    $9187]
	move.b	#0x0f,d0                        	| [$8c9b: lda    #$0f]
	jbsr	l_4eb3                            	| [$8c9d: jsr    $4eb3]
l_8ca0:
	addq.w	#0x4,d4                         	| [$8ca0: leau   $4,u]
	move.w	#0xdc96,d3                      	| [$8ca2: ldy    #$dc96]
	addq.w	#0x4,d2                         	| [$8ca6: leax   $4,x]
	jbsr	l_894b                            	| [$8ca8: jsr    $894b]
	subq.w	#0x4,d2                         	| [$8cab: leax   -$4,x]
	move.b	#0xff,d0                        	| [$8cad: ldd    #$ffa0]
	move.w	#0xffa0,d1                      	| [$8cad: ldd    #$ffa0]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xae                    	| [$8cb0: std    $ae]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_91ec                            	| [$8cb2: jsr    $91ec]
	GET_REG_ADDRESS	0x18,d2                	| [$8cb5: tst    $18,x]
	tst.b	(a0)                             	| [...]
	jpl	l_8ccb                             	| [$8cb8: bpl    $8ccb]
	move.b	#0x90,d0                        	| [$8cba: ldd    #$9088]
	move.w	#0x9088,d1                      	| [$8cba: ldd    #$9088]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xae                    	| [$8cbd: std    $ae]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d1                            	| [$8cbf: clrb]
	jbsr	l_91ec                            	| [$8cc0: jsr    $91ec]
	move.b	#0x80,d0                        	| [$8cc3: ldd    #$8078]
	move.w	#0x8078,d1                      	| [$8cc3: ldd    #$8078]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xae                    	| [$8cc6: std    $ae]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_91ec                            	| [$8cc8: jsr    $91ec]
l_8ccb:
	move.b	#0x02,d0                        	| [$8ccb: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$8ccd: sta    $2e]
l_8ccf:
	OP_W_ON_DP_ADDRESS	subq,0x2e,#1         | [$8ccf: dec    $2e]
	jmi	l_8c12                             	| [$8cd1: lbmi   $8c12]
	move.w	#0x31c0,d3                      	| [$8cd5: ldy    #$31c0]
	OP_R_ON_DP_ADDRESS	move,0x2e,d0         | [$8cd9: lda    $2e]
	move.b	#0x0a,d1                        	| [$8cdb: ldb    #$0a]
	jbsr	multiply_ab                       	| [$8cdd: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$8cde: leay   b,y]
	OP_R_ON_DP_ADDRESS	move,0x2d,d0         | [$8ce0: lda    $2d]
	jeq	l_8d6d                             	| [$8ce2: lbeq   $8d6d]
	OP_R_ON_DP_ADDRESS	move,0x2e,d1         | [$8ce6: ldb    $2e]
	jeq	l_8cf0                             	| [$8ce8: beq    $8cf0]
	BIT	#0x04,d0                           	| [$8cea: bita   #$04]
	jne	l_8cf4                             	| [$8cec: bne    $8cf4]
	jra	l_8d6d                             	| [$8cee: bra    $8d6d]
l_8cf0:
	BIT	#0x01,d0                           	| [$8cf0: bita   #$01]
	jeq	l_8d6d                             	| [$8cf2: beq    $8d6d]
l_8cf4:
	jbsr	l_91c7                            	| [$8cf4: jsr    $91c7]
	OP_1_ON_DP_ADDRESS	tst,0xe6             | [$8cf7: tst    $e6]
	jeq	l_8d6d                             	| [$8cf9: beq    $8d6d]
	OP_W_ON_DP_ADDRESS	subq,0xea,#1         | [$8cfb: dec    $ea]
	jne	l_8d0f                             	| [$8cfd: bne    $8d0f]
	GET_ADDRESS	0x31d2                     	| [$8cff: lda    $31d2]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xea,d0         | [$8d02: sta    $ea]
	GET_ADDRESS	0x31d3                     	| [$8d04: lda    $31d3]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x31c6                     	| [$8d07: cmpa   $31c6]
	cmp.b	(a0),d0                          	| [...]
	jls	l_8d0f                             	| [$8d0a: bls    $8d0f]
	GET_ADDRESS	0x31c6                     	| [$8d0c: inc    $31c6]
	addq.b	#1,(a0)                         	| [...]
l_8d0f:
	OP_W_ON_DP_ADDRESS	addq,0xf3,#1         | [$8d0f: inc    $f3]
	OP_W_ON_DP_ADDRESS	addq,0xf6,#1         | [$8d11: inc    $f6]
	OP_W_ON_DP_ADDRESS	addq,0xff,#1         | [$8d13: inc    $ff]
	GET_REG_ADDRESS	0x1,d3                 	| [$8d15: ldd    $1,y]
	LOAD_D                                 	| [$8d15: ldd    $1,y]
	GET_DP_ADDRESS	0xf7                    	| [$8d17: std    $f7]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x31c5                     	| [$8d19: inc    $31c5]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$8d1c: tst    ,x]
	tst.b	(a0)                             	| [...]
	jpl	l_8d29                             	| [$8d1e: bpl    $8d29]
	move.b	#0x02,d1                        	| [$8d20: ldb    #$02]
	OP_1_ON_DP_ADDRESS	tst,0xd4             | [$8d22: tst    $d4]
	jeq	l_8d27                             	| [$8d24: beq    $8d27]
	addq.b	#1,d1                           	| [$8d26: incb]
l_8d27:
	OP_W_ON_DP_ADDRESS	move,0xd6,d1         | [$8d27: stb    $d6]
l_8d29:
	jbsr	l_91ac                            	| [$8d29: jsr    $91ac]
	OP_R_ON_DP_ADDRESS	move,0xd5,d0         | [$8d2c: lda    $d5]
	jeq	l_8d58                             	| [$8d2e: beq    $8d58]
	and.b	#0xb0,d0                         	| [$8d30: anda   #$b0]
	cmp.b	#0xb0,d0                         	| [$8d32: cmpa   #$b0]
	jne	l_8d58                             	| [$8d34: bne    $8d58]
	OP_1_ON_DP_ADDRESS	tst,0xfe             | [$8d36: tst    $fe]
	jne	l_8d58                             	| [$8d38: bne    $8d58]
	GET_ADDRESS	0x3100                     	| [$8d3a: lda    $3100]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3130                     	| [$8d3d: ora    $3130]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x3160                     	| [$8d40: ora    $3160]
	or.b	(a0),d0                           	| [...]
	jne	l_8d56                             	| [$8d43: bne    $8d56]
	OP_W_ON_DP_ADDRESS	addq,0xd6,#1         | [$8d45: inc    $d6]
	OP_R_ON_DP_ADDRESS	move,0x2d,d0         | [$8d47: lda    $2d]
	and.b	#0x01,d0                         	| [$8d49: anda   #$01]
	OP_R_ON_DP_ADDRESS	add,0xd5,d0          | [$8d4b: adda   $d5]
	BIT	#0x01,d0                           	| [$8d4d: bita   #$01]
	jeq	l_8d54                             	| [$8d4f: beq    $8d54]
	jbsr	l_9209                            	| [$8d51: jsr    $9209]
l_8d54:
	jra	l_8d58                             	| [$8d54: bra    $8d58]
l_8d56:
	OP_1_ON_DP_ADDRESS	clr,0xd6             | [$8d56: clr    $d6]
l_8d58:
	OP_R_ON_DP_ADDRESS	move,0xeb,d0         | [$8d58: lda    $eb]
	OP_R_ON_DP_ADDRESS	cmp,0xe8,d0          | [$8d5a: cmpa   $e8]
	jcc	l_8d6d                             	| [$8d5c: bcc    $8d6d]
	OP_W_ON_DP_ADDRESS	subq,0xe1,#1         | [$8d5e: dec    $e1]
	jne	l_8d6d                             	| [$8d60: bne    $8d6d]
	move.b	#0x04,d0                        	| [$8d62: lda    #$04]
	OP_1_ON_DP_ADDRESS	tst,0xf0             | [$8d64: tst    $f0]
	jeq	l_8d69                             	| [$8d66: beq    $8d69]
	subq.b	#1,d0                           	| [$8d68: deca]
l_8d69:
	OP_W_ON_DP_ADDRESS	move,0xe1,d0         | [$8d69: sta    $e1]
	OP_W_ON_DP_ADDRESS	addq,0xeb,#1         | [$8d6b: inc    $eb]
l_8d6d:
	jbsr	l_91c7                            	| [$8d6d: jsr    $91c7]
	OP_1_ON_DP_ADDRESS	tst,0xe6             | [$8d70: tst    $e6]
	jeq	l_8d78                             	| [$8d72: beq    $8d78]
	GET_REG_ADDRESS	0,d3                   	| [$8d74: clr    ,y]
	clr.b	(a0)                         	| [...]
	jra	l_8d87                             	| [$8d76: bra    $8d87]
l_8d78:
	GET_REG_ADDRESS	0x2,d2                 	| [$8d78: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x06,d0                         	| [$8d7a: adda   #$06]
	GET_REG_ADDRESS	0x2,d3                 	| [$8d7c: suba   $2,y]
	sub.b	(a0),d0                          	| [...]
	jhi	l_8d81                             	| [$8d7e: bhi    $8d81]
	neg.b	d0                               	| [$8d80: nega]
l_8d81:
	GET_REG_ADDRESS	0,d3                   	| [$8d81: cmpa   ,y]
	cmp.b	(a0),d0                          	| [...]
	jhi	l_8d91                             	| [$8d83: bhi    $8d91]
	GET_REG_ADDRESS	0,d3                   	| [$8d85: sta    ,y]
	move.b	d0,(a0)                         	| [...]
l_8d87:
	OP_R_ON_DP_ADDRESS	move,0xe4,d0         | [$8d87: lda    $e4]
	lsr.b	#1,d0                            	| [$8d89: lsra]
	neg.b	d0                               	| [$8d8a: nega]
	add.b	#0x02,d0                         	| [$8d8b: adda   #$02]
	GET_REG_ADDRESS	0x1,d2                 	| [$8d8d: adda   $1,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x3,d3                 	| [$8d8f: sta    $3,y]
	move.b	d0,(a0)                         	| [...]
l_8d91:
	jra	l_8ccf                             	| [$8d91: jra    $8ccf]
l_8d94:
	OP_1_ON_DP_ADDRESS	tst,0x2d             | [$8d94: tst    $2d]
	jeq	l_8e07                             	| [$8d96: beq    $8e07]
	OP_R_ON_DP_ADDRESS	move,0xf3,d0         | [$8d98: lda    $f3]
	jeq	l_8e07                             	| [$8d9a: beq    $8e07]
	move.b	#0x01,d1                        	| [$8d9c: ldb    #$01]
	cmp.b	#0x01,d0                         	| [$8d9e: cmpa   #$01]
	jeq	l_8da3                             	| [$8da0: beq    $8da3]
	addq.b	#1,d1                           	| [$8da2: incb]
l_8da3:
	OP_1_ON_DP_ADDRESS	tst,0xd7             | [$8da3: tst    $d7]
	jeq	l_8da9                             	| [$8da5: beq    $8da9]
	move.b	#0x03,d1                        	| [$8da7: ldb    #$03]
l_8da9:
	OP_1_ON_DP_ADDRESS	tst,0xd6             | [$8da9: tst    $d6]
	jeq	l_8dd2                             	| [$8dab: beq    $8dd2]
	OP_R_ON_DP_ADDRESS	move,0xd6,d1         | [$8dad: ldb    $d6]
	cmp.b	#0x04,d1                         	| [$8daf: cmpb   #$04]
	jeq	l_8dc0                             	| [$8db1: beq    $8dc0]
	OP_R_ON_DP_ADDRESS	move,0xf0,d1         | [$8db3: ldb    $f0]
	cmp.b	#0x06,d1                         	| [$8db5: cmpb   #$06]
	jcs	l_8dbb                             	| [$8db7: bcs    $8dbb]
	move.b	#0x05,d1                        	| [$8db9: ldb    #$05]
l_8dbb:
	asl.b	#1,d1                            	| [$8dbb: aslb]
	OP_R_ON_DP_ADDRESS	add,0xd6,d1          | [$8dbc: addb   $d6]
	jra	l_8dd0                             	| [$8dbe: bra    $8dd0]
l_8dc0:
	move.b	#0x01,d1                        	| [$8dc0: ldb    #$01]
	OP_1_ON_DP_ADDRESS	tst,0xfe             | [$8dc2: tst    $fe]
	jne	l_8dd0                             	| [$8dc4: bne    $8dd0]
	move.w	#0x3548,d2                      	| [$8dc6: ldx    #$3548]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$8dc9: ldb    $19]
	ABX                                    	| [$8dcb: abx]
	GET_REG_ADDRESS	0,d2                   	| [$8dcc: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	add.b	#0x0e,d1                         	| [$8dce: addb   #$0e]
l_8dd0:
	OP_1_ON_DP_ADDRESS	clr,0xd6             | [$8dd0: clr    $d6]
l_8dd2:
	OP_W_ON_DP_ADDRESS	move,0xc4,d1         | [$8dd2: stb    $c4]
	asl.b	#1,d1                            	| [$8dd4: aslb]
	move.w	#0xed4a,d2                      	| [$8dd5: ldx    #$ed4a]
	ABX                                    	| [$8dd8: abx]
	GET_REG_ADDRESS	0x1,d2                 	| [$8dd9: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_DP_ADDRESS	0x99                    	| [$8ddb: adda   $99]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x99,d0         | [$8dde: sta    $99]
	GET_REG_ADDRESS	0,d2                   	| [$8de0: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x98,d6         | [$8de2: adca   $98]
	OP_W_ON_DP_ADDRESS	move,0x98,d0         | [$8de5: sta    $98]
	move.b	#0x04,d0                        	| [$8de7: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$8de9: sta    $48]
	move.w	#0x3110,d2                      	| [$8deb: ldx    #$3110]
l_8dee:
	GET_REG_ADDRESS	-0x10,d2               	| [$8dee: tst    -$10,x]
	tst.b	(a0)                             	| [...]
	jeq	l_8e00                             	| [$8df0: beq    $8e00]
	GET_REG_ADDRESS	0x1,d2                 	| [$8df2: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x09,d0                         	| [$8df4: cmpa   #$09]
	jeq	l_8dfc                             	| [$8df6: beq    $8dfc]
	GET_REG_ADDRESS	0x1,d2                 	| [$8df8: inc    $1,x]
	addq.b	#1,(a0)                         	| [...]
	jra	l_8e00                             	| [$8dfa: bra    $8e00]
l_8dfc:
	GET_REG_ADDRESS	0x1,d2                 	| [$8dfc: clr    $1,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$8dfe: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
l_8e00:
	add.w	#0x30,d2                         	| [$8e00: leax   $30,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$8e03: dec    $48]
	jne	l_8dee                             	| [$8e05: bne    $8dee]
l_8e07:
	GET_ADDRESS	0x31c3                     	| [$8e07: lda    $31c3]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x31c1                     	| [$8e0a: sta    $31c1]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x31cd                     	| [$8e0d: lda    $31cd]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x31cb                     	| [$8e10: sta    $31cb]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x31c4                     	| [$8e13: tst    $31c4]
	tst.b	(a0)                             	| [...]
	jeq	l_8e32                             	| [$8e16: beq    $8e32]
	GET_ADDRESS	0x31c4                     	| [$8e18: dec    $31c4]
	subq.b	#1,(a0)                         	| [...]
	jne	l_8e32                             	| [$8e1b: bne    $8e32]
	GET_ADDRESS	0x31d4                     	| [$8e1d: ldb    $31d4]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x31c4                     	| [$8e20: stb    $31c4]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x31c5                     	| [$8e23: lda    $31c5]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$8e26: inca]
	cmp.b	#0x03,d0                         	| [$8e27: cmpa   #$03]
	jne	l_8e2f                             	| [$8e29: bne    $8e2f]
	subq.b	#1,d0                           	| [$8e2b: deca]
	GET_ADDRESS	0x31c4                     	| [$8e2c: clr    $31c4]
	clr.b	(a0)                         	| [...]
l_8e2f:
	GET_ADDRESS	0x31c5                     	| [$8e2f: sta    $31c5]
	move.b	d0,(a0)                         	| [...]
l_8e32:
	OP_1_ON_DP_ADDRESS	tst,0xf6             | [$8e32: tst    $f6]
	jeq	l_8e6e                             	| [$8e34: beq    $8e6e]
	move.b	#0x07,d0                        	| [$8e36: lda    #$07]
	GET_DP_ADDRESS	0xf7                    	| [$8e38: ldx    $f7]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x31f1                     	| [$8e3a: stx    $31f1]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.w	#0x31fa,d4                      	| [$8e3d: ldu    #$31fa]
l_8e40:
	GET_REG_ADDRESS	0,d4                   	| [$8e40: stx    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	subq.b	#1,d0                           	| [$8e42: deca]
	jne	l_8e40                             	| [$8e43: bne    $8e40]
	move.b	#0x1e,d0                        	| [$8e45: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0xfa,d0         | [$8e47: sta    $fa]
	moveq	#0,d0                            	| [$8e49: clra]
	moveq	#0,d1                            	| [$8e4a: clrb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x31f6                     	| [$8e4b: std    $31f6]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x31f8                     	| [$8e4e: std    $31f8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,0xd7             | [$8e51: tst    $d7]
	jeq	l_8e61                             	| [$8e53: beq    $8e61]
	move.b	#0xb0,d0                        	| [$8e55: lda    #$b0]
	jbsr	l_4eb3                            	| [$8e57: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$8e5a: lda    #$ff]
	jbsr	l_4eb3                            	| [$8e5c: jsr    $4eb3]
	jra	l_8e6e                             	| [$8e5f: bra    $8e6e]
l_8e61:
	jbsr	queue_sound_event_4ead            	| [$8e61: jsr    queue_sound_event_4ead]
	move.b	#0x10,d0                        	| [$8e64: lda    #$10]
	jbsr	queue_sound_event_4ead            	| [$8e66: jsr    queue_sound_event_4ead]
	move.b	#0x0e,d0                        	| [$8e69: lda    #$0e]
	jbsr	queue_sound_event_4ead            	| [$8e6b: jsr    queue_sound_event_4ead]
l_8e6e:
	OP_1_ON_DP_ADDRESS	tst,0xfa             | [$8e6e: tst    $fa]
	jeq	l_8e74                             	| [$8e70: beq    $8e74]
	OP_W_ON_DP_ADDRESS	subq,0xfa,#1         | [$8e72: dec    $fa]
l_8e74:
	jeq	l_8f19                             	| [$8e74: lbeq   $8f19]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$8e78: lda    $c4]
	subq.b	#1,d0                           	| [$8e7a: deca]
	asl.b	#1,d0                            	| [$8e7b: asla]
	move.w	#0xdca0,d3                      	| [$8e7c: ldy    #$dca0]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$8e80: leay   a,y]
	move.w	#0x30a0,d2                      	| [$8e82: ldx    #$30a0]
	GET_ADDRESS	0x31f1                     	| [$8e85: ldd    $31f1]
	LOAD_D                                 	| [$8e85: ldd    $31f1]
	GET_REG_ADDRESS	0x1,d2                 	| [$8e88: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x3600,d4                      	| [$8e8a: ldu    #$3600]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$8e8d: lda    $c4]
	cmp.b	#0x0e,d0                         	| [$8e8f: cmpa   #$0e]
	jcs	l_8e9b                             	| [$8e91: bcs    $8e9b]
	move.w	#0x364c,d4                      	| [$8e93: ldu    #$364c]
	jbsr	l_a018                            	| [$8e96: jsr    $a018]
	jra	l_8e9e                             	| [$8e99: bra    $8e9e]
l_8e9b:
	jbsr	l_894b                            	| [$8e9b: jsr    $894b]
l_8e9e:
	move.w	#0x31fa,d2                      	| [$8e9e: ldx    #$31fa]
	GET_REG_ADDRESS	0x1,d2                 	| [$8ea1: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x04,d0                         	| [$8ea3: adda   #$04]
	jcc	l_8eb1                             	| [$8ea5: bcc    $8eb1]
	GET_REG_ADDRESS	0,d2                   	| [$8ea7: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$8ea9: clr    $1,x]
	clr.b	(a0)                         	| [...]
	move.b	#0xfe,d0                        	| [$8eab: lda    #$fe]
	GET_REG_ADDRESS	-0x4,d2                	| [$8ead: sta    -$4,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_8eb3                             	| [$8eaf: bra    $8eb3]
l_8eb1:
	GET_REG_ADDRESS	0x1,d2                 	| [$8eb1: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
l_8eb3:
	GET_REG_ADDRESS	0x3,d2                 	| [$8eb3: sta    $3,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$8eb5: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	-0x3,d2                	| [$8eb7: tst    -$3,x]
	tst.b	(a0)                             	| [...]
	jne	l_8ec9                             	| [$8eb9: bne    $8ec9]
	GET_REG_ADDRESS	0x2,d2                 	| [$8ebb: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x04,d0                         	| [$8ebd: adda   #$04]
	jcc	l_8ec3                             	| [$8ebf: bcc    $8ec3]
	GET_REG_ADDRESS	-0x3,d2                	| [$8ec1: inc    -$3,x]
	addq.b	#1,(a0)                         	| [...]
l_8ec3:
	GET_REG_ADDRESS	0x2,d2                 	| [$8ec3: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$8ec5: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$8ec7: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
l_8ec9:
	GET_REG_ADDRESS	-0x2,d2                	| [$8ec9: tst    -$2,x]
	tst.b	(a0)                             	| [...]
	jne	l_8ee3                             	| [$8ecb: bne    $8ee3]
	GET_REG_ADDRESS	0x7,d2                 	| [$8ecd: lda    $7,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x04,d0                         	| [$8ecf: suba   #$04]
	jcc	l_8edd                             	| [$8ed1: bcc    $8edd]
	GET_REG_ADDRESS	0x8,d2                 	| [$8ed3: clr    $8,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x9,d2                 	| [$8ed5: clr    $9,x]
	clr.b	(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$8ed7: lda    #$01]
	GET_REG_ADDRESS	-0x2,d2                	| [$8ed9: sta    -$2,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_8edf                             	| [$8edb: bra    $8edf]
l_8edd:
	GET_REG_ADDRESS	0x9,d2                 	| [$8edd: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
l_8edf:
	GET_REG_ADDRESS	0x7,d2                 	| [$8edf: sta    $7,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$8ee1: sta    $b,x]
	move.b	d0,(a0)                         	| [...]
l_8ee3:
	GET_REG_ADDRESS	-0x1,d2                	| [$8ee3: tst    -$1,x]
	tst.b	(a0)                             	| [...]
	jne	l_8efd                             	| [$8ee5: bne    $8efd]
	GET_REG_ADDRESS	0xa,d2                 	| [$8ee7: lda    $a,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x04,d0                         	| [$8ee9: suba   #$04]
	cmp.b	#0x60,d0                         	| [$8eeb: cmpa   #$60]
	jhi	l_8ef7                             	| [$8eed: bhi    $8ef7]
	GET_REG_ADDRESS	0xc,d2                 	| [$8eef: clr    $c,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$8ef1: clr    $d,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	-0x1,d2                	| [$8ef3: inc    -$1,x]
	addq.b	#1,(a0)                         	| [...]
	jra	l_8ef9                             	| [$8ef5: bra    $8ef9]
l_8ef7:
	GET_REG_ADDRESS	0xc,d2                 	| [$8ef7: sta    $c,x]
	move.b	d0,(a0)                         	| [...]
l_8ef9:
	GET_REG_ADDRESS	0xa,d2                 	| [$8ef9: sta    $a,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$8efb: sta    $e,x]
	move.b	d0,(a0)                         	| [...]
l_8efd:
	move.w	#0xdc94,d3                      	| [$8efd: ldy    #$dc94]
	move.b	#0x08,d0                        	| [$8f01: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$8f03: sta    $2b]
	add.w	#0xf,d2                          	| [$8f05: leax   $f,x]
	move.w	#0x3668,d4                      	| [$8f07: ldu    #$3668]
l_8f0a:
	GET_REG_ADDRESS	-0xf,d2                	| [$8f0a: ldd    -$f,x]
	LOAD_D                                 	| [$8f0a: ldd    -$f,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$8f0c: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_894b                            	| [$8f0e: jsr    $894b]
	addq.w	#0x2,d2                         	| [$8f11: leax   $2,x]
	addq.w	#0x4,d4                         	| [$8f13: leau   $4,u]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$8f15: dec    $2b]
	jne	l_8f0a                             	| [$8f17: bne    $8f0a]
l_8f19:
	OP_1_ON_DP_ADDRESS	tst,0xf1             | [$8f19: tst    $f1]
	jne	l_8f49                             	| [$8f1b: bne    $8f49]
	OP_W_ON_DP_ADDRESS	subq,0x73,#1         | [$8f1d: dec    $73]
	jpl	l_8f49                             	| [$8f1f: bpl    $8f49]
	move.b	#0x05,d0                        	| [$8f21: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x73,d0         | [$8f23: sta    $73]
	OP_W_ON_DP_ADDRESS	subq,chrono_second_72,#1| [$8f25: dec    chrono_second_72]
	jpl	l_8f49                             	| [$8f27: bpl    $8f49]
	OP_1_ON_DP_ADDRESS	tst,chrono_hundredth_second_71| [$8f29: tst    chrono_hundredth_second_71]
	jeq	l_8f35                             	| [$8f2b: beq    $8f35]
	OP_W_ON_DP_ADDRESS	subq,chrono_hundredth_second_71,#1| [$8f2d: dec    chrono_hundredth_second_71]
	move.b	#0x09,d0                        	| [$8f2f: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$8f31: sta    chrono_second_72]
	jra	l_8f49                             	| [$8f33: bra    $8f49]
l_8f35:
	OP_1_ON_DP_ADDRESS	tst,0x70             | [$8f35: tst    $70]
	jne	l_8f41                             	| [$8f37: bne    $8f41]
	OP_1_ON_DP_ADDRESS	clr,chrono_second_72 | [$8f39: clr    chrono_second_72]
	OP_1_ON_DP_ADDRESS	clr,0x73             | [$8f3b: clr    $73]
	OP_W_ON_DP_ADDRESS	addq,0xf1,#1         | [$8f3d: inc    $f1]
	jra	l_8f49                             	| [$8f3f: bra    $8f49]
l_8f41:
	OP_W_ON_DP_ADDRESS	subq,0x70,#1         | [$8f41: dec    $70]
	move.b	#0x09,d0                        	| [$8f43: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d0| [$8f45: sta    chrono_hundredth_second_71]
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$8f47: sta    chrono_second_72]
l_8f49:
	OP_1_ON_DP_ADDRESS	tst,0xf1             | [$8f49: tst    $f1]
	jeq	l_8f5c                             	| [$8f4b: beq    $8f5c]
	GET_ADDRESS	0x3100                     	| [$8f4d: lda    $3100]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3130                     	| [$8f50: ora    $3130]
	or.b	(a0),d0                           	| [...]
	GET_ADDRESS	0x3160                     	| [$8f53: ora    $3160]
	or.b	(a0),d0                           	| [...]
	GET_DP_ADDRESS	0xfa                    	| [$8f56: ora    $fa]
	or.b	(a0),d0                           	| [...]
	jne	l_8f5c                             	| [$8f58: bne    $8f5c]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$8f5a: inc    event_sub_state_28]
l_8f5c:
	OP_1_ON_DP_ADDRESS	tst,0xd7             | [$8f5c: tst    $d7]
	jne	l_8f66                             	| [$8f5e: bne    $8f66]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$8f60: lda    $c4]
	cmp.b	#0x0e,d0                         	| [$8f62: cmpa   #$0e]
	jcs	l_8f6c                             	| [$8f64: bcs    $8f6c]
l_8f66:
	move.w	#0x364c,d4                      	| [$8f66: ldu    #$364c]
	jbsr	l_a018                            	| [$8f69: jsr    $a018]
l_8f6c:
	GET_ADDRESS	0x31c5                     	| [$8f6c: lda    $31c5]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$8f6f: cmpa   #$02]
	jeq	l_8f7e                             	| [$8f71: beq    $8f7e]
	GET_ADDRESS	0x31c4                     	| [$8f73: tst    $31c4]
	tst.b	(a0)                             	| [...]
	jne	l_8f7e                             	| [$8f76: bne    $8f7e]
	GET_ADDRESS	0x31d4                     	| [$8f78: lda    $31d4]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x31c4                     	| [$8f7b: sta    $31c4]
	move.b	d0,(a0)                         	| [...]
l_8f7e:
	rts                                    	| [$8f7e: rts]

l_8f7f:
	OP_1_ON_DP_ADDRESS	clr,0x2c             | [$8f7f: clr    $2c]
	jbsr	l_afaf                            	| [$8f81: jsr    $afaf]
	jbsr	l_913e                            	| [$8f84: jsr    $913e]
	jbsr	l_9076                            	| [$8f87: jsr    $9076]
	OP_R_ON_DP_ADDRESS	move,0xc4,d0         | [$8f8a: lda    $c4]
	cmp.b	#0x0e,d0                         	| [$8f8c: cmpa   #$0e]
	jcs	l_8f93                             	| [$8f8e: bcs    $8f93]
	jbsr	l_a018                            	| [$8f90: jsr    $a018]
l_8f93:
	jbsr	l_7f0a                            	| [$8f93: jsr    $7f0a]
	jbsr	l_5466                            	| [$8f96: jsr    $5466]
	move.w	#0x3508,d2                      	| [$8f99: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$8f9c: ldb    $19]
	ABX                                    	| [$8f9e: abx]
	OP_R_ON_DP_ADDRESS	move,0xfe,d0         | [$8f9f: lda    $fe]
	jne	l_8faa                             	| [$8fa1: bne    $8faa]
	GET_REG_ADDRESS	0,d2                   	| [$8fa3: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x40,d2                	| [$8fa5: inc    $40,x]
	addq.b	#1,(a0)                         	| [...]
	jra	l_8fad                             	| [$8fa8: bra    $8fad]
l_8faa:
	GET_REG_ADDRESS	0x40,d2                	| [$8faa: clr    $40,x]
	clr.b	(a0)                         	| [...]
l_8fad:
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$8fad: inc    $26]
	move.b	#0x08,d0                        	| [$8faf: lda    #$08]
	move.w	#0x3028,d2                      	| [$8fb1: ldx    #$3028]
	jra	l_96eb                             	| [$8fb4: jra    $96eb]
	rts                                    	| [$8fb7: rts]

l_8fb8:
	OP_W_ON_DP_ADDRESS	addq,0xfb,#1         | [$8fb8: inc    $fb]
	OP_R_ON_DP_ADDRESS	move,0xeb,d0         | [$8fba: lda    $eb]
	move.b	#0x10,d1                        	| [$8fbc: ldb    #$10]
	jbsr	multiply_ab                       	| [$8fbe: mul]
	move.w	#0xed6c,d4                      	| [$8fbf: ldu    #$ed6c]
	MAKE_D                                 	| [...]
	add.w	d1,d4                            	| [$8fc2: leau   d,u]
	GET_DP_ADDRESS	0xfc                    	| [$8fc4: ldy    $fc]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xd8,d0         | [$8fc7: lda    $d8]
	and.b	#0x01,d0                         	| [$8fc9: anda   #$01]
	jeq	l_8fd6                             	| [$8fcb: beq    $8fd6]
	addq.w	#0x1,d3                         	| [$8fcd: leay   $1,y]
	GET_DP_ADDRESS	0xfc                    	| [$8fcf: sty    $fc]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0x30d9,d3                      	| [$8fd2: ldy    #$30d9]
l_8fd6:
	OP_W_ON_DP_ADDRESS	addq,0xd8,#1         | [$8fd6: inc    $d8]
	GET_REG_ADDRESS	0,d3                   	| [$8fd8: lda    ,y]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$8fda: anda   #$03]
	move.b	#0x04,d1                        	| [$8fdc: ldb    #$04]
	jbsr	multiply_ab                       	| [$8fde: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$8fdf: leau   b,u]
	GET_REG_ADDRESS	0,d4                   	| [$8fe1: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.b	d0,d1                           	| [$8fe3: tfr    a,b]
                                         | [$8fe5: lsra]
                                         | [$8fe6: lsra]
                                         | [$8fe7: lsra]
	lsr.b	#4,d0                            	| [$8fe8: lsra]
	and.b	#0x0f,d1                         	| [$8fe9: andb   #$0f]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x10,d2                	| [$8feb: std    $10,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x12,d2                	| [$8fee: clr    $12,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x13,d2                	| [$8ff1: clr    $13,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$8ff4: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x24,d2                	| [$8ff6: sta    $24,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$8ff9: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.b	#0x15,d1                        	| [$8ffb: ldb    #$15]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$8ffd: std    $8,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$8fff: lda    ,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$9001: sta    $3,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x1e,d0                        	| [$9003: lda    #$1e]
	OP_1_ON_DP_ADDRESS	tst,0xed             | [$9005: tst    $ed]
	jne	l_900b                             	| [$9007: bne    $900b]
	move.b	#0x3c,d0                        	| [$9009: lda    #$3c]
l_900b:
	OP_W_ON_DP_ADDRESS	move,0x2f,d0         | [$900b: sta    $2f]
	OP_W_ON_DP_ADDRESS	addq,0xed,#1         | [$900d: inc    $ed]
	GET_REG_ADDRESS	0,d3                   	| [$900f: lda    ,y]
	move.b	(a0),d0                         	| [...]
                                         | [$9011: lsra]
                                         | [$9012: lsra]
	lsr.b	#3,d0                            	| [$9013: lsra]
	move.b	d0,d1                           	| [$9014: tfr    a,b]
	lsr.b	#1,d1                            	| [$9016: lsrb]
	OP_W_ON_DP_ADDRESS	move,0xd9,d1         | [$9017: stb    $d9]
	and.b	#0x01,d0                         	| [$9019: anda   #$01]
	or.b	#0x02,d0                          	| [$901b: ora    #$02]
	OP_R_ON_DP_ADDRESS	move,0xff,d1         | [$901d: ldb    $ff]
	cmp.b	#0x07,d1                         	| [$901f: cmpb   #$07]
	jcs	l_9057                             	| [$9021: bcs    $9057]
	OP_R_ON_DP_ADDRESS	move,0xfb,d1         | [$9023: ldb    $fb]
	cmp.b	#0x0a,d1                         	| [$9025: cmpb   #$0a]
	jcs	l_9057                             	| [$9027: bcs    $9057]
	OP_1_ON_DP_ADDRESS	tst,0xd3             | [$9029: tst    $d3]
	jne	l_9031                             	| [$902b: bne    $9031]
	OP_W_ON_DP_ADDRESS	addq,0xd3,#1         | [$902d: inc    $d3]
	or.b	#0x90,d0                          	| [$902f: ora    #$90]
l_9031:
	OP_R_ON_DP_ADDRESS	move,0xff,d1         | [$9031: ldb    $ff]
	cmp.b	#0x11,d1                         	| [$9033: cmpb   #$11]
	jcs	l_9057                             	| [$9035: bcs    $9057]
	OP_R_ON_DP_ADDRESS	move,0xfb,d1         | [$9037: ldb    $fb]
	cmp.b	#0x14,d1                         	| [$9039: cmpb   #$14]
	jcs	l_9057                             	| [$903b: bcs    $9057]
	OP_1_ON_DP_ADDRESS	tst,0xd4             | [$903d: tst    $d4]
	jne	l_9045                             	| [$903f: bne    $9045]
	OP_W_ON_DP_ADDRESS	addq,0xd4,#1         | [$9041: inc    $d4]
	or.b	#0xa0,d0                          	| [$9043: ora    #$a0]
l_9045:
	GET_REG_ADDRESS	0,d2                   	| [$9045: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xfb,d1         | [$9047: ldb    $fb]
	cmp.b	#0x1e,d1                         	| [$9049: cmpb   #$1e]
	jne	l_9057                             	| [$904b: bne    $9057]
	OP_1_ON_DP_ADDRESS	tst,0xfe             | [$904d: tst    $fe]
	jne	l_9057                             	| [$904f: bne    $9057]
	OP_W_ON_DP_ADDRESS	addq,0xd5,#1         | [$9051: inc    $d5]
	GET_REG_ADDRESS	0,d2                   	| [$9053: lda    ,x]
	move.b	(a0),d0                         	| [...]
	or.b	#0xb0,d0                          	| [$9055: ora    #$b0]
l_9057:
	GET_REG_ADDRESS	0,d2                   	| [$9057: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x10,d1                        	| [$9059: ldb    #$10]
	GET_REG_ADDRESS	0,d2                   	| [$905b: lda    ,x]
	move.b	(a0),d0                         	| [...]
	BIT	#0x01,d0                           	| [$905d: bita   #$01]
	jeq	l_9063                             	| [$905f: beq    $9063]
	move.b	#0xf0,d1                        	| [$9061: ldb    #$f0]
l_9063:
	GET_REG_ADDRESS	0x2,d2                 	| [$9063: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x6,d2                 	| [$9065: stb    $6,x]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x5e,d1                        	| [$9067: ldb    #$5e]
	BIT	#0x01,d0                           	| [$9069: bita   #$01]
	jeq	l_906f                             	| [$906b: beq    $906f]
	sub.b	#0x05,d1                         	| [$906d: subb   #$05]
l_906f:
	GET_REG_ADDRESS	0x1,d2                 	| [$906f: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
	sub.b	#0x10,d1                         	| [$9071: subb   #$10]
	GET_REG_ADDRESS	0x5,d2                 	| [$9073: stb    $5,x]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$9075: rts]

l_9076:
	move.w	#0x2594,d2                      	| [$9076: ldx    #$2594]
	move.w	#0x3070,d4                      	| [$9079: ldu    #$3070]
	move.b	#0x02,d0                        	| [$907c: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$907e: sta    $49]
l_9080:
	move.b	#0x02,d0                        	| [$9080: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$9082: sta    $48]
	moveq	#0,d0                            	| [$9084: clra]
	jbsr	l_a1df                            	| [$9085: jsr    $a1df]
	addq.w	#0x1,d2                         	| [$9088: leax   $1,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$908a: dec    $49]
	jne	l_9080                             	| [$908c: bne    $9080]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$908e: tst    game_playing_00]
	jeq	l_90cb                             	| [$9090: beq    $90cb]
l_9092:
	move.b	#0x02,d1                        	| [$9092: ldb    #$02]
	move.w	#0x3098,d2                      	| [$9094: ldx    #$3098]
	move.w	#0x309b,d4                      	| [$9097: ldu    #$309b]
l_909a:
	GET_REG_ADDRESS	0,d2                   	| [$909a: lda    ,x]
	move.b	(a0),d0                         	| [...]
                                         | [$909c: lsra]
                                         | [$909d: lsra]
                                         | [$909e: lsra]
	lsr.b	#4,d0                            	| [$909f: lsra]
	GET_REG_ADDRESS	0,d4                   	| [$90a0: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$90a2: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	and.b	#0x0f,d0                         	| [$90a4: anda   #$0f]
	GET_REG_ADDRESS	0,d4                   	| [$90a6: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$90a8: decb]
	jne	l_909a                             	| [$90a9: bne    $909a]
	move.w	#0x269a,d2                      	| [$90ab: ldx    #$269a]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$90ae: lda    $6a]
	move.b	#0x40,d1                        	| [$90b0: ldb    #$40]
	jbsr	multiply_ab                       	| [$90b2: mul]
	ABX                                    	| [$90b3: abx]
	move.w	#0x309b,d4                      	| [$90b4: ldu    #$309b]
	move.b	#0x05,d1                        	| [$90b7: ldb    #$05]
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$90b9: clr    $50]
l_90bb:
	GET_REG_ADDRESS	0,d4                   	| [$90bb: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$90bd: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$90c0: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$90c4: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$90c6: decb]
	jne	l_90bb                             	| [$90c7: bne    $90bb]
	GET_REG_UNCHECKED_ADDRESS	-0x1,d2                	| [$90c9: clr    -$1,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_90cb:
	rts                                    	| [$90cb: rts]

l_90cc:
	move.b	#0x01,d0                        	| [$90cc: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$90ce: sta    $2e]
	move.w	#0x360c,d4                      	| [$90d0: ldu    #$360c]
l_90d3:
	OP_R_ON_DP_ADDRESS	move,0x2e,d0         | [$90d3: lda    $2e]
	move.b	#0x0a,d1                        	| [$90d5: ldb    #$0a]
	jbsr	multiply_ab                       	| [$90d7: mul]
	move.w	#0x31c0,d2                      	| [$90d8: ldx    #$31c0]
	ABX                                    	| [$90db: abx]
	GET_ADDRESS	0x31c6                     	| [$90dc: lda    $31c6]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xe4,d0         | [$90df: sta    $e4]
	GET_REG_ADDRESS	0x1,d2                 	| [$90e1: ldd    $1,x]
	LOAD_D                                 	| [$90e1: ldd    $1,x]
	GET_DP_ADDRESS	0xa1                    	| [$90e3: std    $a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x30a0,d2                      	| [$90e5: ldx    #$30a0]
	move.w	#0xdc9c,d3                      	| [$90e8: ldy    #$dc9c]
	GET_ADDRESS	0x31c5                     	| [$90ec: tst    $31c5]
	tst.b	(a0)                             	| [...]
	jne	l_90f5                             	| [$90ef: bne    $90f5]
	move.w	#0xdc9a,d3                      	| [$90f1: ldy    #$dc9a]
l_90f5:
	jbsr	l_894b                            	| [$90f5: jsr    $894b]
	addq.w	#0x4,d4                         	| [$90f8: leau   $4,u]
	GET_REG_ADDRESS	0x2,d2                 	| [$90fa: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0xe4,d0          | [$90fc: adda   $e4]
	sub.b	#0x10,d0                         	| [$90fe: suba   #$10]
	GET_REG_ADDRESS	0x2,d2                 	| [$9100: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$9102: jsr    $894b]
	GET_REG_ADDRESS	0,d4                   	| [$9105: lda    ,u]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x40,d0                         	| [$9107: eora   #$40]
	GET_REG_ADDRESS	0,d4                   	| [$9109: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$910b: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x10,d0                         	| [$910d: suba   #$10]
	GET_REG_ADDRESS	0x1,d2                 	| [$910f: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x4,d4                         	| [$9111: leau   $4,u]
	GET_REG_ADDRESS	0x1,d2                 	| [$9113: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0xe4,d0          | [$9115: adda   $e4]
	GET_REG_ADDRESS	0x1,d2                 	| [$9117: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$9119: jsr    $894b]
	GET_REG_ADDRESS	0,d4                   	| [$911c: lda    ,u]
	move.b	(a0),d0                         	| [...]
	eor.b	#0xc0,d0                         	| [$911e: eora   #$c0]
	GET_REG_ADDRESS	0,d4                   	| [$9120: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x4,d4                         	| [$9122: leau   $4,u]
	GET_REG_ADDRESS	0x2,d2                 	| [$9124: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0xe4,d0          | [$9126: suba   $e4]
	add.b	#0x10,d0                         	| [$9128: adda   #$10]
	GET_REG_ADDRESS	0x2,d2                 	| [$912a: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$912c: jsr    $894b]
	GET_REG_ADDRESS	0,d4                   	| [$912f: lda    ,u]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x80,d0                         	| [$9131: eora   #$80]
	GET_REG_ADDRESS	0,d4                   	| [$9133: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x4,d4                         	| [$9135: leau   $4,u]
	OP_W_ON_DP_ADDRESS	subq,0x2e,#1         | [$9137: dec    $2e]
	jmi	l_913e                             	| [$9139: bmi    $913e]
	jra	l_90d3                             	| [$913b: jra    $90d3]
l_913e:
	move.w	#0x30a0,d2                      	| [$913e: ldx    #$30a0]
	move.w	#0x362c,d4                      	| [$9141: ldu    #$362c]
	move.b	#0x40,d0                        	| [$9144: ldd    #$4080]
	move.w	#0x4080,d1                      	| [$9144: ldd    #$4080]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9147: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xdc80,d3                      	| [$9149: ldy    #$dc80]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$914d: lda    event_sub_state_28]
	cmp.b	#0x03,d0                         	| [$914f: cmpa   #$03]
	jeq	l_9162                             	| [$9151: beq    $9162]
	OP_1_ON_DP_ADDRESS	tst,0xe5             | [$9153: tst    $e5]
	jeq	l_9162                             	| [$9155: beq    $9162]
	move.b	#0x04,d1                        	| [$9157: ldb    #$04]
	OP_1_ON_DP_ADDRESS	tst,0xde             | [$9159: tst    $de]
	jeq	l_915e                             	| [$915b: beq    $915e]
	asl.b	#1,d1                            	| [$915d: aslb]
l_915e:
	OP_W_ON_DP_ADDRESS	subq,0xe5,#1         | [$915e: dec    $e5]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$9160: leay   b,y]
l_9162:
	jbsr	l_be6d                            	| [$9162: jsr    $be6d]
	add.w	#0x10,d4                         	| [$9165: leau   $10,u]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$9168: lda    $2c]
	jeq	l_9186                             	| [$916a: beq    $9186]
	OP_W_ON_DP_ADDRESS	subq,0x2c,#1         | [$916c: dec    $2c]
	jeq	l_9186                             	| [$916e: beq    $9186]
	GET_REG_ADDRESS	0x1,d2                 	| [$9170: ldd    $1,x]
	LOAD_D                                 	| [$9170: ldd    $1,x]
	add.w	#0x1e02,d1                       	| [$9172: addd   #$1e02]
	MAKE_A                                 	| [...]
	OP_1_ON_DP_ADDRESS	tst,0xde             | [$9175: tst    $de]
	jeq	l_917b                             	| [$9177: beq    $917b]
	sub.b	#0x18,d1                         	| [$9179: subb   #$18]
l_917b:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$917b: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xdcd6,d3                      	| [$917d: ldy    #$dcd6]
	jbsr	l_894b                            	| [$9181: jsr    $894b]
	addq.w	#0x4,d4                         	| [$9184: leau   $4,u]
l_9186:
	rts                                    	| [$9186: rts]

l_9187:
	OP_W_ON_DP_ADDRESS	addq,0xfe,#1         | [$9187: inc    $fe]
	OP_1_ON_DP_ADDRESS	clr,0xff             | [$9189: clr    $ff]
	OP_R_ON_DP_ADDRESS	move,0xeb,d1         | [$918b: ldb    $eb]
	GET_ADDRESS	0x31d1                     	| [$918d: subb   $31d1]
	sub.b	(a0),d1                          	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0xe7,d1          | [$9190: cmpb   $e7]
	jgt	l_9196                             	| [$9192: bgt    $9196]
	OP_R_ON_DP_ADDRESS	move,0xe7,d1         | [$9194: ldb    $e7]
l_9196:
	OP_W_ON_DP_ADDRESS	move,0xeb,d1         | [$9196: stb    $eb]
	GET_ADDRESS	0x31c4                     	| [$9198: tst    $31c4]
	tst.b	(a0)                             	| [...]
	jne	l_91a3                             	| [$919b: bne    $91a3]
	GET_ADDRESS	0x31d4                     	| [$919d: ldb    $31d4]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x31c4                     	| [$91a0: stb    $31c4]
	move.b	d1,(a0)                         	| [...]
l_91a3:
	GET_ADDRESS	0x31d5                     	| [$91a3: ldb    $31d5]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x31c6                     	| [$91a6: stb    $31c6]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x31d0                     	| [$91a9: stb    $31d0]
	move.b	d1,(a0)                         	| [...]
l_91ac:
	OP_1_ON_DP_ADDRESS	tst,0xd5             | [$91ac: tst    $d5]
	jeq	l_91b4                             	| [$91ae: beq    $91b4]
	GET_REG_ADDRESS	0,d2                   	| [$91b0: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xd5,d0         | [$91b2: sta    $d5]
l_91b4:
	OP_1_ON_DP_ADDRESS	tst,0xd7             | [$91b4: tst    $d7]
	jne	l_91ba                             	| [$91b6: bne    $91ba]
	GET_REG_ADDRESS	0,d2                   	| [$91b8: clr    ,x]
	clr.b	(a0)                         	| [...]
l_91ba:
	moveq	#0,d0                            	| [$91ba: clra]
	moveq	#0,d1                            	| [$91bb: clrb]
	GET_REG_ADDRESS	0x4,d2                 	| [$91bc: clr    $4,x]
	clr.b	(a0)                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$91be: std    $8,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xa,d2                 	| [$91c0: std    $a,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xc,d2                 	| [$91c2: std    $c,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$91c4: std    $e,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$91c6: rts]

l_91c7:
	OP_1_ON_DP_ADDRESS	clr,0xe6             | [$91c7: clr    $e6]
	GET_REG_ADDRESS	0x2,d3                 	| [$91c9: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x03,d0                         	| [$91cb: suba   #$03]
	GET_REG_ADDRESS	0x2,d2                 	| [$91cd: cmpa   $2,x]
	cmp.b	(a0),d0                          	| [...]
	jhi	l_91eb                             	| [$91cf: bhi    $91eb]
	GET_REG_ADDRESS	0x6,d3                 	| [$91d1: adda   $6,y]
	add.b	(a0),d0                          	| [...]
	add.b	#0x04,d0                         	| [$91d3: adda   #$04]
	GET_REG_ADDRESS	0x2,d2                 	| [$91d5: cmpa   $2,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_91eb                             	| [$91d7: bcs    $91eb]
	GET_REG_ADDRESS	0x1,d3                 	| [$91d9: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x03,d0                         	| [$91db: suba   #$03]
	GET_REG_ADDRESS	0x1,d2                 	| [$91dd: cmpa   $1,x]
	cmp.b	(a0),d0                          	| [...]
	jhi	l_91eb                             	| [$91df: bhi    $91eb]
	GET_REG_ADDRESS	0x6,d3                 	| [$91e1: adda   $6,y]
	add.b	(a0),d0                          	| [...]
	add.b	#0x06,d0                         	| [$91e3: adda   #$06]
	GET_REG_ADDRESS	0x1,d2                 	| [$91e5: cmpa   $1,x]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_91eb                             	| [$91e7: bcs    $91eb]
	OP_W_ON_DP_ADDRESS	addq,0xe6,#1         | [$91e9: inc    $e6]
l_91eb:
	rts                                    	| [$91eb: rts]

l_91ec:
	GET_REG_ADDRESS	0x1,d2                 	| [$91ec: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0xae,d0          | [$91ee: cmpa   $ae]
	jhi	l_9208                             	| [$91f0: bhi    $9208]
	OP_R_ON_DP_ADDRESS	cmp,0xaf,d0          | [$91f2: cmpa   $af]
	jcs	l_9208                             	| [$91f4: bcs    $9208]
	GET_REG_ADDRESS	0x8,d2                 	| [$91f6: lda    $8,x]
	move.b	(a0),d0                         	| [...]
	tst.b	d1                               	| [$91f8: tstb]
	jne	l_9202                             	| [$91f9: bne    $9202]
	cmp.b	#0x30,d0                         	| [$91fb: cmpa   #$30]
	jhi	l_9201                             	| [$91fd: bhi    $9201]
	GET_REG_ADDRESS	0x8,d2                 	| [$91ff: inc    $8,x]
	addq.b	#1,(a0)                         	| [...]
l_9201:
	rts                                    	| [$9201: rts]

l_9202:
	cmp.b	#0x03,d0                         	| [$9202: cmpa   #$03]
	jls	l_9208                             	| [$9204: bls    $9208]
	GET_REG_ADDRESS	0x8,d2                 	| [$9206: dec    $8,x]
	subq.b	#1,(a0)                         	| [...]
l_9208:
	rts                                    	| [$9208: rts]

l_9209:
	move.l	d2,-(sp)                        	| [$9209: pshs   x]
	move.w	#0x3160,d2                      	| [$920b: ldx    #$3160]
	move.b	#0x02,d0                        	| [$920e: lda    #$02]
	GET_ADDRESS	0x3124                     	| [$9210: sta    $3124]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9213: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d0                           	| [$9215: deca]
	GET_ADDRESS	0x3123                     	| [$9216: sta    $3123]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xd7,#1         | [$9219: inc    $d7]
	move.b	#0xb0,d0                        	| [$921b: ldd    #$b0f0]
	move.w	#0xb0f0,d1                      	| [$921b: ldd    #$b0f0]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$921e: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xee7c,d2                      	| [$9220: ldx    #$ee7c]
	GET_ADDRESS	0x3120                     	| [$9223: stx    $3120]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xd5             | [$9226: clr    $d5]
	OP_W_ON_DP_ADDRESS	addq,0xdb,#1         | [$9228: inc    $db]
	movem.l	(sp)+,d2                       	| [$922a: puls   x,pc]
	rts                                    	| [...]
l_922c:
	move.w	#0x3160,d2                      	| [$922c: ldx    #$3160]
	GET_REG_ADDRESS	0x1,d2                 	| [$922f: ldd    $1,x]
	LOAD_D                                 	| [$922f: ldd    $1,x]
	sub.b	#0x02,d1                         	| [$9231: subb   #$02]
	cmp.b	#0x10,d1                         	| [$9233: cmpb   #$10]
	jhi	l_9239                             	| [$9235: bhi    $9239]
	GET_REG_ADDRESS	0,d2                   	| [$9237: clr    ,x]
	clr.b	(a0)                         	| [...]
l_9239:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9239: lda    $0f]
	and.b	#0x01,d0                         	| [$923b: anda   #$01]
	jeq	l_9253                             	| [$923d: beq    $9253]
	GET_REG_ADDRESS	0x1,d2                 	| [$923f: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3123                     	| [$9241: adda   $3123]
	add.b	(a0),d0                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9244: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3124                     	| [$9246: dec    $3124]
	subq.b	#1,(a0)                         	| [...]
	jne	l_9253                             	| [$9249: bne    $9253]
	move.b	#0x38,d0                        	| [$924b: lda    #$38]
	GET_ADDRESS	0x3124                     	| [$924d: sta    $3124]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3123                     	| [$9250: neg    $3123]
	neg.b	(a0)                             	| [...]
l_9253:
	move.w	#0x3648,d4                      	| [$9253: ldu    #$3648]
	GET_ADDRESS	0x3120                     	| [$9256: ldy    $3120]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$925a: lda    $0f]
	and.b	#0x03,d0                         	| [$925c: anda   #$03]
	jne	l_9270                             	| [$925e: bne    $9270]
	addq.w	#0x2,d3                         	| [$9260: leay   $2,y]
	GET_REG_ADDRESS	0,d3                   	| [$9262: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$9264: cmpa   #$ff]
	jne	l_926c                             	| [$9266: bne    $926c]
	move.w	#0xee7c,d3                      	| [$9268: ldy    #$ee7c]
l_926c:
	GET_ADDRESS	0x3120                     	| [$926c: sty    $3120]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_9270:
	jbsr	l_894b                            	| [$9270: jsr    $894b]
	jra	l_8ccb                             	| [$9273: jra    $8ccb]
l_9276:
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$9276: tst    game_playing_00]
	jne	l_927d                             	| [$9278: bne    $927d]
	jra	l_a37f                             	| [$927a: jra    $a37f]
l_927d:
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$927d: lda    $24]
	asl.b	#1,d0                            	| [$927f: asla]
	
	.ifndef	RELEASE
	move.w	#0xee85,d2
	.endif
	lea	table_ee85,a2                  	| [$9280: ldx   #table_ee85]
	JSR_A_INDEXED	A2                   	| [$9283: jsr    [a,x]] [jump_table]
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$9285: lda    $24]
	cmp.b	#0x01,d0                         	| [$9287: cmpa   #$01]
	jls	l_928e                             	| [$9289: bls    $928e]
	jra	l_5869                             	| [$928b: jra    $5869]
l_928e:
	rts                                    	| [$928e: rts]

l_928f:
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$928f: inc    $24]
	moveq	#0,d0                            	| [$9291: clra]
	moveq	#0,d1                            	| [$9292: clrb]
	jbsr	queue_event_4e9a                  	| [$9293: jsr    queue_event_4e9a]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$9296: clr    $19]
	GET_ADDRESS	flip_screen_set_1480       	| [$9298: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0x02             | [$929b: clr    $02]
	rts                                    	| [$929d: rts]

l_929e:
	OP_1_ON_DP_ADDRESS	tst,0x26             | [$929e: tst    $26]
	jne	l_9351                             	| [$92a0: lbne   $9351]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$92a4: inc    $26]
	move.w	#0x348c,d2                      	| [$92a6: ldx    #$348c]
	move.w	#0x3474,d4                      	| [$92a9: ldu    #$3474]
	move.b	#0x04,d0                        	| [$92ac: lda    #$04]
l_92ae:
	move.b	#0x03,d1                        	| [$92ae: ldb    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$92b0: stb    $48]
l_92b2:
	subq.w	#1,d2                           	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$92b2: ldb    ,-x]
	move.b	(a0),d1                         	| [...]
	subq.w	#1,d4                           	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$92b4: stb    ,-u]
	move.b	d1,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$92b6: dec    $48]
	jne	l_92b2                             	| [$92b8: bne    $92b2]
	subq.w	#1,d4                           	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$92ba: clr    ,-u]
	clr.b	(a0)                         	| [...]
	subq.w	#1,d4                           	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$92bc: sta    ,-u]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d0                           	| [$92be: deca]
	jne	l_92ae                             	| [$92bf: bne    $92ae]
	move.w	#0x3440,d4                      	| [$92c1: ldu    #$3440]
	OP_R_ON_DP_ADDRESS	move,0x01,d1         | [$92c4: ldb    $01]
	OP_W_ON_DP_ADDRESS	move,0x56,d1         | [$92c6: stb    $56]
l_92c8:
	OP_R_ON_DP_ADDRESS	move,0x01,d1         | [$92c8: ldb    $01]
	OP_W_ON_DP_ADDRESS	move,0x55,d1         | [$92ca: stb    $55]
	move.w	#0x3460,d2                      	| [$92cc: ldx    #$3460]
	moveq	#0,d0                            	| [$92cf: clra]
	moveq	#0,d1                            	| [$92d0: clrb]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xf0                    	| [$92d1: std    $f0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xf2                    	| [$92d3: std    $f2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf4,d0         | [$92d5: sta    $f4]
l_92d7:
	GET_REG_ADDRESS	0x1,d2                 	| [$92d7: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$92d9: cmpa   #$ff]
	jeq	l_92ee                             	| [$92db: beq    $92ee]
	OP_R_ON_DP_ADDRESS	move,0xf1,d1         | [$92dd: ldb    $f1]
	GET_REG_ADDRESS	0x2,d2                 	| [$92df: cmpb   $2,x]
	cmp.b	(a0),d1                          	| [...]
	jhi	l_92ee                             	| [$92e1: bhi    $92ee]
	jcs	l_92ec                             	| [$92e3: bcs    $92ec]
	GET_DP_ADDRESS	0xf2                    	| [$92e5: ldd    $f2]
	LOAD_D                                 	| [$92e5: ldd    $f2]
	GET_REG_ADDRESS	0x3,d2                 	| [$92e7: cmpd   $3,x]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcc	l_92ee                             	| [$92ea: bcc    $92ee]
l_92ec:
	jbsr	l_9344                            	| [$92ec: bsr    $9344]
l_92ee:
	addq.w	#0x5,d2                         	| [$92ee: leax   $5,x]
	OP_W_ON_DP_ADDRESS	subq,0x55,#1         | [$92f0: dec    $55]
	jpl	l_92d7                             	| [$92f2: bpl    $92d7]
	OP_1_ON_DP_ADDRESS	tst,0xf4             | [$92f4: tst    $f4]
	jne	l_9303                             	| [$92f6: bne    $9303]
	move.w	#0x345b,d2                      	| [$92f8: ldx    #$345b]
l_92fb:
	addq.w	#0x5,d2                         	| [$92fb: leax   $5,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$92fd: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	jmi	l_92fb                             	| [$92ff: bmi    $92fb]
	jbsr	l_9344                            	| [$9301: bsr    $9344]
l_9303:
	GET_DP_ADDRESS	0xf1                    	| [$9303: ldd    $f1]
	LOAD_D                                 	| [$9303: ldd    $f1]
	GET_REG_ADDRESS	0,d4                   	| [$9305: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0xf3                    	| [$9307: ldd    $f3]
	LOAD_D                                 	| [$9307: ldd    $f3]
	GET_REG_ADDRESS	0,d4                   	| [$9309: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	subq.b	#1,d1                           	| [$930b: decb]
	move.b	#0x05,d0                        	| [$930c: lda    #$05]
	jbsr	multiply_ab                       	| [$930e: mul]
	move.w	#0x3460,d2                      	| [$930f: ldx    #$3460]
	ABX                                    	| [$9312: abx]
	move.b	#0xff,d0                        	| [$9313: lda    #$ff]
	GET_REG_ADDRESS	0x1,d2                 	| [$9315: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x56,#1         | [$9317: dec    $56]
	jpl	l_92c8                             	| [$9319: bpl    $92c8]
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$931b: lda    $01]
	OP_W_ON_DP_ADDRESS	move,0x55,d0         | [$931d: sta    $55]
	move.w	#0x3400,d2                      	| [$931f: ldx    #$3400]
	move.w	#0x3440,d3                      	| [$9322: ldy    #$3440]
l_9326:
	GET_REG_ADDRESS	0,d3                   	| [$9326: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$9326: ldd    ,y++]
	GET_REG_ADDRESS	0,d2                   	| [$9328: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$932a: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$932a: ldd    ,y++]
	GET_REG_ADDRESS	0,d2                   	| [$932c: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$932e: stb    $3,x]
	move.b	d1,(a0)                         	| [...]
	move.w	#0x335d,d4                      	| [$9330: ldu    #$335d]
	move.b	#0x03,d0                        	| [$9333: lda    #$03]
	jbsr	multiply_ab                       	| [$9335: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$9336: leau   b,u]
	move.b	#0x03,d0                        	| [$9338: lda    #$03]
	jbsr	l_96ca                            	| [$933a: jsr    $96ca]
	addq.w	#0x1,d2                         	| [$933d: leax   $1,x]
	OP_W_ON_DP_ADDRESS	subq,0x55,#1         | [$933f: dec    $55]
	jpl	l_9326                             	| [$9341: bpl    $9326]
	rts                                    	| [$9343: rts]

l_9344:
	GET_REG_ADDRESS	0,d2                   	| [$9344: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf4,d0         | [$9346: sta    $f4]
	GET_REG_ADDRESS	0x2,d2                 	| [$9348: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf1,d1         | [$934a: stb    $f1]
	GET_REG_ADDRESS	0x3,d2                 	| [$934c: ldd    $3,x]
	LOAD_D                                 	| [$934c: ldd    $3,x]
	GET_DP_ADDRESS	0xf2                    	| [$934e: std    $f2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$9350: rts]

l_9351:
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$9351: lda    $01]
	move.b	#0x14,d1                        	| [$9353: ldb    #$14]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x58                    	| [$9355: std    $58]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	addq.b	#1,d0                           	| [$9357: inca]
	OP_W_ON_DP_ADDRESS	move,0x54,d0         | [$9358: sta    $54]
	jbsr	l_93ec                            	| [$935a: jsr    $93ec]
	move.w	#0x3dde,d2                      	| [$935d: ldx    #$3dde]
	GET_DP_ADDRESS	0x56                    	| [$9360: stx    $56]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	sub.w	#0x3c,d2                         	| [$9362: leax   -$3c,x]
	OP_R_ON_DP_ADDRESS	move,0x54,d0         | [$9365: lda    $54]
	move.b	#0x06,d1                        	| [$9367: ldb    #$06]
	jbsr	multiply_ab                       	| [$9369: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	move.w	d2,d4                           	| [$936a: leau   b,x]
	add.w	d6,d4                            	| [$936a: leau   b,x]
l_936c:
	GET_DP_ADDRESS	0x5a                    	| [$936c: ldd    $5a]
	LOAD_D                                 	| [$936c: ldd    $5a]
	GET_REG_ADDRESS	0,d2                   	| [$936e: cmpd   ,x]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jhi	l_939c                             	| [$9371: bhi    $939c]
	jcs	l_937c                             	| [$9373: bcs    $937c]
	GET_DP_ADDRESS	0x5b                    	| [$9375: ldd    $5b]
	LOAD_D                                 	| [$9375: ldd    $5b]
	GET_REG_ADDRESS	0x1,d2                 	| [$9377: cmpd   $1,x]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcc	l_939c                             	| [$937a: bcc    $939c]
l_937c:
	GET_DP_ADDRESS	0x5a                    	| [$937c: ldd    $5a]
	LOAD_D                                 	| [$937c: ldd    $5a]
	GET_REG_ADDRESS	0,d4                   	| [$937e: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x5c                    	| [$9380: ldd    $5c]
	LOAD_D                                 	| [$9380: ldd    $5c]
	GET_REG_ADDRESS	0x2,d4                 	| [$9382: std    $2,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x5e                    	| [$9384: ldd    $5e]
	LOAD_D                                 	| [$9384: ldd    $5e]
	GET_REG_ADDRESS	0x4,d4                 	| [$9386: std    $4,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	subq.w	#0x6,d4                         	| [$9388: leau   -$6,u]
	OP_R_ON_DP_ADDRESS	move,0x55,d0         | [$938a: lda    $55]
	jbsr	l_9406                            	| [$938c: jsr    $9406]
	OP_W_ON_DP_ADDRESS	subq,0x54,#1         | [$938f: dec    $54]
	jeq	l_93e7                             	| [$9391: beq    $93e7]
	OP_R_ON_DP_ADDRESS	move,0x54,d0         | [$9393: lda    $54]
	jbsr	l_93ec                            	| [$9395: bsr    $93ec]
	jbsr	l_941d                            	| [$9397: jsr    $941d]
	jra	l_936c                             	| [$939a: bra    $936c]
l_939c:
	PUSH_SR
	GET_REG_ADDRESS	0,d2                   	| [$939c: ldd    ,x]
	LOAD_D                                 	| [$939c: ldd    ,x]
	GET_REG_ADDRESS	0,d4                   	| [$939e: std    ,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$93a0: ldd    $2,x]
	LOAD_D                                 	| [$93a0: ldd    $2,x]
	GET_REG_ADDRESS	0x2,d4                 	| [$93a2: std    $2,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$93a4: ldd    $4,x]
	LOAD_D                                 	| [$93a4: ldd    $4,x]
	GET_REG_ADDRESS	0x4,d4                 	| [$93a6: std    $4,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	subq.w	#0x6,d4                         	| [$93a8: leau   -$6,u]
	subq.w	#0x6,d2                         	| [$93aa: leax   -$6,x]
	POP_SR
	jcs	l_93b5                             	| [$93ac: bcs    $93b5]
	jbsr	l_941d                            	| [$93ae: bsr    $941d]
	cmp.w	#0x38e6,d2                       	| [$93b0: cmpx   #$38e6]
	jcc	l_936c                             	| [$93b3: bcc    $936c]
l_93b5:
	move.b	#0x07,d0                        	| [$93b5: ldd    #$07ff]
	move.w	#0x07ff,d1                      	| [$93b5: ldd    #$07ff]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x58                    	| [$93b8: std    $58]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x38e6,d2                      	| [$93ba: ldx    #$38e6]
	move.w	#0x3400,d4                      	| [$93bd: ldu    #$3400]
l_93c0:
	GET_REG_ADDRESS	0,d4                   	| [$93c0: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$93c0: ldd    ,u++]
	GET_REG_ADDRESS	0,d2                   	| [$93c2: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$93c4: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$93c4: ldd    ,u++]
	GET_REG_ADDRESS	0,d2                   	| [$93c6: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$93c8: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$93c8: ldd    ,u++]
	GET_REG_ADDRESS	0,d2                   	| [$93ca: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$93cc: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_9406                            	| [$93ce: bsr    $9406]
	OP_W_ON_DP_ADDRESS	addq,0x58,#1         | [$93d0: inc    $58]
	OP_R_ON_DP_ADDRESS	move,0x58,d0         | [$93d2: lda    $58]
	cmp.b	#0x0a,d0                         	| [$93d4: cmpa   #$0a]
	jne	l_93e3                             	| [$93d6: bne    $93e3]
	OP_1_ON_DP_ADDRESS	clr,0x58             | [$93d8: clr    $58]
	OP_1_ON_DP_ADDRESS	clr,0x59             | [$93da: clr    $59]
	move.w	#0x392e,d3                      	| [$93dc: ldy    #$392e]
	GET_DP_ADDRESS	0x56                    	| [$93e0: sty    $56]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_93e3:
	OP_W_ON_DP_ADDRESS	subq,0x54,#1         | [$93e3: dec    $54]
	jne	l_93c0                             	| [$93e5: bne    $93c0]
l_93e7:
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$93e7: inc    $24]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$93e9: clr    $19]
	rts                                    	| [$93eb: rts]

l_93ec:
	move.w	#0x33f9,d3                      	| [$93ec: ldy    #$33f9]
	move.b	#0x07,d1                        	| [$93f0: ldb    #$07]
	jbsr	multiply_ab                       	| [$93f2: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$93f3: leay   b,y]
	GET_REG_ADDRESS	0,d3                   	| [$93f5: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$93f5: ldd    ,y++]
	GET_DP_ADDRESS	0x5a                    	| [$93f7: std    $5a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$93f9: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$93f9: ldd    ,y++]
	GET_DP_ADDRESS	0x5c                    	| [$93fb: std    $5c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$93fd: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$93fd: ldd    ,y++]
	GET_DP_ADDRESS	0x5e                    	| [$93ff: std    $5e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$9401: lda    ,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x55,d0         | [$9403: sta    $55]
	rts                                    	| [$9405: rts]

l_9406:
	move.w	#0x341c,d3                      	| [$9406: ldy    #$341c]
	move.b	#0x04,d1                        	| [$940a: ldb    #$04]
	jbsr	multiply_ab                       	| [$940c: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$940d: leay   b,y]
	GET_DP_ADDRESS	0x56                    	| [$940f: ldd    $56]
	LOAD_D                                 	| [$940f: ldd    $56]
	GET_REG_ADDRESS	0,d3                   	| [$9411: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x58                    	| [$9413: ldd    $58]
	LOAD_D                                 	| [$9413: ldd    $58]
	tst.b	d1                               	| [$9415: tstb]
	jpl	l_941a                             	| [$9416: bpl    $941a]
	sub.b	#0x02,d0                         	| [$9418: suba   #$02]
l_941a:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$941a: std    ,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$941c: rts]

l_941d:
	OP_W_ON_DP_ADDRESS	subq,0x58,#1         | [$941d: dec    $58]
	jpl	l_9430                             	| [$941f: bpl    $9430]
	GET_DP_ADDRESS	0x56                    	| [$9421: ldy    $56]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	sub.w	#0x3c,d3                         	| [$9424: leay   -$3c,y]
	GET_DP_ADDRESS	0x56                    	| [$9427: sty    $56]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.b	#0x09,d1                        	| [$942a: ldb    #$09]
	OP_W_ON_DP_ADDRESS	move,0x58,d1         | [$942c: stb    $58]
	OP_W_ON_DP_ADDRESS	subq,0x59,#1         | [$942e: dec    $59]
l_9430:
	rts                                    	| [$9430: rts]

l_9431:
	OP_1_ON_DP_ADDRESS	tst,swimmer_19             | [$9431: tst    $19]
	jne	l_943a                             	| [$9433: bne    $943a]
	move.b	#0x2d,d0                        	| [$9435: lda    #$2d]
	jbsr	l_4eb3                            	| [$9437: jsr    $4eb3]
l_943a:
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$943a: lda    $0c]
	and.b	#0x0f,d0                         	| [$943c: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$943e: cmpa   #$0f]
	jne	l_9453                             	| [$9440: bne    $9453]
	move.w	#0xeed2,d4                      	| [$9442: ldu    #$eed2]
	move.w	#0x2715,d2                      	| [$9445: ldx    #$2715]
	move.b	#0x09,d0                        	| [$9448: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$944a: sta    $48]
	move.b	#0x0a,d0                        	| [$944c: lda    #$0a]
	jbsr	l_a1df                            	| [$944e: jsr    $a1df]
	jra	l_9474                             	| [$9451: bra    $9474]
l_9453:
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$9453: lda    $03]
	jeq	l_9474                             	| [$9455: beq    $9474]
	move.b	#0x0a,d1                        	| [$9457: ldb    #$0a]
	jbsr	l_a606                            	| [$9459: jsr    $a606]
	exg	d0,d1                              	| [$945c: exg    a,b]
	move.w	#0x2716,d2                      	| [$945e: ldx    #$2716]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x7,d2                 	| [$9461: std    $7,x] [video_address]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.b	#0x0a,d0                        	| [$9463: ldd    #$0a0a]
	move.w	#0x0a0a,d1                      	| [$9463: ldd    #$0a0a]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0807,d2              	| [$9466: std    $0807,x] [video_address]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.w	#0xef05,d4                      	| [$946a: ldu    #$ef05]
	move.b	#0x06,d1                        	| [$946d: ldb    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$946f: stb    $48]
	jbsr	l_a1df                            	| [$9471: jsr    $a1df]
l_9474:
	move.w	#0x20c9,d2                      	| [$9474: ldx    #$20c9]
	GET_ADDRESS	0x3423                     	| [$9477: tst    $3423]
	tst.b	(a0)                             	| [...]
	jpl	l_947e                             	| [$947a: bpl    $947e]
	addq.w	#0x4,d2                         	| [$947c: leax   $4,x]
l_947e:
	move.w	#0xee91,d4                      	| [$947e: ldu    #$ee91]
	move.b	#0x07,d0                        	| [$9481: lda    #$07]
	jbsr	l_96ca                            	| [$9483: jsr    $96ca]
	move.b	#0x0c,d0                        	| [$9486: lda    #$0c]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$9488: sta    $48]
	moveq	#0,d0                            	| [$948a: clra]
	move.w	#0xeea7,d4                      	| [$948b: ldu    #$eea7]
	add.w	#0xc,d4                          	| [$948e: leau   $c,u]
	move.w	#0xeebc,d2                      	| [$9490: ldx    #$eebc]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$9493: ldb    $19]
	ABX                                    	| [$9495: abx]
	GET_REG_ADDRESS	0,d2                   	| [$9496: lda    ,x]
	move.b	(a0),d0                         	| [...]
	move.w	#0x2146,d2                      	| [$9498: ldx    #$2146]
	GET_ADDRESS	0x3423                     	| [$949b: tst    $3423]
	tst.b	(a0)                             	| [...]
	jpl	l_94a2                             	| [$949e: bpl    $94a2]
	addq.w	#0x4,d2                         	| [$94a0: leax   $4,x]
l_94a2:
	jbsr	l_a1df                            	| [$94a2: jsr    $a1df]
	subq.w	#0x5,d2                         	| [$94a5: leax   -$5,x]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$94a7: lda    $19]
	addq.b	#1,d0                           	| [$94a9: inca]
	GET_REG_ADDRESS	0,d2                   	| [$94aa: sta    ,x++]
	addq.w	#2,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x03,d1                        	| [$94ac: ldb    #$03]
	jbsr	multiply_ab                       	| [$94ae: mul]
	move.w	#0x335d,d4                      	| [$94af: ldu    #$335d]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$94b2: leau   b,u]
	move.b	#0x03,d0                        	| [$94b4: lda    #$03]
	jbsr	l_96ca                            	| [$94b6: jsr    $96ca]
	move.w	#0x29c0,d2                      	| [$94b9: ldx    #$29c0]
	move.b	#0x0a,d0                        	| [$94bc: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$94be: sta    $48]
	move.w	#0xee98,d4                      	| [$94c0: ldu    #$ee98]
l_94c3:
	move.b	#0x7c,d0                        	| [$94c3: lda    #$7c]
	GET_REG_ADDRESS	0,d4                   	| [$94c5: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	jbsr	l_96c4                            	| [$94c7: jsr    $96c4]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$94ca: dec    $48]
	jne	l_94c3                             	| [$94cc: bne    $94c3]
	move.w	#0x21e2,d2                      	| [$94ce: ldx    #$21e2]
	move.b	#0x10,d0                        	| [$94d1: lda    #$10]
	GET_ADDRESS	0x3423                     	| [$94d3: ldb    $3423]
	move.b	(a0),d1                         	| [...]
	jmi	l_9588                             	| [$94d6: lbmi   $9588]
	jeq	l_94ec                             	| [$94da: beq    $94ec]
	cmp.b	#0x14,d1                         	| [$94dc: cmpb   #$14]
	jeq	l_957b                             	| [$94de: lbeq   $957b]
	cmp.b	#0x0a,d1                         	| [$94e2: cmpb   #$0a]
	jcs	l_94ea                             	| [$94e4: bcs    $94ea]
	move.b	#0x01,d0                        	| [$94e6: lda    #$01]
	sub.b	#0x0a,d1                         	| [$94e8: subb   #$0a]
l_94ea:
	jra	l_94ee                             	| [$94ea: bra    $94ee]
l_94ec:
	move.b	#0x10,d1                        	| [$94ec: ldb    #$10]
l_94ee:
	PUSH_SR
	MAKE_D                                 	| [...]
	move.w	d1,d4                           	| [$94ee: tfr    d,u]
	POP_SR
	move.b	#0x01,d0                        	| [$94f0: lda    #$01]
l_94f2:
	GET_REG_ADDRESS	0,d2                   	| [$94f2: stu    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$94f4: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	add.w	#0x7e,d2                         	| [$94f6: leax   $7e,x]
	addq.b	#1,d0                           	| [$94f9: inca]
	cmp.b	#0x0a,d0                         	| [$94fa: cmpa   #$0a]
	jne	l_94f2                             	| [$94fc: bne    $94f2]
	PUSH_SR
	move.w	d4,d1                           	| [$94fe: tfr    u,d]
	ror.w	#8,d4                            	| [...]
	move.b	d4,d0                           	| [...] set MSB
	ror.w	#8,d4                            	| [...]
	POP_SR
	cmp.b	#0x09,d1                         	| [$9500: cmpb   #$09]
	jne	l_950d                             	| [$9502: bne    $950d]
	cmp.b	#0x10,d0                         	| [$9504: cmpa   #$10]
	jne	l_9509                             	| [$9506: bne    $9509]
	moveq	#0,d0                            	| [$9508: clra]
l_9509:
	addq.b	#1,d0                           	| [$9509: inca]
	moveq	#0,d1                            	| [$950a: clrb]
	jra	l_9513                             	| [$950b: bra    $9513]
l_950d:
	cmp.b	#0x10,d1                         	| [$950d: cmpb   #$10]
	jne	l_9512                             	| [$950f: bne    $9512]
	moveq	#0,d1                            	| [$9511: clrb]
l_9512:
	addq.b	#1,d1                           	| [$9512: incb]
l_9513:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9513: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$9515: clra]
	GET_REG_ADDRESS	0,d2                   	| [$9516: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3420                     	| [$9518: ldu    $3420]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.w	#0x21e8,d2                      	| [$951b: ldx    #$21e8]
	sub.w	#0x36,d4                         	| [$951e: leau   -$36,u]
	move.b	#0x0a,d0                        	| [$9521: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$9523: sta    $49]
	addq.w	#0x6,d2                         	| [$9525: leax   $6,x]
l_9527:
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$9527: clr    $50]
	move.b	#0x03,d1                        	| [$9529: ldb    #$03]
l_952b:
	GET_REG_ADDRESS	0,d4                   	| [$952b: lda    ,u]
	move.b	(a0),d0                         	| [...]
                                         | [$952d: lsra]
                                         | [$952e: lsra]
                                         | [$952f: lsra]
	lsr.b	#4,d0                            	| [$9530: lsra]
	jbsr	l_956c                            	| [$9531: bsr    $956c]
	GET_REG_ADDRESS	0,d2                   	| [$9533: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$9535: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$9537: bsr    $956c]
	GET_REG_ADDRESS	0,d2                   	| [$9539: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$953b: decb]
	jne	l_952b                             	| [$953c: bne    $952b]
	moveq	#0,d0                            	| [$953e: clra]
	GET_REG_ADDRESS	0,d2                   	| [$953f: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	sub.w	#0xc,d2                          	| [$9541: leax   -$c,x]
	move.b	#0x03,d0                        	| [$9543: lda    #$03]
	jbsr	l_96ca                            	| [$9545: jsr    $96ca]
	add.w	#0x0084,d2                       	| [$9548: leax   $0084,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$954c: dec    $49]
	jne	l_9527                             	| [$954e: bne    $9527]
l_9550:
	move.w	#0x36ce,d2                      	| [$9550: ldx    #$36ce]
	GET_ADDRESS	0x3450                     	| [$9553: stx    $3450]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.b	#0x05,d0                        	| [$9556: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x2f,d0         | [$9558: sta    $2f]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$955a: inc    $24]
	move.b	#0xee,d0                        	| [$955c: ldd    #$eea2]
	move.w	#0xeea2,d1                      	| [$955c: ldd    #$eea2]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3460                     	| [$955f: std    $3460]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_afc1                            	| [$9562: jsr    $afc1]
	move.w	#0xda5b,d2                      	| [$9565: ldx    #$da5b]
	GET_ADDRESS	0x3440                     	| [$9568: stx    $3440]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	rts                                    	| [$956b: rts]

l_956c:
	and.b	#0x0f,d0                         	| [$956c: anda   #$0f]
	jne	l_9578                             	| [$956e: bne    $9578]
	OP_1_ON_DP_ADDRESS	tst,0x50             | [$9570: tst    $50]
	jne	l_9578                             	| [$9572: bne    $9578]
	move.b	#0x10,d0                        	| [$9574: lda    #$10]
	jra	l_957a                             	| [$9576: bra    $957a]
l_9578:
	OP_W_ON_DP_ADDRESS	addq,0x50,#1         | [$9578: inc    $50]
l_957a:
	rts                                    	| [$957a: rts]

l_957b:
	move.b	#0x12,d0                        	| [$957b: lda    #$12]
	move.w	#0xeec0,d4                      	| [$957d: ldu    #$eec0]
	jbsr	l_96ca                            	| [$9580: jsr    $96ca]
	GET_ADDRESS	0x3422                     	| [$9583: clr    $3422]
	clr.b	(a0)                         	| [...]
	jra	l_9550                             	| [$9586: bra    $9550]
l_9588:
	move.w	#0x2269,d2                      	| [$9588: ldx    #$2269]
	move.w	#0xeedb,d4                      	| [$958b: ldu    #$eedb]
	move.b	#0x0e,d0                        	| [$958e: lda    #$0e]
	jbsr	l_96ca                            	| [$9590: jsr    $96ca]
	move.w	#0x2362,d2                      	| [$9593: ldx    #$2362]
	move.b	#0x1c,d0                        	| [$9596: lda    #$1c]
	jbsr	l_96ca                            	| [$9598: jsr    $96ca]
	move.w	#0x246f,d2                      	| [$959b: ldx    #$246f]
	move.w	#0x38e6,d4                      	| [$959e: ldu    #$38e6]
	move.b	#0x03,d0                        	| [$95a1: lda    #$03]
	jbsr	l_a521                            	| [$95a3: jsr    $a521]
	move.w	#0x2468,d2                      	| [$95a6: ldx    #$2468]
	move.b	#0x03,d0                        	| [$95a9: ldd    #$03ec]
	move.w	#0x03ec,d1                      	| [$95a9: ldd    #$03ec]
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$95ac: sta    $4a]
	move.w	#0xf0fe,d4                      	| [$95ae: ldu    #$f0fe]
l_95b1:
	move.b	#0x01,d0                        	| [$95b1: lda    #$01]
	jbsr	l_a1c8                            	| [$95b3: jsr    $a1c8]
	add.w	#0x40,d2                         	| [$95b6: leax   $40,x]
	OP_W_ON_DP_ADDRESS	subq,0x4a,#1         | [$95b9: dec    $4a]
	jne	l_95b1                             	| [$95bb: bne    $95b1]
	jra	l_9550                             	| [$95bd: bra    $9550]
l_95bf:
	jbsr	l_9692                            	| [$95bf: jsr    $9692]
	move.b	#0x02,d0                        	| [$95c2: ldd    #$0210]
	move.w	#0x0210,d1                      	| [$95c2: ldd    #$0210]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x70                    	| [$95c5: std    $70]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3450                     	| [$95c7: ldx    $3450]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$95ca: lda    ,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$95cc: adda   #$08]
	jcc	l_95d2                             	| [$95ce: bcc    $95d2]
	GET_REG_ADDRESS	0x1,d2                 	| [$95d0: inc    $1,x]
	addq.b	#1,(a0)                         	| [...]
l_95d2:
	GET_REG_ADDRESS	0,d2                   	| [$95d2: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$95d4: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x08,d0                         	| [$95d6: suba   #$08]
	jcc	l_95dc                             	| [$95d8: bcc    $95dc]
	GET_REG_ADDRESS	0x5,d2                 	| [$95da: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
l_95dc:
	GET_REG_ADDRESS	0x4,d2                 	| [$95dc: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
	tst.b	d0                               	| [$95de: tsta]
	jne	l_95ec                             	| [$95df: bne    $95ec]
	add.w	#0x8,d2                          	| [$95e1: leax   $8,x]
	GET_ADDRESS	0x3450                     	| [$95e3: stx    $3450]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x2f,#1         | [$95e6: dec    $2f]
	jne	l_95ec                             	| [$95e8: bne    $95ec]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$95ea: inc    $24]
l_95ec:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$95ec: lda    $0f]
	and.b	#0x03,d0                         	| [$95ee: anda   #$03]
	jeq	l_95f3                             	| [$95f0: beq    $95f3]
	rts                                    	| [$95f2: rts]

l_95f3:
	move.w	#0x30a0,d2                      	| [$95f3: ldx    #$30a0]
	move.w	#0x3600,d4                      	| [$95f6: ldu    #$3600]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$95f9: lda    $19]
	addq.b	#1,d0                           	| [$95fb: inca]
	GET_ADDRESS	0x3406                     	| [$95fc: cmpa   $3406]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_962c                             	| [$95ff: beq    $962c]
	GET_ADDRESS	0x3423                     	| [$9601: tst    $3423]
	tst.b	(a0)                             	| [...]
	jmi	l_962c                             	| [$9604: bmi    $962c]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9606: lda    $0f]
	and.b	#0x07,d0                         	| [$9608: anda   #$07]
	jeq	l_960d                             	| [$960a: beq    $960d]
	rts                                    	| [$960c: rts]

l_960d:
	GET_ADDRESS	0x3440                     	| [$960d: ldy    $3440]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	addq.w	#0x7,d3                         	| [$9611: leay   $7,y]
	move.b	#0x20,d0                        	| [$9613: ldd    #$2020]
	move.w	#0x2020,d1                      	| [$9613: ldd    #$2020]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9616: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_961b                            	| [$9618: bsr    $961b]
	rts                                    	| [$961a: rts]

l_961b:
	GET_REG_ADDRESS	0,d3                   	| [$961b: lda    ,y]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$961d: cmpa   #$ff]
	jne	l_9624                             	| [$961f: bne    $9624]
	GET_REG_ADDRESS	0x1,d3                 	| [$9621: ldy    $1,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
l_9624:
	GET_ADDRESS	0x3440                     	| [$9624: sty    $3440]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	jbsr	l_86ee                            	| [$9628: jsr    $86ee]
	rts                                    	| [$962b: rts]

l_962c:
	move.w	#0xef0b,d3                      	| [$962c: ldy    #$ef0b]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9630: lda    $0f]
	BIT	#0x10,d0                           	| [$9632: bita   #$10]
	jne	l_9638                             	| [$9634: bne    $9638]
	addq.w	#0x5,d3                         	| [$9636: leay   $5,y]
l_9638:
	move.b	#0x20,d0                        	| [$9638: ldd    #$2078]
	move.w	#0x2078,d1                      	| [$9638: ldd    #$2078]
	GET_ADDRESS	0x3423                     	| [$963b: tst    $3423]
	tst.b	(a0)                             	| [...]
	jmi	l_9642                             	| [$963e: bmi    $9642]
	move.b	#0x20,d1                        	| [$9640: ldb    #$20]
l_9642:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9642: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_87b4                            	| [$9644: jsr    $87b4]
	rts                                    	| [$9647: rts]

l_9648:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9648: lda    $0f]
	and.b	#0x03,d0                         	| [$964a: anda   #$03]
	jne	l_9651                             	| [$964c: bne    $9651]
	jbsr	l_95f3                            	| [$964e: jsr    $95f3]
l_9651:
	OP_W_ON_DP_ADDRESS	subq,chrono_hundredth_second_71,#1| [$9651: dec    chrono_hundredth_second_71]
	jne	l_9692                             	| [$9653: bne    $9692]
	OP_W_ON_DP_ADDRESS	subq,0x70,#1         | [$9655: dec    $70]
	jne	l_9692                             	| [$9657: bne    $9692]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$9659: inc    $19]
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d0 | [$965b: lda    dsw2_copy_0d]
	BIT	#0x02,d0                           	| [$965d: bita   #$02]
	jne	l_966e                             	| [$965f: bne    $966e]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$9661: lda    $19]
	cmp.b	#0x02,d0                         	| [$9663: cmpa   #$02]
	jcs	l_966e                             	| [$9665: bcs    $966e]
	move.b	#0x01,d0                        	| [$9667: lda    #$01]
	GET_ADDRESS	flip_screen_set_1480       	| [$9669: sta    flip_screen_set_1480]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x02,d0         | [$966c: sta    $02]
l_966e:
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$966e: lda    $01]
	OP_R_ON_DP_ADDRESS	cmp,swimmer_19,d0          | [$9670: cmpa   $19]
	jcc	l_9678                             	| [$9672: bcc    $9678]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$9674: inc    $24]
	jra	l_9692                             	| [$9676: bra    $9692]
l_9678:
	move.b	#0x02,d0                        	| [$9678: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x24,d0         | [$967a: sta    $24]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$967c: ldb    $19]
                                         | [$967e: aslb]
	asl.b	#2,d1                            	| [$967f: aslb]
	move.w	#0x3420,d2                      	| [$9680: ldx    #$3420]
	ABX                                    	| [$9683: abx]
	GET_REG_ADDRESS	0,d2                   	| [$9684: ldu    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9686: ldd    ,x]
	LOAD_D                                 	| [$9686: ldd    ,x]
	GET_ADDRESS	0x3420                     	| [$9688: stu    $3420]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3422                     	| [$968b: std    $3422]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$968e: clra]
	jbsr	queue_event_4e9a                  	| [$968f: jsr    queue_event_4e9a]
l_9692:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9692: lda    $0f]
	and.b	#0x03,d0                         	| [$9694: anda   #$03]
	jne	l_96c3                             	| [$9696: bne    $96c3]
	move.w	#0x29e0,d2                      	| [$9698: ldx    #$29e0]
	GET_ADDRESS	0x3422                     	| [$969b: lda    $3422]
	move.b	(a0),d0                         	| [...]
	jeq	l_96a7                             	| [$969e: beq    $96a7]
l_96a0:
	add.w	#0x0080,d2                       	| [$96a0: leax   $0080,x]
	subq.b	#1,d0                           	| [$96a4: deca]
	jne	l_96a0                             	| [$96a5: bne    $96a0]
l_96a7:
	GET_ADDRESS	0x3460                     	| [$96a7: ldu    $3460]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_96aa:
	GET_REG_ADDRESS	0,d4                   	| [$96aa: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x3460                     	| [$96ac: stu    $3460]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	cmp.b	#0xff,d1                         	| [$96af: cmpb   #$ff]
	jne	l_96b8                             	| [$96b1: bne    $96b8]
	move.w	#0xeea2,d4                      	| [$96b3: ldu    #$eea2]
	jra	l_96aa                             	| [$96b6: bra    $96aa]
l_96b8:
	GET_ADDRESS	0x3423                     	| [$96b8: tst    $3423]
	tst.b	(a0)                             	| [...]
	jpl	l_96bf                             	| [$96bb: bpl    $96bf]
	add.w	#0xa,d2                          	| [$96bd: leax   $a,x]
l_96bf:
	move.b	#0x20,d0                        	| [$96bf: lda    #$20]
	jbsr	l_96c4                            	| [$96c1: bsr    $96c4]
l_96c3:
	rts                                    	| [$96c3: rts]

l_96c4:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$96c4: stb    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d0                           	| [$96c6: deca]
	jne	l_96c4                             	| [$96c7: bne    $96c4]
	rts                                    	| [$96c9: rts]

l_96ca:
	GET_REG_ADDRESS	0,d4                   	| [$96ca: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$96cc: stb    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d0                           	| [$96ce: deca]
	jne	l_96ca                             	| [$96cf: bne    $96ca]
	rts                                    	| [$96d1: rts]

l_96d2:
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$96d2: lda    $0c]
	and.b	#0x0f,d0                         	| [$96d4: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$96d6: cmpa   #$0f]
	jeq	l_96e2                             	| [$96d8: beq    $96e2]
	OP_1_ON_DP_ADDRESS	tst,0x03             | [$96da: tst    $03]
	jeq	l_96e2                             	| [$96dc: beq    $96e2]
	moveq	#0,d0                            	| [$96de: clra]
	jbsr	l_4eb3                            	| [$96df: jsr    $4eb3]
l_96e2:
	OP_1_ON_DP_ADDRESS	clr,game_playing_00  | [$96e2: clr    game_playing_00]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$96e4: clr    $19]
	move.w	#0x3020,d2                      	| [$96e6: ldx    #$3020]
l_96e9:
	move.b	#0x0e,d0                        	| [$96e9: lda    #$0e]
l_96eb:
	GET_REG_ADDRESS	0,d2                   	| [$96eb: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d0                           	| [$96ed: deca]
	jne	l_96eb                             	| [$96ee: bne    $96eb]
	rts                                    	| [$96f0: rts]

l_96f1:
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$96f1: lda    $24]
	asl.b	#1,d0                            	| [$96f3: asla]
	
	.ifndef	RELEASE
	move.w	#0xef15,d2
	.endif
	lea	table_ef15,a2                  	| [$96f4: ldx   #table_ef15]
	JMP_A_INDEXED	A2                   	| [$96f7: jra    [a,x]] [jump_table]
l_96f9:
	moveq	#0,d0                            	| [$96f9: clra]
	jbsr	queue_event_4e9a                  	| [$96fa: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$96fd: ldd    #$0213]
	move.w	#0x0213,d1                      	| [$96fd: ldd    #$0213]
	jbsr	queue_event_4e9a                  	| [$9700: jsr    queue_event_4e9a]
	jbsr	l_afc1                            	| [$9703: jsr    $afc1]
	GET_ADDRESS	flip_screen_set_1480       	| [$9706: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$9709: clr    $19]
	OP_1_ON_DP_ADDRESS	clr,0x02             | [$970b: clr    $02]
	move.b	#0x11,d0                        	| [$970d: ldd    #$1103]
	move.w	#0x1103,d1                      	| [$970d: ldd    #$1103]
	GET_ADDRESS	0x3420                     	| [$9710: sta    $3420]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x29,d1         | [$9713: stb    $29]
	move.w	#0x3450,d2                      	| [$9715: ldx    #$3450]
	GET_ADDRESS	0x3401                     	| [$9718: stx    $3401]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.b	#0x10,d0                        	| [$971b: ldd    #$100c]
	move.w	#0x100c,d1                      	| [$971b: ldd    #$100c]
l_971e:
	GET_REG_ADDRESS	0,d2                   	| [$971e: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$9720: decb]
	jne	l_971e                             	| [$9721: bne    $971e]
	move.b	#0x02,d0                        	| [$9723: ldd    #$0215]
	move.w	#0x0215,d1                      	| [$9723: ldd    #$0215]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x70                    	| [$9726: std    $70]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x02,d0                        	| [$9728: ldd    #$0280]
	move.w	#0x0280,d1                      	| [$9728: ldd    #$0280]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	chrono_second_72        	| [$972b: std    chrono_second_72]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$972d: inc    $24]
	move.w	#0xeea2,d4                      	| [$972f: ldu    #$eea2]
	GET_ADDRESS	0x3410                     	| [$9732: stu    $3410]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	addq.w	#0x5,d4                         	| [$9735: leau   $5,u]
	GET_ADDRESS	0x3412                     	| [$9737: stu    $3412]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$973a: rts]

l_973b:
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d0 | [$973b: lda    dsw2_copy_0d]
	BIT	#0x02,d0                           	| [$973d: bita   #$02]
	jne	l_974e                             	| [$973f: bne    $974e]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$9741: lda    $19]
	cmp.b	#0x02,d0                         	| [$9743: cmpa   #$02]
	jcs	l_974e                             	| [$9745: bcs    $974e]
	move.b	#0x01,d0                        	| [$9747: lda    #$01]
	GET_ADDRESS	flip_screen_set_1480       	| [$9749: sta    flip_screen_set_1480]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x02,d0         | [$974c: sta    $02]
l_974e:
	move.w	#0x25c1,d2                      	| [$974e: ldx    #$25c1]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$9751: lda    $19]
	and.b	#0x01,d0                         	| [$9753: anda   #$01]
	jne	l_975a                             	| [$9755: bne    $975a]
	add.w	#0x18,d2                         	| [$9757: leax   $18,x]
l_975a:
	move.b	#0x06,d0                        	| [$975a: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$975c: sta    $48]
	move.b	#0x80,d0                        	| [$975e: lda    #$80]
	move.w	#0xefa2,d4                      	| [$9760: ldu    #$efa2]
	jbsr	l_a1df                            	| [$9763: jsr    $a1df]
	add.w	#0x79,d2                         	| [$9766: leax   $79,x]
	move.b	#0x02,d0                        	| [$9769: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$976b: sta    $49]
l_976d:
	move.b	#0x08,d0                        	| [$976d: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$976f: sta    $48]
	move.b	#0x80,d0                        	| [$9771: lda    #$80]
	jbsr	l_a1df                            	| [$9773: jsr    $a1df]
	add.w	#0x38,d2                         	| [$9776: leax   $38,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$9779: dec    $49]
	jne	l_976d                             	| [$977b: bne    $976d]
	add.w	#0x41,d2                         	| [$977d: leax   $41,x]
	move.b	#0x06,d0                        	| [$9780: lda    #$06]
	move.w	#0xef95,d4                      	| [$9782: ldu    #$ef95]
	jbsr	l_96ca                            	| [$9785: jsr    $96ca]
	jbsr	l_4eca                            	| [$9788: jsr    $4eca]
	jbsr	l_4f8a                            	| [$978b: jsr    $4f8a]
	GET_REG_ADDRESS	0,d4                   	| [$978e: lda    ,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x07,d0                         	| [$9790: anda   #$07]
	jeq	l_97a1                             	| [$9792: beq    $97a1]
	move.b	#0x01,d0                        	| [$9794: ldd    #$01c0]
	move.w	#0x01c0,d1                      	| [$9794: ldd    #$01c0]
	OP_1_ON_DP_ADDRESS	tst,0x29             | [$9797: tst    $29]
	jne	l_979d                             	| [$9799: bne    $979d]
	move.b	#0x5a,d1                        	| [$979b: ldb    #$5a]
l_979d:
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	chrono_second_72        	| [$979d: std    chrono_second_72]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_97d5                             	| [$979f: bra    $97d5]
l_97a1:
	OP_W_ON_DP_ADDRESS	subq,0x73,#1         | [$97a1: dec    $73]
	jne	l_97d5                             	| [$97a3: bne    $97d5]
	OP_W_ON_DP_ADDRESS	subq,chrono_second_72,#1| [$97a5: dec    chrono_second_72]
	jne	l_97d5                             	| [$97a7: bne    $97d5]
l_97a9:
	move.b	#0x02,d0                        	| [$97a9: ldd    #$0240]
	move.w	#0x0240,d1                      	| [$97a9: ldd    #$0240]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	chrono_second_72        	| [$97ac: std    chrono_second_72]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,0x29             | [$97ae: tst    $29]
	jeq	l_9861                             	| [$97b0: lbeq   $9861]
	move.w	#0x3450,d2                      	| [$97b4: ldx    #$3450]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$97b7: lda    $19]
	move.b	#0x03,d1                        	| [$97b9: ldb    #$03]
	jbsr	multiply_ab                       	| [$97bb: mul]
	ABX                                    	| [$97bc: abx]
	move.w	d2,d4                           	| [$97bd: tfr    x,u]
	GET_ADDRESS	0x3401                     	| [$97bf: cmpx   $3401]
	CMP_W_TO_REG	a0,d2                          	| [...]
	jne	l_97cd                             	| [$97c2: bne    $97cd]
	move.b	#0x03,d0                        	| [$97c4: lda    #$03]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$97c6: ldb    $19]
	add.b	#0x11,d1                         	| [$97c8: addb   #$11]
	jbsr	l_96c4                            	| [$97ca: jsr    $96c4]
l_97cd:
	addq.w	#0x3,d4                         	| [$97cd: leau   $3,u]
	GET_ADDRESS	0x3401                     	| [$97cf: stu    $3401]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jra	l_9861                             	| [$97d2: jra    $9861]
l_97d5:
	jbsr	l_4fa1                            	| [$97d5: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$97d8: anda   #$05]
	jeq	l_97e4                             	| [$97da: beq    $97e4]
	move.b	d0,d1                           	| [$97dc: tfr    a,b]
	move.b	#0x11,d0                        	| [$97de: lda    #$11]
	OP_W_ON_DP_ADDRESS	move,0x25,d0         | [$97e0: sta    $25]
	jra	l_97f5                             	| [$97e2: bra    $97f5]
l_97e4:
	jbsr	l_4f8a                            	| [$97e4: jsr    $4f8a]
	GET_REG_ADDRESS	0,d4                   	| [$97e7: ldb    ,u]
	move.b	(a0),d1                         	| [...]
	and.b	#0x05,d1                         	| [$97e9: andb   #$05]
	jeq	l_980b                             	| [$97eb: beq    $980b]
	OP_W_ON_DP_ADDRESS	subq,0x25,#1         | [$97ed: dec    $25]
	jne	l_980b                             	| [$97ef: bne    $980b]
	move.b	#0x0a,d0                        	| [$97f1: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x25,d0         | [$97f3: sta    $25]
l_97f5:
	GET_ADDRESS	0x3420                     	| [$97f5: lda    $3420]
	move.b	(a0),d0                         	| [...]
	BIT	#0x01,d1                           	| [$97f8: bitb   #$01]
	jeq	l_97ff                             	| [$97fa: beq    $97ff]
	addq.b	#1,d0                           	| [$97fc: inca]
	jra	l_9800                             	| [$97fd: bra    $9800]
l_97ff:
	subq.b	#1,d0                           	| [$97ff: deca]
l_9800:
	jbsr	l_99b8                            	| [$9800: jsr    $99b8]
	GET_ADDRESS	0x3420                     	| [$9803: sta    $3420]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x17,d0                        	| [$9806: lda    #$17]
	jbsr	l_4eb3                            	| [$9808: jsr    $4eb3]
l_980b:
	jbsr	l_4fa1                            	| [$980b: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$980e: anda   #$02]
	jeq	l_9888                             	| [$9810: beq    $9888]
	move.b	#0x18,d0                        	| [$9812: lda    #$18]
	jbsr	l_4eb3                            	| [$9814: jsr    $4eb3]
	GET_ADDRESS	0x3401                     	| [$9817: ldx    $3401]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3420                     	| [$981a: lda    $3420]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x2c,d0                         	| [$981d: cmpa   #$2c]
	jcs	l_9842                             	| [$981f: bcs    $9842]
	sub.b	#0x2d,d0                         	| [$9821: suba   #$2d]
	jeq	l_982b                             	| [$9823: beq    $982b]
	jpl	l_983f                             	| [$9825: bpl    $983f]
	move.b	#0x10,d0                        	| [$9827: lda    #$10]
	jra	l_9842                             	| [$9829: bra    $9842]
l_982b:
	OP_R_ON_DP_ADDRESS	move,0x29,d0         | [$982b: lda    $29]
	cmp.b	#0x03,d0                         	| [$982d: cmpa   #$03]
	jeq	l_9888                             	| [$982f: beq    $9888]
	OP_W_ON_DP_ADDRESS	addq,0x29,#1         | [$9831: inc    $29]
	move.b	#0x10,d0                        	| [$9833: lda    #$10]
	GET_ADDRESS	0x3401                     	| [$9835: ldx    $3401]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	subq.w	#1,d2                           	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9838: sta    ,-x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3401                     	| [$983a: stx    $3401]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	jra	l_9888                             	| [$983d: bra    $9888]
l_983f:
	jra	l_97a9                             	| [$983f: jra    $97a9]
l_9842:
	OP_1_ON_DP_ADDRESS	tst,0x29             | [$9842: tst    $29]
	jne	l_9848                             	| [$9844: bne    $9848]
	subq.w	#0x1,d2                         	| [$9846: leax   -$1,x]
l_9848:
	GET_REG_ADDRESS	0,d2                   	| [$9848: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3401                     	| [$984a: stx    $3401]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$984d: dec    $29]
	jpl	l_9853                             	| [$984f: bpl    $9853]
	OP_1_ON_DP_ADDRESS	clr,0x29             | [$9851: clr    $29]
l_9853:
	jne	l_9888                             	| [$9853: bne    $9888]
	move.b	#0x01,d0                        	| [$9855: ldd    #$0130]
	move.w	#0x0130,d1                      	| [$9855: ldd    #$0130]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	chrono_second_72        	| [$9858: std    chrono_second_72]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x2e,d0                        	| [$985a: lda    #$2e]
	GET_ADDRESS	0x3420                     	| [$985c: sta    $3420]
	move.b	d0,(a0)                         	| [...]
	jra	l_9888                             	| [$985f: bra    $9888]
l_9861:
	move.b	#0x03,d0                        	| [$9861: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$9863: sta    $29]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$9865: inc    $19]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$9867: lda    $19]
	add.b	#0x11,d0                         	| [$9869: adda   #$11]
	GET_ADDRESS	0x3420                     	| [$986b: sta    $3420]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$986e: lda    $19]
	OP_R_ON_DP_ADDRESS	cmp,0x01,d0          | [$9870: cmpa   $01]
	jls	l_987e                             	| [$9872: bls    $987e]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$9874: inc    $24]
	OP_W_ON_DP_ADDRESS	subq,swimmer_19,#1         | [$9876: dec    $19]
	move.b	#0x14,d0                        	| [$9878: lda    #$14]
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$987a: sta    chrono_second_72]
	jra	l_9888                             	| [$987c: bra    $9888]
l_987e:
	moveq	#0,d0                            	| [$987e: clra]
	jbsr	queue_event_4e9a                  	| [$987f: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$9882: ldd    #$0213]
	move.w	#0x0213,d1                      	| [$9882: ldd    #$0213]
	jbsr	queue_event_4e9a                  	| [$9885: jsr    queue_event_4e9a]
l_9888:
	move.b	#0x11,d0                        	| [$9888: lda    #$11]
	move.w	#0xef59,d4                      	| [$988a: ldu    #$ef59]
	move.b	#0x1e,d1                        	| [$988d: ldb    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$988f: stb    $48]
l_9891:
	subq.w	#2,d4                           	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$9891: ldx    ,--u]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9893: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x10,d1                        	| [$9895: ldb    #$10]
	GET_REG_UNCHECKED_ADDRESS	0x1,d2                 	| [$9897: stb    $1,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0x3412                     	| [$9899: ldy    $3412]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	addq.w	#0x1,d3                         	| [$989d: leay   $1,y]
l_989f:
	GET_REG_ADDRESS	0,d3                   	| [$989f: ldb    ,y]
	move.b	(a0),d1                         	| [...]
	jpl	l_98a9                             	| [$98a1: bpl    $98a9]
	move.w	#0xef9b,d3                      	| [$98a3: ldy    #$ef9b]
	jra	l_989f                             	| [$98a7: bra    $989f]

l_98a9:
	GET_ADDRESS	0x3412                     	| [$98a9: sty    $3412]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$98ad: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0801,d2              	| [$98b1: stb    $0801,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	jbsr	l_99a7                            	| [$98b5: jsr    $99a7]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$98b8: dec    $48]
	jne	l_9891                             	| [$98ba: bne    $9891]
	move.w	#0x2485,d2                      	| [$98bc: ldx    #$2485]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$98bf: lda    $19]
	and.b	#0x01,d0                         	| [$98c1: anda   #$01]
	jne	l_98c8                             	| [$98c3: bne    $98c8]
	add.w	#0x16,d2                         	| [$98c5: leax   $16,x]
l_98c8:
	move.w	#0x3450,d4                      	| [$98c8: ldu    #$3450]
	move.b	#0x04,d0                        	| [$98cb: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$98cd: sta    $48]
l_98cf:
	move.b	#0x03,d0                        	| [$98cf: lda    #$03]
	jbsr	l_96ca                            	| [$98d1: jsr    $96ca]
	add.w	#0x3d,d2                         	| [$98d4: leax   $3d,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$98d7: dec    $48]
	jne	l_98cf                             	| [$98d9: bne    $98cf]
	add.w	#0x06fc,d2                       	| [$98db: leax   $06fc,x]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$98df: lda    ,x] [video_address]
	move.b	(a0),d0                         	| [...]
	jne	l_991c                             	| [$98e1: bne    $991c]
	move.w	#0xeebc,d4                      	| [$98e3: ldu    #$eebc]
	move.b	#0x04,d0                        	| [$98e6: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$98e8: sta    $48]
l_98ea:
	GET_REG_ADDRESS	0,d4                   	| [$98ea: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	move.b	#0x07,d0                        	| [$98ec: lda    #$07]
	jbsr	l_96c4                            	| [$98ee: jsr    $96c4]
	add.w	#0x39,d2                         	| [$98f1: leax   $39,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$98f4: dec    $48]
	jne	l_98ea                             	| [$98f6: bne    $98ea]
	move.w	#0x2481,d2                      	| [$98f8: ldx    #$2481]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$98fb: lda    $19]
	and.b	#0x01,d0                         	| [$98fd: anda   #$01]
	jne	l_9904                             	| [$98ff: bne    $9904]
	add.w	#0x16,d2                         	| [$9901: leax   $16,x]
l_9904:
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$9904: lda    $01]
	move.b	#0x40,d1                        	| [$9906: ldb    #$40]
	jbsr	multiply_ab                       	| [$9908: mul]
	ABX                                    	| [$9909: abx]
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$990a: lda    $01]
	addq.b	#1,d0                           	| [$990c: inca]
	move.w	#0x2520,d3                      	| [$990d: ldy    #$2520]
l_9911:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9911: sta    ,x] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x1,d2                 	| [$9913: sty    $1,x] [video_address]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	sub.w	#0x40,d2                         	| [$9916: leax   -$40,x]
	subq.b	#1,d0                           	| [$9919: deca]
	jne	l_9911                             	| [$991a: bne    $9911]
l_991c:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$991c: lda    $0f]
	and.b	#0x03,d0                         	| [$991e: anda   #$03]
	jne	l_9950                             	| [$9920: bne    $9950]
	move.w	#0x2c81,d2                      	| [$9922: ldx    #$2c81]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$9925: lda    $19]
	and.b	#0x01,d0                         	| [$9927: anda   #$01]
	jne	l_992e                             	| [$9929: bne    $992e]
	add.w	#0x16,d2                         	| [$992b: leax   $16,x]
l_992e:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$992e: lda    $19]
	move.b	#0x40,d1                        	| [$9930: ldb    #$40]
	jbsr	multiply_ab                       	| [$9932: mul]
	ABX                                    	| [$9933: abx]
	GET_ADDRESS	0x3410                     	| [$9934: ldu    $3410]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_9937:
	GET_REG_ADDRESS	0,d4                   	| [$9937: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	jpl	l_9940                             	| [$9939: bpl    $9940]
	move.w	#0xeea2,d4                      	| [$993b: ldu    #$eea2]
	jra	l_9937                             	| [$993e: bra    $9937]
l_9940:
	GET_ADDRESS	0x3410                     	| [$9940: stu    $3410]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x07,d0                        	| [$9943: lda    #$07]
	jbsr	l_96c4                            	| [$9945: jsr    $96c4]
	move.w	#0x2980,d2                      	| [$9948: ldx    #$2980]
	move.b	#0x20,d0                        	| [$994b: lda    #$20]
	jbsr	l_96c4                            	| [$994d: jsr    $96c4]
l_9950:
	GET_ADDRESS	0x3420                     	| [$9950: ldb    $3420]
	move.b	(a0),d1                         	| [...]
	sub.b	#0x11,d1                         	| [$9953: subb   #$11]
	asl.b	#1,d1                            	| [$9955: aslb]
	move.w	#0xef59,d2                      	| [$9956: ldx    #$ef59]
	ABX                                    	| [$9959: abx]
	GET_REG_ADDRESS	0,d2                   	| [$995a: ldd    ,x]
	LOAD_D                                 	| [$995a: ldd    ,x]
	move.w	#0xde77,d3                      	| [$995c: ldy    #$de77]
	move.w	#0x3600,d4                      	| [$9960: ldu    #$3600]
	move.w	#0x30a0,d2                      	| [$9963: ldx    #$30a0]
	sub.b	#0x03,d0                         	| [$9966: suba   #$03]
	sub.b	#0x03,d1                         	| [$9968: subb   #$03]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$996a: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3420                     	| [$996c: lda    $3420]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x2c,d0                         	| [$996f: cmpa   #$2c]
	jcs	l_9977                             	| [$9971: bcs    $9977]
	add.b	#0x03,d1                         	| [$9973: addb   #$03]
	GET_REG_ADDRESS	0x2,d2                 	| [$9975: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
l_9977:
	jbsr	l_894b                            	| [$9977: jsr    $894b]
	GET_REG_ADDRESS	0,d4                   	| [$997a: lda    ,u]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3420                     	| [$997c: ldb    $3420]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x2c,d1                         	| [$997f: cmpb   #$2c]
	jcs	l_9989                             	| [$9981: bcs    $9989]
	or.b	#0x0b,d0                          	| [$9983: ora    #$0b]
	GET_REG_ADDRESS	0,d4                   	| [$9985: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	jra	l_998d                             	| [$9987: bra    $998d]
l_9989:
	or.b	#0x0a,d0                          	| [$9989: ora    #$0a]
	GET_REG_ADDRESS	0,d4                   	| [$998b: sta    ,u]
	move.b	d0,(a0)                         	| [...]
l_998d:
	OP_R_ON_DP_ADDRESS	move,0xf0,d0         | [$998d: lda    $f0]
	add.b	#0x20,d0                         	| [$998f: adda   #$20]
	OP_W_ON_DP_ADDRESS	move,0xf0,d0         | [$9991: sta    $f0]
	jne	l_99a4                             	| [$9993: bne    $99a4]
	GET_ADDRESS	0x3412                     	| [$9995: ldx    $3412]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	addq.w	#0x1,d2                         	| [$9998: leax   $1,x]
	GET_REG_ADDRESS	0,d2                   	| [$999a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jpl	l_99a1                             	| [$999c: bpl    $99a1]
	move.w	#0xef9b,d2                      	| [$999e: ldx    #$ef9b]
l_99a1:
	GET_ADDRESS	0x3412                     	| [$99a1: stx    $3412]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_99a4:
	jbsr	l_99c5                            	| [$99a4: bsr    $99c5]
	rts                                    	| [$99a6: rts]

l_99a7:
	cmp.b	#0x2c,d0                         	| [$99a7: cmpa   #$2c]
	jcs	l_99b7                             	| [$99a9: bcs    $99b7]
	move.b	d0,d1                           	| [$99ab: tfr    a,b]
	sub.b	#0x2c,d1                         	| [$99ad: subb   #$2c]
	asl.b	#1,d1                            	| [$99af: aslb]
	add.b	#0x9a,d1                         	| [$99b0: addb   #$9a]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$99b2: stb    ,x] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d1                           	| [$99b4: incb]
	GET_REG_UNCHECKED_ADDRESS	0x1,d2                 	| [$99b5: stb    $1,x] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_99b7:
	addq.b	#1,d0                           	| [$99b7: inca]
l_99b8:
	cmp.b	#0x10,d0                         	| [$99b8: cmpa   #$10]
	jhi	l_99be                             	| [$99ba: bhi    $99be]
	move.b	#0x2e,d0                        	| [$99bc: lda    #$2e]
l_99be:
	cmp.b	#0x2f,d0                         	| [$99be: cmpa   #$2f]
	jcs	l_99c4                             	| [$99c0: bcs    $99c4]
	move.b	#0x11,d0                        	| [$99c2: lda    #$11]
l_99c4:
	rts                                    	| [$99c4: rts]

l_99c5:
	OP_W_ON_DP_ADDRESS	subq,chrono_hundredth_second_71,#1| [$99c5: dec    chrono_hundredth_second_71]
	jne	l_99d8                             	| [$99c7: bne    $99d8]
	OP_1_ON_DP_ADDRESS	tst,0x70             | [$99c9: tst    $70]
	jeq	l_99d8                             	| [$99cb: beq    $99d8]
	OP_W_ON_DP_ADDRESS	subq,0x70,#1         | [$99cd: dec    $70]
	jne	l_99d8                             	| [$99cf: bne    $99d8]
	OP_W_ON_DP_ADDRESS	addq,0x27,#1         | [$99d1: inc    $27]
	move.b	#0x30,d0                        	| [$99d3: lda    #$30]
	jbsr	l_4eb3                            	| [$99d5: jsr    $4eb3]
l_99d8:
	rts                                    	| [$99d8: rts]

l_99d9:
	jbsr	l_9888                            	| [$99d9: jsr    $9888]
	OP_1_ON_DP_ADDRESS	tst,chrono_second_72 | [$99dc: tst    chrono_second_72]
	jeq	l_99e4                             	| [$99de: beq    $99e4]
	OP_W_ON_DP_ADDRESS	subq,chrono_second_72,#1| [$99e0: dec    chrono_second_72]
	jne	l_9a11                             	| [$99e2: bne    $9a11]
l_99e4:
	OP_1_ON_DP_ADDRESS	tst,0x27             | [$99e4: tst    $27]
	jeq	l_9a11                             	| [$99e6: beq    $9a11]
	move.w	#0x3360,d2                      	| [$99e8: ldx    #$3360]
	move.w	#0x3450,d4                      	| [$99eb: ldu    #$3450]
	move.b	#0x0c,d0                        	| [$99ee: lda    #$0c]
	jbsr	l_96ca                            	| [$99f0: jsr    $96ca]
	moveq	#0,d0                            	| [$99f3: clra]
	jbsr	queue_sound_event_4ead            	| [$99f4: jsr    queue_sound_event_4ead]
	OP_1_ON_DP_ADDRESS	clr,swimmer_19             | [$99f7: clr    $19]
	OP_W_ON_DP_ADDRESS	addq,0x20,#1         | [$99f9: inc    $20]
	move.w	#0x3023,d2                      	| [$99fb: ldx    #$3023]
	jbsr	l_96e9                            	| [$99fe: jsr    $96e9]
	jbsr	l_89d1                            	| [$9a01: jsr    $89d1]
	tst.b	d1                               	| [$9a04: tstb]
	jne	l_9a0f                             	| [$9a05: bne    $9a0f]
	OP_W_ON_DP_ADDRESS	subq,0x20,#1         | [$9a07: dec    $20]
	move.b	#0x03,d0                        	| [$9a09: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x24,d0         | [$9a0b: sta    $24]
	jra	l_9a11                             	| [$9a0d: bra    $9a11]
l_9a0f:
	OP_1_ON_DP_ADDRESS	clr,0x22             | [$9a0f: clr    $22]
l_9a11:
	rts                                    	| [$9a11: rts]

archery_9a12:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$9a12: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$9a14: asla]
	
	.ifndef	RELEASE
	move.w	#0xefb8,d2
	.endif
	lea	table_efb8,a2                  	| [$9a15: ldx   #table_efb8]
	JMP_A_INDEXED	A2                   	| [$9a18: jra    [a,x]] [jump_table]

l_9a1a:
	jbsr	l_afaf                            	| [$9a1a: jsr    $afaf]
	move.w	#0x31c0,d2                      	| [$9a1d: ldx    #$31c0]
	move.b	#0x40,d0                        	| [$9a20: lda    #$40]
l_9a22:
	GET_REG_ADDRESS	0,d2                   	| [$9a22: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d0                           	| [$9a24: deca]
	jne	l_9a22                             	| [$9a25: bne    $9a22]
	OP_1_ON_DP_ADDRESS	clr,0xb6             | [$9a27: clr    $b6]
	move.w	#0x3097,d2                      	| [$9a29: ldx    #$3097]
	move.b	#0x09,d0                        	| [$9a2c: lda    #$09]
l_9a2e:
	GET_REG_ADDRESS	0,d2                   	| [$9a2e: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d0                           	| [$9a30: deca]
	jne	l_9a2e                             	| [$9a31: bne    $9a2e]
	moveq	#0,d0                            	| [$9a33: clra]
	jbsr	queue_sound_event_4ead            	| [$9a34: jsr    queue_sound_event_4ead]
	OP_1_ON_DP_ADDRESS	tst,0x6a             | [$9a37: tst    $6a]
	jne	l_9a40                             	| [$9a39: bne    $9a40]
	move.b	#0x24,d0                        	| [$9a3b: lda    #$24]
	jbsr	queue_sound_event_4ead            	| [$9a3d: jsr    queue_sound_event_4ead]
l_9a40:
	move.b	#0x14,d0                        	| [$9a40: ldd    #$1416]
	move.w	#0x1416,d1                      	| [$9a40: ldd    #$1416]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$9a43: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x70,d0                        	| [$9a46: ldd    #$7010]
	move.w	#0x7010,d1                      	| [$9a46: ldd    #$7010]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xa1                    	| [$9a49: std    $a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x02,d0                        	| [$9a4b: ldd    #$0205]
	move.w	#0x0205,d1                      	| [$9a4b: ldd    #$0205]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$9a4e: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0xff,d0                        	| [$9a50: lda    #$ff]
	OP_1_ON_DP_ADDRESS	tst,0x6a             | [$9a52: tst    $6a]
	jeq	l_9a58                             	| [$9a54: beq    $9a58]
	move.b	#0x32,d0                        	| [$9a56: lda    #$32]
l_9a58:
	OP_W_ON_DP_ADDRESS	move,0x70,d0         | [$9a58: sta    $70]
	move.w	#0x3100,d2                      	| [$9a5a: ldx    #$3100]
	GET_DP_ADDRESS	0xb8                    	| [$9a5d: stx    $b8]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.b	#0x02,d0                        	| [$9a5f: ldd    #$0203]
	move.w	#0x0203,d1                      	| [$9a5f: ldd    #$0203]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xe8                    	| [$9a62: std    $e8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_9fe0                            	| [$9a64: jsr    $9fe0]
	move.b	#0xd2,d0                        	| [$9a67: lda    #$d2]
	OP_W_ON_DP_ADDRESS	move,0x2f,d0         | [$9a69: sta    $2f]
	move.w	#0x2557,d2                      	| [$9a6b: ldx    #$2557]
	move.w	#0xf078,d4                      	| [$9a6e: ldu    #$f078]
	move.b	#0x05,d0                        	| [$9a71: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$9a73: sta    $48]
	moveq	#0,d0                            	| [$9a75: clra]
	jbsr	l_a1df                            	| [$9a76: jsr    $a1df]
	add.w	#0x3b,d2                         	| [$9a79: leax   $3b,x]
	move.w	#0xf060,d2                      	| [$9a7c: ldx    #$f060]
	GET_DP_ADDRESS	0xbe                    	| [$9a7f: stx    $be]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$9a81: inc    event_sub_state_28]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9a83: lda    $0f]
	and.b	#0x0f,d0                         	| [$9a85: anda   #$0f]
	jne	l_9a8a                             	| [$9a87: bne    $9a8a]
	addq.b	#1,d0                           	| [$9a89: inca]
l_9a8a:
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$9a8a: sta    chrono_second_72]
	jbsr	l_9da5                            	| [$9a8c: jsr    $9da5]
	move.b	#0x07,d0                        	| [$9a8f: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0xb4,d0         | [$9a91: sta    $b4]
	OP_W_ON_DP_ADDRESS	move,0xa8,d0         | [$9a93: sta    $a8]
	OP_W_ON_DP_ADDRESS	move,0xb7,d0         | [$9a95: sta    $b7]
	move.w	#0xeea2,d2                      	| [$9a97: ldx    #$eea2]
	GET_DP_ADDRESS	0xf3                    	| [$9a9a: stx    $f3]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	rts                                    	| [$9a9c: rts]

l_9a9d:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9a9d: lda    $0f]
	and.b	#0x01,d0                         	| [$9a9f: anda   #$01]
	jne	l_9aac                             	| [$9aa1: bne    $9aac]
	OP_R_ON_DP_ADDRESS	move,chrono_second_72,d0| [$9aa3: lda    chrono_second_72]
	addq.b	#1,d0                           	| [$9aa5: inca]
	and.b	#0x0f,d0                         	| [$9aa6: anda   #$0f]
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$9aa8: sta    chrono_second_72]
	jeq	l_9a9d                             	| [$9aaa: beq    $9a9d]
l_9aac:
	OP_W_ON_DP_ADDRESS	subq,0x70,#1         | [$9aac: dec    $70]
	jeq	l_9acb                             	| [$9aae: beq    $9acb]
	jbsr	l_4fa1                            	| [$9ab0: jsr    $4fa1]
	BIT	#0x02,d0                           	| [$9ab3: bita   #$02]
	jeq	l_9ab9                             	| [$9ab5: beq    $9ab9]
	OP_W_ON_DP_ADDRESS	addq,0x73,#1         | [$9ab7: inc    $73]
l_9ab9:
	cmp.b	#0x07,d0                         	| [$9ab9: cmpa   #$07]
	jne	l_9ac7                             	| [$9abb: bne    $9ac7]
	OP_R_ON_DP_ADDRESS	move,0x73,d1         | [$9abd: ldb    $73]
	cmp.b	#0x06,d1                         	| [$9abf: cmpb   #$06]
	jne	l_9ac7                             	| [$9ac1: bne    $9ac7]
	move.b	#0x08,d1                        	| [$9ac3: ldb    #$08]
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d1| [$9ac5: stb    chrono_second_72]
l_9ac7:
	and.b	#0x05,d0                         	| [$9ac7: anda   #$05]
	jeq	l_9ae4                             	| [$9ac9: beq    $9ae4]
l_9acb:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$9acb: inc    event_sub_state_28]
	move.b	#0x0f,d0                        	| [$9acd: lda    #$0f]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$9acf: sta    $29]
	OP_1_ON_DP_ADDRESS	tst,0x6a             | [$9ad1: tst    $6a]
	jne	l_9ae4                             	| [$9ad3: bne    $9ae4]
	move.w	#0x3528,d2                      	| [$9ad5: ldx    #$3528]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$9ad8: ldb    $19]
	ABX                                    	| [$9ada: abx]
	OP_R_ON_DP_ADDRESS	move,chrono_second_72,d0| [$9adb: lda    chrono_second_72]
	GET_REG_ADDRESS	0,d2                   	| [$9add: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x24,d0                        	| [$9adf: lda    #$24]
	jbsr	l_4eb3                            	| [$9ae1: jsr    $4eb3]
l_9ae4:
	OP_1_ON_DP_ADDRESS	tst,0x6a             | [$9ae4: tst    $6a]
	jeq	l_9af2                             	| [$9ae6: beq    $9af2]
	move.w	#0x3528,d2                      	| [$9ae8: ldx    #$3528]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$9aeb: ldb    $19]
	ABX                                    	| [$9aed: abx]
	GET_REG_ADDRESS	0,d2                   	| [$9aee: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	jra	l_9af4                             	| [$9af0: bra    $9af4]
l_9af2:
	OP_R_ON_DP_ADDRESS	move,chrono_second_72,d1| [$9af2: ldb    chrono_second_72]
l_9af4:
	move.w	#0xf063,d2                      	| [$9af4: ldx    #$f063]
	ABX                                    	| [$9af7: abx]
	GET_REG_ADDRESS	0,d2                   	| [$9af8: lda    ,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xac,d0         | [$9afa: sta    $ac]
	move.b	#0x01,d0                        	| [$9afc: lda    #$01]
	cmp.b	#0x08,d1                         	| [$9afe: cmpb   #$08]
	jlt	l_9b06                             	| [$9b00: blt    $9b06]
	move.b	#0xff,d0                        	| [$9b02: lda    #$ff]
	sub.b	#0x08,d1                         	| [$9b04: subb   #$08]
l_9b06:
	OP_W_ON_DP_ADDRESS	move,0x5d,d1         | [$9b06: stb    $5d]
	OP_W_ON_DP_ADDRESS	move,0xab,d0         | [$9b08: sta    $ab]
	move.w	#0x258b,d2                      	| [$9b0a: ldx    #$258b]
	move.w	#0xf073,d4                      	| [$9b0d: ldu    #$f073]
	move.b	#0x05,d0                        	| [$9b10: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$9b12: sta    $48]
	moveq	#0,d0                            	| [$9b14: clra]
	jbsr	l_a1df                            	| [$9b15: jsr    $a1df]
	move.b	#0x73,d0                        	| [$9b18: lda    #$73]
	OP_1_ON_DP_ADDRESS	tst,0xab             | [$9b1a: tst    $ab]
	jmi	l_9b1f                             	| [$9b1c: bmi    $9b1f]
	addq.b	#1,d0                           	| [$9b1e: inca]
l_9b1f:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9b1f: sta    ,x++]  [video_address_word]
	addq.w	#2,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,0x5d,d0         | [$9b21: lda    $5d]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9b23: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9b27: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	rts                                    	| [$9b29: rts]

l_9b2a:
	jbsr	l_afaf                            	| [$9b2a: jsr    $afaf]
	OP_1_ON_DP_ADDRESS	tst,0x29             | [$9b2d: tst    $29]
	jeq	l_9b3e                             	| [$9b2f: beq    $9b3e]
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$9b31: dec    $29]
	jne	l_9b3e                             	| [$9b33: bne    $9b3e]
	moveq	#0,d0                            	| [$9b35: clra]
	jbsr	l_4eb3                            	| [$9b36: jsr    $4eb3]
	move.b	#0x27,d0                        	| [$9b39: lda    #$27]
	jbsr	l_4eb3                            	| [$9b3b: jsr    $4eb3]
l_9b3e:
	GET_DP_ADDRESS	0xb8                    	| [$9b3e: ldx    $b8]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9b40: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x42,d0                         	| [$9b42: cmpa   #$42]
	jhi	l_9b62                             	| [$9b44: bhi    $9b62]
	moveq	#0,d0                            	| [$9b46: clra]
l_9b47:
	add.w	#0x20,d2                         	| [$9b47: leax   $20,x]
	addq.b	#1,d0                           	| [$9b4a: inca]
	cmp.w	#0x3140,d2                       	| [$9b4b: cmpx   #$3140]
	jne	l_9b53                             	| [$9b4e: bne    $9b53]
	move.w	#0x3100,d2                      	| [$9b50: ldx    #$3100]
l_9b53:
	cmp.b	#0x04,d0                         	| [$9b53: cmpa   #$04]
	jeq	l_9b5d                             	| [$9b55: beq    $9b5d]
	GET_REG_ADDRESS	0,d2                   	| [$9b57: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_9b47                             	| [$9b59: beq    $9b47]
	jra	l_9b60                             	| [$9b5b: bra    $9b60]
l_9b5d:
	move.w	#0x3100,d2                      	| [$9b5d: ldx    #$3100]
l_9b60:
	GET_DP_ADDRESS	0xb8                    	| [$9b60: stx    $b8]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_9b62:
	OP_W_ON_DP_ADDRESS	subq,0x2f,#1         | [$9b62: dec    $2f]
	jne	l_9b73                             	| [$9b64: bne    $9b73]
	jbsr	l_9fe0                            	| [$9b66: jsr    $9fe0]
	move.b	#0xd2,d0                        	| [$9b69: lda    #$d2]
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9b6b: tst    $d8]
	jeq	l_9b71                             	| [$9b6d: beq    $9b71]
	sub.b	#0x1e,d0                         	| [$9b6f: suba   #$1e]
l_9b71:
	OP_W_ON_DP_ADDRESS	move,0x2f,d0         | [$9b71: sta    $2f]
l_9b73:
	OP_1_ON_DP_ADDRESS	tst,0xc8             | [$9b73: tst    $c8]
	jne	l_9b94                             	| [$9b75: bne    $9b94]
	OP_1_ON_DP_ADDRESS	tst,0xa9             | [$9b77: tst    $a9]
	jne	l_9be4                             	| [$9b79: bne    $9be4]
	OP_1_ON_DP_ADDRESS	tst,0xb7             | [$9b7b: tst    $b7]
	jeq	l_9be4                             	| [$9b7d: beq    $9be4]
	OP_1_ON_DP_ADDRESS	tst,0xb4             | [$9b7f: tst    $b4]
	jeq	l_9be4                             	| [$9b81: beq    $9be4]
	jbsr	l_4fa1                            	| [$9b83: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$9b86: anda   #$02]
	jeq	l_9b92                             	| [$9b88: beq    $9b92]
	OP_W_ON_DP_ADDRESS	addq,0xc8,#1         | [$9b8a: inc    $c8]
	OP_1_ON_DP_ADDRESS	clr,0xc0             | [$9b8c: clr    $c0]
	OP_1_ON_DP_ADDRESS	clr,0xc1             | [$9b8e: clr    $c1]
	OP_1_ON_DP_ADDRESS	clr,0xc2             | [$9b90: clr    $c2]
l_9b92:
	jra	l_9be4                             	| [$9b92: bra    $9be4]
l_9b94:
	OP_1_ON_DP_ADDRESS	tst,0xc5             | [$9b94: tst    $c5]
	jne	l_9be4                             	| [$9b96: bne    $9be4]
	OP_1_ON_DP_ADDRESS	tst,0xc7             | [$9b98: tst    $c7]
	jne	l_9bb3                             	| [$9b9a: bne    $9bb3]
	move.b	#0x0b,d0                        	| [$9b9c: lda    #$0b]
	jbsr	l_4eb3                            	| [$9b9e: jsr    $4eb3]
	move.b	#0x1b,d0                        	| [$9ba1: lda    #$1b]
	jbsr	l_4eb3                            	| [$9ba3: jsr    $4eb3]
	move.b	#0x1c,d0                        	| [$9ba6: lda    #$1c]
	jbsr	l_4eb3                            	| [$9ba8: jsr    $4eb3]
	OP_W_ON_DP_ADDRESS	addq,0xc7,#1         | [$9bab: inc    $c7]
	OP_W_ON_DP_ADDRESS	addq,0xa0,#1         | [$9bad: inc    $a0]
	OP_W_ON_DP_ADDRESS	addq,0xa9,#1         | [$9baf: inc    $a9]
	OP_W_ON_DP_ADDRESS	addq,0xb5,#1         | [$9bb1: inc    $b5]
l_9bb3:
	jbsr	l_4f8a                            	| [$9bb3: jsr    $4f8a]
	GET_REG_ADDRESS	0,d4                   	| [$9bb6: lda    ,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0x02,d0                         	| [$9bb8: anda   #$02]
	jeq	l_9be2                             	| [$9bba: beq    $9be2]
	OP_W_ON_DP_ADDRESS	addq,0xc6,#1         | [$9bbc: inc    $c6]
	OP_W_ON_DP_ADDRESS	subq,0xc3,#1         | [$9bbe: dec    $c3]
	jne	l_9bc8                             	| [$9bc0: bne    $9bc8]
	move.b	#0x05,d0                        	| [$9bc2: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0xc3,d0         | [$9bc4: sta    $c3]
	OP_W_ON_DP_ADDRESS	addq,0xc4,#1         | [$9bc6: inc    $c4]
l_9bc8:
	OP_R_ON_DP_ADDRESS	move,0xc2,d0         | [$9bc8: lda    $c2]
	add.b	#0x02,d0                         	| [$9bca: adda   #$02]
	cmp.b	#0x0a,d0                         	| [$9bcc: cmpa   #$0a]
	jeq	l_9bd4                             	| [$9bce: beq    $9bd4]
	OP_W_ON_DP_ADDRESS	move,0xc2,d0         | [$9bd0: sta    $c2]
	jra	l_9be4                             	| [$9bd2: bra    $9be4]
l_9bd4:
	OP_1_ON_DP_ADDRESS	clr,0xc2             | [$9bd4: clr    $c2]
	OP_W_ON_DP_ADDRESS	addq,0xc1,#1         | [$9bd6: inc    $c1]
	OP_R_ON_DP_ADDRESS	move,0xc1,d0         | [$9bd8: lda    $c1]
	cmp.b	#0x0a,d0                         	| [$9bda: cmpa   #$0a]
	jne	l_9be4                             	| [$9bdc: bne    $9be4]
	OP_1_ON_DP_ADDRESS	clr,0xc1             | [$9bde: clr    $c1]
	OP_W_ON_DP_ADDRESS	addq,0xc0,#1         | [$9be0: inc    $c0]
l_9be2:
	OP_W_ON_DP_ADDRESS	addq,0xc5,#1         | [$9be2: inc    $c5]
l_9be4:
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9be4: tst    $d8]
	jne	l_9c20                             	| [$9be6: bne    $9c20]
	move.w	#0x2291,d2                      	| [$9be8: ldx    #$2291]
	move.w	#0xf07d,d4                      	| [$9beb: ldu    #$f07d]
	move.b	#0x05,d0                        	| [$9bee: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$9bf0: sta    $48]
	moveq	#0,d0                            	| [$9bf2: clra]
	jbsr	l_a1df                            	| [$9bf3: jsr    $a1df]
	move.w	#0x30c0,d4                      	| [$9bf6: ldu    #$30c0]
	move.w	#0x22d1,d2                      	| [$9bf9: ldx    #$22d1]
	GET_REG_ADDRESS	0,d4                   	| [$9bfc: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jne	l_9c02                             	| [$9bfe: bne    $9c02]
	move.b	#0x10,d0                        	| [$9c00: lda    #$10]
l_9c02:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9c02: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9c06: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d4                   	| [$9c08: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9c0a: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9c0e: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x2b,d0                        	| [$9c10: lda    #$2b]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9c12: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9c16: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d4                   	| [$9c18: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9c1a: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9c1e: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_9c20:
	OP_1_ON_DP_ADDRESS	tst,chrono_hundredth_second_71| [$9c20: tst    chrono_hundredth_second_71]
	jeq	l_9c36                             	| [$9c22: beq    $9c36]
	OP_W_ON_DP_ADDRESS	subq,chrono_hundredth_second_71,#1| [$9c24: dec    chrono_hundredth_second_71]
	jne	l_9c36                             	| [$9c26: bne    $9c36]
	move.b	#0x37,d1                        	| [$9c28: ldb    #$37]
	OP_W_ON_DP_ADDRESS	move,0xb6,d1         | [$9c2a: stb    $b6]
	move.b	#0xb1,d0                        	| [$9c2c: lda    #$b1]
	jbsr	l_4eb3                            	| [$9c2e: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$9c31: lda    #$ff]
	jbsr	l_4eb3                            	| [$9c33: jsr    $4eb3]
l_9c36:
	move.w	#0x3100,d2                      	| [$9c36: ldx    #$3100]
	move.w	#0x3600,d4                      	| [$9c39: ldu    #$3600]
l_9c3c:
	GET_REG_ADDRESS	0,d2                   	| [$9c3c: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_9c94                             	| [$9c3e: beq    $9c94]
	GET_REG_ADDRESS	0x5,d2                 	| [$9c40: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_9c54                             	| [$9c42: bne    $9c54]
	GET_REG_ADDRESS	0x4,d2                 	| [$9c44: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$9c46: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9c48: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$9c4a: deca]
	GET_REG_ADDRESS	0x1,d2                 	| [$9c4b: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x40,d0                         	| [$9c4d: cmpa   #$40]
	jhi	l_9c54                             	| [$9c4f: bhi    $9c54]
	jbsr	l_9e2b                            	| [$9c51: jsr    $9e2b]
l_9c54:
	move.w	#0xf093,d3                      	| [$9c54: ldy    #$f093]
	GET_REG_ADDRESS	0x1,d2                 	| [$9c58: ldd    $1,x]
	LOAD_D                                 	| [$9c58: ldd    $1,x]
	GET_DP_ADDRESS	0xf0                    	| [$9c5a: stx    $f0]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$9c5c: tst    $8,x]
	tst.b	(a0)                             	| [...]
	move.w	#0x3160,d2                      	| [$9c5e: ldx    #$3160]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9c61: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9c63: tst    $d8]
	jeq	l_9c74                             	| [$9c65: beq    $9c74]
	move.b	#0xed,d0                        	| [$9c67: lda    #$ed]
	GET_REG_ADDRESS	0x2,d2                 	| [$9c69: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xdc9e,d3                      	| [$9c6b: ldy    #$dc9e]
	jbsr	l_894b                            	| [$9c6f: jsr    $894b]
	jra	l_9c77                             	| [$9c72: bra    $9c77]
l_9c74:
	jbsr	l_889d                            	| [$9c74: jsr    $889d]
l_9c77:
	add.w	#0x8,d4                          	| [$9c77: leau   $8,u]
	GET_DP_ADDRESS	0xf0                    	| [$9c79: ldx    $f0]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$9c7b: tst    $8,x]
	tst.b	(a0)                             	| [...]
	jeq	l_9c94                             	| [$9c7d: beq    $9c94]
	GET_REG_ADDRESS	0x1,d2                 	| [$9c7f: ldd    $1,x]
	LOAD_D                                 	| [$9c7f: ldd    $1,x]
	add.w	#0xa,d2                          	| [$9c81: leax   $a,x]
	GET_REG_ADDRESS	-0x1,d2                	| [$9c83: adda   -$1,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9c85: addb   ,x]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9c87: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xde4f,d3                      	| [$9c89: ldy    #$de4f]
	jbsr	l_894b                            	| [$9c8d: jsr    $894b]
	addq.w	#0x4,d4                         	| [$9c90: leau   $4,u]
	sub.w	#0xa,d2                          	| [$9c92: leax   -$a,x]
l_9c94:
	add.w	#0x20,d2                         	| [$9c94: leax   $20,x]
	cmp.w	#0x3140,d2                       	| [$9c97: cmpx   #$3140]
	jne	l_9c3c                             	| [$9c9a: bne    $9c3c]
	move.w	#0x30a0,d2                      	| [$9c9c: ldx    #$30a0]
	move.w	#0x3640,d4                      	| [$9c9f: ldu    #$3640]
	GET_REG_ADDRESS	0,d2                   	| [$9ca2: tst    ,x]
	tst.b	(a0)                             	| [...]
	jne	l_9cb0                             	| [$9ca4: bne    $9cb0]
	OP_1_ON_DP_ADDRESS	tst,0xa9             | [$9ca6: tst    $a9]
	jne	l_9ceb                             	| [$9ca8: bne    $9ceb]
	OP_1_ON_DP_ADDRESS	tst,0xb4             | [$9caa: tst    $b4]
	jeq	l_9ceb                             	| [$9cac: beq    $9ceb]
	jra	l_9ce1                             	| [$9cae: bra    $9ce1]
l_9cb0:
	jbsr	l_c027                            	| [$9cb0: jsr    $c027]
	move.b	d0,d1                           	| [$9cb3: tfr    a,b]
	OP_R_ON_DP_ADDRESS	add,0xad,d1          | [$9cb5: addb   $ad]
	OP_W_ON_DP_ADDRESS	move,0xad,d1         | [$9cb7: stb    $ad]
	OP_R_ON_DP_ADDRESS	sub,0xac,d1          | [$9cb9: subb   $ac]
	jcs	l_9cc5                             	| [$9cbb: bcs    $9cc5]
	OP_W_ON_DP_ADDRESS	move,0xad,d1         | [$9cbd: stb    $ad]
	GET_REG_ADDRESS	0x1,d2                 	| [$9cbf: ldb    $1,x]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	add,0xab,d1          | [$9cc1: addb   $ab]
	GET_REG_ADDRESS	0x1,d2                 	| [$9cc3: stb    $1,x]
	move.b	d1,(a0)                         	| [...]
l_9cc5:
	GET_REG_ADDRESS	0x2,d2                 	| [$9cc5: adda   $2,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$9cc7: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x0c,d0                         	| [$9cc9: cmpa   #$0c]
	jcs	l_9cde                             	| [$9ccb: bcs    $9cde]
	cmp.b	#0xed,d0                         	| [$9ccd: cmpa   #$ed]
	jcs	l_9ce1                             	| [$9ccf: bcs    $9ce1]
	OP_1_ON_DP_ADDRESS	tst,0xba             | [$9cd1: tst    $ba]
	jne	l_9cd8                             	| [$9cd3: bne    $9cd8]
	jbsr	l_9e49                            	| [$9cd5: jsr    $9e49]
l_9cd8:
	OP_R_ON_DP_ADDRESS	move,0xa2,d0         | [$9cd8: lda    $a2]
	cmp.b	#0xf8,d0                         	| [$9cda: cmpa   #$f8]
	jcs	l_9ce1                             	| [$9cdc: bcs    $9ce1]
l_9cde:
	jbsr	l_9f84                            	| [$9cde: jsr    $9f84]
l_9ce1:
	move.w	#0x30a0,d2                      	| [$9ce1: ldx    #$30a0]
	move.w	#0xde4f,d3                      	| [$9ce4: ldy    #$de4f]
	jbsr	l_894b                            	| [$9ce8: jsr    $894b]
l_9ceb:
	OP_1_ON_DP_ADDRESS	tst,0xf2             | [$9ceb: tst    $f2]
	jeq	l_9d14                             	| [$9ced: beq    $9d14]
	OP_W_ON_DP_ADDRESS	subq,0xf2,#1         | [$9cef: dec    $f2]
	jne	l_9cf7                             	| [$9cf1: bne    $9cf7]
	OP_R_ON_DP_ADDRESS	move,0xf5,d0         | [$9cf3: lda    $f5]
	jra	l_9d0a                             	| [$9cf5: bra    $9d0a]
l_9cf7:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9cf7: lda    $0f]
	and.b	#0x03,d0                         	| [$9cf9: anda   #$03]
	jne	l_9d14                             	| [$9cfb: bne    $9d14]
	GET_DP_ADDRESS	0xf3                    	| [$9cfd: ldx    $f3]
	MOVE_W_TO_REG	a0,d2                         	| [...]
l_9cff:
	GET_REG_ADDRESS	0,d2                   	| [$9cff: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	jpl	l_9d08                             	| [$9d01: bpl    $9d08]
	move.w	#0xeea2,d2                      	| [$9d03: ldx    #$eea2]
	jra	l_9cff                             	| [$9d06: bra    $9cff]
l_9d08:
	GET_DP_ADDRESS	0xf3                    	| [$9d08: stx    $f3]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_9d0a:
	move.w	#0x2d98,d2                      	| [$9d0a: ldx    #$2d98]
	move.b	#0x04,d1                        	| [$9d0d: ldb    #$04]
l_9d0f:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9d0f: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$9d11: decb]
	jne	l_9d0f                             	| [$9d12: bne    $9d0f]
l_9d14:
	GET_ADDRESS	0x3100                     	| [$9d14: lda    $3100]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3120                     	| [$9d17: ora    $3120]
	or.b	(a0),d0                           	| [...]
	jne	l_9d5c                             	| [$9d1a: bne    $9d5c]
	OP_R_ON_DP_ADDRESS	move,0xa4,d1         | [$9d1c: ldb    $a4]
	cmp.b	#0x08,d1                         	| [$9d1e: cmpb   #$08]
	jne	l_9d5c                             	| [$9d20: bne    $9d5c]
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9d22: tst    $d8]
	jne	l_9d5a                             	| [$9d24: bne    $9d5a]
	GET_DP_ADDRESS	0x98                    	| [$9d26: ldd    $98]
	LOAD_D                                 	| [$9d26: ldd    $98]
	cmp.w	#0x0480,d1                       	| [$9d28: cmpd   #$0480]
	jne	l_9d5a                             	| [$9d2c: bne    $9d5a]
	OP_W_ON_DP_ADDRESS	addq,0xd8,#1         | [$9d2e: inc    $d8]
	move.w	#0x3548,d2                      	| [$9d30: ldx    #$3548]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$9d33: ldb    $19]
	ABX                                    	| [$9d35: abx]
	GET_REG_ADDRESS	0,d2                   	| [$9d36: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$9d38: cmpa   #$02]
	jne	l_9d3d                             	| [$9d3a: bne    $9d3d]
	addq.b	#1,d0                           	| [$9d3c: inca]
l_9d3d:
	add.b	#0x03,d0                         	| [$9d3d: adda   #$03]
	GET_DP_ADDRESS	0x98                    	| [$9d3f: adda   $98]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x98,d0         | [$9d42: sta    $98]
	move.b	#0x05,d0                        	| [$9d44: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0xa4,d0         | [$9d46: sta    $a4]
	jbsr	l_9fe0                            	| [$9d48: jsr    $9fe0]
	move.b	#0x03,d0                        	| [$9d4b: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0xb4,d0         | [$9d4d: sta    $b4]
	OP_W_ON_DP_ADDRESS	move,0xb7,d0         | [$9d4f: sta    $b7]
	subq.b	#1,d0                           	| [$9d51: deca]
	OP_W_ON_DP_ADDRESS	move,0xa8,d0         | [$9d52: sta    $a8]
	move.b	#0xaa,d0                        	| [$9d54: lda    #$aa]
	OP_W_ON_DP_ADDRESS	move,0x2f,d0         | [$9d56: sta    $2f]
	jra	l_9d5c                             	| [$9d58: bra    $9d5c]
l_9d5a:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$9d5a: inc    event_sub_state_28]
l_9d5c:
	move.w	#0x2343,d2                      	| [$9d5c: ldx    #$2343]
	move.b	#0x04,d0                        	| [$9d5f: ldd    #$0480]
	move.w	#0x0480,d1                      	| [$9d5f: ldd    #$0480]
	OP_W_ON_DP_ADDRESS	move,0x54,d0         | [$9d62: sta    $54]
	OP_1_ON_DP_ADDRESS	clr,0x51             | [$9d64: clr    $51]
	OP_R_ON_DP_ADDRESS	move,0xa8,d0         | [$9d66: lda    $a8]
	jpl	l_9d6b                             	| [$9d68: bpl    $9d6b]
	moveq	#0,d0                            	| [$9d6a: clra]
l_9d6b:
	jeq	l_9d8f                             	| [$9d6b: beq    $9d8f]
	cmp.b	#0x01,d0                         	| [$9d6d: cmpa   #$01]
	jeq	l_9d89                             	| [$9d6f: beq    $9d89]
	BIT	#0x01,d0                           	| [$9d71: bita   #$01]
	jeq	l_9d77                             	| [$9d73: beq    $9d77]
	OP_W_ON_DP_ADDRESS	addq,0x51,#1         | [$9d75: inc    $51]
l_9d77:
	lsr.b	#1,d0                            	| [$9d77: lsra]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$9d78: sta    $50]
	move.b	#0xe3,d0                        	| [$9d7a: lda    #$e3]
l_9d7c:
	jbsr	l_9d9c                            	| [$9d7c: bsr    $9d9c]
	sub.w	#0x40,d2                         	| [$9d7e: leax   -$40,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$9d81: dec    $50]
	jne	l_9d7c                             	| [$9d83: bne    $9d7c]
	OP_1_ON_DP_ADDRESS	tst,0x51             | [$9d85: tst    $51]
	jeq	l_9d8f                             	| [$9d87: beq    $9d8f]
l_9d89:
	move.b	#0xe4,d0                        	| [$9d89: lda    #$e4]
	jbsr	l_9d9c                            	| [$9d8b: bsr    $9d9c]
	jra	l_9d97                             	| [$9d8d: bra    $9d97]
l_9d8f:
	OP_1_ON_DP_ADDRESS	tst,0x54             | [$9d8f: tst    $54]
	jeq	l_9da5                             	| [$9d91: beq    $9da5]
	move.b	#0x10,d0                        	| [$9d93: lda    #$10]
	jbsr	l_9d9c                            	| [$9d95: bsr    $9d9c]
l_9d97:
	sub.w	#0x40,d2                         	| [$9d97: leax   -$40,x]
	jra	l_9d8f                             	| [$9d9a: bra    $9d8f]
l_9d9c:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9d9c: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9d9e: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x54,#1         | [$9da2: dec    $54]
	rts                                    	| [$9da4: rts]

l_9da5:
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9da5: tst    $d8]
	jeq	l_9dac                             	| [$9da7: beq    $9dac]
	jbsr	l_a015                            	| [$9da9: jsr    $a015]
l_9dac:
	move.w	#0x31c0,d2                      	| [$9dac: ldx    #$31c0]
	move.w	#0x3660,d4                      	| [$9daf: ldu    #$3660]
	move.b	#0x08,d0                        	| [$9db2: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0xff,d0         | [$9db4: sta    $ff]
	move.w	#0xde51,d3                      	| [$9db6: ldy    #$de51]
l_9dba:
	jbsr	l_894b                            	| [$9dba: jsr    $894b]
	GET_REG_ADDRESS	0,d2                   	| [$9dbd: tst    ,x]
	tst.b	(a0)                             	| [...]
	jmi	l_9dcb                             	| [$9dbf: bmi    $9dcb]
	subq.w	#0x4,d4                         	| [$9dc1: leau   -$4,u]
	addq.w	#0x4,d2                         	| [$9dc3: leax   $4,x]
	OP_W_ON_DP_ADDRESS	subq,0xff,#1         | [$9dc5: dec    $ff]
	jne	l_9dba                             	| [$9dc7: bne    $9dba]
	jra	l_9de1                             	| [$9dc9: bra    $9de1]
l_9dcb:
	GET_REG_ADDRESS	0,d2                   	| [$9dcb: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_DP_ADDRESS	0xbe                    	| [$9dcd: ldx    $be]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9dcf: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$9dd1: lda    $0f]
	and.b	#0x03,d0                         	| [$9dd3: anda   #$03]
	jne	l_9ddf                             	| [$9dd5: bne    $9ddf]
	GET_REG_ADDRESS	0,d2                   	| [$9dd7: tst    ,x]
	tst.b	(a0)                             	| [...]
	jpl	l_9ddd                             	| [$9dd9: bpl    $9ddd]
	subq.w	#0x3,d2                         	| [$9ddb: leax   -$3,x]
l_9ddd:
	GET_DP_ADDRESS	0xbe                    	| [$9ddd: stx    $be]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_9ddf:
	GET_REG_ADDRESS	0,d4                   	| [$9ddf: stb    ,u]
	move.b	d1,(a0)                         	| [...]
l_9de1:
	move.w	#0x31b0,d2                      	| [$9de1: ldx    #$31b0]
	move.b	#0x68,d0                        	| [$9de4: ldd    #$6806]
	move.w	#0x6806,d1                      	| [$9de4: ldd    #$6806]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9de7: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x363c,d4                      	| [$9de9: ldu    #$363c]
	move.w	#0xde4b,d3                      	| [$9dec: ldy    #$de4b]
	OP_1_ON_DP_ADDRESS	tst,0xb5             | [$9df0: tst    $b5]
	jeq	l_9df6                             	| [$9df2: beq    $9df6]
	addq.w	#0x2,d3                         	| [$9df4: leay   $2,y]
l_9df6:
	jbsr	l_af13                            	| [$9df6: jsr    $af13]
	sub.w	#0x8,d4                          	| [$9df9: leau   -$8,u]
	OP_1_ON_DP_ADDRESS	tst,0xb6             | [$9dfb: tst    $b6]
	jeq	l_9e0d                             	| [$9dfd: beq    $9e0d]
	OP_W_ON_DP_ADDRESS	subq,0xb6,#1         | [$9dff: dec    $b6]
	move.b	#0x70,d0                        	| [$9e01: ldd    #$70d0]
	move.w	#0x70d0,d1                      	| [$9e01: ldd    #$70d0]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9e04: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xde8b,d3                      	| [$9e06: ldy    #$de8b]
	jbsr	l_890f                            	| [$9e0a: jsr    $890f]
l_9e0d:
	move.w	#0x3260,d2                      	| [$9e0d: ldx    #$3260]
	move.w	#0xde53,d3                      	| [$9e10: ldy    #$de53]
	move.w	#0x3664,d4                      	| [$9e14: ldu    #$3664]
	move.b	#0x09,d0                        	| [$9e17: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$9e19: sta    $48]
l_9e1b:
	GET_REG_ADDRESS	0,d3                   	| [$9e1b: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$9e1b: ldd    ,y++]
	GET_REG_ADDRESS	0x1,d2                 	| [$9e1d: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_894b                            	| [$9e1f: jsr    $894b]
	addq.w	#0x2,d3                         	| [$9e22: leay   $2,y]
	addq.w	#0x4,d4                         	| [$9e24: leau   $4,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$9e26: dec    $48]
	jne	l_9e1b                             	| [$9e28: bne    $9e1b]
	rts                                    	| [$9e2a: rts]

l_9e2b:
	OP_W_ON_DP_ADDRESS	addq,0xfd,#1         | [$9e2b: inc    $fd]
	OP_W_ON_DP_ADDRESS	subq,0xa8,#1         | [$9e2d: dec    $a8]
	OP_1_ON_DP_ADDRESS	clr,0xa9             | [$9e2f: clr    $a9]
	move.b	#0x08,d0                        	| [$9e31: lda    #$08]
	OP_R_ON_DP_ADDRESS	sub,0xfd,d0          | [$9e33: suba   $fd]
	OP_W_ON_DP_ADDRESS	move,0xb4,d0         | [$9e35: sta    $b4]
	jeq	l_9e3e                             	| [$9e37: beq    $9e3e]
	move.b	#0x60,d0                        	| [$9e39: lda    #$60]
	jbsr	l_4eb3                            	| [$9e3b: jsr    $4eb3]
l_9e3e:
	move.b	#0x20,d0                        	| [$9e3e: lda    #$20]
l_9e40:
	GET_REG_ADDRESS	0,d2                   	| [$9e40: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d0                           	| [$9e42: deca]
	jne	l_9e40                             	| [$9e43: bne    $9e40]
	sub.w	#0x20,d2                         	| [$9e45: leax   -$20,x]
	rts                                    	| [$9e48: rts]

l_9e49:
	moveq	#0,d0                            	| [$9e49: clra]
	jbsr	queue_sound_event_4ead            	| [$9e4a: jsr    queue_sound_event_4ead]
	OP_1_ON_DP_ADDRESS	clr,0x2d             | [$9e4d: clr    $2d]
	OP_W_ON_DP_ADDRESS	addq,0xba,#1         | [$9e4f: inc    $ba]
	GET_DP_ADDRESS	0xb8                    	| [$9e51: ldx    $b8]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0xe,d2                 	| [$9e53: inc    $e,x]
	addq.b	#1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xa1,d0         | [$9e55: lda    $a1]
	GET_REG_ADDRESS	0x1,d2                 	| [$9e57: suba   $1,x]
	sub.b	(a0),d0                          	| [...]
	jeq	l_9fdf                             	| [$9e59: lbeq   $9fdf]
	cmp.b	#0x20,d0                         	| [$9e5d: cmpa   #$20]
	jhi	l_9fdf                             	| [$9e5f: lbhi   $9fdf]
	subq.b	#1,d0                           	| [$9e63: deca]
	GET_REG_ADDRESS	0x9,d2                 	| [$9e64: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$9e66: inc    $8,x]
	addq.b	#1,(a0)                         	| [...]
	addq.b	#1,d0                           	| [$9e68: inca]
	OP_W_ON_DP_ADDRESS	move,0xfe,d0         | [$9e69: sta    $fe]
	sub.b	#0x10,d0                         	| [$9e6b: suba   #$10]
	jpl	l_9e70                             	| [$9e6d: bpl    $9e70]
	neg.b	d0                               	| [$9e6f: nega]
l_9e70:
	move.b	#0x03,d1                        	| [$9e70: ldb    #$03]
	jbsr	l_a606                            	| [$9e72: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x54,d1         | [$9e75: stb    $54]
	sub.b	#0x07,d1                         	| [$9e77: subb   #$07]
	GET_REG_ADDRESS	0xa,d2                 	| [$9e79: stb    $a,x]
	move.b	d1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xfe,d0         | [$9e7b: lda    $fe]
	sub.b	#0x10,d0                         	| [$9e7d: suba   #$10]
	neg.b	d0                               	| [$9e7f: nega]
	OP_W_ON_DP_ADDRESS	move,0xca,d0         | [$9e80: sta    $ca]
	move.b	#0x08,d0                        	| [$9e82: lda    #$08]
	OP_R_ON_DP_ADDRESS	move,0xc6,d1         | [$9e84: ldb    $c6]
	cmp.b	#0x06,d1                         	| [$9e86: cmpb   #$06]
	jls	l_9ec9                             	| [$9e88: bls    $9ec9]
	sub.b	#screen_straight_1a,d1                         	| [$9e8a: subb   #$1a]
	jpl	l_9e8f                             	| [$9e8c: bpl    $9e8f]
	neg.b	d1                               	| [$9e8e: negb]
l_9e8f:
	cmp.b	#0x13,d1                         	| [$9e8f: cmpb   #$13]
	jhi	l_9ec9                             	| [$9e91: bhi    $9ec9]
	move.w	#0xefc0,d2                      	| [$9e93: ldx    #$efc0]
	jbsr	multiply_ab                       	| [$9e96: mul]
	add.w	d1,d2                            	| [$9e97: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0xca,d0         | [$9e99: lda    $ca]
	jpl	l_9e9f                             	| [$9e9b: bpl    $9e9f]
	neg.b	d0                               	| [$9e9d: nega]
	addq.b	#1,d1                           	| [$9e9e: incb]
l_9e9f:
	cmp.b	#0x0e,d0                         	| [$9e9f: cmpa   #$0e]
	jhi	l_9ec9                             	| [$9ea1: bhi    $9ec9]
	moveq	#0,d1                            	| [$9ea3: clrb]
	cmp.b	#0x02,d0                         	| [$9ea4: cmpa   #$02]
	jcs	l_9ea9                             	| [$9ea6: bcs    $9ea9]
	addq.b	#1,d0                           	| [$9ea8: inca]
l_9ea9:
	cmp.b	#0x05,d0                         	| [$9ea9: cmpa   #$05]
	jcs	l_9eae                             	| [$9eab: bcs    $9eae]
	subq.b	#1,d0                           	| [$9ead: deca]
l_9eae:
	cmp.b	#0x07,d0                         	| [$9eae: cmpa   #$07]
	jcs	l_9eb3                             	| [$9eb0: bcs    $9eb3]
	subq.b	#1,d0                           	| [$9eb2: deca]
l_9eb3:
	cmp.b	#0x0b,d0                         	| [$9eb3: cmpa   #$0b]
	jcs	l_9eb8                             	| [$9eb5: bcs    $9eb8]
	addq.b	#1,d0                           	| [$9eb7: inca]
l_9eb8:
	lsr.b	#1,d0                            	| [$9eb8: lsra]
	jcc	l_9ebc                             	| [$9eb9: bcc    $9ebc]
	addq.b	#1,d1                           	| [$9ebb: incb]
l_9ebc:
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$9ebc: lda    a,x]
	move.b	(a0),d0                         	| [...]
	tst.b	d1                               	| [$9ebe: tstb]
	jne	l_9ec5                             	| [$9ebf: bne    $9ec5]
                                         | [$9ec1: lsra]
                                         | [$9ec2: lsra]
                                         | [$9ec3: lsra]
	lsr.b	#4,d0                            	| [$9ec4: lsra]
l_9ec5:
	and.b	#0x0f,d0                         	| [$9ec5: anda   #$0f]
	jra	l_9eca                             	| [$9ec7: bra    $9eca]
l_9ec9:
	moveq	#0,d0                            	| [$9ec9: clra]
l_9eca:
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$9eca: sta    $2d]
	cmp.b	#0x0a,d0                         	| [$9ecc: cmpa   #$0a]
	jlt	l_9ed4                             	| [$9ece: blt    $9ed4]
	move.b	#0x14,d1                        	| [$9ed0: ldb    #$14]
	OP_W_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d1| [$9ed2: stb    chrono_hundredth_second_71]
l_9ed4:
	OP_R_ON_DP_ADDRESS	move,0x2d,d0         | [$9ed4: lda    $2d]
	move.w	#0xf088,d2                      	| [$9ed6: ldx    #$f088]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$9ed9: lda    a,x]
	move.b	(a0),d0                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9edb: tst    $d8]
	jeq	l_9ef1                             	| [$9edd: beq    $9ef1]
	GET_DP_ADDRESS	0xb8                    	| [$9edf: ldx    $b8]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x9,d2                 	| [$9ee1: lda    $9,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x02,d0                         	| [$9ee3: cmpa   #$02]
	jcs	l_9f04                             	| [$9ee5: bcs    $9f04]
	OP_1_ON_DP_ADDRESS	clr,0xd9             | [$9ee7: clr    $d9]
	cmp.b	#0x0a,d0                         	| [$9ee9: cmpa   #$0a]
	jhi	l_9f04                             	| [$9eeb: bhi    $9f04]
	OP_W_ON_DP_ADDRESS	addq,0xd9,#1         | [$9eed: inc    $d9]
	jra	l_9ef8                             	| [$9eef: bra    $9ef8]
l_9ef1:
	GET_DP_ADDRESS	0x99                    	| [$9ef1: adda   $99]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	PUSH_SR
	OP_W_ON_DP_ADDRESS	move,0x99,d0         | [$9ef4: sta    $99]
	POP_SR
	jcc	l_9eff                             	| [$9ef6: bcc    $9eff]
l_9ef8:
	OP_R_ON_DP_ADDRESS	move,0x98,d0         | [$9ef8: lda    $98]
	CLR_XC_FLAGS
	move.b	#0x01,d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,0x98,d0         | [$9efd: sta    $98]
l_9eff:
	jbsr	l_9092                            	| [$9eff: jsr    $9092]
	jra	l_9f06                             	| [$9f02: bra    $9f06]
l_9f04:
	GET_REG_ADDRESS	0x8,d2                 	| [$9f04: clr    $8,x]
	clr.b	(a0)                         	| [...]
l_9f06:
	move.w	#0x31bc,d2                      	| [$9f06: ldx    #$31bc]
l_9f09:
	addq.w	#0x4,d2                         	| [$9f09: leax   $4,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$9f0b: tst    $1,x]
	tst.b	(a0)                             	| [...]
	jne	l_9f09                             	| [$9f0d: bne    $9f09]
	OP_R_ON_DP_ADDRESS	move,0xca,d0         | [$9f0f: lda    $ca]
	jmi	l_9f2a                             	| [$9f11: bmi    $9f2a]
	cmp.b	#0x03,d0                         	| [$9f13: cmpa   #$03]
	jgt	l_9f1b                             	| [$9f15: bgt    $9f1b]
	asl.b	#1,d0                            	| [$9f17: asla]
	addq.b	#1,d0                           	| [$9f18: inca]
	jra	l_9f44                             	| [$9f19: bra    $9f44]
l_9f1b:
	sub.b	#0x04,d0                         	| [$9f1b: suba   #$04]
	OP_W_ON_DP_ADDRESS	move,0x55,d0         | [$9f1d: sta    $55]
	move.b	#0x03,d1                        	| [$9f1f: ldb    #$03]
	jbsr	l_a606                            	| [$9f21: jsr    $a606]
	OP_R_ON_DP_ADDRESS	add,0x55,d1          | [$9f24: addb   $55]
	add.b	#0x06,d1                         	| [$9f26: addb   #$06]
	jra	l_9f46                             	| [$9f28: bra    $9f46]
l_9f2a:
	neg.b	d0                               	| [$9f2a: nega]
	cmp.b	#0x03,d0                         	| [$9f2b: cmpa   #$03]
	jgt	l_9f34                             	| [$9f2d: bgt    $9f34]
	asl.b	#1,d0                            	| [$9f2f: asla]
	addq.b	#1,d0                           	| [$9f30: inca]
	neg.b	d0                               	| [$9f31: nega]
	jra	l_9f44                             	| [$9f32: bra    $9f44]
l_9f34:
	sub.b	#0x04,d0                         	| [$9f34: suba   #$04]
	OP_W_ON_DP_ADDRESS	move,0x5f,d0         | [$9f36: sta    $5f]
	move.b	#0x03,d1                        	| [$9f38: ldb    #$03]
	jbsr	l_a606                            	| [$9f3a: jsr    $a606]
	OP_R_ON_DP_ADDRESS	add,0x5f,d1          | [$9f3d: addb   $5f]
	add.b	#0x06,d1                         	| [$9f3f: addb   #$06]
	neg.b	d1                               	| [$9f41: negb]
	jra	l_9f46                             	| [$9f42: bra    $9f46]
l_9f44:
	move.b	d0,d1                           	| [$9f44: tfr    a,b]
l_9f46:
	add.b	#0xc8,d1                         	| [$9f46: addb   #$c8]
	GET_REG_ADDRESS	0x2,d2                 	| [$9f48: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc6,d0         | [$9f4a: lda    $c6]
	cmp.b	#0x06,d0                         	| [$9f4c: cmpa   #$06]
	jhi	l_9f52                             	| [$9f4e: bhi    $9f52]
	move.b	#0x06,d0                        	| [$9f50: lda    #$06]
l_9f52:
	cmp.b	#0x2f,d0                         	| [$9f52: cmpa   #$2f]
	jcs	l_9f58                             	| [$9f54: bcs    $9f58]
	move.b	#0x2f,d0                        	| [$9f56: lda    #$2f]
l_9f58:
	add.b	#0x8c,d0                         	| [$9f58: adda   #$8c]
	GET_REG_ADDRESS	0x1,d2                 	| [$9f5a: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x88,d0                        	| [$9f5c: lda    #$88]
	GET_REG_ADDRESS	0,d2                   	| [$9f5e: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x3c,d0                        	| [$9f60: lda    #$3c]
	OP_W_ON_DP_ADDRESS	move,0xf2,d0         | [$9f62: sta    $f2]
	OP_R_ON_DP_ADDRESS	move,0x2d,d1         | [$9f64: ldb    $2d]
	addq.b	#1,d1                           	| [$9f66: incb]
	lsr.b	#1,d1                            	| [$9f67: lsrb]
	move.w	#0xf082,d2                      	| [$9f68: ldx    #$f082]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$9f6b: lda    b,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0xf5,d0         | [$9f6d: sta    $f5]
	GET_DP_ADDRESS	0xb8                    	| [$9f6f: ldy    $b8]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0x8,d3                 	| [$9f72: tst    $8,y]
	tst.b	(a0)                             	| [...]
	jeq	l_9f9d                             	| [$9f74: beq    $9f9d]
	moveq	#0,d0                            	| [$9f76: clra]
	jbsr	l_4eb3                            	| [$9f77: jsr    $4eb3]
	move.b	#0x09,d0                        	| [$9f7a: lda    #$09]
	jbsr	l_4eb3                            	| [$9f7c: jsr    $4eb3]
	move.b	#0x0a,d0                        	| [$9f7f: lda    #$0a]
	jbsr	l_4eb3                            	| [$9f81: jsr    $4eb3]
l_9f84:
	OP_1_ON_DP_ADDRESS	clr,0xa0             | [$9f84: clr    $a0]
	OP_1_ON_DP_ADDRESS	clr,0xba             | [$9f86: clr    $ba]
	OP_1_ON_DP_ADDRESS	tst,0xb4             | [$9f88: tst    $b4]
	jeq	l_9f8e                             	| [$9f8a: beq    $9f8e]
	OP_W_ON_DP_ADDRESS	addq,0xb7,#1         | [$9f8c: inc    $b7]
l_9f8e:
	move.b	#0x70,d0                        	| [$9f8e: ldd    #$7010]
	move.w	#0x7010,d1                      	| [$9f8e: ldd    #$7010]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xa1                    	| [$9f91: std    $a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x30c3,d4                      	| [$9f93: ldu    #$30c3]
	move.b	#0x0c,d0                        	| [$9f96: lda    #$0c]
l_9f98:
	GET_REG_ADDRESS	0,d4                   	| [$9f98: clr    ,u+]
	addq.w	#1,d4                           	| [...]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d0                           	| [$9f9a: deca]
	jne	l_9f98                             	| [$9f9b: bne    $9f98]
l_9f9d:
	move.w	#0x30e0,d2                      	| [$9f9d: ldx    #$30e0]
	GET_REG_ADDRESS	0,d2                   	| [$9fa0: clr    ,x]
	clr.b	(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x2d,d0         | [$9fa2: lda    $2d]
	move.w	#0xf088,d3                      	| [$9fa4: ldy    #$f088]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$9fa8: lda    a,y]
	move.b	(a0),d0                         	| [...]
	move.b	d0,d1                           	| [$9faa: tfr    a,b]
	and.b	#0x0f,d1                         	| [$9fac: andb   #$0f]
                                         | [$9fae: lsra]
                                         | [$9faf: lsra]
                                         | [$9fb0: lsra]
	lsr.b	#4,d0                            	| [$9fb1: lsra]
	OP_1_ON_DP_ADDRESS	tst,0xd8             | [$9fb2: tst    $d8]
	jeq	l_9fc4                             	| [$9fb4: beq    $9fc4]
	move.b	#0x01,d0                        	| [$9fb6: ldd    #$0100]
	move.w	#0x0100,d1                      	| [$9fb6: ldd    #$0100]
	OP_1_ON_DP_ADDRESS	tst,0xd9             | [$9fb9: tst    $d9]
	jne	l_9fbe                             	| [$9fbb: bne    $9fbe]
	moveq	#0,d0                            	| [$9fbd: clra]
l_9fbe:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9fbe: std    ,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$9fc0: clr    $2,x]
	clr.b	(a0)                         	| [...]
	jra	l_9fc6                             	| [$9fc2: bra    $9fc6]
l_9fc4:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9fc4: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_9fc6:
	move.w	d2,d3                           	| [$9fc6: tfr    x,y]
	move.w	#0x2598,d2                      	| [$9fc8: ldx    #$2598]
	move.b	#0x04,d1                        	| [$9fcb: ldb    #$04]
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$9fcd: clr    $50]
l_9fcf:
	GET_REG_ADDRESS	0,d3                   	| [$9fcf: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$9fd1: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$9fd4: clr    $0800,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$9fd8: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$9fda: decb]
	jne	l_9fcf                             	| [$9fdb: bne    $9fcf]
	GET_REG_UNCHECKED_ADDRESS	-0x1,d2                	| [$9fdd: clr    -$1,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_9fdf:
	rts                                    	| [$9fdf: rts]

l_9fe0:
	move.w	#0x3100,d2                      	| [$9fe0: ldx    #$3100]
l_9fe3:
	GET_REG_ADDRESS	0,d2                   	| [$9fe3: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_9ff1                             	| [$9fe5: beq    $9ff1]
	add.w	#0x20,d2                         	| [$9fe7: leax   $20,x]
	cmp.w	#0x3140,d2                       	| [$9fea: cmpx   #$3140]
	jne	l_9fe3                             	| [$9fed: bne    $9fe3]
	jra	l_a014                             	| [$9fef: bra    $a014]
l_9ff1:
	OP_R_ON_DP_ADDRESS	move,0xa4,d0         | [$9ff1: lda    $a4]
	cmp.b	#0x08,d0                         	| [$9ff3: cmpa   #$08]
	jeq	l_a014                             	| [$9ff5: beq    $a014]
	OP_W_ON_DP_ADDRESS	addq,0xa4,#1         | [$9ff7: inc    $a4]
	move.b	#0xa8,d0                        	| [$9ff9: ldd    #$a8f0]
	move.w	#0xa8f0,d1                      	| [$9ff9: ldd    #$a8f0]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$9ffc: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$9ffe: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$a000: lda    #$02]
	GET_REG_ADDRESS	0x4,d2                 	| [$a002: sta    $4,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$a004: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	addq.b	#1,d0                           	| [$a006: inca]
	GET_REG_ADDRESS	0x6,d2                 	| [$a007: sta    $6,x]
	move.b	d0,(a0)                         	| [...]
	GET_DP_ADDRESS	0xbb                    	| [$a009: stx    $bb]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xb5             | [$a00b: clr    $b5]
	move.b	#0x28,d0                        	| [$a00d: lda    #$28]
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$a00f: sta    $c4]
	jbsr	l_5027                            	| [$a011: jsr    $5027]
l_a014:
	rts                                    	| [$a014: rts]

l_a015:
	move.w	#0x3624,d4                      	| [$a015: ldu    #$3624]
l_a018:
	move.w	#0xdcbc,d3                      	| [$a018: ldy    #$dcbc]
	move.w	#0x3548,d2                      	| [$a01c: ldx    #$3548]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$a01f: ldb    $19]
	ABX                                    	| [$a021: abx]
	GET_REG_ADDRESS	0,d2                   	| [$a022: lda    ,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x08,d1                        	| [$a024: ldb    #$08]
	jbsr	multiply_ab                       	| [$a026: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$a027: leay   b,y]
	move.w	#0x3400,d2                      	| [$a029: ldx    #$3400]
	move.b	#0x73,d0                        	| [$a02c: ldd    #$7380]
	move.w	#0x7380,d1                      	| [$a02c: ldd    #$7380]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$a02f: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_879e                            	| [$a031: jsr    $879e]
	move.b	#0x90,d1                        	| [$a034: ldb    #$90]
	GET_REG_ADDRESS	0x2,d2                 	| [$a036: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	addq.w	#0x4,d3                         	| [$a038: leay   $4,y]
	add.w	#0x10,d4                         	| [$a03a: leau   $10,u]
	jbsr	l_889d                            	| [$a03d: jsr    $889d]
	jbsr	l_9092                            	| [$a040: jsr    $9092]
	OP_1_ON_DP_ADDRESS	tst,0xdc             | [$a043: tst    $dc]
	jne	l_a053                             	| [$a045: bne    $a053]
	move.b	#0xad,d0                        	| [$a047: lda    #$ad]
	jbsr	l_4eb3                            	| [$a049: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$a04c: lda    #$ff]
	jbsr	l_4eb3                            	| [$a04e: jsr    $4eb3]
	OP_W_ON_DP_ADDRESS	addq,0xdc,#1         | [$a051: inc    $dc]
l_a053:
	rts                                    	| [$a053: rts]

l_a054:
	jbsr	l_afaf                            	| [$a054: jsr    $afaf]
	OP_1_ON_DP_ADDRESS	clr,0xb6             | [$a057: clr    $b6]
	jbsr	l_9dac                            	| [$a059: jsr    $9dac]
	GET_ADDRESS	0x363d                     	| [$a05c: clr    $363d]
	clr.b	(a0)                         	| [...]
	moveq	#0,d0                            	| [$a05f: clra]
	jbsr	l_4eb3                            	| [$a060: jsr    $4eb3]
	move.w	#0x3508,d2                      	| [$a063: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$a066: ldb    $19]
	ABX                                    	| [$a068: abx]
	GET_DP_ADDRESS	0x98                    	| [$a069: ldd    $98]
	LOAD_D                                 	| [$a069: ldd    $98]
	cmp.w	#0x0480,d1                       	| [$a06b: cmpd   #$0480]
	jcs	l_a078                             	| [$a06f: bcs    $a078]
	GET_REG_ADDRESS	0,d2                   	| [$a071: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x40,d2                	| [$a073: inc    $40,x]
	addq.b	#1,(a0)                         	| [...]
	jra	l_a07b                             	| [$a076: bra    $a07b]
l_a078:
	GET_REG_ADDRESS	0x40,d2                	| [$a078: clr    $40,x]
	clr.b	(a0)                         	| [...]
l_a07b:
	jbsr	l_7f0a                            	| [$a07b: jsr    $7f0a]
	jbsr	l_5466                            	| [$a07e: jsr    $5466]
	move.b	#0x80,d0                        	| [$a081: ldd    #$8020]
	move.w	#0x8020,d1                      	| [$a081: ldd    #$8020]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xa1                    	| [$a084: std    $a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$a086: inc    $26]
	move.b	#0x08,d0                        	| [$a088: lda    #$08]
	move.w	#0x3028,d2                      	| [$a08a: ldx    #$3028]
	jra	l_96eb                             	| [$a08d: jra    $96eb]
	rts                                    	| [$a090: rts]

l_a091:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$a091: lda    event_sub_state_28]
	
	.ifndef	RELEASE
	move.w	#0xf096,d2
	.endif
	lea	table_f096,a2                  	| [$a093: ldx   #table_f096]
	asl.b	#1,d0                            	| [$a096: asla]
	JSR_A_INDEXED	A2                   	| [$a097: jsr    [a,x]] [jump_table]
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$a099: lda    $0c]
	and.b	#0x0f,d0                         	| [$a09b: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$a09d: cmpa   #$0f]
	jne	l_a0a4                             	| [$a09f: bne    $a0a4]
	jra	l_5869                             	| [$a0a1: jra    $5869]
l_a0a4:
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$a0a4: lda    $03]
	jeq	l_a0ab                             	| [$a0a6: beq    $a0ab]
	jra	l_7c20                             	| [$a0a8: jra    $7c20]
l_a0ab:
	rts                                    	| [$a0ab: rts]

l_a0ac:
	GET_ADDRESS	flip_screen_set_1480       	| [$a0ac: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x0f,d1         | [$a0af: ldb    $0f]
	and.b	#0x03,d1                         	| [$a0b1: andb   #$03]
	move.w	#0xeea2,d4                      	| [$a0b3: ldu    #$eea2]
	GET_ADDRESS	0x3460                     	| [$a0b6: stu    $3460]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x00,d0                        	| [$a0b9: ldd    #$0006]
	move.w	#0x0006,d1                      	| [$a0b9: ldd    #$0006]
	move.w	#0x3458,d4                      	| [$a0bc: ldu    #$3458]
l_a0bf:
	GET_REG_ADDRESS	0,d4                   	| [$a0bf: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	add.b	#0x0a,d0                         	| [$a0c1: adda   #$0a]
	subq.b	#1,d1                           	| [$a0c3: decb]
	jne	l_a0bf                             	| [$a0c4: bne    $a0bf]
	moveq	#0,d0                            	| [$a0c6: clra]
	jbsr	queue_event_4e9a                  	| [$a0c7: jsr    queue_event_4e9a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a0ca: inc    event_sub_state_28]
	rts                                    	| [$a0cc: rts]

l_a0cd:
	move.w	#0x2000,d2                      	| [$a0cd: ldx    #$2000]
	move.b	#0x0f,d0                        	| [$a0d0: ldd    #$0fab]
	move.w	#0x0fab,d1                      	| [$a0d0: ldd    #$0fab]
l_a0d3:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a0d3: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a0d7: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	cmp.w	#0x2380,d2                       	| [$a0d9: cmpx   #$2380]
	jne	l_a0d3                             	| [$a0dc: bne    $a0d3]
* protection to crash if coin 4 was set??
                                         | [$a0de: nop] bootleg_hack   LDA    system_1680
                                         | [$a0df: nop] bootleg_hack   ANDA   #$20
                                         | [$a0e0: nop] bootleg_hack   LBEQ   $A25D
                                         | [$a0e1: nop]
                                         | [$a0e2: nop]
                                         | [$a0e3: nop]
                                         | [$a0e4: nop]
                                         | [$a0e5: nop]
                                         | [$a0e6: nop]
	jbsr	l_a1ec                            	| [$a0e7: jsr    $a1ec]
l_a0ea:
	move.w	#0x2480,d2                      	| [$a0ea: ldx    #$2480]
	move.w	#0xe7a8,d4                      	| [$a0ed: ldu    #$e7a8]
	move.b	#0x20,d0                        	| [$a0f0: lda    #$20]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a0f2: sta    $49]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d1| [$a0f4: ldb    event_sub_state_2a]
l_a0f6:
	move.b	#0x05,d0                        	| [$a0f6: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a0f8: sta    $48]
l_a0fa:
	GET_REG_ADDRESS	0,d4                   	| [$a0fa: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a0fc: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a0fe: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d2                         	| [$a102: leax   -$40,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a105: dec    $48]
	jne	l_a0fa                             	| [$a107: bne    $a0fa]
	add.w	#0x0141,d2                       	| [$a109: leax   $0141,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$a10d: dec    $49]
	jne	l_a0f6                             	| [$a10f: bne    $a0f6]
	move.w	#0x24c0,d2                      	| [$a111: ldx    #$24c0]
	move.w	#0xec03,d4                      	| [$a114: ldu    #$ec03]
	move.b	#0x07,d0                        	| [$a117: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$a119: sta    $51]
l_a11b:
	GET_REG_ADDRESS	0,d4                   	| [$a11b: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a11d: sta    $50]
l_a11f:
	move.b	#0x20,d0                        	| [$a11f: lda    #$20]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a121: sta    $48]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$a123: lda    event_sub_state_2a]
	jbsr	l_a1df                            	| [$a125: jsr    $a1df]
	add.w	#0x20,d2                         	| [$a128: leax   $20,x]
	sub.w	#0x20,d4                         	| [$a12b: leau   -$20,u]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a12e: dec    $50]
	jne	l_a11f                             	| [$a130: bne    $a11f]
	add.w	#0x20,d4                         	| [$a132: leau   $20,u]
	OP_W_ON_DP_ADDRESS	subq,0x51,#1         | [$a135: dec    $51]
	jne	l_a11b                             	| [$a137: bne    $a11b]
	move.b	#0x80,d1                        	| [$a139: ldb    #$80]
	move.w	#0x2ec0,d2                      	| [$a13b: ldx    #$2ec0]
	move.b	#0x20,d0                        	| [$a13e: lda    #$20]
	jbsr	l_96c4                            	| [$a140: jsr    $96c4]
	move.b	#0x8d,d1                        	| [$a143: ldb    #$8d]
	move.w	#0x2f01,d2                      	| [$a145: ldx    #$2f01]
	move.b	#0x11,d0                        	| [$a148: lda    #$11]
	jbsr	l_96c4                            	| [$a14a: jsr    $96c4]
	moveq	#0,d1                            	| [$a14d: clrb]
	move.w	#0x2f12,d2                      	| [$a14e: ldx    #$2f12]
	move.b	#0x0d,d0                        	| [$a151: lda    #$0d]
	jbsr	l_96c4                            	| [$a153: jsr    $96c4]
                                         | [$a156: nop] bootleg_hack  LDA    system_1680
                                         | [$a157: nop]
                                         | [$a158: nop]
                                         | [$a159: nop]
                                         | [$a15a: nop]
                                         | [$a15b: nop]
                                         | [$a15c: nop]
                                         | [$a15d: nop]
                                         | [$a15e: nop]
                                         | [$a15f: nop]
                                         | [$a160: nop]
                                         | [$a161: nop]
	jra	l_a28e                             	| [$a162: lbra   $a28e]
                                         | [$a165: nop]
                                         | [$a166: nop]
                                         | [$a167: nop]
l_a168:
	move.w	#0x2507,d2                      	| [$a168: ldx    #$2507]
	move.w	#0xf0ec,d4                      	| [$a16b: ldu    #$f0ec]
	move.b	#0x12,d0                        	| [$a16e: lda    #$12]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a170: sta    $48]
	moveq	#0,d0                            	| [$a172: clra]
	jbsr	l_a1df                            	| [$a173: bsr    $a1df]
	move.b	#0x03,d0                        	| [$a175: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a177: sta    $49]
	move.w	#0x2590,d2                      	| [$a179: ldx    #$2590]
	move.w	#0x38e6,d4                      	| [$a17c: ldu    #$38e6]
	move.w	#0xee98,d3                      	| [$a17f: ldy    #$ee98]
l_a183:
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$a183: clr    $50]
	move.b	#0x03,d1                        	| [$a185: ldb    #$03]
	OP_W_ON_DP_ADDRESS	move,0x51,d1         | [$a187: stb    $51]
	GET_REG_ADDRESS	0,d3                   	| [$a189: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
l_a18b:
	GET_REG_ADDRESS	0,d4                   	| [$a18b: lda    ,u]
	move.b	(a0),d0                         	| [...]
                                         | [$a18d: lsra]
	lsr.b	#2,d0                            	| [$a18e: lsra]
l_a18f:
                                         | [$a18f: lsra]
	lsr.b	#2,d0                            	| [$a190: lsra]
	jbsr	l_956c                            	| [$a191: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a194: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a198: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d4                   	| [$a19a: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$a19c: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a19f: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a1a3: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x51,#1         | [$a1a5: dec    $51]
	jne	l_a18b                             	| [$a1a7: bne    $a18b]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a1a9: clr    ,x]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a1ab: stb    $0800,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0xb,d2                          	| [$a1af: leax   -$b,x]
	move.b	#0x03,d0                        	| [$a1b1: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a1b3: sta    $48]
	move.b	d1,d0                           	| [$a1b5: tfr    b,a]
	jbsr	l_a1df                            	| [$a1b7: bsr    $a1df]
	add.w	#0x42,d2                         	| [$a1b9: leax   $42,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$a1bc: dec    $49]
	jne	l_a183                             	| [$a1be: bne    $a183]
	move.w	#0x2588,d2                      	| [$a1c0: ldx    #$2588]
	move.b	#0x03,d0                        	| [$a1c3: lda    #$03]
	move.w	#0xf0fe,d4                      	| [$a1c5: ldu    #$f0fe]
l_a1c8:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a1c8: sta    $49]
l_a1ca:
	move.b	#0x80,d0                        	| [$a1ca: ldd    #$8002]
	move.w	#0x8002,d1                      	| [$a1ca: ldd    #$8002]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$a1cd: stb    $48]
	jbsr	l_a1df                            	| [$a1cf: bsr    $a1df]
	add.w	#0x3e,d2                         	| [$a1d1: leax   $3e,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$a1d4: dec    $49]
	jne	l_a1ca                             	| [$a1d6: bne    $a1ca]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a1d8: inc    event_sub_state_28]
	rts                                    	| [$a1da: rts]

l_a1db:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a1db: sta    $48]
	move.b	#0xc0,d0                        	| [$a1dd: lda    #$c0] original LDA    #$A0
l_a1df:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a1df: sta    $0800,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d4                   	| [$a1e3: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a1e5: stb    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a1e7: dec    $48]
	jne	l_a1df                             	| [$a1e9: bne    $a1df]
	rts                                    	| [$a1eb: rts]

l_a1ec:
	move.b	#0x40,d0                        	| [$a1ec: ldd    #$40c0]
	move.w	#0x40c0,d1                      	| [$a1ec: ldd    #$40c0]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$a1ef: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x2123,d2                      	| [$a1f1: ldx    #$2123]
	move.w	#0xf09e,d4                      	| [$a1f4: ldu    #$f09e]
	move.b	#0x08,d1                        	| [$a1f7: ldb    #$08]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$a1f9: stb    $49]
l_a1fb:
	move.b	#0x08,d0                        	| [$a1fb: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a1fd: sta    $48]
	move.b	#0xc0,d0                        	| [$a1ff: lda    #$c0]
	jbsr	l_a1df                            	| [$a201: jsr    $a1df]
	add.w	#0x38,d2                         	| [$a204: leax   $38,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$a207: dec    $49]
	jne	l_a1fb                             	| [$a209: bne    $a1fb]
	sub.w	#0x01f8,d2                       	| [$a20b: leax   -$01f8,x]
	move.b	#0x08,d1                        	| [$a20f: ldb    #$08]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$a211: stb    $49]
	moveq	#0,d1                            	| [$a213: clrb]
l_a214:
	move.b	#0x10,d0                        	| [$a214: lda    #$10]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a216: sta    $48]
	move.b	#0xc0,d0                        	| [$a218: lda    #$c0]
l_a21a:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a21a: sta    $0800,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a21e: stb    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d1                           	| [$a220: incb]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a221: dec    $48]
	jne	l_a21a                             	| [$a223: bne    $a21a]
	add.w	#0x30,d2                         	| [$a225: leax   $30,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$a228: dec    $49]
	jne	l_a214                             	| [$a22a: bne    $a214]
	sub.w	#0x0283,d2                       	| [$a22c: leax   -$0283,x]
	move.b	#0x02,d0                        	| [$a230: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a232: sta    $50]
l_a234:
	move.b	#0x04,d0                        	| [$a234: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a236: sta    $48]
	move.b	#0xc0,d0                        	| [$a238: lda    #$c0]
	jbsr	l_a1df                            	| [$a23a: jsr    $a1df]
	add.w	#0x3c,d2                         	| [$a23d: leax   $3c,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a240: dec    $50]
	jne	l_a234                             	| [$a242: bne    $a234]
	add.w	#0x01fc,d2                       	| [$a244: leax   $01fc,x]
	move.b	#0x02,d0                        	| [$a248: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a24a: sta    $50]
l_a24c:
	move.b	#0x03,d0                        	| [$a24c: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a24e: sta    $48]
	move.b	#0xc0,d0                        	| [$a250: lda    #$c0]
	jbsr	l_a1df                            	| [$a252: jsr    $a1df]
	add.w	#0x3d,d2                         	| [$a255: leax   $3d,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a258: dec    $50]
	jne	l_a24c                             	| [$a25a: bne    $a24c]
	rts                                    	| [$a25c: rts]

	move.b	#0x40,d0                        	| [$a25d: ldd    #$40c0] original  LDD    #$20A0
	move.w	#0x40c0,d1                      	| [$a25d: ldd    #$40c0] original  LDD    #$20A0
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$a260: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x20a3,d2                      	| [$a262: ldx    #$20a3]
	move.w	#0xf104,d4                      	| [$a265: ldu    #$f104]
	move.b	#0x0c,d0                        	| [$a268: lda    #$0c]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a26a: sta    $50]
l_a26c:
	move.b	#0x07,d0                        	| [$a26c: lda    #$07]
	jbsr	l_a1db                            	| [$a26e: jsr    $a1db]
	add.w	#0x39,d2                         	| [$a271: leax   $39,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a274: dec    $50]
	jne	l_a26c                             	| [$a276: bne    $a26c]
	move.w	#0x21aa,d2                      	| [$a278: ldx    #$21aa]
	move.b	#0x08,d0                        	| [$a27b: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a27d: sta    $50]
l_a27f:
	move.b	#0x14,d0                        	| [$a27f: lda    #$14]
	jbsr	l_a1db                            	| [$a281: jsr    $a1db]
	add.w	#0x2c,d2                         	| [$a284: leax   $2c,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a287: dec    $50]
	jne	l_a27f                             	| [$a289: bne    $a27f]
	jra	l_a0ea                             	| [$a28b: jra    $a0ea]
l_a28e:
	move.w	#0x26c0,d2                      	| [$a28e: ldx    #$26c0]
	move.w	#0xeba0,d4                      	| [$a291: ldu    #$eba0]
	move.b	#0x03,d0                        	| [$a294: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$a296: sta    $51]
l_a298:
	GET_REG_ADDRESS	0,d4                   	| [$a298: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a29a: sta    $50]
l_a29c:
	move.b	#0x20,d0                        	| [$a29c: lda    #$20]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a29e: sta    $48]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$a2a0: lda    event_sub_state_2a]
	jbsr	l_a1df                            	| [$a2a2: jsr    $a1df]
	add.w	#0x20,d2                         	| [$a2a5: leax   $20,x]
	sub.w	#0x20,d4                         	| [$a2a8: leau   -$20,u]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a2ab: dec    $50]
	jne	l_a29c                             	| [$a2ad: bne    $a29c]
	add.w	#0x20,d4                         	| [$a2af: leau   $20,u]
	OP_W_ON_DP_ADDRESS	subq,0x51,#1         | [$a2b2: dec    $51]
	jne	l_a298                             	| [$a2b4: bne    $a298]
	move.b	#0x80,d1                        	| [$a2b6: ldb    #$80]
	move.w	#0x2ec2,d2                      	| [$a2b8: ldx    #$2ec2]
	move.b	#0x0b,d0                        	| [$a2bb: lda    #$0b]
	jbsr	l_96c4                            	| [$a2bd: jsr    $96c4]
	move.b	#0x8d,d1                        	| [$a2c0: ldb    #$8d]
	move.w	#0x2f03,d2                      	| [$a2c2: ldx    #$2f03]
	move.b	#0x09,d0                        	| [$a2c5: lda    #$09]
	jbsr	l_96c4                            	| [$a2c7: jsr    $96c4]
	moveq	#0,d1                            	| [$a2ca: clrb]
	move.w	#0x2f10,d2                      	| [$a2cb: ldx    #$2f10]
	move.b	#0x0d,d0                        	| [$a2ce: lda    #$0d]
	jbsr	l_96c4                            	| [$a2d0: jsr    $96c4]
	jra	l_a168                             	| [$a2d3: jra    $a168]
	move.w	#0x26c0,d2                      	| [$a2d6: ldx    #$26c0]
	move.w	#0xf1f8,d4                      	| [$a2d9: ldu    #$f1f8]
	move.b	#0x03,d0                        	| [$a2dc: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$a2de: sta    $51]
l_a2e0:
	GET_REG_ADDRESS	0,d4                   	| [$a2e0: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a2e2: sta    $50]
l_a2e4:
	move.b	#0x20,d0                        	| [$a2e4: lda    #$20]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a2e6: sta    $48]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$a2e8: lda    event_sub_state_2a]
	jbsr	l_a1df                            	| [$a2ea: jsr    $a1df]
	add.w	#0x20,d2                         	| [$a2ed: leax   $20,x]
	sub.w	#0x20,d4                         	| [$a2f0: leau   -$20,u]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a2f3: dec    $50]
	jne	l_a2e4                             	| [$a2f5: bne    $a2e4]
	add.w	#0x20,d4                         	| [$a2f7: leau   $20,u]
	OP_W_ON_DP_ADDRESS	subq,0x51,#1         | [$a2fa: dec    $51]
	jne	l_a2e0                             	| [$a2fc: bne    $a2e0]
	OP_R_ON_DP_ADDRESS	move,0x2b,d1         | [$a2fe: ldb    $2b]
	move.w	#0x2ec1,d2                      	| [$a300: ldx    #$2ec1]
	move.b	#0x0c,d0                        	| [$a303: lda    #$0c]
	jbsr	l_96c4                            	| [$a305: jsr    $96c4]
	move.w	#0x2f02,d2                      	| [$a308: ldx    #$2f02]
	move.b	#0x0b,d0                        	| [$a30b: lda    #$0b]
	jbsr	l_96c4                            	| [$a30d: jsr    $96c4]
	GET_UNCHECKED_ADDRESS	0x2f48                     	| [$a310: stb    $2f48] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x2f4c                     	| [$a313: stb    $2f4c] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	moveq	#0,d1                            	| [$a316: clrb]
	move.w	#0x2f11,d2                      	| [$a317: ldx    #$2f11]
	move.b	#0x0d,d0                        	| [$a31a: lda    #$0d]
	jbsr	l_96c4                            	| [$a31c: jsr    $96c4]
	jbsr	osd_read_system_inputs |  [$a31f: lda    system_1680]
	BIT	#0x80,d0                           	| [$a322: bita   #$80]
	jne	l_a339                             	| [$a324: bne    $a339]
	move.w	#0xf25b,d4                      	| [$a326: ldu    #$f25b]
	move.w	#0x26c9,d2                      	| [$a329: ldx    #$26c9]
	move.b	#0x04,d0                        	| [$a32c: lda    #$04]
	jbsr	l_96ca                            	| [$a32e: jsr    $96ca]
	move.w	#0x2709,d2                      	| [$a331: ldx    #$2709]
	move.b	#0x04,d0                        	| [$a334: lda    #$04]
	jbsr	l_96ca                            	| [$a336: jsr    $96ca]
l_a339:
	rts                                    	| [$a339: rts]

l_a33a:
	move.w	#0x36c4,d2                      	| [$a33a: ldx    #$36c4]
	move.w	#0x3458,d4                      	| [$a33d: ldu    #$3458]
	jbsr	l_a555                            	| [$a340: jsr    $a555]
	GET_REG_ADDRESS	-0x1,d4                	| [$a343: tst    -$1,u]
	tst.b	(a0)                             	| [...]
	jpl	l_a34e                             	| [$a345: bpl    $a34e]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a347: inc    event_sub_state_28]
	move.b	#0x02,d0                        	| [$a349: ldd    #$0298]
	move.w	#0x0298,d1                      	| [$a349: ldd    #$0298]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x70                    	| [$a34c: std    $70]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_a34e:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$a34e: lda    $0f]
	and.b	#0x03,d0                         	| [$a350: anda   #$03]
	jne	l_a36b                             	| [$a352: bne    $a36b]
	move.w	#0x2d07,d2                      	| [$a354: ldx    #$2d07]
	GET_ADDRESS	0x3460                     	| [$a357: ldu    $3460]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_a35a:
	GET_REG_ADDRESS	0,d4                   	| [$a35a: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	jpl	l_a363                             	| [$a35c: bpl    $a363]
	move.w	#0xeea2,d4                      	| [$a35e: ldu    #$eea2]
	jra	l_a35a                             	| [$a361: bra    $a35a]
l_a363:
	GET_ADDRESS	0x3460                     	| [$a363: stu    $3460]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x12,d0                        	| [$a366: lda    #$12]
	jbsr	l_96c4                            	| [$a368: jsr    $96c4]
l_a36b:
	rts                                    	| [$a36b: rts]

l_a36c:
	jbsr	l_a34e                            	| [$a36c: bsr    $a34e]
	OP_W_ON_DP_ADDRESS	subq,chrono_hundredth_second_71,#1| [$a36e: dec    chrono_hundredth_second_71]
	jne	l_a37e                             	| [$a370: bne    $a37e]
	OP_W_ON_DP_ADDRESS	subq,0x70,#1         | [$a372: dec    $70]
	jne	l_a37e                             	| [$a374: bne    $a37e]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$a376: inc    $22]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$a378: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$a37a: clr    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0x2b             | [$a37c: clr    $2b]
l_a37e:
	rts                                    	| [$a37e: rts]

l_a37f:
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$a37f: lda    $24]
	
	.ifndef	RELEASE
	move.w	#0xf263,d2
	.endif
	lea	table_f263,a2                  	| [$a381: ldx   #table_f263]
	asl.b	#1,d0                            	| [$a384: asla]
	JSR_A_INDEXED	A2                   	| [$a385: jsr    [a,x]] [jump_table]
	OP_R_ON_DP_ADDRESS	move,0x0c,d0         | [$a387: lda    $0c]
	and.b	#0x0f,d0                         	| [$a389: anda   #$0f]
	cmp.b	#0x0f,d0                         	| [$a38b: cmpa   #$0f]
	jne	l_a392                             	| [$a38d: bne    $a392]
	jra	l_5869                             	| [$a38f: jra    $5869]
l_a392:
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$a392: lda    $03]
	jeq	l_a399                             	| [$a394: beq    $a399]
	jra	l_7c20                             	| [$a396: jra    $7c20]
l_a399:
	rts                                    	| [$a399: rts]

l_a39a:
	moveq	#0,d0                            	| [$a39a: clra]
	jbsr	queue_event_4e9a                  	| [$a39b: jsr    queue_event_4e9a]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$a39e: inc    $24]
	GET_ADDRESS	flip_screen_set_1480       	| [$a3a0: clr    flip_screen_set_1480]
	clr.b	(a0)                         	| [...]
	move.b	#0x00,d0                        	| [$a3a3: ldd    #$0006]
	move.w	#0x0006,d1                      	| [$a3a3: ldd    #$0006]
	move.w	#0x3458,d4                      	| [$a3a6: ldu    #$3458]
l_a3a9:
	GET_REG_ADDRESS	0,d4                   	| [$a3a9: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	add.b	#0x0a,d0                         	| [$a3ab: adda   #$0a]
	subq.b	#1,d1                           	| [$a3ad: decb]
	jne	l_a3a9                             	| [$a3ae: bne    $a3a9]
	GET_ADDRESS	0x3403                     	| [$a3b0: clr    $3403]
	clr.b	(a0)                         	| [...]
	move.w	#0xeea2,d4                      	| [$a3b3: ldu    #$eea2]
	GET_ADDRESS	0x3460                     	| [$a3b6: stu    $3460]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$a3b9: rts]

l_a3ba:
	move.w	#0x210a,d2                      	| [$a3ba: ldx    #$210a]
	move.w	#0xf2d9,d4                      	| [$a3bd: ldu    #$f2d9]
	move.b	#0x0c,d0                        	| [$a3c0: lda    #$0c]
	jbsr	l_96ca                            	| [$a3c2: jsr    $96ca]
	move.w	#0xf26d,d3                      	| [$a3c5: ldy    #$f26d]
	move.w	#0xf274,d4                      	| [$a3c9: ldu    #$f274]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$a3cc: clr    $48]
l_a3ce:
	move.w	#0x2184,d2                      	| [$a3ce: ldx    #$2184]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$a3d1: lda    $48]
	move.b	#0x40,d1                        	| [$a3d3: ldb    #$40]
	jbsr	multiply_ab                       	| [$a3d5: mul]
	add.w	d1,d2                            	| [$a3d6: leax   d,x]
	GET_REG_ADDRESS	0,d3                   	| [$a3d8: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_96ca                            	| [$a3da: jsr    $96ca]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$a3dd: inc    $48]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$a3df: lda    $48]
	cmp.b	#0x07,d0                         	| [$a3e1: cmpa   #$07]
	jne	l_a3ce                             	| [$a3e3: bne    $a3ce]
	move.b	#0x8a,d0                        	| [$a3e5: ldd    #$8a8f]
	move.w	#0x8a8f,d1                      	| [$a3e5: ldd    #$8a8f]
	GET_UNCHECKED_ADDRESS	0x229b                     	| [$a3e8: sta    $229b] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x231b                     	| [$a3eb: sta    $231b] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x219b                     	| [$a3ee: stb    $219b] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x2b,d0                        	| [$a3f1: lda    #$2b]
	GET_UNCHECKED_ADDRESS	0x221b                     	| [$a3f3: sta    $221b] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.w	#0xf2c0,d3                      	| [$a3f6: ldy    #$f2c0]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$a3fa: clr    $48]
	move.w	#0x2302,d2                      	| [$a3fc: ldx    #$2302]
	move.b	#0x07,d0                        	| [$a3ff: lda    #$07]
l_a401:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a401: sta    ,x] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0x40,d2                         	| [$a403: leax   -$40,x]
	subq.b	#1,d0                           	| [$a406: deca]
	jne	l_a401                             	| [$a407: bne    $a401]
l_a409:
	move.w	#0x3800,d4                      	| [$a409: ldu    #$3800]
	GET_REG_ADDRESS	0,d3                   	| [$a40c: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.b	#0x20,d1                        	| [$a40e: ldb    #$20]
	jbsr	multiply_ab                       	| [$a410: mul]
	add.w	d1,d4                            	| [$a411: leau   d,u]
	move.w	#0x2199,d2                      	| [$a413: ldx    #$2199]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$a416: lda    $48]
	move.b	#0x40,d1                        	| [$a418: ldb    #$40]
	jbsr	multiply_ab                       	| [$a41a: mul]
	add.w	d1,d2                            	| [$a41b: leax   d,x]
	GET_REG_UNCHECKED_ADDRESS	0x2,d2                 	| [$a41d: ldb    $2,x] [video_address]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x10,d1                         	| [$a41f: cmpb   #$10]
	jeq	l_a43c                             	| [$a421: beq    $a43c]
	addq.w	#0x1,d4                         	| [$a423: leau   $1,u]
	move.b	#0x02,d1                        	| [$a425: ldb    #$02]
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$a427: clr    $50]
l_a429:
	GET_REG_ADDRESS	0,d4                   	| [$a429: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$a42b: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a42e: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$a430: decb]
	jne	l_a429                             	| [$a431: bne    $a429]
	addq.w	#0x1,d2                         	| [$a433: leax   $1,x]
	move.b	#0x02,d0                        	| [$a435: lda    #$02]
	jbsr	l_96ca                            	| [$a437: jsr    $96ca]
	jra	l_a44a                             	| [$a43a: bra    $a44a]
l_a43c:
	move.b	#0x05,d1                        	| [$a43c: ldb    #$05]
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$a43e: clr    $50]
l_a440:
	GET_REG_ADDRESS	0,d4                   	| [$a440: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$a442: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a445: sta    ,x+] [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$a447: decb]
	jne	l_a440                             	| [$a448: bne    $a440]
l_a44a:
	sub.w	#0xa,d2                          	| [$a44a: leax   -$a,x]
	move.b	#0x03,d0                        	| [$a44c: lda    #$03]
	jbsr	l_96ca                            	| [$a44e: jsr    $96ca]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$a451: inc    $48]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$a453: lda    $48]
	cmp.b	#0x07,d0                         	| [$a455: cmpa   #$07]
	jne	l_a409                             	| [$a457: bne    $a409]
	move.b	#0x8c,d0                        	| [$a459: lda    #$8c]
	GET_UNCHECKED_ADDRESS	0x22dd                     	| [$a45b: sta    $22dd] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x09,d0                        	| [$a45e: lda    #$09]
	move.w	#0xee98,d4                      	| [$a460: ldu    #$ee98]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a463: sta    $50]
	move.w	#0x2982,d2                      	| [$a465: ldx    #$2982]
l_a468:
	GET_REG_ADDRESS	0,d4                   	| [$a468: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	move.b	#0x1c,d0                        	| [$a46a: lda    #$1c]
	jbsr	l_96c4                            	| [$a46c: jsr    $96c4]
	add.w	#0x24,d2                         	| [$a46f: leax   $24,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a472: dec    $50]
	jne	l_a468                             	| [$a474: bne    $a468]
	move.w	#0x24e2,d2                      	| [$a476: ldx    #$24e2]
	move.b	#0x00,d0                        	| [$a479: ldd    #$0005]
	move.w	#0x0005,d1                      	| [$a479: ldd    #$0005]
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$a47c: stb    $50]
l_a47e:
	addq.b	#1,d0                           	| [$a47e: inca]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a47f: sta    ,x] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	addq.b	#1,d0                           	| [$a481: inca]
	GET_REG_UNCHECKED_ADDRESS	0x51,d2                	| [$a482: sta    $51,x] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x0080,d2                       	| [$a485: leax   $0080,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a489: dec    $50]
	jne	l_a47e                             	| [$a48b: bne    $a47e]
	move.b	#0x01,d0                        	| [$a48d: ldd    #$0100]
	move.w	#0x0100,d1                      	| [$a48d: ldd    #$0100]
	MAKE_D                                 	| [...]
	GET_UNCHECKED_ADDRESS	0x2732                     	| [$a490: std    $2732] [video_address]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.w	#0x38f8,d4                      	| [$a493: ldu    #$38f8]
	move.w	#0x24e8,d2                      	| [$a496: ldx    #$24e8]
	move.b	#0x05,d0                        	| [$a499: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$a49b: sta    $51]
l_a49d:
	jbsr	l_a51f                            	| [$a49d: jsr    $a51f]
	sub.w	#0x2f,d2                         	| [$a4a0: leax   -$2f,x]
	jbsr	l_a51f                            	| [$a4a3: jsr    $a51f]
	sub.w	#0x51,d2                         	| [$a4a6: leax   -$51,x]
	OP_W_ON_DP_ADDRESS	subq,0x51,#1         | [$a4a9: dec    $51]
	jne	l_a49d                             	| [$a4ab: bne    $a49d]
	move.w	#0x2447,d2                      	| [$a4ad: ldx    #$2447]
	move.w	#0xf2c7,d4                      	| [$a4b0: ldu    #$f2c7]
	move.b	#0x12,d0                        	| [$a4b3: lda    #$12]
	jbsr	l_96ca                            	| [$a4b5: jsr    $96ca]
	move.w	#0x2cc0,d2                      	| [$a4b8: ldx    #$2cc0]
	move.b	#0x0a,d0                        	| [$a4bb: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a4bd: sta    $48]
	move.w	#0xf2f5,d4                      	| [$a4bf: ldu    #$f2f5]
l_a4c2:
	move.b	#0x40,d0                        	| [$a4c2: lda    #$40]
	GET_REG_ADDRESS	0,d4                   	| [$a4c4: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	jbsr	l_96c4                            	| [$a4c6: jsr    $96c4]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a4c9: dec    $48]
	jne	l_a4c2                             	| [$a4cb: bne    $a4c2]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$a4cd: inc    $24]
l_a4cf:
	move.w	#0x2080,d2                      	| [$a4cf: ldx    #$2080]
	GET_ADDRESS	0x3460                     	| [$a4d2: ldu    $3460]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.b	#0x7a,d1                        	| [$a4d5: ldb    #$7a]
	move.b	#0x20,d0                        	| [$a4d7: lda    #$20]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a4d9: sta    $48]
l_a4db:
	jbsr	l_a50f                            	| [$a4db: bsr    $a50f]
	addq.w	#0x1,d2                         	| [$a4dd: leax   $1,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a4df: dec    $48]
	jne	l_a4db                             	| [$a4e1: bne    $a4db]
	subq.w	#0x1,d2                         	| [$a4e3: leax   -$1,x]
	move.b	#0x0d,d0                        	| [$a4e5: lda    #$0d]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a4e7: sta    $48]
l_a4e9:
	jbsr	l_a50f                            	| [$a4e9: bsr    $a50f]
	add.w	#0x40,d2                         	| [$a4eb: leax   $40,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a4ee: dec    $48]
	jne	l_a4e9                             	| [$a4f0: bne    $a4e9]
	sub.w	#0x40,d2                         	| [$a4f2: leax   -$40,x]
	move.b	#0x1f,d0                        	| [$a4f5: lda    #$1f]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a4f7: sta    $48]
l_a4f9:
	subq.w	#0x1,d2                         	| [$a4f9: leax   -$1,x]
	jbsr	l_a50f                            	| [$a4fb: bsr    $a50f]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a4fd: dec    $48]
	jne	l_a4f9                             	| [$a4ff: bne    $a4f9]
	move.b	#0x0c,d0                        	| [$a501: lda    #$0c]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a503: sta    $48]
l_a505:
	sub.w	#0x40,d2                         	| [$a505: leax   -$40,x]
	jbsr	l_a50f                            	| [$a508: bsr    $a50f]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a50a: dec    $48]
	jne	l_a505                             	| [$a50c: bne    $a505]
	rts                                    	| [$a50e: rts]

l_a50f:
	GET_REG_ADDRESS	0,d4                   	| [$a50f: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jpl	l_a518                             	| [$a511: bpl    $a518]
	move.w	#0xeea2,d4                      	| [$a513: ldu    #$eea2]
	jra	l_a50f                             	| [$a516: bra    $a50f]
l_a518:
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a518: stb    ,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$a51a: sta    $0800,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	rts                                    	| [$a51e: rts]

l_a51f:
	move.b	#0x01,d0                        	| [$a51f: lda    #$01]
l_a521:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a521: sta    $49]
l_a523:
	OP_1_ON_DP_ADDRESS	clr,0x50             | [$a523: clr    $50]
	move.b	#0x03,d1                        	| [$a525: ldb    #$03]
l_a527:
	GET_REG_ADDRESS	0,d4                   	| [$a527: lda    ,u]
	move.b	(a0),d0                         	| [...]
                                         | [$a529: lsra]
                                         | [$a52a: lsra]
                                         | [$a52b: lsra]
	lsr.b	#4,d0                            	| [$a52c: lsra]
	jbsr	l_956c                            	| [$a52d: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a530: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d4                   	| [$a532: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_956c                            	| [$a534: jsr    $956c]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a537: sta    ,x+]  [video_address]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$a539: decb]
	jne	l_a527                             	| [$a53a: bne    $a527]
	moveq	#0,d0                            	| [$a53c: clra]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$a53d: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	sub.w	#0xa,d2                          	| [$a53f: leax   -$a,x]
	move.b	#0x03,d0                        	| [$a541: lda    #$03]
	jbsr	l_96ca                            	| [$a543: jsr    $96ca]
	add.w	#0x0081,d2                       	| [$a546: leax   $0081,x]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$a54a: dec    $49]
	jne	l_a523                             	| [$a54c: bne    $a523]
	rts                                    	| [$a54e: rts]

l_a54f:
	move.w	#0x3458,d4                      	| [$a54f: ldu    #$3458]
	move.w	#0x36e6,d2                      	| [$a552: ldx    #$36e6]
l_a555:
	move.b	#0x06,d1                        	| [$a555: ldb    #$06]
l_a557:
	GET_REG_ADDRESS	0,d4                   	| [$a557: tst    ,u]
	tst.b	(a0)                             	| [...]
	jmi	l_a57c                             	| [$a559: bmi    $a57c]
	jne	l_a57a                             	| [$a55b: bne    $a57a]
	GET_REG_ADDRESS	0,d2                   	| [$a55d: lda    ,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x08,d0                         	| [$a55f: adda   #$08]
	jcc	l_a565                             	| [$a561: bcc    $a565]
	GET_REG_ADDRESS	0x1,d2                 	| [$a563: inc    $1,x]
	addq.b	#1,(a0)                         	| [...]
l_a565:
	GET_REG_ADDRESS	0,d2                   	| [$a565: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$a567: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x08,d0                         	| [$a569: suba   #$08]
	jcc	l_a56f                             	| [$a56b: bcc    $a56f]
	GET_REG_ADDRESS	0x3,d2                 	| [$a56d: dec    $3,x]
	subq.b	#1,(a0)                         	| [...]
l_a56f:
	GET_REG_ADDRESS	0x2,d2                 	| [$a56f: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	tst.b	d0                               	| [$a571: tsta]
	jne	l_a57c                             	| [$a572: bne    $a57c]
	move.b	#0xff,d0                        	| [$a574: lda    #$ff]
	GET_REG_ADDRESS	0,d4                   	| [$a576: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	jra	l_a57c                             	| [$a578: bra    $a57c]
l_a57a:
	GET_REG_ADDRESS	0,d4                   	| [$a57a: dec    ,u]
	subq.b	#1,(a0)                         	| [...]
l_a57c:
	addq.w	#0x4,d2                         	| [$a57c: leax   $4,x]
	addq.w	#0x1,d4                         	| [$a57e: leau   $1,u]
	subq.b	#1,d1                           	| [$a580: decb]
	jne	l_a557                             	| [$a581: bne    $a557]
	rts                                    	| [$a583: rts]

l_a584:
	jbsr	l_a54f                            	| [$a584: bsr    $a54f]
	jbsr	l_a59a                            	| [$a586: bsr    $a59a]
	GET_REG_ADDRESS	-0x1,d4                	| [$a588: tst    -$1,u]
	tst.b	(a0)                             	| [...]
	jpl	l_a58e                             	| [$a58a: bpl    $a58e]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$a58c: inc    $24]
l_a58e:
	move.b	#0x71,d0                        	| [$a58e: lda    #$71]
	GET_ADDRESS	0x3402                     	| [$a590: sta    $3402]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$a593: ldd    #$0330]
	move.w	#0x0330,d1                      	| [$a593: ldd    #$0330]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3400                     	| [$a596: std    $3400]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$a599: rts]

l_a59a:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$a59a: lda    $0f]
	and.b	#0x03,d0                         	| [$a59c: anda   #$03]
	jne	l_a5cc                             	| [$a59e: bne    $a5cc]
	jbsr	l_a4cf                            	| [$a5a0: jsr    $a4cf]
	move.w	#0x2c40,d2                      	| [$a5a3: ldx    #$2c40]
	GET_ADDRESS	0x3460                     	| [$a5a6: ldu    $3460]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_a5a9:
	GET_REG_ADDRESS	0,d4                   	| [$a5a9: ldb    ,u]
	move.b	(a0),d1                         	| [...]
	jpl	l_a5b2                             	| [$a5ab: bpl    $a5b2]
	move.w	#0xeea2,d4                      	| [$a5ad: ldu    #$eea2]
	jra	l_a5a9                             	| [$a5b0: bra    $a5a9]
l_a5b2:
	move.b	#0x20,d0                        	| [$a5b2: lda    #$20]
	jbsr	l_96c4                            	| [$a5b4: jsr    $96c4]
	move.w	#0x2982,d2                      	| [$a5b7: ldx    #$2982]
	GET_ADDRESS	0x3403                     	| [$a5ba: lda    $3403]
	move.b	(a0),d0                         	| [...]
	move.b	#0x40,d1                        	| [$a5bd: ldb    #$40]
	jbsr	multiply_ab                       	| [$a5bf: mul]
	add.w	d1,d2                            	| [$a5c0: leax   d,x]
	GET_REG_ADDRESS	0,d4                   	| [$a5c2: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x3460                     	| [$a5c4: stu    $3460]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x1c,d0                        	| [$a5c7: lda    #$1c]
	jbsr	l_96c4                            	| [$a5c9: jsr    $96c4]
l_a5cc:
	rts                                    	| [$a5cc: rts]

l_a5cd:
	jbsr	l_a59a                            	| [$a5cd: bsr    $a59a]
	GET_ADDRESS	0x3402                     	| [$a5cf: dec    $3402]
	subq.b	#1,(a0)                         	| [...]
	jne	l_a5f4                             	| [$a5d2: bne    $a5f4]
	GET_ADDRESS	0x3403                     	| [$a5d4: inc    $3403]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x70,d0                        	| [$a5d7: lda    #$70]
	GET_ADDRESS	0x3402                     	| [$a5d9: sta    $3402]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x09,d0                        	| [$a5dc: lda    #$09]
	move.w	#0xee98,d4                      	| [$a5de: ldu    #$ee98]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$a5e1: sta    $50]
	move.w	#0x2982,d2                      	| [$a5e3: ldx    #$2982]
l_a5e6:
	GET_REG_ADDRESS	0,d4                   	| [$a5e6: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	move.b	#0x1c,d0                        	| [$a5e8: lda    #$1c]
	jbsr	l_96c4                            	| [$a5ea: jsr    $96c4]
	add.w	#0x24,d2                         	| [$a5ed: leax   $24,x]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$a5f0: dec    $50]
	jne	l_a5e6                             	| [$a5f2: bne    $a5e6]
l_a5f4:
	GET_ADDRESS	0x3403                     	| [$a5f4: lda    $3403]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$a5f7: cmpa   #$07]
	jne	l_a5fd                             	| [$a5f9: bne    $a5fd]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$a5fb: inc    $24]
l_a5fd:
	rts                                    	| [$a5fd: rts]

l_a5fe:
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$a5fe: inc    $22]
	move.w	#0x3024,d2                      	| [$a600: ldx    #$3024]
	jra	l_96e9                             	| [$a603: jra    $96e9]
l_a606:
	subq.w	#1,d5                           	| [...]
	GET_REG_ADDRESS	0,d5                   	| [$a606: clr    ,-s]
	clr.b	(a0)                         	| [...]
	subq.w	#1,d5                           	| [...]
	GET_REG_ADDRESS	0,d5                   	| [$a608: clr    ,-s]
	clr.b	(a0)                         	| [...]
l_a60a:
	GET_REG_ADDRESS	0,d5                   	| [$a60a: inc    ,s]
	addq.b	#1,(a0)                         	| [...]
	asl.b	#1,d1                            	| [$a60c: aslb]
	jcc	l_a60a                             	| [$a60d: bcc    $a60a]
	roxr.b	#1,d1                           	| [$a60f: rorb]
	GET_REG_ADDRESS	0x1,d5                 	| [$a610: stb    $1,s]
	move.b	d1,(a0)                         	| [...]
	moveq	#0,d1                            	| [$a612: clrb]
l_a613:
	GET_REG_ADDRESS	0x1,d5                 	| [$a613: suba   $1,s]
	sub.b	(a0),d0                          	| [...]
	jcc	l_a61d                             	| [$a615: bcc    $a61d]
	GET_REG_ADDRESS	0x1,d5                 	| [$a617: adda   $1,s]
	add.b	(a0),d0                          	| [...]
	CLR_XC_FLAGS                           	| [$a619: andcc  #$fe]
	jra	l_a61f                             	| [$a61b: bra    $a61f]
l_a61d:
	SET_XC_FLAGS                           	| [$a61d: orcc   #$01]
l_a61f:
	roxl.b	#1,d1                           	| [$a61f: rolb]
	GET_REG_ADDRESS	0x1,d5                 	| [$a620: lsr    $1,s]
	move.b	(a0),d6	| [$a620: lsr    $1,s]
	lsr.b	#1,d6                          	| [$a620: lsr    $1,s]
	move.b	d6,(a0)	| [$a620: lsr    $1,s]
	GET_REG_ADDRESS	0,d5                   	| [$a622: dec    ,s]
	subq.b	#1,(a0)                         	| [...]
	jne	l_a613                             	| [$a624: bne    $a613]
	GET_REG_ADDRESS	0,d5                   	| [$a626: clr    ,s+]
	addq.w	#1,d5                           	| [...]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0,d5                   	| [$a628: clr    ,s+]
	addq.w	#1,d5                           	| [...]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$a62a: rts]

l_a62b:
	OP_1_ON_DP_ADDRESS	clr,0x5f             | [$a62b: clr    $5f]
	OP_1_ON_DP_ADDRESS	clr,0x5e             | [$a62d: clr    $5e]
	OP_1_ON_DP_ADDRESS	clr,0x5d             | [$a62f: clr    $5d]
	roxl.b	#1,d1                           	| [$a631: rolb]
	roxl.b	#1,d0                           	| [$a632: rola]
	roxl.b	#1,d1                           	| [$a633: rolb]
	roxl.b	#1,d0                           	| [$a634: rola]
	roxl.b	#1,d1                           	| [$a635: rolb]
	roxl.b	#1,d0                           	| [$a636: rola]
	roxl.b	#1,d1                           	| [$a637: rolb]
	roxl.b	#1,d0                           	| [$a638: rola]
	roxl.b	#1,d1                           	| [$a639: rolb]
	roxl.b	#1,d0                           	| [$a63a: rola]
	OP_W_ON_DP_ADDRESS	subq,0x5d,#4         | [$a63b: dec    $5d]
	         | [$a63d: dec    $5d]
	         | [$a63f: dec    $5d]
	         | [$a641: dec    $5d]
	GET_DP_ADDRESS	0x5b                    	| [$a643: stx    $5b]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	jeq	l_a67b                             	| [$a645: beq    $a67b]
	jmi	l_a651                             	| [$a647: bmi    $a651]
l_a649:
	OP_W_ON_DP_ADDRESS	addq,0x5d,#1         | [$a649: inc    $5d]
	OP_R_ON_DP_ADDRESS	move,0x5c,d6         | [$a64b: asl    $5c]
	asl.b	#1,d6                          	| [$a64b: asl    $5c]
	move.b	d6,(a0)	| [$a64b: asl    $5c]
	OP_R_ON_DP_ADDRESS	move,0x5b,d6         | [$a64d: rol    $5b]
	roxl.b	#1,d6                         	| [$a64d: rol    $5b]
	move.b	d6,(a0)	| [$a64d: rol    $5b]
	jpl	l_a649                             	| [$a64f: bpl    $a649]
l_a651:
	MAKE_D
	GET_DP_ADDRESS	0x5b                    	| [$a651: cmpd   $5b]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcs	l_a65c                             	| [$a654: bcs    $a65c]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x5b                    	| [$a656: subd   $5b]
	SUB_W_TO_REG	a0,d1                          	| [...]
	MAKE_A                                 	| [...]
	SET_XC_FLAGS                           	| [$a658: orcc   #$01]
	jra	l_a65e                             	| [$a65a: bra    $a65e]
l_a65c:
	CLR_XC_FLAGS                           	| [$a65c: andcc  #$fe]
l_a65e:
	OP_R_ON_DP_ADDRESS	move,0x5f,d6         | [$a65e: rol    $5f]
	roxl.b	#1,d6                         	| [$a65e: rol    $5f]
	move.b	d6,(a0)	| [$a65e: rol    $5f]
	OP_R_ON_DP_ADDRESS	move,0x5e,d6         | [$a660: rol    $5e]
	roxl.b	#1,d6                         	| [$a660: rol    $5e]
	move.b	d6,(a0)	| [$a660: rol    $5e]
	OP_W_ON_DP_ADDRESS	subq,0x5d,#1         | [$a662: dec    $5d]
	jeq	l_a66c                             	| [$a664: beq    $a66c]
	OP_R_ON_DP_ADDRESS	move,0x5b,d6         | [$a666: lsr    $5b]
	lsr.b	#1,d6                          	| [$a666: lsr    $5b]
	move.b	d6,(a0)	| [$a666: lsr    $5b]
	OP_R_ON_DP_ADDRESS	move,0x5c,d6         | [$a668: ror    $5c]
	roxr.b	#1,d6                         	| [$a668: ror    $5c]
	move.b	d6,(a0)	| [$a668: ror    $5c]
	jra	l_a651                             	| [$a66a: bra    $a651]
l_a66c:
	GET_DP_ADDRESS	0x5e                    	| [$a66c: ldx    $5e]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	CLR_XC_FLAGS                           	| [$a66e: andcc  #$fe]
	roxr.b	#1,d0                           	| [$a670: rora]
	roxr.b	#1,d1                           	| [$a671: rorb]
	roxr.b	#1,d0                           	| [$a672: rora]
	roxr.b	#1,d1                           	| [$a673: rorb]
	roxr.b	#1,d0                           	| [$a674: rora]
	roxr.b	#1,d1                           	| [$a675: rorb]
	roxr.b	#1,d0                           	| [$a676: rora]
	roxr.b	#1,d1                           	| [$a677: rorb]
	roxr.b	#1,d0                           	| [$a678: rora]
	roxr.b	#1,d1                           	| [$a679: rorb]
	rts                                    	| [$a67a: rts]

l_a67b:
	SET_XC_FLAGS                           	| [$a67b: orcc   #$01]
	rts                                    	| [$a67d: rts]

l_a67e:
	jbsr	l_4f8a                            	| [$a67e: jsr    $4f8a]
	GET_REG_ADDRESS	0,d4                   	| [$a681: lda    ,u]
	move.b	(a0),d0                         	| [...]
	rts                                    	| [$a683: rts]

	jbsr	l_a67e                            	| [$a684: jsr    $a67e]
	cmp.b	#0x01,d0                         	| [$a687: cmpa   #$01]
	jeq	l_a69c                             	| [$a689: beq    $a69c]
	cmp.b	#0x04,d0                         	| [$a68b: cmpa   #$04]
	jeq	l_a69c                             	| [$a68d: beq    $a69c]
	jbsr	l_4fa1                            	| [$a68f: jsr    $4fa1]
	cmp.b	#0x02,d0                         	| [$a692: cmpa   #$02]
	jeq	l_a6ba                             	| [$a694: beq    $a6ba]
	moveq	#0,d0                            	| [$a696: clra]
	moveq	#0,d1                            	| [$a697: clrb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3378                     	| [$a698: std    $3378]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$a69b: rts]

l_a69c:
	GET_ADDRESS	0x3379                     	| [$a69c: tst    $3379]
	tst.b	(a0)                             	| [...]
	jne	l_a6b5                             	| [$a69f: bne    $a6b5]
	GET_ADDRESS	0x3378                     	| [$a6a1: ldb    $3378]
	move.b	(a0),d1                         	| [...]
	jne	l_a6af                             	| [$a6a4: bne    $a6af]
	GET_ADDRESS	0x3378                     	| [$a6a6: inc    $3378]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x20,d1                        	| [$a6a9: ldb    #$20]
	GET_ADDRESS	0x3379                     	| [$a6ab: stb    $3379]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$a6ae: rts]

l_a6af:
	move.b	#0x08,d1                        	| [$a6af: ldb    #$08]
	GET_ADDRESS	0x3379                     	| [$a6b1: stb    $3379]
	move.b	d1,(a0)                         	| [...]
	rts                                    	| [$a6b4: rts]

l_a6b5:
	GET_ADDRESS	0x3379                     	| [$a6b5: dec    $3379]
	subq.b	#1,(a0)                         	| [...]
	moveq	#0,d0                            	| [$a6b8: clra]
	rts                                    	| [$a6b9: rts]

l_a6ba:
	GET_ADDRESS	0x3378                     	| [$a6ba: clr    $3378]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3379                     	| [$a6bd: clr    $3379]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$a6c0: rts]

l_a6c1:
	GET_REG_ADDRESS	0,d2                   	| [$a6c1: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$a6c3: cmpb   ,y+]
	addq.w	#1,d3                           	| [...]
	cmp.b	(a0),d1                          	| [...]
	jeq	l_a6cc                             	| [$a6c5: beq    $a6cc]
	jcs	l_a6d1                             	| [$a6c7: bcs    $a6d1]
	move.b	#0x01,d0                        	| [$a6c9: lda    #$01]
	rts                                    	| [$a6cb: rts]

l_a6cc:
	subq.b	#1,d0                           	| [$a6cc: deca]
	jne	l_a6c1                             	| [$a6cd: bne    $a6c1]
	moveq	#0,d0                            	| [$a6cf: clra]
	rts                                    	| [$a6d0: rts]

l_a6d1:
	move.b	#0xff,d0                        	| [$a6d1: lda    #$ff]
	rts                                    	| [$a6d3: rts]

pole_vault_a6d4:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$a6d4: lda    event_sub_state_28]
	asl.b	#1,d0                            	| [$a6d6: asla]
	
	.ifndef	RELEASE
	move.w	#0xf2ff,d2
	.endif
	lea	table_f2ff,a2                  	| [$a6d7: ldx   #table_f2ff]
	JMP_A_INDEXED	A2                   	| [$a6da: jra    [a,x]] [jump_table]

l_a6dc:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$a6dc: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$a6de: asla]
	
	.ifndef	RELEASE
	move.w	#0xf30d,d2
	.endif
	lea	table_f30d,a2                  	| [$a6df: ldx   #table_f30d]
	JMP_A_INDEXED	A2                   	| [$a6e2: jra    [a,x]] [jump_table]
l_a6e4:
	move.b	#0x01,d0                        	| [$a6e4: ldd    #$0100]
	move.w	#0x0100,d1                      	| [$a6e4: ldd    #$0100]
	jbsr	queue_event_4e9a                  	| [$a6e7: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$a6ea: ldd    #$020f]
	move.w	#0x020f,d1                      	| [$a6ea: ldd    #$020f]
	jbsr	queue_event_4e9a                  	| [$a6ed: jsr    queue_event_4e9a]
	move.b	#0x10,d1                        	| [$a6f0: ldb    #$10]
	jbsr	queue_event_4e9a                  	| [$a6f2: jsr    queue_event_4e9a]
	move.b	#0x11,d1                        	| [$a6f5: ldb    #$11]
	jbsr	queue_event_4e9a                  	| [$a6f7: jsr    queue_event_4e9a]
	move.w	#0x34e8,d2                      	| [$a6fa: ldx    #$34e8]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$a6fd: lda    $19]
	asl.b	#1,d0                            	| [$a6ff: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$a700: ldd    a,x]
	LOAD_D                                 	| [$a700: ldd    a,x]
	GET_DP_ADDRESS	0xc8                    	| [$a702: std    $c8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x3508,d2                      	| [$a704: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$a707: lda    $19]
	move.b	#0x20,d1                        	| [$a709: ldb    #$20]
	jbsr	multiply_ab                       	| [$a70b: mul]
	add.w	d1,d2                            	| [$a70c: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$a70e: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$a70e: ldd    ,x++]
	GET_ADDRESS	0x342d                     	| [$a710: std    $342d]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$a713: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x342f                     	| [$a715: sta    $342f]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$a718: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3456                     	| [$a71a: sta    $3456]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$a71d: lda    $c8]
	and.b	#0x01,d0                         	| [$a71f: anda   #$01]
	jne	l_a751                             	| [$a721: bne    $a751]
	GET_DP_ADDRESS	0x63                    	| [$a723: ldd    $63]
	LOAD_D                                 	| [$a723: ldd    $63]
                                         | [$a725: asla]
                                         | [$a726: asla]
                                         | [$a727: asla]
	asl.b	#4,d0                            	| [$a728: asla]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a729: sta    $48]
	GET_DP_ADDRESS	0x48                    	| [$a72b: orb    $48]
	or.b	(a0),d1                           	| [...]
	OP_R_ON_DP_ADDRESS	move,0x62,d0         | [$a72d: lda    $62]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$a72f: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D
	cmp.w	#0x0586,d1                       	| [$a731: cmpd   #$0586]
	jcs	l_a744                             	| [$a735: bcs    $a744]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$a737: lda    $49]
	CLR_XC_FLAGS
	move.b	#0x99,d6	| [...]
	abcd	d6,d0	| [...]
	jcs	l_a740                             	| [$a73c: bcs    $a740]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a73e: dec    $48]
l_a740:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a740: sta    $49]
	jra	l_a785                             	| [$a742: bra    $a785]
l_a744:
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$a744: lda    $49]
	CLR_XC_FLAGS
	move.b	#0x95,d6	| [...]
	abcd	d6,d0	| [...]
	jcs	l_a74d                             	| [$a749: bcs    $a74d]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$a74b: dec    $48]
l_a74d:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a74d: sta    $49]
	jra	l_a785                             	| [$a74f: bra    $a785]
l_a751:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$a751: lda    $c8]
	and.b	#0x02,d0                         	| [$a753: anda   #$02]
	jne	l_a798                             	| [$a755: bne    $a798]
	GET_ADDRESS	0x342e                     	| [$a757: ldd    $342e]
	LOAD_D                                 	| [$a757: ldd    $342e]
                                         | [$a75a: asla]
                                         | [$a75b: asla]
                                         | [$a75c: asla]
	asl.b	#4,d0                            	| [$a75d: asla]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a75e: sta    $48]
	GET_DP_ADDRESS	0x48                    	| [$a760: orb    $48]
	or.b	(a0),d1                           	| [...]
	GET_ADDRESS	0x342d                     	| [$a762: lda    $342d]
	move.b	(a0),d0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$a765: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D
	cmp.w	#0x0585,d1                       	| [$a767: cmpd   #$0585]
	jcs	l_a77a                             	| [$a76b: bcs    $a77a]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$a76d: lda    $49]
	CLR_XC_FLAGS
	move.b	#0x01,d6	| [...]
	abcd	d6,d0	| [...]
	jcc	l_a776                             	| [$a772: bcc    $a776]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$a774: inc    $48]
l_a776:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a776: sta    $49]
	jra	l_a785                             	| [$a778: bra    $a785]
l_a77a:
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$a77a: lda    $49]
	CLR_XC_FLAGS
	move.b	#0x05,d6	| [...]
	abcd	d6,d0	| [...]
	jcc	l_a783                             	| [$a77f: bcc    $a783]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$a781: inc    $48]
l_a783:
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$a783: sta    $49]
l_a785:
	GET_DP_ADDRESS	0x48                    	| [$a785: ldd    $48]
	LOAD_D                                 	| [$a785: ldd    $48]
	GET_ADDRESS	0x342d                     	| [$a787: sta    $342d]
	move.b	d0,(a0)                         	| [...]
                                         | [$a78a: lsrb]
                                         | [$a78b: lsrb]
                                         | [$a78c: lsrb]
	lsr.b	#4,d1                            	| [$a78d: lsrb]
	GET_ADDRESS	0x342e                     	| [$a78e: stb    $342e]
	move.b	d1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$a791: lda    $49]
	and.b	#0x0f,d0                         	| [$a793: anda   #$0f]
	GET_ADDRESS	0x342f                     	| [$a795: sta    $342f]
	move.b	d0,(a0)                         	| [...]
l_a798:
	move.w	#0x23ea,d3                      	| [$a798: ldy    #$23ea]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d3              	| [$a79c: clr    $0800,y]  [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0x342d                     	| [$a7a0: lda    $342d]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a7a3: sta    ,y++]  [video_address]
	addq.w	#2,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0x3272                     	| [$a7a5: sta    $3272]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x00,d0                        	| [$a7a8: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$a7a8: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d3              	| [$a7ab: std    $0800,y]  [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_ADDRESS	0x342e                     	| [$a7af: ldd    $342e]
	LOAD_D                                 	| [$a7af: ldd    $342e]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a7b2: std    ,y]  [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3273                     	| [$a7b4: std    $3273]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x26da,d3                      	| [$a7b7: ldy    #$26da]
	GET_ADDRESS	0x342d                     	| [$a7bb: lda    $342d]
	move.b	(a0),d0                         	| [...]
	move.b	#0x8a,d1                        	| [$a7be: ldb    #$8a]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a7c0: std    ,y++]  [video_address_word]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_ADDRESS	0x342e                     	| [$a7c2: ldd    $342e]
	LOAD_D                                 	| [$a7c2: ldd    $342e]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a7c5: std    ,y]  [video_address]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.b	#0x00,d0                        	| [$a7c7: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$a7c7: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x07fe,d3              	| [$a7ca: std    $07fe,y]  [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d3              	| [$a7ce: std    $0800,y]  [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.w	#0x342d,d3                      	| [$a7d2: ldy    #$342d]
	GET_REG_ADDRESS	0,d3                   	| [$a7d6: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	move.b	#0x0a,d0                        	| [$a7d8: lda    #$0a]
	jbsr	multiply_ab                       	| [$a7da: mul]
	GET_REG_ADDRESS	0,d3                   	| [$a7db: addb   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d1                          	| [...]
	move.b	#0x0a,d0                        	| [$a7dd: lda    #$0a]
	jbsr	multiply_ab                       	| [$a7df: mul]
	GET_REG_ADDRESS	0,d3                   	| [$a7e0: addb   ,y]
	add.b	(a0),d1                          	| [...]
	move.b	#0x00,d6	| [$a7e2: adca   #$00]
	addx.b	d6,d0                        	| [$a7e2: adca   #$00]
	MAKE_D                                 	| [...]
	sub.w	#0x01e5,d1                       	| [$a7e4: subd   #$01e5]
	MAKE_A                                 	| [...]
	cmp.b	#0x65,d1                         	| [$a7e7: cmpb   #$65]
	jcc	l_a7f4                             	| [$a7e9: bcc    $a7f4]
	move.b	d1,d0                           	| [$a7eb: tfr    b,a]
	move.b	#0x05,d1                        	| [$a7ed: ldb    #$05]
	jbsr	l_a606                            	| [$a7ef: jsr    $a606]
	jra	l_a7f6                             	| [$a7f2: bra    $a7f6]
l_a7f4:
	sub.b	#0x50,d1                         	| [$a7f4: subb   #$50]
l_a7f6:
	GET_ADDRESS	0x342c                     	| [$a7f6: stb    $342c]
	move.b	d1,(a0)                         	| [...]
	move.b	#0xe8,d1                        	| [$a7f9: ldb    #$e8]
	GET_ADDRESS	0x3431                     	| [$a7fb: stb    $3431]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x07,d0                        	| [$a7fe: ldd    #$07f8]
	move.w	#0x07f8,d1                      	| [$a7fe: ldd    #$07f8]
	move.w	#0x3433,d3                      	| [$a801: ldy    #$3433]
l_a805:
	GET_REG_ADDRESS	0,d3                   	| [$a805: stb    ,y++]
	addq.w	#2,d3                           	| [...]
	move.b	d1,(a0)                         	| [...]
	subq.b	#1,d0                           	| [$a807: deca]
	jne	l_a805                             	| [$a808: bne    $a805]
	move.w	#0x3430,d3                      	| [$a80a: ldy    #$3430]
	move.b	#0x70,d0                        	| [$a80e: lda    #$70]
	GET_REG_ADDRESS	0,d3                   	| [$a810: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$a812: sta    $2,y]
	move.b	d0,(a0)                         	| [...]
	move.b	#0xa0,d1                        	| [$a814: ldb    #$a0]
	GET_ADDRESS	0x342c                     	| [$a816: addb   $342c]
	add.b	(a0),d1                          	| [...]
	sub.b	#0x02,d1                         	| [$a819: subb   #$02]
	GET_REG_ADDRESS	0xc,d3                 	| [$a81b: stb    $c,y]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0xe,d3                 	| [$a81d: stb    $e,y]
	move.b	d1,(a0)                         	| [...]
	sub.b	#0x0e,d1                         	| [$a81f: subb   #$0e]
	GET_REG_ADDRESS	0x6,d3                 	| [$a821: stb    $6,y]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0xa,d3                 	| [$a823: stb    $a,y]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x342c                     	| [$a825: lda    $342c]
	move.b	(a0),d0                         	| [...]
	asr.b	#1,d0                            	| [$a828: asra]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$a829: sta    $48]
	OP_R_ON_DP_ADDRESS	sub,0x48,d1          | [$a82b: subb   $48]
	GET_REG_ADDRESS	0x4,d3                 	| [$a82d: stb    $4,y]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x8,d3                 	| [$a82f: stb    $8,y]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x3430                     	| [$a831: ldd    $3430]
	LOAD_D                                 	| [$a831: ldd    $3430]
	GET_ADDRESS	0x3241                     	| [$a834: std    $3241]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3432                     	| [$a837: ldd    $3432]
	LOAD_D                                 	| [$a837: ldd    $3432]
	GET_ADDRESS	0x3261                     	| [$a83a: std    $3261]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3240                     	| [$a83d: clr    $3240]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3260                     	| [$a840: clr    $3260]
	clr.b	(a0)                         	| [...]
	move.b	#0x00,d0                        	| [$a843: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$a843: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f1                     	| [$a846: std    $34f1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x0a,d0                        	| [$a849: lda    #$0a]
	GET_ADDRESS	0x344c                     	| [$a84b: sta    $344c]
	move.b	d0,(a0)                         	| [...]
	move.w	#0x2718,d3                      	| [$a84e: ldy    #$2718]
	move.b	#0xe2,d0                        	| [$a852: ldd    #$e2e2]
	move.w	#0xe2e2,d1                      	| [$a852: ldd    #$e2e2]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a855: std    ,y++] [video_address_word]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a857: sta    ,y] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x07fe,d3                       	| [$a859: leay   $07fe,y]
	move.b	#0x80,d0                        	| [$a85d: ldd    #$8080]
	move.w	#0x8080,d1                      	| [$a85d: ldd    #$8080]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a860: std    ,y] [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x2,d3                 	| [$a862: sta    $2,y] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$a864: lda    $6a]
	addq.b	#1,d0                           	| [$a866: inca]
	move.b	#0x83,d1                        	| [$a867: ldb    #$83]
l_a869:
	subq.b	#1,d0                           	| [$a869: deca]
	jeq	l_a870                             	| [$a86a: beq    $a870]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$a86c: stb    ,y+] [video_address]
	addq.w	#1,d3                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	jra	l_a869                             	| [$a86e: bra    $a869]
l_a870:
	move.b	#0x27,d0                        	| [$a870: lda    #$27]
	jbsr	l_4eb3                            	| [$a872: jsr    $4eb3]
	move.w	#0x3270,d2                      	| [$a875: ldx    #$3270]
	GET_REG_ADDRESS	0,d2                   	| [$a878: clr    ,x]
	clr.b	(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$a87a: clr    $1,x]
	clr.b	(a0)                         	| [...]
	jbsr	l_c465                            	| [$a87c: jsr    $c465]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$a87f: inc    event_sub_state_2a]
	rts                                    	| [$a881: rts]

l_a882:
	jbsr	l_4fa1                            	| [$a882: jsr    $4fa1]
	BIT	#0x05,d0                           	| [$a885: bita   #$05]
	jne	l_a8ae                             	| [$a887: bne    $a8ae]
	jbsr	l_579f                            	| [$a889: jsr    $579f]
	GET_ADDRESS	0x34f2                     	| [$a88c: lda    $34f2]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x12,d0                         	| [$a88f: cmpa   #$12]
	jeq	l_a8a7                             	| [$a891: beq    $a8a7]
	GET_ADDRESS	0x344c                     	| [$a893: cmpa   $344c]
	cmp.b	(a0),d0                          	| [...]
	jne	l_a8a6                             	| [$a896: bne    $a8a6]
	GET_ADDRESS	0x344c                     	| [$a898: inc    $344c]
	addq.b	#1,(a0)                         	| [...]
                                         | [$a89b: inc    $344c]
	addq.b	#1,(a0)                         	| [...]
                                         | [$a89e: inc    $344c]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x38,d0                        	| [$a8a1: lda    #$38]
	jbsr	l_4eb3                            	| [$a8a3: jsr    $4eb3]
l_a8a6:
	rts                                    	| [$a8a6: rts]

l_a8a7:
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$a8a7: clr    event_sub_state_2a]
	move.b	#0x05,d0                        	| [$a8a9: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_28,d0| [$a8ab: sta    event_sub_state_28]
	rts                                    	| [$a8ad: rts]

l_a8ae:
	move.w	#0x30a0,d2                      	| [$a8ae: ldx    #$30a0]
	move.b	#0x04,d0                        	| [$a8b1: lda    #$04]
	GET_REG_ADDRESS	0x5,d2                 	| [$a8b3: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xba             | [$a8b5: clr    $ba]
	OP_1_ON_DP_ADDRESS	clr,0xcf             | [$a8b7: clr    $cf]
	GET_DP_ADDRESS	0xc8                    	| [$a8b9: ldd    $c8]
	LOAD_D                                 	| [$a8b9: ldd    $c8]
	and.b	#0x03,d0                         	| [$a8bb: anda   #$03]
	and.b	#0xfe,d1                         	| [$a8bd: andb   #$fe]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xc8                    	| [$a8bf: std    $c8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$a8c1: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$a8c1: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x32a8                     	| [$a8c4: std    $32a8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0xcb             | [$a8c7: clr    $cb]
	GET_ADDRESS	0x3220                     	| [$a8c9: clr    $3220]
	clr.b	(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$a8cc: ldd    #$0301]
	move.w	#0x0301,d1                      	| [$a8cc: ldd    #$0301]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3450                     	| [$a8cf: std    $3450]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$a8d2: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a8d4: inc    event_sub_state_28]
	rts                                    	| [$a8d6: rts]

l_a8d7:
	jbsr	l_579f                            	| [$a8d7: jsr    $579f]
	GET_ADDRESS	0x34f2                     	| [$a8da: lda    $34f2]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x50,d0                         	| [$a8dd: cmpa   #$50]
	jeq	l_a947                             	| [$a8df: beq    $a947]
	move.w	#0x30a0,d2                      	| [$a8e1: ldx    #$30a0]
	move.w	#0xf317,d3                      	| [$a8e4: ldy    #$f317]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$a8e8: lda    current_level_68]
	move.b	#0x07,d1                        	| [$a8ea: ldb    #$07]
	jbsr	l_a606                            	| [$a8ec: jsr    $a606]
	cmp.b	#0x03,d1                         	| [$a8ef: cmpb   #$03]
	jcs	l_a8f5                             	| [$a8f1: bcs    $a8f5]
	move.b	#0x03,d1                        	| [$a8f3: ldb    #$03]
l_a8f5:
	GET_ADDRESS	0x3457                     	| [$a8f5: stb    $3457]
	move.b	d1,(a0)                         	| [...]
                                         | [$a8f8: aslb]
	asl.b	#2,d1                            	| [$a8f9: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$a8fa: leay   b,y]
	GET_REG_ADDRESS	0,d3                   	| [$a8fc: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$a8fc: ldd    ,y++]
	GET_DP_ADDRESS	0x50                    	| [$a8fe: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$a900: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$a900: ldd    ,y++]
	GET_DP_ADDRESS	0x52                    	| [$a902: std    $52]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_b014                            	| [$a904: jsr    $b014]
	jbsr	l_59b2                            	| [$a907: jsr    $59b2]
	jbsr	l_58bb                            	| [$a90a: jsr    $58bb]
	move.b	#0x03,d0                        	| [$a90d: ldd    #$0300]
	move.w	#0x0300,d1                      	| [$a90d: ldd    #$0300]
	jbsr	queue_event_4e9a                  	| [$a910: jsr    queue_event_4e9a]
	move.w	#0x30a0,d2                      	| [$a913: ldx    #$30a0]
	GET_REG_ADDRESS	0x1,d2                 	| [$a916: ldd    $1,x]
	LOAD_D                                 	| [$a916: ldd    $1,x]
	add.b	#0x18,d0                         	| [$a918: adda   #$18]
	add.b	#0x43,d1                         	| [$a91a: addb   #$43]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3429                     	| [$a91c: std    $3429]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xf383,d3                      	| [$a91f: ldy    #$f383]
	jbsr	l_b096                            	| [$a923: jsr    $b096]
	move.w	#0x3240,d2                      	| [$a926: ldx    #$3240]
	jbsr	l_5035                            	| [$a929: jsr    $5035]
	jbsr	l_b171                            	| [$a92c: jsr    $b171]
	move.w	#0x3260,d2                      	| [$a92f: ldx    #$3260]
	jbsr	l_5035                            	| [$a932: jsr    $5035]
	jbsr	l_b171                            	| [$a935: jsr    $b171]
	move.w	#0x3220,d2                      	| [$a938: ldx    #$3220]
	jbsr	l_5035                            	| [$a93b: jsr    $5035]
	jbsr	l_5b8f                            	| [$a93e: jsr    $5b8f]
	jbsr	l_b360                            	| [$a941: jsr    $b360]
	tst.b	d0                               	| [$a944: tsta]
	jeq	l_a950                             	| [$a945: beq    $a950]
l_a947:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a947: inc    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a949: inc    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a94b: inc    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a94d: inc    event_sub_state_28]
	rts                                    	| [$a94f: rts]

l_a950:
	GET_ADDRESS	0x3260                     	| [$a950: tst    $3260]
	tst.b	(a0)                             	| [...]
	jeq	l_a98a                             	| [$a953: beq    $a98a]
	jbsr	l_4fa1                            	| [$a955: jsr    $4fa1]
	and.b	#0x02,d0                         	| [$a958: anda   #$02]
	jeq	l_a98a                             	| [$a95a: beq    $a98a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a95c: inc    event_sub_state_28]
	move.b	#0x01,d0                        	| [$a95e: lda    #$01]
	GET_ADDRESS	0x3425                     	| [$a960: sta    $3425]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,speed_msb_b0,d0 | [$a963: lda    speed_msb_b0]
	move.b	#0x0a,d1                        	| [$a965: ldb    #$0a]
	jbsr	multiply_ab                       	| [$a967: mul]
	OP_R_ON_DP_ADDRESS	add,0xb1,d1          | [$a968: addb   $b1]
	sub.b	#0x07,d1                         	| [$a96a: subb   #$07]
	jpl	l_a970                             	| [$a96c: bpl    $a970]
	move.b	#0x07,d1                        	| [$a96e: ldb    #$07]
l_a970:
	cmp.b	#0x08,d1                         	| [$a970: cmpb   #$08]
	jcs	l_a976                             	| [$a972: bcs    $a976]
	move.b	#0x08,d1                        	| [$a974: ldb    #$08]
l_a976:
	neg.b	d1                               	| [$a976: negb]
	add.b	#0x0a,d1                         	| [$a977: addb   #$0a]
	GET_ADDRESS	0x3424                     	| [$a979: stb    $3424]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x09,d0                        	| [$a97c: ldd    #$0900]
	move.w	#0x0900,d1                      	| [$a97c: ldd    #$0900]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3427                     	| [$a97f: std    $3427]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3429                     	| [$a982: lda    $3429]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x342b                     	| [$a985: sta    $342b]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0x0f             | [$a988: clr    $0f]
l_a98a:
	rts                                    	| [$a98a: rts]

l_a98b:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$a98b: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$a98d: asla]
	
	.ifndef	RELEASE
	move.w	#0xf311,d2
	.endif
	lea	table_f311,a2                  	| [$a98e: ldx   #table_f311]
	JMP_A_INDEXED	A2                   	| [$a991: jra    [a,x]] [jump_table]
l_a993:
	jbsr	l_b109                            	| [$a993: jsr    $b109]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$a996: lda    $0f]
l_a998:
	roxr.b	#1,d0                           	| [$a998: rora]
	jcs	l_a9dc                             	| [$a999: bcs    $a9dc]
	move.w	#0x30a0,d2                      	| [$a99b: ldx    #$30a0]
	jbsr	l_58bb                            	| [$a99e: jsr    $58bb]
	jbsr	l_b360                            	| [$a9a1: jsr    $b360]
	tst.b	d0                               	| [$a9a4: tsta]
	jeq	l_a9b0                             	| [$a9a5: beq    $a9b0]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$a9a7: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a9a9: inc    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a9ab: inc    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$a9ad: inc    event_sub_state_28]
	rts                                    	| [$a9af: rts]

l_a9b0:
	GET_ADDRESS	0x342b                     	| [$a9b0: lda    $342b]
	move.b	(a0),d0                         	| [...]
	OP_R_ON_DP_ADDRESS	sub,0xa1,d0          | [$a9b3: suba   $a1]
	GET_ADDRESS	0x3425                     	| [$a9b5: ldb    $3425]
	move.b	(a0),d1                         	| [...]
	jbsr	multiply_ab                       	| [$a9b8: mul]
	move.b	d1,d0                           	| [$a9b9: tfr    b,a]
	GET_ADDRESS	0x3424                     	| [$a9bb: ldb    $3424]
	move.b	(a0),d1                         	| [...]
	jbsr	l_a606                            	| [$a9be: jsr    $a606]
	neg.b	d1                               	| [$a9c1: negb]
	GET_ADDRESS	0x342b                     	| [$a9c2: addb   $342b]
	add.b	(a0),d1                          	| [...]
	GET_ADDRESS	0x3429                     	| [$a9c5: stb    $3429]
	move.b	d1,(a0)                         	| [...]
	move.w	#0x3400,d3                      	| [$a9c8: ldy    #$3400]
	jbsr	l_b096                            	| [$a9cc: jsr    $b096]
	GET_ADDRESS	0x3425                     	| [$a9cf: inc    $3425]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x3424                     	| [$a9d2: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$a9d5: cmpa   $3425]
	cmp.b	(a0),d0                          	| [...]
	jcc	l_a9dc                             	| [$a9d8: bcc    $a9dc]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$a9da: inc    event_sub_state_2a]
l_a9dc:
	rts                                    	| [$a9dc: rts]

l_a9dd:
	move.w	#0x30a0,d2                      	| [$a9dd: ldx    #$30a0]
	move.b	#0x00,d0                        	| [$a9e0: ldd    #$0001]
	move.w	#0x0001,d1                      	| [$a9e0: ldd    #$0001]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3427                     	| [$a9e3: std    $3427]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xf327,d3                      	| [$a9e6: ldy    #$f327]
	move.b	#0x05,d0                        	| [$a9ea: lda    #$05]
	GET_ADDRESS	0x344a                     	| [$a9ec: sta    $344a]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3262                     	| [$a9ef: lda    $3262]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x342a                     	| [$a9f2: suba   $342a]
	sub.b	(a0),d0                          	| [...]
	PUSH_SR
	GET_ADDRESS	0x344b                     	| [$a9f5: sta    $344b]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jcs	l_aa06                             	| [$a9f8: bcs    $aa06]
	move.b	#0x04,d1                        	| [$a9fa: ldb    #$04]
l_a9fc:
	GET_REG_ADDRESS	0,d3                   	| [$a9fc: cmpa   ,y+]
	addq.w	#1,d3                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_aa06                             	| [$a9fe: bcs    $aa06]
	GET_ADDRESS	0x344a                     	| [$aa00: inc    $344a]
	addq.b	#1,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$aa03: decb]
	jne	l_a9fc                             	| [$aa04: bne    $a9fc]
l_aa06:
	move.b	#0x3c,d0                        	| [$aa06: lda    #$3c]
	GET_ADDRESS	0x3426                     	| [$aa08: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x04,d0                        	| [$aa0b: ldd    #$0420]
	move.w	#0x0420,d1                      	| [$aa0b: ldd    #$0420]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3448                     	| [$aa0e: std    $3448]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$aa11: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$aa11: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337a                     	| [$aa14: std    $337a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337c                     	| [$aa17: std    $337c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337e                     	| [$aa1a: std    $337e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$aa1d: ldd    $1,x]
	LOAD_D                                 	| [$aa1d: ldd    $1,x]
	add.b	#0x44,d1                         	| [$aa1f: addb   #$44]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3429                     	| [$aa21: std    $3429]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x30a0,d2                      	| [$aa24: ldx    #$30a0]
	GET_REG_ADDRESS	0x10,d2                	| [$aa27: lda    $10,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$aa2a: ldb    #$0a]
	jbsr	multiply_ab                       	| [$aa2c: mul]
	GET_REG_ADDRESS	0x11,d2                	| [$aa2d: addb   $11,x]
	add.b	(a0),d1                          	| [...]
	move.b	#0x0a,d0                        	| [$aa30: lda    #$0a]
	jbsr	multiply_ab                       	| [$aa32: mul]
	GET_REG_ADDRESS	0x12,d2                	| [$aa33: addb   $12,x]
	add.b	(a0),d1                          	| [...]
	cmp.b	#0x28,d1                         	| [$aa36: cmpb   #$28]
	jcs	l_aa46                             	| [$aa38: bcs    $aa46]
	cmp.b	#0xa0,d1                         	| [$aa3a: cmpb   #$a0]
	jcc	l_aa4a                             	| [$aa3c: bcc    $aa4a]
	neg.b	d1                               	| [$aa3e: negb]
	add.b	#0xa0,d1                         	| [$aa3f: addb   #$a0]
                                         | [$aa41: asrb]
                                         | [$aa42: asrb]
	asr.b	#3,d1                            	| [$aa43: asrb]
	jra	l_aa4c                             	| [$aa44: bra    $aa4c]
l_aa46:
	move.b	#0x1e,d1                        	| [$aa46: ldb    #$1e]
	jra	l_aa4c                             	| [$aa48: bra    $aa4c]
l_aa4a:
	move.b	#0x01,d1                        	| [$aa4a: ldb    #$01]
l_aa4c:
	GET_ADDRESS	0x3424                     	| [$aa4c: stb    $3424]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x3425                     	| [$aa4f: clr    $3425]
	clr.b	(a0)                         	| [...]
	move.w	#0xf32b,d2                      	| [$aa52: ldx    #$f32b]
	GET_ADDRESS	0x3457                     	| [$aa55: ldb    $3457]
	move.b	(a0),d1                         	| [...]
	GET_ADDRESS	0x344b                     	| [$aa58: lda    $344b]
	move.b	(a0),d0                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$aa5b: suba   b,x]
	sub.b	(a0),d0                          	| [...]
	jeq	l_aa6e                             	| [$aa5d: beq    $aa6e]
	jpl	l_aa66                             	| [$aa5f: bpl    $aa66]
	add.b	#0x0c,d0                         	| [$aa61: adda   #$0c]
	jpl	l_aa66                             	| [$aa63: bpl    $aa66]
	moveq	#0,d0                            	| [$aa65: clra]
l_aa66:
	GET_ADDRESS	0x344b                     	| [$aa66: sta    $344b]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3456                     	| [$aa69: clr    $3456]
	clr.b	(a0)                         	| [...]
	jra	l_aa74                             	| [$aa6c: bra    $aa74]
l_aa6e:
	GET_ADDRESS	0x344b                     	| [$aa6e: sta    $344b]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3456                     	| [$aa71: inc    $3456]
	addq.b	#1,(a0)                         	| [...]
l_aa74:
	GET_ADDRESS	0x344b                     	| [$aa74: lda    $344b]
	move.b	(a0),d0                         	| [...]
                                         | [$aa77: asra]
	asr.b	#2,d0                            	| [$aa78: asra]
	GET_ADDRESS	0x3424                     	| [$aa79: adda   $3424]
	add.b	(a0),d0                          	| [...]
	cmp.b	#0x1e,d0                         	| [$aa7c: cmpa   #$1e]
	jcs	l_aa82                             	| [$aa7e: bcs    $aa82]
	move.b	#0x1e,d0                        	| [$aa80: lda    #$1e]
l_aa82:
	GET_ADDRESS	0x3424                     	| [$aa82: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x07,d0                        	| [$aa85: lda    #$07]
	jbsr	l_4eb3                            	| [$aa87: jsr    $4eb3]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$aa8a: inc    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0x0f             | [$aa8c: clr    $0f]
	rts                                    	| [$aa8e: rts]

l_aa8f:
	move.b	#0x1b,d0                        	| [$aa8f: lda    #$1b]
	jbsr	l_4eb3                            	| [$aa91: jsr    $4eb3]
	move.b	#0x1c,d0                        	| [$aa94: lda    #$1c]
	jbsr	l_4eb3                            	| [$aa96: jsr    $4eb3]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$aa99: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$aa9b: inc    event_sub_state_28]
	rts                                    	| [$aa9d: rts]

l_aa9e:
	move.w	#0x30b0,d2                      	| [$aa9e: ldx    #$30b0]
	move.w	#0x3370,d3                      	| [$aaa1: ldy    #$3370]
	jbsr	l_a6c1                            	| [$aaa5: jsr    $a6c1]
	tst.b	d0                               	| [$aaa8: tsta]
	jeq	l_aad5                             	| [$aaa9: beq    $aad5]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$aaab: lda    $c8]
	BIT	#0x04,d0                           	| [$aaad: bita   #$04]
	jne	l_aad5                             	| [$aaaf: bne    $aad5]
	GET_ADDRESS	0x344b                     	| [$aab1: tst    $344b]
	tst.b	(a0)                             	| [...]
	jeq	l_aad5                             	| [$aab4: beq    $aad5]
	GET_ADDRESS	0x344b                     	| [$aab6: dec    $344b]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x342a                     	| [$aab9: inc    $342a]
	addq.b	#1,(a0)                         	| [...]
	move.w	#0x30b0,d4                      	| [$aabc: ldu    #$30b0]
	move.b	#0x01,d1                        	| [$aabf: ldb    #$01]
	GET_ADDRESS	0x344b                     	| [$aac1: lda    $344b]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x12,d0                         	| [$aac4: cmpa   #$12]
	jcs	l_aaca                             	| [$aac6: bcs    $aaca]
	move.b	#0x02,d1                        	| [$aac8: ldb    #$02]
l_aaca:
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$aaca: stb    $48]
	jbsr	l_510f                            	| [$aacc: jsr    $510f]
	move.b	#0x03,d0                        	| [$aacf: ldd    #$0300]
	move.w	#0x0300,d1                      	| [$aacf: ldd    #$0300]
	jbsr	queue_event_4e9a                  	| [$aad2: jsr    queue_event_4e9a]
l_aad5:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$aad5: lda    $0f]
	roxr.b	#1,d0                           	| [$aad7: rora]
	jcs	l_aba9                             	| [$aad8: lbcs   $aba9]
	jbsr	l_a67e                            	| [$aadc: jsr    $a67e]
	and.b	#0x02,d0                         	| [$aadf: anda   #$02]
	jne	l_ab45                             	| [$aae1: bne    $ab45]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$aae3: lda    $c8]
	BIT	#0x04,d0                           	| [$aae5: bita   #$04]
	jne	l_ab55                             	| [$aae7: bne    $ab55]
	BIT	#0x10,d0                           	| [$aae9: bita   #$10]
	jne	l_ab55                             	| [$aaeb: bne    $ab55]
	or.b	#0x04,d0                          	| [$aaed: ora    #$04]
	GET_ADDRESS	0x3427                     	| [$aaef: ldb    $3427]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x05,d1                         	| [$aaf2: cmpb   #$05]
	jcc	l_aaf8                             	| [$aaf4: bcc    $aaf8]
	or.b	#0x80,d0                          	| [$aaf6: ora    #$80]
l_aaf8:
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$aaf8: sta    $c8]
	moveq	#0,d0                            	| [$aafa: clra]
	jbsr	l_4eb3                            	| [$aafb: jsr    $4eb3]
	move.b	#0x0b,d0                        	| [$aafe: lda    #$0b]
	jbsr	l_4eb3                            	| [$ab00: jsr    $4eb3]
	GET_ADDRESS	0x3427                     	| [$ab03: lda    $3427]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$ab06: cmpa   #$03]
	jeq	l_ab12                             	| [$ab08: beq    $ab12]
	cmp.b	#0x04,d0                         	| [$ab0a: cmpa   #$04]
	jeq	l_ab1a                             	| [$ab0c: beq    $ab1a]
	move.b	#0x3c,d0                        	| [$ab0e: lda    #$3c]
	jeq	l_ab21                             	| [$ab10: beq    $ab21]
l_ab12:
	GET_ADDRESS	0x3424                     	| [$ab12: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$ab15: suba   $3425]
	sub.b	(a0),d0                          	| [...]
	jra	l_ab1d                             	| [$ab18: bra    $ab1d]
l_ab1a:
	GET_ADDRESS	0x3425                     	| [$ab1a: lda    $3425]
	move.b	(a0),d0                         	| [...]
l_ab1d:
	asl.b	#1,d0                            	| [$ab1d: asla]
	neg.b	d0                               	| [$ab1e: nega]
	add.b	#0x5a,d0                         	| [$ab1f: adda   #$5a]
l_ab21:
	OP_W_ON_DP_ADDRESS	move,0xc4,d0         | [$ab21: sta    $c4]
	GET_ADDRESS	0x3426                     	| [$ab23: lda    $3426]
	move.b	(a0),d0                         	| [...]
	jmi	l_ab2f                             	| [$ab26: bmi    $ab2f]
	GET_ADDRESS	0x3427                     	| [$ab28: lda    $3427]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$ab2b: cmpa   #$05]
	jcs	l_ab36                             	| [$ab2d: bcs    $ab36]
l_ab2f:
	move.b	#0x00,d0                        	| [$ab2f: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$ab2f: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	speed_msb_b0            	| [$ab32: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xb2                    	| [$ab34: std    $b2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_ab36:
	GET_ADDRESS	0x337a                     	| [$ab36: ldd    $337a]
	LOAD_D                                 	| [$ab36: ldd    $337a]
	asr.b	#1,d0                            	| [$ab39: asra]
	roxr.b	#1,d1                           	| [$ab3a: rorb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337a                     	| [$ab3b: std    $337a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x01,d0                        	| [$ab3e: lda    #$01]
	GET_ADDRESS	0x3426                     	| [$ab40: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	jra	l_ab55                             	| [$ab43: bra    $ab55]
l_ab45:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ab45: lda    $c8]
	BIT	#0x04,d0                           	| [$ab47: bita   #$04]
	jeq	l_ab55                             	| [$ab49: beq    $ab55]
	OP_W_ON_DP_ADDRESS	subq,0xc4,#1         | [$ab4b: dec    $c4]
	OP_W_ON_DP_ADDRESS	subq,0xc4,#1         | [$ab4d: dec    $c4]
	jne	l_ab55                             	| [$ab4f: bne    $ab55]
	OP_W_ON_DP_ADDRESS	addq,0xc4,#1         | [$ab51: inc    $c4]
	OP_W_ON_DP_ADDRESS	addq,0xc4,#1         | [$ab53: inc    $c4]
l_ab55:
	GET_ADDRESS	0x3426                     	| [$ab55: dec    $3426]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_ab6d                             	| [$ab58: beq    $ab6d]
	jpl	l_aba9                             	| [$ab5a: bpl    $aba9]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ab5c: lda    $c8]
	BIT	#0x04,d0                           	| [$ab5e: bita   #$04]
	jne	l_aba9                             	| [$ab60: bne    $aba9]
	GET_ADDRESS	0x337a                     	| [$ab62: ldd    $337a]
	LOAD_D                                 	| [$ab62: ldd    $337a]
	add.w	#0x0001,d1                       	| [$ab65: addd   #$0001]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337a                     	| [$ab68: std    $337a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_aba9                             	| [$ab6b: bra    $aba9]
l_ab6d:
	GET_ADDRESS	0x3427                     	| [$ab6d: lda    $3427]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$ab70: cmpa   #$04]
	jhi	l_aba9                             	| [$ab72: bhi    $aba9]
	jne	l_ab80                             	| [$ab74: bne    $ab80]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ab76: lda    $c8]
	BIT	#0x04,d0                           	| [$ab78: bita   #$04]
	jeq	l_aba9                             	| [$ab7a: beq    $aba9]
	BIT	#0x80,d0                           	| [$ab7c: bita   #$80]
	jeq	l_aba9                             	| [$ab7e: beq    $aba9]
l_ab80:
	move.b	#0xff,d0                        	| [$ab80: lda    #$ff]
	GET_ADDRESS	0x3427                     	| [$ab82: sta    $3427]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x09,d0                        	| [$ab85: lda    #$09]
	GET_ADDRESS	0x3428                     	| [$ab87: suba   $3428]
	sub.b	(a0),d0                          	| [...]
                                         | [$ab8a: sta    $3428]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3425                     	| [$ab8d: lda    $3425]
	move.b	(a0),d0                         	| [...]
	jne	l_ab94                             	| [$ab90: bne    $ab94]
	move.b	#0x01,d0                        	| [$ab92: lda    #$01]
l_ab94:
	GET_ADDRESS	0x3424                     	| [$ab94: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3425                     	| [$ab97: clr    $3425]
	clr.b	(a0)                         	| [...]
	move.w	#0x3400,d3                      	| [$ab9a: ldy    #$3400]
l_ab9e:
	GET_REG_ADDRESS	0,d3                   	| [$ab9e: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$ab9e: ldd    ,y++]
	GET_REG_ADDRESS	0x5a,d3                	| [$aba0: std    $5a,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3424,d3                       	| [$aba3: cmpy   #$3424]
	jne	l_ab9e                             	| [$aba7: bne    $ab9e]
l_aba9:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$aba9: lda    $c8]
	BIT	#0x08,d0                           	| [$abab: bita   #$08]
	jeq	l_abb9                             	| [$abad: beq    $abb9]
	BIT	#0x40,d0                           	| [$abaf: bita   #$40]
	jne	l_abca                             	| [$abb1: bne    $abca]
	move.w	#0xf383,d3                      	| [$abb3: ldy    #$f383]
	jra	l_abc7                             	| [$abb7: bra    $abc7]
l_abb9:
	jbsr	l_b109                            	| [$abb9: jsr    $b109]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$abbc: lda    $0f]
	roxr.b	#1,d0                           	| [$abbe: rora]
	jcs	l_ad66                             	| [$abbf: lbcs   $ad66]
	move.w	#0x3400,d3                      	| [$abc3: ldy    #$3400]
l_abc7:
	jbsr	l_b096                            	| [$abc7: jsr    $b096]
l_abca:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$abca: lda    $0f]
	roxr.b	#1,d0                           	| [$abcc: rora]
	jcs	l_ad66                             	| [$abcd: lbcs   $ad66]
	GET_ADDRESS	0x3425                     	| [$abd1: inc    $3425]
	addq.b	#1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$abd4: lda    $c8]
	and.b	#0x10,d0                         	| [$abd6: anda   #$10]
	jne	l_ac79                             	| [$abd8: lbne   $ac79]
	move.w	#0x30a0,d2                      	| [$abdc: ldx    #$30a0]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$abdf: lda    $c8]
	and.b	#0x04,d0                         	| [$abe1: anda   #$04]
	jeq	l_ac4b                             	| [$abe3: beq    $ac4b]
	jbsr	l_4fa1                            	| [$abe5: jsr    $4fa1]
	and.b	#0x05,d0                         	| [$abe8: anda   #$05]
	jeq	l_abfb                             	| [$abea: beq    $abfb]
	GET_ADDRESS	0x3455                     	| [$abec: inc    $3455]
	addq.b	#1,(a0)                         	| [...]
                                         | [$abef: lda    $3455]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$abf2: cmpa   #$04]
	jne	l_abfb                             	| [$abf4: bne    $abfb]
	GET_ADDRESS	0x3455                     	| [$abf6: clr    $3455]
	clr.b	(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xa1,#1         | [$abf9: inc    $a1]
l_abfb:
	GET_ADDRESS	0x3449                     	| [$abfb: dec    $3449]
	subq.b	#1,(a0)                         	| [...]
	jne	l_ac35                             	| [$abfe: bne    $ac35]
	GET_ADDRESS	0x3448                     	| [$ac00: lda    $3448]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x06,d0                         	| [$ac03: cmpa   #$06]
	jcs	l_ac1d                             	| [$ac05: bcs    $ac1d]
	cmp.b	#0x07,d0                         	| [$ac07: cmpa   #$07]
	jeq	l_ac35                             	| [$ac09: beq    $ac35]
	OP_R_ON_DP_ADDRESS	move,0xa1,d0         | [$ac0b: lda    $a1]
	add.b	#0x18,d0                         	| [$ac0d: adda   #$18]
	GET_ADDRESS	0x32a1                     	| [$ac0f: cmpa   $32a1]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_ac1d                             	| [$ac12: bcs    $ac1d]
	cmp.b	#0xa0,d0                         	| [$ac14: cmpa   #$a0]
	jcs	l_ac1d                             	| [$ac16: bcs    $ac1d]
	GET_ADDRESS	0x3449                     	| [$ac18: inc    $3449]
	addq.b	#1,(a0)                         	| [...]
	jra	l_ac35                             	| [$ac1b: bra    $ac35]
l_ac1d:
	GET_ADDRESS	0x3448                     	| [$ac1d: inc    $3448]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x20,d0                        	| [$ac20: lda    #$20]
	GET_ADDRESS	0x3449                     	| [$ac22: sta    $3449]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3448                     	| [$ac25: lda    $3448]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$ac28: asla]
	move.w	#0xf32f,d3                      	| [$ac29: ldy    #$f32f]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$ac2d: ldd    a,y]
	LOAD_D                                 	| [$ac2d: ldd    a,y]
	GET_REG_ADDRESS	0x1,d2                 	| [$ac2f: adda   $1,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$ac31: addb   $2,x]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$ac33: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_ac35:
	move.b	#0x07,d0                        	| [$ac35: ldd    #$0706]
	move.w	#0x0706,d1                      	| [$ac35: ldd    #$0706]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3375                     	| [$ac38: std    $3375]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_c027                            	| [$ac3b: jsr    $c027]
	OP_R_ON_DP_ADDRESS	add,0xa2,d0          | [$ac3e: adda   $a2]
	OP_R_ON_DP_ADDRESS	add,0xa1,d1          | [$ac40: addb   $a1]
	exg	d0,d1                              	| [$ac42: exg    a,b]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xa1                    	| [$ac44: std    $a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3448                     	| [$ac46: lda    $3448]
	move.b	(a0),d0                         	| [...]
	jra	l_ac67                             	| [$ac49: bra    $ac67]
l_ac4b:
	GET_ADDRESS	0x3427                     	| [$ac4b: lda    $3427]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$ac4e: cmpa   #$03]
	jcs	l_ac54                             	| [$ac50: bcs    $ac54]
	move.b	#0x03,d0                        	| [$ac52: lda    #$03]
l_ac54:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$ac54: sta    $48]
	move.w	#0xf32f,d3                      	| [$ac56: ldy    #$f32f]
	asl.b	#1,d0                            	| [$ac5a: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$ac5b: ldd    a,y]
	LOAD_D                                 	| [$ac5b: ldd    a,y]
	GET_ADDRESS	0x3441                     	| [$ac5d: adda   $3441]
	add.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x3442                     	| [$ac60: addb   $3442]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xa1                    	| [$ac63: std    $a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$ac65: lda    $48]
l_ac67:
	move.b	#0x07,d1                        	| [$ac67: ldb    #$07]
	jbsr	multiply_ab                       	| [$ac69: mul]
	move.w	#0xdaf5,d3                      	| [$ac6a: ldy    #$daf5]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$ac6e: leay   b,y]
	move.w	#0x361c,d4                      	| [$ac70: ldu    #$361c]
	jbsr	l_86ee                            	| [$ac73: jsr    $86ee]
	jbsr	l_b378                            	| [$ac76: jsr    $b378]
l_ac79:
	jbsr	l_b23f                            	| [$ac79: jsr    $b23f]
	jbsr	l_b2f4                            	| [$ac7c: jsr    $b2f4]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ac7f: lda    $c8]
	BIT	#0x10,d0                           	| [$ac81: bita   #$10]
	jne	l_acd6                             	| [$ac83: bne    $acd6]
	move.w	#0x30a0,d2                      	| [$ac85: ldx    #$30a0]
	jbsr	l_5035                            	| [$ac88: jsr    $5035]
	move.w	#0xf33f,d3                      	| [$ac8b: ldy    #$f33f]
	move.b	#0x0b,d1                        	| [$ac8f: ldb    #$0b]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$ac91: lda    [$03,x]] [video_address]
	move.b	(a0),d0                         	| [...]
l_ac94:
	GET_REG_ADDRESS	0,d3                   	| [$ac94: cmpa   ,y+]
	addq.w	#1,d3                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_ac9d                             	| [$ac96: beq    $ac9d]
	subq.b	#1,d1                           	| [$ac98: decb]
	jne	l_ac94                             	| [$ac99: bne    $ac94]
	jra	l_ad12                             	| [$ac9b: bra    $ad12]
l_ac9d:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ac9d: lda    $c8]
	or.b	#0x10,d0                          	| [$ac9f: ora    #$10]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$aca1: sta    $c8]
	move.w	#0xf34a,d3                      	| [$aca3: ldy    #$f34a]
	move.b	#0x04,d1                        	| [$aca7: ldb    #$04]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$aca9: lda    [$03,x]] [video_address]
	move.b	(a0),d0                         	| [...]
l_acac:
	GET_REG_ADDRESS	0,d3                   	| [$acac: cmpa   ,y+]
	addq.w	#1,d3                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_acb5                             	| [$acae: beq    $acb5]
	subq.b	#1,d1                           	| [$acb0: decb]
	jne	l_acac                             	| [$acb1: bne    $acac]
	jra	l_acbd                             	| [$acb3: bra    $acbd]
l_acb5:
	move.b	#0x01,d0                        	| [$acb5: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$acb7: sta    $cb]
	move.b	#0x59,d0                        	| [$acb9: lda    #$59]
	OP_W_ON_DP_ADDRESS	move,0xa1,d0         | [$acbb: sta    $a1]
l_acbd:
	moveq	#0,d0                            	| [$acbd: clra]
	jbsr	l_4eb3                            	| [$acbe: jsr    $4eb3]
	move.b	#0x36,d0                        	| [$acc1: lda    #$36]
	OP_1_ON_DP_ADDRESS	tst,0xc9             | [$acc3: tst    $c9]
	jeq	l_acc9                             	| [$acc5: beq    $acc9]
	move.b	#0x37,d0                        	| [$acc7: lda    #$37]
l_acc9:
	jbsr	l_4eb3                            	| [$acc9: jsr    $4eb3]
	GET_DP_ADDRESS	0xa1                    	| [$accc: ldd    $a1]
	LOAD_D                                 	| [$accc: ldd    $a1]
	sub.b	#0x06,d0                         	| [$acce: suba   #$06]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3201                     	| [$acd0: std    $3201]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3260                     	| [$acd3: clr    $3260]
	clr.b	(a0)                         	| [...]
l_acd6:
	GET_ADDRESS	0x3451                     	| [$acd6: dec    $3451]
	subq.b	#1,(a0)                         	| [...]
	jne	l_ad03                             	| [$acd9: bne    $ad03]
	move.w	#0x30a0,d2                      	| [$acdb: ldx    #$30a0]
	GET_REG_ADDRESS	0x1,d2                 	| [$acde: ldd    $1,x]
	LOAD_D                                 	| [$acde: ldd    $1,x]
	GET_ADDRESS	0x3450                     	| [$ace0: adda   $3450]
	add.b	(a0),d0                          	| [...]
	add.b	#0x02,d1                         	| [$ace3: addb   #$02]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$ace5: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xdb2d,d3                      	| [$ace7: ldy    #$db2d]
	move.w	#0x361c,d4                      	| [$aceb: ldu    #$361c]
	jbsr	l_86ee                            	| [$acee: jsr    $86ee]
	jbsr	l_b378                            	| [$acf1: jsr    $b378]
	GET_ADDRESS	0x3450                     	| [$acf4: lda    $3450]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xfd,d0                         	| [$acf7: cmpa   #$fd]
	jeq	l_ad03                             	| [$acf9: beq    $ad03]
	GET_ADDRESS	0x3450                     	| [$acfb: dec    $3450]
	subq.b	#1,(a0)                         	| [...]
	move.b	#0x04,d0                        	| [$acfe: lda    #$04]
	GET_ADDRESS	0x3451                     	| [$ad00: sta    $3451]
	move.b	d0,(a0)                         	| [...]
l_ad03:
	GET_ADDRESS	0x3450                     	| [$ad03: ldb    $3450]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0xfd,d1                         	| [$ad06: cmpb   #$fd]
	jne	l_ad12                             	| [$ad08: bne    $ad12]
	BIT	#0x08,d0                           	| [$ad0a: bita   #$08]
	jeq	l_ad12                             	| [$ad0c: beq    $ad12]
	BIT	#0x20,d0                           	| [$ad0e: bita   #$20]
	jeq	l_ad5e                             	| [$ad10: beq    $ad5e]
l_ad12:
	GET_ADDRESS	0x3424                     	| [$ad12: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$ad15: cmpa   $3425]
	cmp.b	(a0),d0                          	| [...]
	jne	l_ad66                             	| [$ad18: bne    $ad66]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ad1a: lda    $c8]
	BIT	#0x40,d0                           	| [$ad1c: bita   #$40]
	jeq	l_ad25                             	| [$ad1e: beq    $ad25]
	GET_ADDRESS	0x344a                     	| [$ad20: lda    $344a]
	move.b	(a0),d0                         	| [...]
	jra	l_ad27                             	| [$ad23: bra    $ad27]
l_ad25:
	move.b	#0x09,d0                        	| [$ad25: lda    #$09]
l_ad27:
	GET_ADDRESS	0x3428                     	| [$ad27: cmpa   $3428]
	cmp.b	(a0),d0                          	| [...]
	jne	l_ad34                             	| [$ad2a: bne    $ad34]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ad2c: lda    $c8]
	or.b	#0x08,d0                          	| [$ad2e: ora    #$08]
	or.b	#0x04,d0                          	| [$ad30: ora    #$04]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$ad32: sta    $c8]
l_ad34:
	GET_ADDRESS	0x3427                     	| [$ad34: lda    $3427]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$ad37: cmpa   #$ff]
	jne	l_ad47                             	| [$ad39: bne    $ad47]
	GET_ADDRESS	0x3428                     	| [$ad3b: lda    $3428]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$ad3e: deca]
	GET_ADDRESS	0x3427                     	| [$ad3f: sta    $3427]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x14,d0                        	| [$ad42: lda    #$14]
	GET_ADDRESS	0x3424                     	| [$ad44: sta    $3424]
	move.b	d0,(a0)                         	| [...]
l_ad47:
	GET_ADDRESS	0x3427                     	| [$ad47: inc    $3427]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x3428                     	| [$ad4a: inc    $3428]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x3425                     	| [$ad4d: clr    $3425]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3427                     	| [$ad50: lda    $3427]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$ad53: cmpa   #$04]
	jne	l_ad5d                             	| [$ad55: bne    $ad5d]
	OP_R_ON_DP_ADDRESS	move,0xc8,d1         | [$ad57: ldb    $c8]
	eor.b	#0x40,d1                         	| [$ad59: eorb   #$40]
	OP_W_ON_DP_ADDRESS	move,0xc8,d1         | [$ad5b: stb    $c8]
l_ad5d:
	rts                                    	| [$ad5d: rts]

l_ad5e:
	OP_1_ON_DP_ADDRESS	tst,0xcb             | [$ad5e: tst    $cb]
	jeq	l_ad64                             	| [$ad60: beq    $ad64]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$ad62: inc    event_sub_state_28]
l_ad64:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$ad64: inc    event_sub_state_28]
l_ad66:
	rts                                    	| [$ad66: rts]

l_ad67:
	OP_R_ON_DP_ADDRESS	move,0xc9,d0         | [$ad67: lda    $c9]
	BIT	#0x01,d0                           	| [$ad69: bita   #$01]
	jne	l_ad95                             	| [$ad6b: bne    $ad95]
	move.w	#0x3220,d2                      	| [$ad6d: ldx    #$3220]
	move.b	#0x02,d0                        	| [$ad70: lda    #$02]
	GET_REG_ADDRESS	0xd,d2                 	| [$ad72: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8387                            	| [$ad74: jsr    $8387]
	move.w	#0x309b,d3                      	| [$ad77: ldy    #$309b]
	move.b	#0x00,d0                        	| [$ad7b: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$ad7b: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$ad7e: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x342d                     	| [$ad80: ldd    $342d]
	LOAD_D                                 	| [$ad80: ldd    $342d]
	GET_REG_ADDRESS	0,d3                   	| [$ad83: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x342f                     	| [$ad85: lda    $342f]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$ad88: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_5466                            	| [$ad8a: jsr    $5466]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ad8d: lda    $c8]
	and.b	#0xfd,d0                         	| [$ad8f: anda   #$fd]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$ad91: sta    $c8]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$ad93: inc    event_sub_state_28]
l_ad95:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$ad95: inc    event_sub_state_28]
	rts                                    	| [$ad97: rts]

l_ad98:
	move.b	#0x01,d0                        	| [$ad98: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$ad9a: sta    $cb]
	move.w	#0x30a0,d2                      	| [$ad9c: ldx    #$30a0]
	jbsr	l_5035                            	| [$ad9f: jsr    $5035]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$ada2: lda    [$03,x]] [video_address]
	move.b	(a0),d0                         	| [...]
	move.b	#0x07,d1                        	| [$ada5: ldb    #$07]
	move.w	#0xf34e,d2                      	| [$ada7: ldx    #$f34e]
l_adaa:
	GET_REG_ADDRESS	0,d2                   	| [$adaa: cmpa   ,x+]
	addq.w	#1,d2                           	| [...]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_adb3                             	| [$adac: beq    $adb3]
	subq.b	#1,d1                           	| [$adae: decb]
	jne	l_adaa                             	| [$adaf: bne    $adaa]
	jra	l_adb5                             	| [$adb1: bra    $adb5]
l_adb3:
	OP_W_ON_DP_ADDRESS	addq,0xcb,#1         | [$adb3: inc    $cb]
l_adb5:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$adb5: lda    $c8]
	BIT	#0x01,d0                           	| [$adb7: bita   #$01]
	jeq	l_ae21                             	| [$adb9: beq    $ae21]
	move.w	#0x3380,d3                      	| [$adbb: ldy    #$3380]
	move.b	#0x0f,d0                        	| [$adbf: lda    #$0f]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d1         | [$adc1: ldb    $19]
	jbsr	multiply_ab                       	| [$adc3: mul]
	add.w	d1,d3                            	| [$adc4: leay   d,y]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$adc6: lda    $6a]
	move.b	#0x05,d1                        	| [$adc8: ldb    #$05]
	jbsr	multiply_ab                       	| [$adca: mul]
	add.w	d1,d3                            	| [$adcb: leay   d,y]
	GET_REG_ADDRESS	0x2,d3                 	| [$adcd: tst    $2,y]
	tst.b	(a0)                             	| [...]
	jne	l_ade5                             	| [$adcf: bne    $ade5]
	GET_REG_ADDRESS	-0x5,d3                	| [$add1: ldd    -$5,y]
	LOAD_D                                 	| [$add1: ldd    -$5,y]
	GET_REG_ADDRESS	0,d3                   	| [$add3: std    ,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	-0x3,d3                	| [$add5: ldd    -$3,y]
	LOAD_D                                 	| [$add5: ldd    -$3,y]
	GET_REG_ADDRESS	0x2,d3                 	| [$add7: std    $2,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	-0x1,d3                	| [$add9: lda    -$1,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d3                 	| [$addb: sta    $4,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$addd: ldd    $2,y]
	LOAD_D                                 	| [$addd: ldd    $2,y]
	tst.w	d1                               	| [$addf: cmpd   #$0000]
	jeq	l_ae21                             	| [$ade3: beq    $ae21]
l_ade5:
	GET_ADDRESS	0x342c                     	| [$ade5: lda    $342c]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$ade8: deca]
	cmp.b	#0x15,d0                         	| [$ade9: cmpa   #$15]
	jcc	l_adf2                             	| [$adeb: bcc    $adf2]
	move.b	#0x05,d1                        	| [$aded: ldb    #$05]
	jbsr	multiply_ab                       	| [$adef: mul]
	jra	l_adf9                             	| [$adf0: bra    $adf9]
l_adf2:
	sub.b	#0x14,d0                         	| [$adf2: suba   #$14]
	move.b	#0x02,d1                        	| [$adf4: ldb    #$02]
	jbsr	multiply_ab                       	| [$adf6: mul]
	add.b	#0x64,d1                         	| [$adf7: addb   #$64]
l_adf9:
	move.b	d1,d0                           	| [$adf9: tfr    b,a]
	move.b	#0x03,d1                        	| [$adfb: ldb    #$03]
	jbsr	l_a606                            	| [$adfd: jsr    $a606]
	move.b	d1,d0                           	| [$ae00: tfr    b,a]
	move.b	#0x0a,d1                        	| [$ae02: ldb    #$0a]
	jbsr	l_a606                            	| [$ae04: jsr    $a606]
                                         | [$ae07: asla]
                                         | [$ae08: asla]
                                         | [$ae09: asla]
	asl.b	#4,d0                            	| [$ae0a: asla]
	OP_W_ON_DP_ADDRESS	move,0x99,d0         | [$ae0b: sta    $99]
	move.b	d1,d0                           	| [$ae0d: tfr    b,a]
	move.b	#0x0a,d1                        	| [$ae0f: ldb    #$0a]
	jbsr	l_a606                            	| [$ae11: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x98,d0         | [$ae14: sta    $98]
                                         | [$ae16: aslb]
                                         | [$ae17: aslb]
                                         | [$ae18: aslb]
	asl.b	#4,d1                            	| [$ae19: aslb]
	GET_DP_ADDRESS	0x98                    	| [$ae1a: orb    $98]
	or.b	(a0),d1                           	| [...]
	OP_W_ON_DP_ADDRESS	move,0x98,d1         | [$ae1c: stb    $98]
	jbsr	l_7f0a                            	| [$ae1e: jsr    $7f0a]
l_ae21:
	move.w	#0x3220,d2                      	| [$ae21: ldx    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$ae24: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_ae2f                             	| [$ae26: beq    $ae2f]
	move.b	#0x01,d0                        	| [$ae28: lda    #$01]
	GET_REG_ADDRESS	0xd,d2                 	| [$ae2a: sta    $d,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_8387                            	| [$ae2c: jsr    $8387]
l_ae2f:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ae2f: lda    $c8]
	or.b	#0x02,d0                          	| [$ae31: ora    #$02]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$ae33: sta    $c8]
	move.b	#0x83,d0                        	| [$ae35: lda    #$83]
	move.w	#0x2f17,d2                      	| [$ae37: ldx    #$2f17]
	OP_R_ON_DP_ADDRESS	move,0x6a,d1         | [$ae3a: ldb    $6a]
	addq.b	#1,d1                           	| [$ae3c: incb]
	and.l	#0xFF,d1                         	| [masking out]
	GET_REG_UNCHECKED_ADDRESS_FROM_REG	d1,d2         	| [$ae3d: sta    b,x] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x82,d0                        	| [$ae3f: lda    #$82]
	jbsr	l_4eb3                            	| [$ae41: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$ae44: lda    #$ff]
	jbsr	l_4eb3                            	| [$ae46: jsr    $4eb3]
	GET_ADDRESS	0x3456                     	| [$ae49: clr    $3456]
	clr.b	(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$ae4c: inc    event_sub_state_28]
	rts                                    	| [$ae4e: rts]

l_ae4f:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$ae4f: lda    $c8]
	or.b	#0x01,d0                          	| [$ae51: ora    #$01]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$ae53: sta    $c8]
	move.w	#0x34e8,d2                      	| [$ae55: ldx    #$34e8]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$ae58: lda    $19]
	asl.b	#1,d0                            	| [$ae5a: asla]
	GET_DP_ADDRESS	0xc8                    	| [$ae5b: ldu    $c8]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	and.l	#0xFF,d0                         	| [masking out]
	GET_REG_ADDRESS_FROM_REG	d0,d2         	| [$ae5d: stu    a,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.w	#0x3508,d2                      	| [$ae5f: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$ae62: lda    $19]
	move.b	#0x20,d1                        	| [$ae64: ldb    #$20]
	jbsr	multiply_ab                       	| [$ae66: mul]
	add.w	d1,d2                            	| [$ae67: leax   d,x]
	GET_ADDRESS	0x342d                     	| [$ae69: ldd    $342d]
	LOAD_D                                 	| [$ae69: ldd    $342d]
	GET_REG_ADDRESS	0,d2                   	| [$ae6c: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x342f                     	| [$ae6e: lda    $342f]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$ae71: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3456                     	| [$ae73: lda    $3456]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$ae76: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xa2,d0         | [$ae78: lda    $a2]
	sub.b	#0x10,d0                         	| [$ae7a: suba   #$10]
	GET_ADDRESS	0x3262                     	| [$ae7c: cmpa   $3262]
	cmp.b	(a0),d0                          	| [...]
	jcc	l_ae93                             	| [$ae7f: bcc    $ae93]
	add.b	#0x20,d0                         	| [$ae81: adda   #$20]
	GET_ADDRESS	0x3262                     	| [$ae83: cmpa   $3262]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_ae93                             	| [$ae86: bcs    $ae93]
	GET_ADDRESS	0x3262                     	| [$ae88: lda    $3262]
	move.b	(a0),d0                         	| [...]
	add.b	#0x16,d0                         	| [$ae8b: adda   #$16]
	OP_W_ON_DP_ADDRESS	move,0xa2,d0         | [$ae8d: sta    $a2]
	move.b	#0x01,d0                        	| [$ae8f: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$ae91: sta    $cb]
l_ae93:
	GET_ADDRESS	0x3456                     	| [$ae93: lda    $3456]
	move.b	(a0),d0                         	| [...]
	jeq	l_aed4                             	| [$ae96: beq    $aed4]
	move.w	#0x3852,d3                      	| [$ae98: ldy    #$3852]
	move.w	#0x342d,d2                      	| [$ae9c: ldx    #$342d]
	move.b	#0x03,d0                        	| [$ae9f: lda    #$03]
	jbsr	l_a6c1                            	| [$aea1: jsr    $a6c1]
	tst.b	d0                               	| [$aea4: tsta]
	jpl	l_aecb                             	| [$aea5: bpl    $aecb]
	move.w	#0xf36a,d3                      	| [$aea7: ldy    #$f36a]
	GET_ADDRESS	0x3456                     	| [$aeab: lda    $3456]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x05,d0                         	| [$aeae: cmpa   #$05]
	jcs	l_aeb4                             	| [$aeb0: bcs    $aeb4]
	move.b	#0x04,d0                        	| [$aeb2: lda    #$04]
l_aeb4:
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$aeb4: lda    a,y]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x34e6                     	| [$aeb6: sta    $34e6]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x34e7                     	| [$aeb9: inc    $34e7]
	addq.b	#1,(a0)                         	| [...]
	move.w	#0xf358,d2                      	| [$aebc: ldx    #$f358]
	GET_REG_ADDRESS	0,d2                   	| [$aebf: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
l_aec1:
	jbsr	l_4eb3                            	| [$aec1: jsr    $4eb3]
	GET_REG_ADDRESS	0,d2                   	| [$aec4: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	tst.b	d0                               	| [$aec6: tsta]
	jne	l_aec1                             	| [$aec7: bne    $aec1]
	jra	l_aed4                             	| [$aec9: bra    $aed4]
l_aecb:
	GET_ADDRESS	0x3456                     	| [$aecb: clr    $3456]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34e6                     	| [$aece: clr    $34e6]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x34e7                     	| [$aed1: clr    $34e7]
	clr.b	(a0)                         	| [...]
l_aed4:
	move.b	#0x01,d0                        	| [$aed4: lda    #$01]
	GET_ADDRESS	0x3260                     	| [$aed6: sta    $3260]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$aed9: clr    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$aedb: clr    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$aedd: inc    $26]
	rts                                    	| [$aedf: rts]

l_aee0:
	OP_R_ON_DP_ADDRESS	move,0x03,d0         | [$aee0: lda    $03]
	move.b	#0x0a,d1                        	| [$aee2: ldb    #$0a]
	jbsr	l_a606                            	| [$aee4: jsr    $a606]
	GET_UNCHECKED_ADDRESS	0x271d                     	| [$aee7: stb    $271d] [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_UNCHECKED_ADDRESS	0x271e                     	| [$aeea: sta    $271e] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x0a,d0                        	| [$aeed: lda    #$0a]
	move.b	d0,d1                           	| [$aeef: tfr    a,b]
	MAKE_D                                 	| [...]
	GET_UNCHECKED_ADDRESS	0x2f1d                     	| [$aef1: std    $2f1d] [video_address]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	rts                                    	| [$aef4: rts]

l_aef5:
	move.w	#0x309b,d3                      	| [$aef5: ldy    #$309b]
	move.b	#0x16,d0                        	| [$aef9: ldd    #$161f]
	move.w	#0x161f,d1                      	| [$aef9: ldd    #$161f]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$aefc: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x25,d0                        	| [$aefe: ldd    #$251c]
	move.w	#0x251c,d1                      	| [$aefe: ldd    #$251c]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$af01: std    ,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$af03: rts]

l_af04:
	jbsr	l_890f                            	| [$af04: jsr    $890f]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$af07: inc    $19]
	GET_REG_ADDRESS	0x4,d4                 	| [$af09: lda    $4,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$af0b: anda   #$f0]
	GET_DP_ADDRESS	swimmer_19                    	| [$af0d: ora    $19]
	or.b	(a0),d0                           	| [...]
	GET_REG_ADDRESS	0x4,d4                 	| [$af0f: sta    $4,u]
	move.b	d0,(a0)                         	| [...]
	jra	l_af18                             	| [$af11: bra    $af18]
l_af13:
	jbsr	l_894b                            	| [$af13: jsr    $894b]
	OP_W_ON_DP_ADDRESS	addq,swimmer_19,#1         | [$af16: inc    $19]
l_af18:
	GET_REG_ADDRESS	0,d4                   	| [$af18: lda    ,u]
	move.b	(a0),d0                         	| [...]
	and.b	#0xf0,d0                         	| [$af1a: anda   #$f0]
	GET_DP_ADDRESS	swimmer_19                    	| [$af1c: ora    $19]
	or.b	(a0),d0                           	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$af1e: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,swimmer_19,#1         | [$af20: dec    $19]
	rts                                    	| [$af22: rts]

l_af23:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$af23: lda    current_event_69]
	cmp.b	#0x04,d0                         	| [$af25: cmpa   #$04]
	jeq	l_af2e                             	| [$af27: beq    $af2e]
	jbsr	l_528f                            	| [$af29: jsr    $528f]
	jra	l_af38                             	| [$af2c: bra    $af38]
l_af2e:
	move.w	#0x338a,d2                      	| [$af2e: ldx    #$338a]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$af31: lda    $19]
	move.b	#0x0f,d1                        	| [$af33: ldb    #$0f]
	jbsr	multiply_ab                       	| [$af35: mul]
	add.w	d1,d2                            	| [$af36: leax   d,x]
l_af38:
	move.w	#0x3800,d3                      	| [$af38: ldy    #$3800]
	move.b	#0x20,d0                        	| [$af3c: lda    #$20]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$af3e: ldb    current_event_69]
	jbsr	multiply_ab                       	| [$af40: mul]
	add.w	d1,d3                            	| [$af41: leay   d,y]
	GET_DP_ADDRESS	0x51                    	| [$af43: sty    $51]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	add.w	#0x10,d3                         	| [$af46: leay   $10,y]
	move.w	#0x3360,d4                      	| [$af49: ldu    #$3360]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$af4c: lda    $19]
	move.b	#0x03,d1                        	| [$af4e: ldb    #$03]
	jbsr	multiply_ab                       	| [$af50: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$af51: leau   b,u]
	move.b	#0x03,d0                        	| [$af53: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$af55: sta    $50]
l_af57:
	jbsr	l_520b                            	| [$af57: jsr    $520b]
	tst.b	d1                               	| [$af5a: tstb]
	jeq	l_af87                             	| [$af5b: beq    $af87]
	GET_REG_ADDRESS	0,d3                   	| [$af5d: ldd    ,y]
	LOAD_D                                 	| [$af5d: ldd    ,y]
	GET_REG_ADDRESS	0x8,d3                 	| [$af5f: std    $8,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$af61: ldd    $2,y]
	LOAD_D                                 	| [$af61: ldd    $2,y]
	GET_REG_ADDRESS	0xa,d3                 	| [$af63: std    $a,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x4,d3                 	| [$af65: ldd    $4,y]
	LOAD_D                                 	| [$af65: ldd    $4,y]
	GET_REG_ADDRESS	0xc,d3                 	| [$af67: std    $c,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x6,d3                 	| [$af69: ldd    $6,y]
	LOAD_D                                 	| [$af69: ldd    $6,y]
	GET_REG_ADDRESS	0xe,d3                 	| [$af6b: std    $e,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$af6d: ldd    ,x]
	LOAD_D                                 	| [$af6d: ldd    ,x]
	GET_REG_ADDRESS	0,d3                   	| [$af6f: std    ,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$af71: ldd    $2,x]
	LOAD_D                                 	| [$af71: ldd    $2,x]
	GET_REG_ADDRESS	0x2,d3                 	| [$af73: std    $2,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x4,d2                 	| [$af75: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x4,d3                 	| [$af77: sta    $4,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$af79: ldd    ,u]
	LOAD_D                                 	| [$af79: ldd    ,u]
	GET_REG_ADDRESS	0x5,d3                 	| [$af7b: std    $5,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x2,d4                 	| [$af7d: lda    $2,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x7,d3                 	| [$af7f: sta    $7,y]
	move.b	d0,(a0)                         	| [...]
	sub.w	#0x8,d3                          	| [$af81: leay   -$8,y]
	OP_W_ON_DP_ADDRESS	subq,0x50,#1         | [$af83: dec    $50]
	jne	l_af57                             	| [$af85: bne    $af57]
l_af87:
	OP_R_ON_DP_ADDRESS	move,0x50,d0         | [$af87: lda    $50]
	addq.b	#1,d0                           	| [$af89: inca]
	cmp.b	#0x04,d0                         	| [$af8a: cmpa   #$04]
	jcc	l_afab                             	| [$af8c: bcc    $afab]
	move.w	#0x33f4,d3                      	| [$af8e: ldy    #$33f4]
l_af92:
	GET_REG_ADDRESS	0,d3                   	| [$af92: tst    ,y+]
	addq.w	#1,d3                           	| [...]
	tst.b	(a0)                             	| [...]
	jne	l_afa5                             	| [$af94: bne    $afa5]
l_af96:
	GET_REG_ADDRESS	-0x2,d3                	| [$af96: cmpa   -$2,y]
	cmp.b	(a0),d0                          	| [...]
	jhi	l_af9d                             	| [$af98: bhi    $af9d]
	addq.b	#1,d0                           	| [$af9a: inca]
	jra	l_af96                             	| [$af9b: bra    $af96]
l_af9d:
	cmp.b	#0x04,d0                         	| [$af9d: cmpa   #$04]
	jcc	l_afab                             	| [$af9f: bcc    $afab]
	GET_REG_ADDRESS	-0x1,d3                	| [$afa1: sta    -$1,y]
	move.b	d0,(a0)                         	| [...]
	jra	l_afab                             	| [$afa3: bra    $afab]
l_afa5:
	cmp.w	#0x33f7,d3                       	| [$afa5: cmpy   #$33f7]
	jne	l_af92                             	| [$afa9: bne    $af92]
l_afab:
	jbsr	l_5703                            	| [$afab: jsr    $5703]
	rts                                    	| [$afae: rts]

l_afaf:
	move.l	d2,-(sp)                        	| [$afaf: pshs   x]
	move.w	#0x3600,d2                      	| [$afb1: ldx    #$3600]
l_afb4:
	move.b	#0xf8,d0                        	| [$afb4: ldd    #$f8f8]
	move.w	#0xf8f8,d1                      	| [$afb4: ldd    #$f8f8]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$afb7: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3688,d2                       	| [$afb9: cmpx   #$3688]
	jne	l_afb4                             	| [$afbc: bne    $afb4]
	movem.l	(sp)+,d2                       	| [$afbe: puls   x]
	rts                                    	| [$afc0: rts]

l_afc1:
	move.l	d2,-(sp)                        	| [$afc1: pshs   x]
	move.w	#0x36c0,d2                      	| [$afc3: ldx    #$36c0]
l_afc6:
	move.b	#0x00,d0                        	| [$afc6: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$afc6: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$afc9: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3700,d2                       	| [$afcb: cmpx   #$3700]
	jne	l_afc6                             	| [$afce: bne    $afc6]
	movem.l	(sp)+,d2                       	| [$afd0: puls   x]
	rts                                    	| [$afd2: rts]

l_afd3:
	move.b	#0x20,d1                        	| [$afd3: ldb    #$20]
	jra	l_afe0                             	| [$afd5: jra    $afe0]
l_afd8:
	move.b	#0x20,d1                        	| [$afd8: ldb    #$20]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$afda: lda    $0f]
	and.b	#0x0c,d0                         	| [$afdc: anda   #$0c]
                                         | [$afde: lsra]
	lsr.b	#2,d0                            	| [$afdf: lsra]
l_afe0:
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$afe0: sta    ,y+] [video_address]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$afe2: decb]
	jne	l_afe0                             	| [$afe3: bne    $afe0]
	rts                                    	| [$afe5: rts]

	move.b	#0x03,d1                        	| [$afe6: ldb    #$03]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$afe8: lda    $0f]
	and.b	#0x0c,d0                         	| [$afea: anda   #$0c]
                                         | [$afec: lsra]
	lsr.b	#2,d0                            	| [$afed: lsra]
l_afee:
	GET_REG_ADDRESS	0,d3                   	| [$afee: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$aff0: decb]
	jne	l_afee                             	| [$aff1: bne    $afee]
	rts                                    	| [$aff3: rts]

l_aff4:
	GET_REG_ADDRESS	0,d2                   	| [$aff4: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$aff6: ldb    #$0a]
	jbsr	multiply_ab                       	| [$aff8: mul]
	GET_REG_ADDRESS	0,d2                   	| [$aff9: addb   ,x+]
	addq.w	#1,d2                           	| [...]
	add.b	(a0),d1                          	| [...]
	move.b	#0x0a,d0                        	| [$affb: lda    #$0a]
	jbsr	multiply_ab                       	| [$affd: mul]
	GET_REG_ADDRESS	0,d2                   	| [$affe: addb   ,x+]
	addq.w	#1,d2                           	| [...]
	add.b	(a0),d1                          	| [...]
	move.b	#0x0a,d0                        	| [$b000: lda    #$0a]
	jbsr	multiply_ab                       	| [$b002: mul]
	GET_REG_ADDRESS	0,d2                   	| [$b003: addb   ,x+]
	addq.w	#1,d2                           	| [...]
	add.b	(a0),d1                          	| [...]
	move.b	#0x00,d6	| [$b005: adca   #$00]
	addx.b	d6,d0                        	| [$b005: adca   #$00]
	rts                                    	| [$b007: rts]

l_b008:
	GET_REG_ADDRESS	0,d2                   	| [$b008: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$b00a: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x07ff,d3              	| [$b00c: clr    $07ff,y]
	clr.b	(a0)                         	| [...]
	subq.b	#1,d1                           	| [$b010: decb]
	jne	l_b008                             	| [$b011: bne    $b008]
	rts                                    	| [$b013: rts]

l_b014:
	move.l	d2,-(sp)                        	| [$b014: pshs   x]
	move.b	#0x09,d0                        	| [$b016: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b018: sta    $48]
	move.w	d2,d4                           	| [$b01a: leau   $10,x]
	add.w	#0x10,d4                         	| [$b01a: leau   $10,x]
	jbsr	l_509f                            	| [$b01d: jsr    $509f]
	move.w	#0x30b0,d2                      	| [$b020: ldx    #$30b0]
	move.w	#0x3050,d3                      	| [$b023: ldy    #$3050]
	jbsr	l_a6c1                            	| [$b027: jsr    $a6c1]
	cmp.b	#0x01,d0                         	| [$b02a: cmpa   #$01]
	jne	l_b036                             	| [$b02c: bne    $b036]
	GET_DP_ADDRESS	0x50                    	| [$b02e: ldd    $50]
	LOAD_D                                 	| [$b02e: ldd    $50]
	GET_DP_ADDRESS	speed_msb_b0            	| [$b030: std    speed_msb_b0]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x52                    	| [$b032: ldd    $52]
	LOAD_D                                 	| [$b032: ldd    $52]
	GET_DP_ADDRESS	0xb2                    	| [$b034: std    $b2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_b036:
	movem.l	(sp)+,d2                       	| [$b036: puls   x]
	rts                                    	| [$b038: rts]

l_b039:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$b039: lda    $0f]
	BIT	#0x03,d0                           	| [$b03b: bita   #$03]
	jne	l_b095                             	| [$b03d: bne    $b095]
	GET_ADDRESS	0x34f6                     	| [$b03f: tst    $34f6]
	tst.b	(a0)                             	| [...]
	jne	l_b048                             	| [$b042: bne    $b048]
	BIT	#0x07,d0                           	| [$b044: bita   #$07]
	jne	l_b095                             	| [$b046: bne    $b095]
l_b048:
	OP_R_ON_DP_ADDRESS	move,0xa1,d0         | [$b048: lda    $a1]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b04a: sta    $48]
	GET_ADDRESS	0x34f5                     	| [$b04c: ldd    $34f5]
	LOAD_D                                 	| [$b04c: ldd    $34f5]
	tst.b	d1                               	| [$b04f: tstb]
	jeq	l_b06b                             	| [$b050: beq    $b06b]
	move.w	#0xda43,d3                      	| [$b052: ldy    #$da43]
	GET_ADDRESS	0x34f6                     	| [$b056: adda   $34f6]
	add.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0xa1,d0         | [$b059: sta    $a1]
	subq.b	#1,d1                           	| [$b05b: decb]
	jne	l_b060                             	| [$b05c: bne    $b060]
	move.b	#0xff,d1                        	| [$b05e: ldb    #$ff]
l_b060:
	cmp.b	#0xf9,d1                         	| [$b060: cmpb   #$f9]
	jne	l_b075                             	| [$b062: bne    $b075]
	move.w	#0xda3f,d3                      	| [$b064: ldy    #$da3f]
	moveq	#0,d1                            	| [$b068: clrb]
	jra	l_b075                             	| [$b069: bra    $b075]
l_b06b:
	OP_R_ON_DP_ADDRESS	move,0xa1,d0         | [$b06b: lda    $a1]
	sub.b	#0x03,d0                         	| [$b06d: suba   #$03]
	move.b	#0x06,d1                        	| [$b06f: ldb    #$06]
	move.w	#0xda3f,d3                      	| [$b071: ldy    #$da3f]
l_b075:
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f5                     	| [$b075: std    $34f5]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x361c,d4                      	| [$b078: ldu    #$361c]
	move.w	#0x30a0,d2                      	| [$b07b: ldx    #$30a0]
	jbsr	l_86ee                            	| [$b07e: jsr    $86ee]
	move.w	#0x3658,d4                      	| [$b081: ldu    #$3658]
	move.w	#0xda47,d3                      	| [$b084: ldy    #$da47]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$b088: lda    $48]
	sub.b	#0x0b,d0                         	| [$b08a: suba   #$0b]
	GET_REG_ADDRESS	0x1,d2                 	| [$b08c: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_890f                            	| [$b08e: jsr    $890f]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$b091: lda    $48]
	GET_REG_ADDRESS	0x1,d2                 	| [$b093: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
l_b095:
	rts                                    	| [$b095: rts]

l_b096:
	move.b	#0x0a,d0                        	| [$b096: lda    #$0a]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b098: sta    $48]
	move.w	#0x362c,d4                      	| [$b09a: ldu    #$362c]
	move.w	#0x3440,d2                      	| [$b09d: ldx    #$3440]
l_b0a0:
	GET_REG_ADDRESS	0,d3                   	| [$b0a0: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3429                     	| [$b0a2: adda   $3429]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b0a5: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x342a                     	| [$b0a7: ldb    $342a]
	move.b	(a0),d1                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$b0aa: lda    $c8]
	and.b	#0x40,d0                         	| [$b0ac: anda   #$40]
	jne	l_b0b4                             	| [$b0ae: bne    $b0b4]
	GET_REG_ADDRESS	0,d3                   	| [$b0b0: subb   ,y+]
	addq.w	#1,d3                           	| [...]
	sub.b	(a0),d1                          	| [...]
	jra	l_b0b8                             	| [$b0b2: bra    $b0b8]
l_b0b4:
	GET_REG_ADDRESS	0,d3                   	| [$b0b4: addb   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d1                          	| [...]
	sub.b	#0x08,d1                         	| [$b0b6: subb   #$08]
l_b0b8:
	GET_REG_ADDRESS	0x2,d2                 	| [$b0b8: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x40,d1                        	| [$b0ba: ldb    #$40]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$b0bc: lda    $c8]
	and.b	#0x40,d0                         	| [$b0be: anda   #$40]
	jeq	l_b0cb                             	| [$b0c0: beq    $b0cb]
	GET_REG_ADDRESS	0,d3                   	| [$b0c2: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x06,d0                         	| [$b0c4: suba   #$06]
	neg.b	d0                               	| [$b0c6: nega]
	add.b	#0x06,d0                         	| [$b0c7: adda   #$06]
	jra	l_b0cd                             	| [$b0c9: bra    $b0cd]
l_b0cb:
	GET_REG_ADDRESS	0,d3                   	| [$b0cb: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
l_b0cd:
	cmp.b	#0x07,d0                         	| [$b0cd: cmpa   #$07]
	jcs	l_b0dd                             	| [$b0cf: bcs    $b0dd]
	sub.b	#0x0c,d0                         	| [$b0d1: suba   #$0c]
	neg.b	d0                               	| [$b0d3: nega]
	GET_ADDRESS	0x3442                     	| [$b0d4: ldb    $3442]
	move.b	(a0),d1                         	| [...]
	sub.b	#0x08,d1                         	| [$b0d7: subb   #$08]
                                         | [$b0d9: stb    $3442]
	move.b	d1,(a0)                         	| [...]
	moveq	#0,d1                            	| [$b0dc: clrb]
l_b0dd:
	sub.b	#0x06,d0                         	| [$b0dd: suba   #$06]
	neg.b	d0                               	| [$b0df: nega]
	add.b	#0xe0,d0                         	| [$b0e0: adda   #$e0]
	OP_1_ON_DP_ADDRESS	tst,0x02             | [$b0e2: tst    $02]
	jeq	l_b0e8                             	| [$b0e4: beq    $b0e8]
	eor.b	#0x40,d1                         	| [$b0e6: eorb   #$40]
l_b0e8:
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x49                    	| [$b0e8: std    $49]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_894b                            	| [$b0ea: jsr    $894b]
	GET_DP_ADDRESS	0x49                    	| [$b0ed: ldd    $49]
	LOAD_D                                 	| [$b0ed: ldd    $49]
	GET_REG_ADDRESS	0,d4                   	| [$b0ef: stb    ,u++]
	addq.w	#2,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$b0f1: sta    ,u++]
	addq.w	#2,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$b0f3: lda    $48]
	roxr.b	#1,d0                           	| [$b0f5: rora]
	jcc	l_b0ff                             	| [$b0f6: bcc    $b0ff]
	GET_ADDRESS	0xf491                     	| [$b0f8: orb    $f491]
	or.b	(a0),d1                           	| [...]
	GET_REG_ADDRESS	-0x4,d4                	| [$b0fb: stb    -$4,u]
	move.b	d1,(a0)                         	| [...]
	jra	l_b104                             	| [$b0fd: bra    $b104]
l_b0ff:
	GET_ADDRESS	0xf492                     	| [$b0ff: orb    $f492]
	or.b	(a0),d1                           	| [...]
	GET_REG_ADDRESS	-0x4,d4                	| [$b102: stb    -$4,u]
	move.b	d1,(a0)                         	| [...]
l_b104:
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$b104: dec    $48]
	jne	l_b0a0                             	| [$b106: bne    $b0a0]
	rts                                    	| [$b108: rts]

l_b109:
	GET_ADDRESS	0x3427                     	| [$b109: ldd    $3427]
	LOAD_D                                 	| [$b109: ldd    $3427]
	asl.b	#1,d1                            	| [$b10c: aslb]
	move.w	#0xf36f,d2                      	| [$b10d: ldx    #$f36f]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$b110: ldy    b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	cmp.b	#0xff,d0                         	| [$b113: cmpa   #$ff]
	jne	l_b11c                             	| [$b115: bne    $b11c]
	move.w	#0x345c,d2                      	| [$b117: ldx    #$345c]
	jra	l_b11f                             	| [$b11a: bra    $b11f]
l_b11c:
	asl.b	#1,d0                            	| [$b11c: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$b11d: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
l_b11f:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$b11f: lda    $0f]
	roxr.b	#1,d0                           	| [$b121: rora]
	jcc	l_b12b                             	| [$b122: bcc    $b12b]
	move.w	#0x3400,d4                      	| [$b124: ldu    #$3400]
	move.b	#0x15,d0                        	| [$b127: lda    #$15]
	jra	l_b136                             	| [$b129: bra    $b136]
l_b12b:
	add.w	#0x15,d2                         	| [$b12b: leax   $15,x]
	add.w	#0x15,d3                         	| [$b12e: leay   $15,y]
	move.w	#0x3415,d4                      	| [$b131: ldu    #$3415]
	move.b	#0x09,d0                        	| [$b134: lda    #$09]
l_b136:
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b136: sta    $48]
l_b138:
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$b138: clr    $49]
	GET_REG_ADDRESS	0,d3                   	| [$b13a: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$b13c: subb   ,x]
	sub.b	(a0),d1                          	| [...]
	jeq	l_b168                             	| [$b13e: beq    $b168]
	jpl	l_b145                             	| [$b140: bpl    $b145]
	neg.b	d1                               	| [$b142: negb]
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$b143: inc    $49]
l_b145:
	GET_ADDRESS	0x3425                     	| [$b145: lda    $3425]
	move.b	(a0),d0                         	| [...]
	jbsr	multiply_ab                       	| [$b148: mul]
	move.l	d2,-(sp)                        	| [$b149: pshs   x]
	GET_ADDRESS	0x3423                     	| [$b14b: ldx    $3423]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_DP_ADDRESS	0x4a                    	| [$b14e: stx    $4a]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0x4a             | [$b150: clr    $4a]
	GET_DP_ADDRESS	0x4a                    	| [$b152: ldx    $4a]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	jbsr	l_a62b                            	| [$b154: jsr    $a62b]
	asl.b	#1,d1                            	| [$b157: aslb]
	GET_ADDRESS	0x3424                     	| [$b158: cmpb   $3424]
	cmp.b	(a0),d1                          	| [...]
	jcs	l_b15f                             	| [$b15b: bcs    $b15f]
	addq.w	#0x1,d2                         	| [$b15d: leax   $1,x]
l_b15f:
	PUSH_SR
	move.w	d2,d1                           	| [$b15f: tfr    x,d]
	ror.w	#8,d2                            	| [...]
	move.b	d2,d0                           	| [...] set MSB
	ror.w	#8,d2                            	| [...]
	POP_SR
	movem.l	(sp)+,d2                       	| [$b161: puls   x]
	OP_1_ON_DP_ADDRESS	tst,0x49             | [$b163: tst    $49]
	jeq	l_b168                             	| [$b165: beq    $b168]
	neg.b	d1                               	| [$b167: negb]
l_b168:
	GET_REG_ADDRESS	0,d2                   	| [$b168: addb   ,x+]
	addq.w	#1,d2                           	| [...]
	add.b	(a0),d1                          	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$b16a: stb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$b16c: dec    $48]
	jne	l_b138                             	| [$b16e: bne    $b138]
	rts                                    	| [$b170: rts]

l_b171:
	GET_REG_ADDRESS	0,d2                   	| [$b171: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_b176                             	| [$b173: beq    $b176]
	rts                                    	| [$b175: rts]

l_b176:
	GET_REG_ADDRESS	0x3,d2                 	| [$b176: ldd    $3,x]
	LOAD_D                                 	| [$b176: ldd    $3,x]
	add.w	#0x0040,d1                       	| [$b178: addd   #$0040]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$b17b: std    $3,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x41,d0                        	| [$b17d: lda    #$41]
	cmp.w	#0x3240,d2                       	| [$b17f: cmpx   #$3240]
	jeq	l_b186                             	| [$b182: beq    $b186]
	move.b	#0x73,d0                        	| [$b184: lda    #$73]
l_b186:
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$b186: cmpa   [$03,x]] [video_address]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_b18c                             	| [$b189: beq    $b18c]
	rts                                    	| [$b18b: rts]

l_b18c:
	GET_REG_ADDRESS	0,d2                   	| [$b18c: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b18e: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1b,d2                	| [$b190: suba   $1b,x]
	sub.b	(a0),d0                          	| [...]
	cmp.w	#0x3240,d2                       	| [$b193: cmpx   #$3240]
	jne	l_b19c                             	| [$b196: bne    $b19c]
	add.b	#0x03,d0                         	| [$b198: adda   #$03]
	jra	l_b19e                             	| [$b19a: bra    $b19e]
l_b19c:
	add.b	#0x05,d0                         	| [$b19c: adda   #$05]
l_b19e:
	GET_REG_ADDRESS	0x2,d2                 	| [$b19e: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_b1a0:
	GET_REG_ADDRESS	0,d2                   	| [$b1a0: tst    ,x]
	tst.b	(a0)                             	| [...]
	jeq	l_b23e                             	| [$b1a2: lbeq   $b23e]
	move.w	#0xde32,d3                      	| [$b1a6: ldy    #$de32]
	cmp.w	#0x3260,d2                       	| [$b1aa: cmpx   #$3260]
	jne	l_b1bc                             	| [$b1ad: bne    $b1bc]
	move.w	#0x3600,d4                      	| [$b1af: ldu    #$3600]
	GET_ADDRESS	0x3430                     	| [$b1b2: lda    $3430]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x10,d0                         	| [$b1b5: suba   #$10]
	GET_REG_ADDRESS	0x1,d2                 	| [$b1b7: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$b1b9: jsr    $894b]
l_b1bc:
	move.w	#0x3668,d4                      	| [$b1bc: ldu    #$3668]
	cmp.w	#0x3240,d2                       	| [$b1bf: cmpx   #$3240]
	jeq	l_b1c7                             	| [$b1c2: beq    $b1c7]
	move.w	#0x3604,d4                      	| [$b1c4: ldu    #$3604]
l_b1c7:
	GET_ADDRESS	0x3430                     	| [$b1c7: lda    $3430]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b1ca: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_889d                            	| [$b1cc: jsr    $889d]
	add.w	#0x8,d4                          	| [$b1cf: leau   $8,u]
	GET_REG_ADDRESS	0x1,d2                 	| [$b1d1: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x20,d0                         	| [$b1d3: adda   #$20]
	GET_REG_ADDRESS	0x1,d2                 	| [$b1d5: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$b1d7: jsr    $894b]
	addq.w	#0x4,d4                         	| [$b1da: leau   $4,u]
	GET_ADDRESS	0x3434                     	| [$b1dc: lda    $3434]
	move.b	(a0),d0                         	| [...]
	cmp.w	#0x3240,d2                       	| [$b1df: cmpx   #$3240]
	jeq	l_b1e7                             	| [$b1e2: beq    $b1e7]
	GET_ADDRESS	0x3438                     	| [$b1e4: lda    $3438]
	move.b	(a0),d0                         	| [...]
l_b1e7:
	GET_REG_ADDRESS	0x1,d2                 	| [$b1e7: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$b1e9: jsr    $894b]
	addq.w	#0x4,d4                         	| [$b1ec: leau   $4,u]
	GET_ADDRESS	0x3436                     	| [$b1ee: lda    $3436]
	move.b	(a0),d0                         	| [...]
	cmp.w	#0x3240,d2                       	| [$b1f1: cmpx   #$3240]
	jeq	l_b1f9                             	| [$b1f4: beq    $b1f9]
	GET_ADDRESS	0x343a                     	| [$b1f6: lda    $343a]
	move.b	(a0),d0                         	| [...]
l_b1f9:
	GET_REG_ADDRESS	0x1,d2                 	| [$b1f9: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$b1fb: jsr    $894b]
	move.w	#0x3618,d4                      	| [$b1fe: ldu    #$3618]
	move.w	#0xde35,d3                      	| [$b201: ldy    #$de35]
	GET_ADDRESS	0x343e                     	| [$b205: lda    $343e]
	move.b	(a0),d0                         	| [...]
	cmp.w	#0x3240,d2                       	| [$b208: cmpx   #$3240]
	jne	l_b223                             	| [$b20b: bne    $b223]
	GET_ADDRESS	0x343c                     	| [$b20d: lda    $343c]
	move.b	(a0),d0                         	| [...]
	move.w	#0x3664,d4                      	| [$b210: ldu    #$3664]
	add.b	#0x02,d1                         	| [$b213: addb   #$02]
	GET_REG_ADDRESS	0x1,d2                 	| [$b215: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b217: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b219: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_894b                            	| [$b21b: jsr    $894b]
	GET_REG_ADDRESS	0x2,d2                 	| [$b21e: dec    $2,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b220: dec    $2,x]
	subq.b	#1,(a0)                         	| [...]
	rts                                    	| [$b222: rts]

l_b223:
	GET_REG_ADDRESS	0x1,d2                 	| [$b223: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b225: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x343f                     	| [$b227: sta    $343f]
	move.b	d0,(a0)                         	| [...]
	sub.b	#0x10,d0                         	| [$b22a: suba   #$10]
	GET_REG_ADDRESS	0x2,d2                 	| [$b22c: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x32a2                     	| [$b22e: sta    $32a2]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b231: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x32a1                     	| [$b233: sta    $32a1]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_894b                            	| [$b236: jsr    $894b]
	GET_ADDRESS	0x343f                     	| [$b239: lda    $343f]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b23c: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_b23e:
	rts                                    	| [$b23e: rts]

l_b23f:
	OP_1_ON_DP_ADDRESS	tst,0xcb             | [$b23f: tst    $cb]
	jne	l_b2f3                             	| [$b241: lbne   $b2f3]
	GET_ADDRESS	0x3240                     	| [$b245: tst    $3240]
	tst.b	(a0)                             	| [...]
	jeq	l_b2f3                             	| [$b248: lbeq   $b2f3]
	GET_DP_ADDRESS	0xa1                    	| [$b24c: ldd    $a1]
	LOAD_D                                 	| [$b24c: ldd    $a1]
	add.b	#0x10,d1                         	| [$b24e: addb   #$10]
	GET_ADDRESS	0x32a2                     	| [$b250: subb   $32a2]
	sub.b	(a0),d1                          	| [...]
	jcs	l_b283                             	| [$b253: bcs    $b283]
	cmp.b	#0x20,d1                         	| [$b255: cmpb   #$20]
	jcc	l_b283                             	| [$b257: bcc    $b283]
	move.l	d1,-(sp)                        	| [$b259: pshs   b]
	move.w	#0xf493,d2                      	| [$b25b: ldx    #$f493]
	GET_ADDRESS	0x3448                     	| [$b25e: ldb    $3448]
	move.b	(a0),d1                         	| [...]
	sub.b	#0x04,d1                         	| [$b261: subb   #$04]
                                         | [$b263: aslb]
                                         | [$b264: aslb]
                                         | [$b265: aslb]
                                         | [$b266: aslb]
	asl.b	#5,d1                            	| [$b267: aslb]
	ABX                                    	| [$b268: abx]
	movem.l	(sp)+,d1                       	| [$b269: puls   b]
	neg.b	d1                               	| [$b26b: negb]
	add.b	#0x1f,d1                         	| [$b26c: addb   #$1f]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$b26e: leax   b,x]
	GET_REG_ADDRESS	0,d2                   	| [$b270: ldb    ,x]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x21,d1                         	| [$b272: cmpb   #$21]
	jeq	l_b283                             	| [$b274: beq    $b283]
	GET_REG_ADDRESS	0,d2                   	| [$b276: adda   ,x]
	add.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x32a1                     	| [$b278: cmpa   $32a1]
	cmp.b	(a0),d0                          	| [...]
	jcc	l_b283                             	| [$b27b: bcc    $b283]
	OP_R_ON_DP_ADDRESS	move,0xc9,d0         | [$b27d: lda    $c9]
	or.b	#0x01,d0                          	| [$b27f: ora    #$01]
	OP_W_ON_DP_ADDRESS	move,0xc9,d0         | [$b281: sta    $c9]
l_b283:
	GET_DP_ADDRESS	0xa1                    	| [$b283: ldd    $a1]
	LOAD_D                                 	| [$b283: ldd    $a1]
	GET_ADDRESS	0x32a1                     	| [$b285: cmpa   $32a1]
	cmp.b	(a0),d0                          	| [...]
	jcc	l_b2d9                             	| [$b288: bcc    $b2d9]
	add.b	#0x0f,d1                         	| [$b28a: addb   #$0f]
	GET_ADDRESS	0x32a2                     	| [$b28c: cmpb   $32a2]
	cmp.b	(a0),d1                          	| [...]
	jcs	l_b2d9                             	| [$b28f: bcs    $b2d9]
	sub.b	#0x1f,d1                         	| [$b291: subb   #$1f]
	GET_ADDRESS	0x32a2                     	| [$b293: cmpb   $32a2]
	cmp.b	(a0),d1                          	| [...]
	jcc	l_b2d9                             	| [$b296: bcc    $b2d9]
	add.b	#0x1f,d0                         	| [$b298: adda   #$1f]
	GET_ADDRESS	0x32a1                     	| [$b29a: cmpa   $32a1]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_b2d9                             	| [$b29d: bcs    $b2d9]
	move.l	d1,-(sp)                        	| [$b29f: pshs   b]
	GET_ADDRESS	0x3448                     	| [$b2a1: ldb    $3448]
	move.b	(a0),d1                         	| [...]
	sub.b	#0x04,d1                         	| [$b2a4: subb   #$04]
	move.w	#0xf493,d2                      	| [$b2a6: ldx    #$f493]
                                         | [$b2a9: aslb]
                                         | [$b2aa: aslb]
                                         | [$b2ab: aslb]
                                         | [$b2ac: aslb]
	asl.b	#5,d1                            	| [$b2ad: aslb]
	ABX                                    	| [$b2ae: abx]
	movem.l	(sp)+,d1                       	| [$b2af: puls   b]
	GET_ADDRESS	0x32a2                     	| [$b2b1: subb   $32a2]
	sub.b	(a0),d1                          	| [...]
	neg.b	d1                               	| [$b2b4: negb]
	OP_R_ON_DP_ADDRESS	move,0xa1,d0         | [$b2b5: lda    $a1]
	subq.b	#1,d1                           	| [$b2b7: decb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$b2b8: adda   b,x]
	add.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x32a1                     	| [$b2ba: cmpa   $32a1]
	cmp.b	(a0),d0                          	| [...]
	jcc	l_b2d9                             	| [$b2bd: bcc    $b2d9]
l_b2bf:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$b2bf: lda    $c8]
	or.b	#0x20,d0                          	| [$b2c1: ora    #$20]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$b2c3: sta    $c8]
	move.b	#0x01,d0                        	| [$b2c5: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$b2c7: sta    $cb]
	move.b	#0x04,d0                        	| [$b2c9: ldd    #$0401]
	move.w	#0x0401,d1                      	| [$b2c9: ldd    #$0401]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x32a8                     	| [$b2cc: std    $32a8]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$b2cf: clra]
	jbsr	l_4eb3                            	| [$b2d0: jsr    $4eb3]
	move.b	#0x16,d0                        	| [$b2d3: lda    #$16]
	jbsr	l_4eb3                            	| [$b2d5: jsr    $4eb3]
	rts                                    	| [$b2d8: rts]

l_b2d9:
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$b2d9: lda    $c8]
	GET_ADDRESS	0x342a                     	| [$b2db: ldb    $342a]
	move.b	(a0),d1                         	| [...]
	BIT	#0x40,d0                           	| [$b2de: bita   #$40]
	jne	l_b2eb                             	| [$b2e0: bne    $b2eb]
	GET_ADDRESS	0x341c                     	| [$b2e2: subb   $341c]
	sub.b	(a0),d1                          	| [...]
	GET_ADDRESS	0x32a2                     	| [$b2e5: cmpb   $32a2]
	cmp.b	(a0),d1                          	| [...]
	jcc	l_b2bf                             	| [$b2e8: bcc    $b2bf]
	rts                                    	| [$b2ea: rts]

l_b2eb:
	GET_ADDRESS	0x341c                     	| [$b2eb: addb   $341c]
	add.b	(a0),d1                          	| [...]
	GET_ADDRESS	0x32a2                     	| [$b2ee: cmpb   $32a2]
	cmp.b	(a0),d1                          	| [...]
	jcc	l_b2bf                             	| [$b2f1: bcc    $b2bf]
l_b2f3:
	rts                                    	| [$b2f3: rts]

l_b2f4:
	move.w	#0x32a0,d2                      	| [$b2f4: ldx    #$32a0]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$b2f7: lda    $c8]
	and.b	#0x20,d0                         	| [$b2f9: anda   #$20]
	jeq	l_b35f                             	| [$b2fb: beq    $b35f]
	GET_REG_ADDRESS	0x9,d2                 	| [$b2fd: dec    $9,x]
	subq.b	#1,(a0)                         	| [...]
	jne	l_b35f                             	| [$b2ff: bne    $b35f]
	GET_REG_ADDRESS	0x8,d2                 	| [$b301: lda    $8,x]
	move.b	(a0),d0                         	| [...]
	neg.b	d0                               	| [$b303: nega]
	GET_REG_ADDRESS	0x1,d2                 	| [$b304: adda   $1,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x8,d2                 	| [$b306: inc    $8,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b308: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$b30a: lda    #$03]
	GET_REG_ADDRESS	0x9,d2                 	| [$b30c: sta    $9,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$b30e: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b310: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x70,d0                         	| [$b312: cmpa   #$70]
	jcc	l_b329                             	| [$b314: bcc    $b329]
	move.b	#0x63,d0                        	| [$b316: lda    #$63]
	GET_REG_ADDRESS	0x1,d2                 	| [$b318: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0xc8,d0         | [$b31a: lda    $c8]
	eor.b	#0x20,d0                         	| [$b31c: eora   #$20]
	OP_W_ON_DP_ADDRESS	move,0xc8,d0         | [$b31e: sta    $c8]
	moveq	#0,d0                            	| [$b320: clra]
	jbsr	l_4eb3                            	| [$b321: jsr    $4eb3]
	move.b	#0x13,d0                        	| [$b324: lda    #$13]
	jbsr	l_4eb3                            	| [$b326: jsr    $4eb3]
l_b329:
	move.w	#0xde35,d3                      	| [$b329: ldy    #$de35]
	moveq	#0,d1                            	| [$b32d: clrb]
	GET_REG_ADDRESS	0x1,d2                 	| [$b32e: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x78,d0                         	| [$b330: cmpa   #$78]
	jcc	l_b339                             	| [$b332: bcc    $b339]
	cmp.b	#0x88,d0                         	| [$b334: cmpa   #$88]
	jcc	l_b33a                             	| [$b336: bcc    $b33a]
	addq.b	#1,d1                           	| [$b338: incb]
l_b339:
	addq.b	#1,d1                           	| [$b339: incb]
l_b33a:
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$b33a: stb    $48]
	asl.b	#1,d1                            	| [$b33c: aslb]
	move.w	#0xde35,d3                      	| [$b33d: ldy    #$de35]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$b341: leay   b,y]
	move.w	#0x3618,d4                      	| [$b343: ldu    #$3618]
	jbsr	l_894b                            	| [$b346: jsr    $894b]
	GET_REG_ADDRESS	0x1,d2                 	| [$b349: ldd    $1,x]
	LOAD_D                                 	| [$b349: ldd    $1,x]
	OP_R_ON_DP_ADDRESS	add,0x48,d0          | [$b34b: adda   $48]
	OP_R_ON_DP_ADDRESS	add,0x48,d0          | [$b34d: adda   $48]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$b34f: stb    $48]
	sub.b	#0x10,d1                         	| [$b351: subb   #$10]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b353: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x3664,d4                      	| [$b355: ldu    #$3664]
	jbsr	l_894b                            	| [$b358: jsr    $894b]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$b35b: lda    $48]
	GET_REG_ADDRESS	0x2,d2                 	| [$b35d: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
l_b35f:
	rts                                    	| [$b35f: rts]

l_b360:
	move.w	#0x3280,d2                      	| [$b360: ldx    #$3280]
	GET_ADDRESS	0x342a                     	| [$b363: ldb    $342a]
	move.b	(a0),d1                         	| [...]
	move.b	#0x60,d0                        	| [$b366: lda    #$60]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b368: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_5035                            	| [$b36a: jsr    $5035]
	moveq	#0,d0                            	| [$b36d: clra]
	move.b	#0x53,d1                        	| [$b36e: ldb    #$53]
	GET_REG_INDIRECT_UNCHECKED_ADDRESS	0x03,d2       	| [$b370: cmpb   [$03,x]] [video_address]
	cmp.b	(a0),d1                          	| [...]
	jne	l_b377                             	| [$b373: bne    $b377]
	move.b	#0x01,d0                        	| [$b375: lda    #$01]
l_b377:
	rts                                    	| [$b377: rts]

l_b378:
	movem.l	d2/d3,-(sp)                    	| [$b378: pshs   y,x]
	move.w	#0x3200,d2                      	| [$b37a: ldx    #$3200]
	GET_DP_ADDRESS	0xa1                    	| [$b37d: ldd    $a1]
	LOAD_D                                 	| [$b37d: ldd    $a1]
	GET_REG_ADDRESS	0x2,d2                 	| [$b37f: stb    $2,x]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x32a2                     	| [$b381: cmpb   $32a2]
	cmp.b	(a0),d1                          	| [...]
	jcs	l_b38f                             	| [$b384: bcs    $b38f]
	GET_ADDRESS	0x3260                     	| [$b386: tst    $3260]
	tst.b	(a0)                             	| [...]
	jeq	l_b38f                             	| [$b389: beq    $b38f]
	move.b	#0x60,d0                        	| [$b38b: lda    #$60]
	GET_REG_ADDRESS	0x1,d2                 	| [$b38d: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
l_b38f:
	addq.w	#0x4,d3                         	| [$b38f: leay   $4,y]
	move.w	#0x3658,d4                      	| [$b391: ldu    #$3658]
	jbsr	l_890f                            	| [$b394: jsr    $890f]
	movem.l	(sp)+,d2/d3                    	| [$b397: puls   x,y]
	rts                                    	| [$b399: rts]

l_b39a:
	move.w	#0x362c,d4                      	| [$b39a: ldu    #$362c]
	move.b	#0x00,d0                        	| [$b39d: ldd    #$00f8]
	move.w	#0x00f8,d1                      	| [$b39d: ldd    #$00f8]
l_b3a0:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$b3a0: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$b3a2: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x365c,d4                       	| [$b3a4: cmpu   #$365c]
	jne	l_b3a0                             	| [$b3a8: bne    $b3a0]
	rts                                    	| [$b3aa: rts]

l_b3ab:
	move.w	#0x30a0,d2                      	| [$b3ab: ldx    #$30a0]
	move.w	#0x361c,d4                      	| [$b3ae: ldu    #$361c]
	move.w	#0xd9fd,d3                      	| [$b3b1: ldy    #$d9fd]
	jbsr	l_86ee                            	| [$b3b5: jsr    $86ee]
	move.b	#0xda,d0                        	| [$b3b8: ldd    #$da9e]
	move.w	#0xda9e,d1                      	| [$b3b8: ldd    #$da9e]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0xab                    	| [$b3bb: std    $ab]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$b3bd: ldd    $1,x]
	LOAD_D                                 	| [$b3bd: ldd    $1,x]
	sub.b	#0x09,d0                         	| [$b3bf: suba   #$09]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3201                     	| [$b3c1: std    $3201]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x06,d0                        	| [$b3c4: lda    #$06]
	GET_ADDRESS	0x3205                     	| [$b3c6: sta    $3205]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_b378                            	| [$b3c9: jsr    $b378]
	GET_REG_ADDRESS	0x1,d2                 	| [$b3cc: ldd    $1,x]
	LOAD_D                                 	| [$b3cc: ldd    $1,x]
	add.b	#0x18,d0                         	| [$b3ce: adda   #$18]
	add.b	#0x43,d1                         	| [$b3d0: addb   #$43]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3429                     	| [$b3d2: std    $3429]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xf383,d3                      	| [$b3d5: ldy    #$f383]
	jra	l_b096                             	| [$b3d9: jra    $b096]

weight_lifting_b3dc:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$b3dc: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$b3de: asla]
	
	.ifndef	RELEASE
	move.w	#0xf533,d2
	.endif
	lea	table_f533,a2                  	| [$b3df: ldx   #table_f533]
	JMP_A_INDEXED	A2                   	| [$b3e2: jra    [a,x]] [jump_table]

l_b3e4:
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$b3e4: lda    $2c]
	
	.ifndef	RELEASE
	move.w	#0xf53f,d2
	.endif
	lea	table_f53f,a2                  	| [$b3e6: ldx   #table_f53f]
	asl.b	#1,d0                            	| [$b3e9: asla]
	JMP_A_INDEXED	A2                   	| [$b3ea: jra    [a,x]] [jump_table]

l_b3ec:
	move.b	#0x01,d0                        	| [$b3ec: ldd    #$0100]
	move.w	#0x0100,d1                      	| [$b3ec: ldd    #$0100]
	jbsr	queue_event_4e9a                  	| [$b3ef: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$b3f2: ldd    #$020d]
	move.w	#0x020d,d1                      	| [$b3f2: ldd    #$020d]
	jbsr	queue_event_4e9a                  	| [$b3f5: jsr    queue_event_4e9a]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d0| [$b3f8: lda    current_level_68]
	move.b	#0x07,d1                        	| [$b3fa: ldb    #$07]
	jbsr	l_a606                            	| [$b3fc: jsr    $a606]
	cmp.b	#0x06,d1                         	| [$b3ff: cmpb   #$06]
	jcs	l_b405                             	| [$b401: bcs    $b405]
	move.b	#0x05,d1                        	| [$b403: ldb    #$05]
l_b405:
	GET_ADDRESS	0x3442                     	| [$b405: stb    $3442]
	move.b	d1,(a0)                         	| [...]
	move.w	#0xf557,d2                      	| [$b408: ldx    #$f557]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$b40b: lda    b,x]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x343f                     	| [$b40d: sta    $343f]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3436                     	| [$b410: sta    $3436]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x20,d1                        	| [$b413: ldb    #$20]
	jbsr	multiply_ab                       	| [$b415: mul]
	move.w	#0xf57d,d2                      	| [$b416: ldx    #$f57d]
	MAKE_D                                 	| [...]
	add.w	d1,d2                            	| [$b419: leax   d,x]
	move.w	#0x2360,d3                      	| [$b41b: ldy    #$2360]
	move.b	#0x31,d0                        	| [$b41f: lda    #$31]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$b421: sta    $49]
	move.b	#0x08,d0                        	| [$b423: lda    #$08]
	GET_ADDRESS	0x343f                     	| [$b425: suba   $343f]
	sub.b	(a0),d0                          	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b428: sta    $48]
l_b42a:
	move.b	#0x20,d1                        	| [$b42a: ldb    #$20]
l_b42c:
	GET_REG_ADDRESS	0,d2                   	| [$b42c: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x58,d0                         	| [$b42e: cmpa   #$58]
	jne	l_b436                             	| [$b430: bne    $b436]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$b432: lda    $49]
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$b434: inc    $49]
l_b436:
	sub.b	#0x30,d0                         	| [$b436: suba   #$30]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$b438: sta    ,y+] [video_address]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x07ff,d3              	| [$b43a: clr    $07ff,y] [video_address]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$b43e: decb]
	jne	l_b42c                             	| [$b43f: bne    $b42c]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$b441: lda    $48]
	subq.b	#1,d0                           	| [$b443: deca]
	jeq	l_b44d                             	| [$b444: beq    $b44d]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b446: sta    $48]
	add.w	#0x20,d3                         	| [$b448: leay   $20,y]
	jra	l_b42a                             	| [$b44b: bra    $b42a]
l_b44d:
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$b44d: tst    game_playing_00]
	jne	l_b459                             	| [$b44f: bne    $b459]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$b451: lda    $0f]
	BIT	#0x3f,d0                           	| [$b453: bita   #$3f]
	jne	l_b45b                             	| [$b455: bne    $b45b]
	jra	l_b45c                             	| [$b457: bra    $b45c]
l_b459:
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b459: inc    $2c]
l_b45b:
	rts                                    	| [$b45b: rts]

l_b45c:
	move.b	#0x3d,d0                        	| [$b45c: lda    #$3d]
	GET_ADDRESS	0x3458                     	| [$b45e: sta    $3458]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3459                     	| [$b461: sta    $3459]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x345a                     	| [$b464: sta    $345a]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x05,d0                        	| [$b467: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x2c,d0         | [$b469: sta    $2c]
	rts                                    	| [$b46b: rts]

l_b46c:
	move.w	#0xf54f,d3                      	| [$b46c: ldy    #$f54f]
	move.w	#0xf553,d4                      	| [$b470: ldu    #$f553]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$b473: lda    $02]
	asl.b	#1,d0                            	| [$b475: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$b476: leay   a,y]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$b478: leau   a,u]
	move.w	#0x36d0,d2                      	| [$b47a: ldx    #$36d0]
	GET_REG_ADDRESS	0,d2                   	| [$b47d: ldd    ,x]
	LOAD_D                                 	| [$b47d: ldd    ,x]
	exg	d0,d1                              	| [$b47f: exg    a,b]
	MAKE_D
	GET_REG_ADDRESS	0,d4                   	| [$b481: cmpd   ,u]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jeq	l_b4c0                             	| [$b484: beq    $b4c0]
l_b486:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$b486: subd   ,y]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	exg	d0,d1                              	| [$b488: exg    a,b]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$b48a: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x36f0,d2                       	| [$b48c: cmpx   #$36f0]
	jeq	l_b497                             	| [$b48f: beq    $b497]
	GET_REG_ADDRESS	0,d2                   	| [$b491: ldd    ,x]
	LOAD_D                                 	| [$b491: ldd    ,x]
	exg	d0,d1                              	| [$b493: exg    a,b]
	jra	l_b486                             	| [$b495: bra    $b486]
l_b497:
	move.w	#0x3202,d2                      	| [$b497: ldx    #$3202]
l_b49a:
	GET_REG_ADDRESS	0,d2                   	| [$b49a: lda    ,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x04,d0                         	| [$b49c: adda   #$04]
	GET_REG_ADDRESS	0,d2                   	| [$b49e: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	add.w	#0x10,d2                         	| [$b4a0: leax   $10,x]
	cmp.w	#0x32e2,d2                       	| [$b4a3: cmpx   #$32e2]
	jne	l_b49a                             	| [$b4a6: bne    $b49a]
	GET_ADDRESS	0x32c0                     	| [$b4a8: tst    $32c0]
	tst.b	(a0)                             	| [...]
	jne	l_b4bf                             	| [$b4ab: bne    $b4bf]
	GET_ADDRESS	0x32c2                     	| [$b4ad: lda    $32c2]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xf0,d0                         	| [$b4b0: cmpa   #$f0]
	jcs	l_b4bc                             	| [$b4b2: bcs    $b4bc]
	GET_ADDRESS	0x32c0                     	| [$b4b4: inc    $32c0]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_afaf                            	| [$b4b7: jsr    $afaf]
	jra	l_b4bf                             	| [$b4ba: bra    $b4bf]
l_b4bc:
	jbsr	l_bd7e                            	| [$b4bc: jsr    $bd7e]
l_b4bf:
	rts                                    	| [$b4bf: rts]

l_b4c0:
	moveq	#0,d0                            	| [$b4c0: clra]
	moveq	#0,d1                            	| [$b4c1: clrb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x342c                     	| [$b4c2: std    $342c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x342e                     	| [$b4c5: std    $342e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x2b,d0                        	| [$b4c8: ldd    #$2b60]
	move.w	#0x2b60,d1                      	| [$b4c8: ldd    #$2b60]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3434                     	| [$b4cb: std    $3434]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x0e,d0                        	| [$b4ce: lda    #$0e]
	GET_ADDRESS	0x3400                     	| [$b4d0: sta    $3400]
	move.b	d0,(a0)                         	| [...]
	moveq	#0,d0                            	| [$b4d3: clra]
	jbsr	l_4eb3                            	| [$b4d4: jsr    $4eb3]
	move.b	#0x24,d0                        	| [$b4d7: lda    #$24]
	jbsr	l_4eb3                            	| [$b4d9: jsr    $4eb3]
	jbsr	l_bb60                            	| [$b4dc: jsr    $bb60]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b4df: inc    $2c]
	rts                                    	| [$b4e1: rts]

l_b4e2:
	jbsr	l_bfdc                            	| [$b4e2: jsr    $bfdc]
	jbsr	l_4fa1                            	| [$b4e5: jsr    $4fa1]
	cmp.b	#0x04,d0                         	| [$b4e8: cmpa   #$04]
	jeq	l_b4f2                             	| [$b4ea: beq    $b4f2]
	cmp.b	#0x02,d0                         	| [$b4ec: cmpa   #$02]
	jeq	l_b54b                             	| [$b4ee: beq    $b54b]
	jra	l_b52a                             	| [$b4f0: bra    $b52a]
l_b4f2:
	GET_ADDRESS	0x3434                     	| [$b4f2: ldy    $3434]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	moveq	#0,d0                            	| [$b4f6: clra]
	jbsr	l_afd3                            	| [$b4f7: jsr    $afd3]
	GET_ADDRESS	0x3436                     	| [$b4fa: lda    $3436]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$b4fd: cmpa   #$07]
	jeq	l_b545                             	| [$b4ff: beq    $b545]
	addq.b	#1,d0                           	| [$b501: inca]
	GET_ADDRESS	0x3436                     	| [$b502: sta    $3436]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x07,d0                         	| [$b505: cmpa   #$07]
	jne	l_b518                             	| [$b507: bne    $b518]
	GET_ADDRESS	0x345f                     	| [$b509: lda    $345f]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b50c: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$b50f: ldd    #$0206]
	move.w	#0x0206,d1                      	| [$b50f: ldd    #$0206]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x342d                     	| [$b512: std    $342d]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$b515: clr    $3425]
	clr.b	(a0)                         	| [...]
l_b518:
	GET_ADDRESS	0x3434                     	| [$b518: ldy    $3434]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	add.w	#0x40,d3                         	| [$b51c: leay   $40,y]
                                         | [$b51f: sty    $3434]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
l_b523:
	GET_ADDRESS	0x3434                     	| [$b523: ldy    $3434]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_afd8                            	| [$b527: jsr    $afd8]
l_b52a:
	jbsr	l_579f                            	| [$b52a: jsr    $579f]
	GET_ADDRESS	0x34f2                     	| [$b52d: lda    $34f2]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x14,d0                         	| [$b530: cmpa   #$14]
	jeq	l_b54b                             	| [$b532: beq    $b54b]
	GET_ADDRESS	0x3400                     	| [$b534: cmpa   $3400]
	cmp.b	(a0),d0                          	| [...]
	jne	l_b544                             	| [$b537: bne    $b544]
	move.b	#0x20,d0                        	| [$b539: lda    #$20]
	jbsr	l_4eb3                            	| [$b53b: jsr    $4eb3]
	GET_ADDRESS	0x3400                     	| [$b53e: inc    $3400]
	addq.b	#1,(a0)                         	| [...]
                                         | [$b541: inc    $3400]
	addq.b	#1,(a0)                         	| [...]
l_b544:
	rts                                    	| [$b544: rts]

l_b545:
	jbsr	l_b5bb                            	| [$b545: jsr    $b5bb]
	jra	l_b523                             	| [$b548: jra    $b523]
l_b54b:
	GET_ADDRESS	0x3436                     	| [$b54b: lda    $3436]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$b54e: cmpa   #$07]
	jeq	l_b56a                             	| [$b550: beq    $b56a]
	move.w	#0xf565,d3                      	| [$b552: ldy    #$f565]
	move.b	#0x03,d1                        	| [$b556: ldb    #$03]
	jbsr	multiply_ab                       	| [$b558: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$b559: leay   b,y]
	GET_REG_ADDRESS	0,d3                   	| [$b55b: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$b55b: ldd    ,y++]
	GET_ADDRESS	0x342d                     	| [$b55d: std    $342d]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$b560: lda    ,y]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x342f                     	| [$b562: sta    $342f]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x24,d0                        	| [$b565: lda    #$24]
	jbsr	l_4eb3                            	| [$b567: jsr    $4eb3]
l_b56a:
	move.b	#0xa4,d0                        	| [$b56a: lda    #$a4]
	GET_ADDRESS	0x3436                     	| [$b56c: adda   $3436]
	add.b	(a0),d0                          	| [...]
	jbsr	l_4eb3                            	| [$b56f: jsr    $4eb3]
	cmp.b	#0xa9,d0                         	| [$b572: cmpa   #$a9]
	jeq	l_b57a                             	| [$b574: beq    $b57a]
	cmp.b	#0xab,d0                         	| [$b576: cmpa   #$ab]
	jne	l_b57f                             	| [$b578: bne    $b57f]
l_b57a:
	move.b	#0xaa,d0                        	| [$b57a: lda    #$aa]
	jbsr	l_4eb3                            	| [$b57c: jsr    $4eb3]
l_b57f:
	move.b	#0xac,d0                        	| [$b57f: lda    #$ac]
	jbsr	l_4eb3                            	| [$b581: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$b584: lda    #$ff]
	jbsr	l_4eb3                            	| [$b586: jsr    $4eb3]
	move.b	#0x1e,d0                        	| [$b589: lda    #$1e]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$b58b: sta    $2d]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b58d: inc    $2c]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b58f: inc    $2c]
	rts                                    	| [$b591: rts]

l_b592:
	jbsr	l_bfdc                            	| [$b592: jsr    $bfdc]
	jbsr	l_4fa1                            	| [$b595: jsr    $4fa1]
	cmp.b	#0x04,d0                         	| [$b598: cmpa   #$04]
	jeq	l_b5bb                             	| [$b59a: beq    $b5bb]
	cmp.b	#0x02,d0                         	| [$b59c: cmpa   #$02]
	jeq	l_b5e8                             	| [$b59e: beq    $b5e8]
	jbsr	l_579f                            	| [$b5a0: jsr    $579f]
	GET_ADDRESS	0x34f2                     	| [$b5a3: lda    $34f2]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x14,d0                         	| [$b5a6: cmpa   #$14]
	jeq	l_b5e8                             	| [$b5a8: beq    $b5e8]
	GET_ADDRESS	0x3400                     	| [$b5aa: cmpa   $3400]
	cmp.b	(a0),d0                          	| [...]
	jne	l_b5ba                             	| [$b5ad: bne    $b5ba]
	move.b	#0x20,d0                        	| [$b5af: lda    #$20]
	jbsr	l_4eb3                            	| [$b5b1: jsr    $4eb3]
	GET_ADDRESS	0x3400                     	| [$b5b4: inc    $3400]
	addq.b	#1,(a0)                         	| [...]
                                         | [$b5b7: inc    $3400]
	addq.b	#1,(a0)                         	| [...]
l_b5ba:
	rts                                    	| [$b5ba: rts]

l_b5bb:
	GET_ADDRESS	0x342d                     	| [$b5bb: lda    $342d]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x04,d0                         	| [$b5be: cmpa   #$04]
	jeq	l_b5ba                             	| [$b5c0: beq    $b5ba]
	move.b	#0x05,d0                        	| [$b5c2: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b5c4: sta    $48]
	move.w	#0x342c,d4                      	| [$b5c6: ldu    #$342c]
	jbsr	l_509f                            	| [$b5c9: jsr    $509f]
	move.b	#0x07,d0                        	| [$b5cc: lda    #$07]
	GET_ADDRESS	0x3442                     	| [$b5ce: suba   $3442]
	sub.b	(a0),d0                          	| [...]
	move.b	#0x40,d1                        	| [$b5d1: ldb    #$40]
	jbsr	multiply_ab                       	| [$b5d3: mul]
	move.w	#0x2373,d3                      	| [$b5d4: ldy    #$2373]
	MAKE_D                                 	| [...]
	add.w	d1,d3                            	| [$b5d8: leay   d,y]
	GET_ADDRESS	0x342d                     	| [$b5da: ldd    $342d]
	LOAD_D                                 	| [$b5da: ldd    $342d]
	GET_REG_ADDRESS	0,d3                   	| [$b5dd: std    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x342f                     	| [$b5df: lda    $342f]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$b5e2: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b5e4: inc    $3424]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$b5e7: rts]

l_b5e8:
	move.b	#0x24,d0                        	| [$b5e8: lda    #$24]
	jbsr	l_4eb3                            	| [$b5ea: jsr    $4eb3]
	GET_ADDRESS	0x3425                     	| [$b5ed: clr    $3425]
	clr.b	(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b5f0: inc    $2c]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b5f2: inc    $2c]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b5f4: inc    $2c]
	rts                                    	| [$b5f6: rts]

l_b5f7:
	jbsr	l_bfdc                            	| [$b5f7: jsr    $bfdc]
	OP_W_ON_DP_ADDRESS	subq,0x2d,#1         | [$b5fa: dec    $2d]
	jne	l_b602                             	| [$b5fc: bne    $b602]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b5fe: inc    $2c]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b600: inc    $2c]
l_b602:
	rts                                    	| [$b602: rts]

l_b603:
	jbsr	l_bfdc                            	| [$b603: jsr    $bfdc]
	move.w	#0xf54f,d3                      	| [$b606: ldy    #$f54f]
	move.w	#0xf553,d4                      	| [$b60a: ldu    #$f553]
	OP_R_ON_DP_ADDRESS	move,0x02,d0         | [$b60d: lda    $02]
	asl.b	#1,d0                            	| [$b60f: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$b610: leay   a,y]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$b612: leau   a,u]
	move.w	#0x36d0,d2                      	| [$b614: ldx    #$36d0]
	GET_REG_ADDRESS	0,d2                   	| [$b617: ldd    ,x]
	LOAD_D                                 	| [$b617: ldd    ,x]
	exg	d0,d1                              	| [$b619: exg    a,b]
	MAKE_D
	tst.w	d1                               	| [$b61b: cmpd   #$0000]
	jeq	l_b680                             	| [$b61f: lbeq   $b680]
l_b623:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$b623: addd   ,y]
	ADD_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	exg	d0,d1                              	| [$b625: exg    a,b]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$b627: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x36f0,d2                       	| [$b629: cmpx   #$36f0]
	jeq	l_b634                             	| [$b62c: beq    $b634]
	GET_REG_ADDRESS	0,d2                   	| [$b62e: ldd    ,x]
	LOAD_D                                 	| [$b62e: ldd    ,x]
	exg	d0,d1                              	| [$b630: exg    a,b]
	jra	l_b623                             	| [$b632: bra    $b623]
l_b634:
	move.w	#0x3202,d2                      	| [$b634: ldx    #$3202]
l_b637:
	GET_REG_ADDRESS	0,d2                   	| [$b637: lda    ,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x04,d0                         	| [$b639: suba   #$04]
	GET_REG_ADDRESS	0,d2                   	| [$b63b: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	add.w	#0x10,d2                         	| [$b63d: leax   $10,x]
	cmp.w	#0x32e2,d2                       	| [$b640: cmpx   #$32e2]
	jne	l_b637                             	| [$b643: bne    $b637]
	GET_ADDRESS	0x32c0                     	| [$b645: tst    $32c0]
	tst.b	(a0)                             	| [...]
	jeq	l_b656                             	| [$b648: beq    $b656]
	GET_ADDRESS	0x32c2                     	| [$b64a: lda    $32c2]
	move.b	(a0),d0                         	| [...]
                                         | [$b64d: lsra]
	lsr.b	#2,d0                            	| [$b64e: lsra]
	cmp.b	#0x3c,d0                         	| [$b64f: cmpa   #$3c]
	jne	l_b659                             	| [$b651: bne    $b659]
	GET_ADDRESS	0x32c0                     	| [$b653: clr    $32c0]
	clr.b	(a0)                         	| [...]
l_b656:
	jbsr	l_bd7e                            	| [$b656: jsr    $bd7e]
l_b659:
	jbsr	l_4fa1                            	| [$b659: jsr    $4fa1]
	cmp.b	#0x02,d0                         	| [$b65c: cmpa   #$02]
	jeq	l_b661                             	| [$b65e: beq    $b661]
	rts                                    	| [$b660: rts]

l_b661:
	GET_ADDRESS	0x3460                     	| [$b661: inc    $3460]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$b664: rts]

l_b665:
	move.b	#0x00,d0                        	| [$b665: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$b665: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f2                     	| [$b668: std    $34f2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b66b: inc    $2c]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$b66d: tst    game_playing_00]
	jne	l_b680                             	| [$b66f: bne    $b680]
	move.b	#0x00,d0                        	| [$b671: ldd    #$0001]
	move.w	#0x0001,d1                      	| [$b671: ldd    #$0001]
	GET_ADDRESS	0x3436                     	| [$b674: sta    $3436]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x342d                     	| [$b677: stb    $342d]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x05,d0                        	| [$b67a: ldd    #$0500]
	move.w	#0x0500,d1                      	| [$b67a: ldd    #$0500]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x342e                     	| [$b67d: std    $342e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_b680:
	move.w	#0x2d42,d3                      	| [$b680: ldy    #$2d42]
	move.b	#0x12,d1                        	| [$b684: ldb    #$12]
	moveq	#0,d0                            	| [$b686: clra]
	jbsr	l_afe0                            	| [$b687: jsr    $afe0]
	move.w	#0x2542,d3                      	| [$b68a: ldy    #$2542]
	move.b	#0x12,d1                        	| [$b68e: ldb    #$12]
	move.b	#0x10,d0                        	| [$b690: lda    #$10]
	jbsr	l_afe0                            	| [$b692: jsr    $afe0]
	move.w	#0x2542,d4                      	| [$b695: ldu    #$2542]
	move.w	#0xf55d,d3                      	| [$b698: ldy    #$f55d]
	GET_ADDRESS	0x3436                     	| [$b69c: ldb    $3436]
	move.b	(a0),d1                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$b69f: lda    b,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b6a1: sta    $48]
	move.w	#0xf581,d3                      	| [$b6a3: ldy    #$f581]
	move.b	#0x20,d0                        	| [$b6a7: lda    #$20]
	jbsr	multiply_ab                       	| [$b6a9: mul]
	add.w	d1,d3                            	| [$b6aa: leay   d,y]
	move.b	#0x0c,d0                        	| [$b6ac: lda    #$0c]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$b6ae: suba   $48]
	asr.b	#1,d0                            	| [$b6b0: asra]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$b6b1: leau   a,u]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$b6b3: lda    $48]
l_b6b5:
	GET_REG_ADDRESS	0,d3                   	| [$b6b5: ldb    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d1                         	| [...]
	sub.b	#0x30,d1                         	| [$b6b7: subb   #$30]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$b6b9: stb    ,u+] [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d0                           	| [$b6bb: deca]
	jne	l_b6b5                             	| [$b6bc: bne    $b6b5]
	move.b	#0x27,d0                        	| [$b6be: ldd    #$2715]
	move.w	#0x2715,d1                      	| [$b6be: ldd    #$2715]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$b6c1: std    ,u++] [video_address_word]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.b	#swimmer_19,d0                        	| [$b6c3: ldd    #$1917]
	move.w	#0x1917,d1                      	| [$b6c3: ldd    #$1917]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$b6c6: std    ,u++] [video_address_word]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.b	#0x18,d0                        	| [$b6c8: ldd    #$1824]
	move.w	#0x1824,d1                      	| [$b6c8: ldd    #$1824]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$b6cb: std    ,u] [video_address_word]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	move.w	#0x3458,d3                      	| [$b6cd: ldy    #$3458]
	GET_ADDRESS	0x3436                     	| [$b6d1: lda    $3436]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$b6d4: cmpa   #$07]
	jeq	l_b762                             	| [$b6d6: lbeq   $b762]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$b6da: lda    a,y]
	move.b	(a0),d0                         	| [...]
	moveq	#0,d1                            	| [$b6dc: clrb]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3424                     	| [$b6dd: std    $3424]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_b6e0:
	asl.b	#1,d0                            	| [$b6e0: asla]
	move.b	#0x0a,d1                        	| [$b6e1: ldb    #$0a]
	jbsr	multiply_ab                       	| [$b6e3: mul]
	GET_ADDRESS	0x3437                     	| [$b6e4: std    $3437]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$b6e7: ldd    #$0001]
	move.w	#0x0001,d1                      	| [$b6e7: ldd    #$0001]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3427                     	| [$b6ea: std    $3427]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x342c,d2                      	| [$b6ed: ldx    #$342c]
	jbsr	l_c37f                            	| [$b6f0: jsr    $c37f]
	moveq	#0,d0                            	| [$b6f3: clra]
	jbsr	l_4eb3                            	| [$b6f4: jsr    $4eb3]
	move.b	#0x27,d0                        	| [$b6f7: lda    #$27]
	jbsr	l_4eb3                            	| [$b6f9: jsr    $4eb3]
	move.b	#0x00,d0                        	| [$b6fc: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$b6fc: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x34f2                     	| [$b6ff: std    $34f2]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x24d9,d2                      	| [$b702: ldx    #$24d9]
	GET_ADDRESS	0x342d                     	| [$b705: ldd    $342d]
	LOAD_D                                 	| [$b705: ldd    $342d]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b708: std    ,x++] [video_address_word]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_ADDRESS	0x342f                     	| [$b70a: lda    $342f]
	move.b	(a0),d0                         	| [...]
	move.b	#0x8c,d1                        	| [$b70d: ldb    #$8c]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b70f: std    ,x++] [video_address_word]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b711: clr    ,x] [video_address_word]
	clr.b	(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	add.w	#0x07fc,d2                       	| [$b713: leax   $07fc,x]
	move.b	#0x00,d0                        	| [$b717: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$b717: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b71a: std    ,x++] [video_address_word]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	MAKE_D                                 	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b71c: std    ,x++] [video_address_word]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	VIDEO_WORD_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b71e: sta    ,x] [video_address_word]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_ADDRESS	0x342b                     	| [$b720: clr    $342b]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x343c                     	| [$b723: clr    $343c]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3440                     	| [$b726: clr    $3440]
	clr.b	(a0)                         	| [...]
	move.b	#0x14,d0                        	| [$b729: lda    #$14]
	GET_ADDRESS	0x343a                     	| [$b72b: sta    $343a]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x28,d0                        	| [$b72e: ldd    #$2818]
	move.w	#0x2818,d1                      	| [$b72e: ldd    #$2818]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3430                     	| [$b731: std    $3430]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0x2443,d3                      	| [$b734: ldy    #$2443]
	move.b	#0x05,d1                        	| [$b738: ldb    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$b73a: stb    $48]
	move.b	#0x0f,d0                        	| [$b73c: lda    #$0f]
	move.b	#0x03,d1                        	| [$b73e: ldb    #$03]
l_b740:
	GET_REG_UNCHECKED_ADDRESS	0x0800,d3              	| [$b740: stb    $0800,y]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$b744: sta    ,y+]  [video_address]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$b746: dec    $48]
	jne	l_b740                             	| [$b748: bne    $b740]
	move.b	#0x00,d0                        	| [$b74a: ldd    #$0014]
	move.w	#0x0014,d1                      	| [$b74a: ldd    #$0014]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3443                     	| [$b74d: std    $3443]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x01,d0                        	| [$b750: ldd    #$0114]
	move.w	#0x0114,d1                      	| [$b750: ldd    #$0114]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3445                     	| [$b753: std    $3445]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b756: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3460                     	| [$b759: suba   $3460]
	sub.b	(a0),d0                          	| [...]
	GET_ADDRESS	0x3424                     	| [$b75c: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b75f: inc    $2c]
	rts                                    	| [$b761: rts]

l_b762:
	GET_ADDRESS	0x3424                     	| [$b762: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$b765: clr    $3425]
	clr.b	(a0)                         	| [...]
	jra	l_b6e0                             	| [$b768: jra    $b6e0]
l_b76b:
	jbsr	l_579f                            	| [$b76b: jsr    $579f]
	GET_ADDRESS	0x34f2                     	| [$b76e: lda    $34f2]
	move.b	(a0),d0                         	| [...]
	jeq	l_b787                             	| [$b771: beq    $b787]
	cmp.b	#0x0a,d0                         	| [$b773: cmpa   #$0a]
	jeq	l_b77e                             	| [$b775: beq    $b77e]
	jbsr	l_a67e                            	| [$b777: jsr    $a67e]
	BIT	#0x05,d0                           	| [$b77a: bita   #$05]
	jeq	l_b787                             	| [$b77c: beq    $b787]
l_b77e:
	move.b	#0x0c,d0                        	| [$b77e: lda    #$0c]
	GET_ADDRESS	0x3442                     	| [$b780: sta    $3442]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0x2c             | [$b783: clr    $2c]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$b785: inc    event_sub_state_2a]
l_b787:
	rts                                    	| [$b787: rts]

l_b788:
	move.w	#0x30a0,d2                      	| [$b788: ldx    #$30a0]
	jbsr	l_5982                            	| [$b78b: jsr    $5982]
	move.b	#0x03,d0                        	| [$b78e: ldd    #$0300]
	move.w	#0x0300,d1                      	| [$b78e: ldd    #$0300]
	jbsr	queue_event_4e9a                  	| [$b791: jsr    queue_event_4e9a]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$b794: lda    $2c]
	cmp.b	#0x02,d0                         	| [$b796: cmpa   #$02]
	jcc	l_b81c                             	| [$b798: lbcc   $b81c]
	GET_ADDRESS	0x343a                     	| [$b79c: lda    $343a]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x14,d0                         	| [$b79f: cmpa   #$14]
	jne	l_b7b8                             	| [$b7a1: bne    $b7b8]
	jbsr	l_579f                            	| [$b7a3: jsr    $579f]
	GET_ADDRESS	0x3442                     	| [$b7a6: lda    $3442]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x34f2                     	| [$b7a9: cmpa   $34f2]
	cmp.b	(a0),d0                          	| [...]
	jne	l_b7b8                             	| [$b7ac: bne    $b7b8]
	add.b	#0x02,d0                         	| [$b7ae: adda   #$02]
	GET_ADDRESS	0x3442                     	| [$b7b0: sta    $3442]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x38,d0                        	| [$b7b3: lda    #$38]
	jbsr	l_4eb3                            	| [$b7b5: jsr    $4eb3]
l_b7b8:
	GET_ADDRESS	0x3431                     	| [$b7b8: dec    $3431]
	subq.b	#1,(a0)                         	| [...]
	jne	l_b7c5                             	| [$b7bb: bne    $b7c5]
	GET_ADDRESS	0x3430                     	| [$b7bd: dec    $3430]
	subq.b	#1,(a0)                         	| [...]
	move.b	#0x18,d0                        	| [$b7c0: lda    #$18]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3431                     	| [$b7c2: std    $3431]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_b7c5:
	move.w	#0x2443,d3                      	| [$b7c5: ldy    #$2443]
	move.b	#0x0b,d0                        	| [$b7c9: ldd    #$0b05]
	move.w	#0x0b05,d1                      	| [$b7c9: ldd    #$0b05]
	jbsr	l_afe0                            	| [$b7cc: jsr    $afe0]
	subq.w	#0x5,d3                         	| [$b7cf: leay   -$5,y]
	GET_ADDRESS	0x3430                     	| [$b7d1: lda    $3430]
	move.b	(a0),d0                         	| [...]
	move.b	#0x08,d1                        	| [$b7d4: ldb    #$08]
	jbsr	l_a606                            	| [$b7d6: jsr    $a606]
	move.l	d0,-(sp)                        	| [$b7d9: pshs   a]
	move.b	#0x0f,d0                        	| [$b7db: lda    #$0f]
l_b7dd:
	tst.b	d1                               	| [$b7dd: tstb]
	jeq	l_b7e5                             	| [$b7de: beq    $b7e5]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$b7e0: sta    ,y+] [video_address]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$b7e2: decb]
	jra	l_b7dd                             	| [$b7e3: bra    $b7dd]
l_b7e5:
	movem.l	(sp)+,d0                       	| [$b7e5: puls   a]
	PUSH_SR                                	| [...]
	MAKE_D                                 	| [...]
	POP_SR                                 	| [...]
	tst.b	d0                               	| [$b7e7: tsta]
	jeq	l_b7f2                             	| [$b7e8: beq    $b7f2]
	subq.b	#1,d0                           	| [$b7ea: deca]
	move.w	#0xf67d,d4                      	| [$b7eb: ldu    #$f67d]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$b7ee: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$b7f0: sta    ,y] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_b7f2:
	GET_ADDRESS	0x343d                     	| [$b7f2: lda    $343d]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x46,d0                         	| [$b7f5: cmpa   #$46]
	jcs	l_b7fe                             	| [$b7f7: bcs    $b7fe]
	GET_ADDRESS	0x343e                     	| [$b7f9: tst    $343e]
	tst.b	(a0)                             	| [...]
	jne	l_b803                             	| [$b7fc: bne    $b803]
l_b7fe:
	GET_ADDRESS	0x3430                     	| [$b7fe: tst    $3430]
	tst.b	(a0)                             	| [...]
	jne	l_b81c                             	| [$b801: bne    $b81c]
l_b803:
	move.b	#0x03,d0                        	| [$b803: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x2c,d0         | [$b805: sta    $2c]
	moveq	#0,d0                            	| [$b807: clra]
	jbsr	queue_sound_event_4ead            	| [$b808: jsr    queue_sound_event_4ead]
	move.b	#0x8c,d0                        	| [$b80b: lda    #$8c]
	jbsr	queue_sound_event_4ead            	| [$b80d: jsr    queue_sound_event_4ead]
	move.b	#0xff,d0                        	| [$b810: lda    #$ff]
	jbsr	queue_sound_event_4ead            	| [$b812: jsr    queue_sound_event_4ead]
	move.b	#0x01,d0                        	| [$b815: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0xcb,d0         | [$b817: sta    $cb]
	jbsr	l_be07                            	| [$b819: jsr    $be07]
l_b81c:
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$b81c: lda    $2c]
	asl.b	#1,d0                            	| [$b81e: asla]
	
	.ifndef	RELEASE
	move.w	#0xf68c,d3
	.endif
	lea	table_f68c,a3                  	| [$b81f: ldy   #table_f68c]
	JMP_A_INDEXED	A3                   	| [$b823: jra    [a,y]] [jump_table]
l_b825:
	GET_ADDRESS	0x3444                     	| [$b825: dec    $3444]
	subq.b	#1,(a0)                         	| [...]
	jne	l_b850                             	| [$b828: bne    $b850]
	GET_ADDRESS	0x3443                     	| [$b82a: lda    $3443]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3445                     	| [$b82d: adda   $3445]
	add.b	(a0),d0                          	| [...]
	cmp.b	#0x18,d0                         	| [$b830: cmpa   #$18]
	jcs	l_b836                             	| [$b832: bcs    $b836]
	move.b	#0x18,d0                        	| [$b834: lda    #$18]
l_b836:
	GET_ADDRESS	0x3443                     	| [$b836: sta    $3443]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3446                     	| [$b839: dec    $3446]
	subq.b	#1,(a0)                         	| [...]
	jne	l_b84a                             	| [$b83c: bne    $b84a]
	GET_ADDRESS	0x3446                     	| [$b83e: lda    $3446]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3444                     	| [$b841: sta    $3444]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3446                     	| [$b844: inc    $3446]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x3445                     	| [$b847: inc    $3445]
	addq.b	#1,(a0)                         	| [...]
l_b84a:
	GET_ADDRESS	0x3446                     	| [$b84a: lda    $3446]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3444                     	| [$b84d: sta    $3444]
	move.b	d0,(a0)                         	| [...]
l_b850:
	move.w	#0x2443,d3                      	| [$b850: ldy    #$2443]
	move.b	#0x0b,d0                        	| [$b854: ldd    #$0b05]
	move.w	#0x0b05,d1                      	| [$b854: ldd    #$0b05]
	jbsr	l_afe0                            	| [$b857: jsr    $afe0]
	subq.w	#0x5,d3                         	| [$b85a: leay   -$5,y]
	GET_ADDRESS	0x3430                     	| [$b85c: lda    $3430]
	move.b	(a0),d0                         	| [...]
	move.b	#0x08,d1                        	| [$b85f: ldb    #$08]
	jbsr	l_a606                            	| [$b861: jsr    $a606]
	move.l	d0,-(sp)                        	| [$b864: pshs   a]
	move.b	#0x0f,d0                        	| [$b866: lda    #$0f]
l_b868:
	tst.b	d1                               	| [$b868: tstb]
	jeq	l_b870                             	| [$b869: beq    $b870]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$b86b: sta    ,y+] [video_address]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$b86d: decb]
	jra	l_b868                             	| [$b86e: bra    $b868]
l_b870:
	movem.l	(sp)+,d0                       	| [$b870: puls   a]
	PUSH_SR                                	| [...]
	MAKE_D                                 	| [...]
	POP_SR                                 	| [...]
	tst.b	d0                               	| [$b872: tsta]
	jeq	l_b87d                             	| [$b873: beq    $b87d]
	subq.b	#1,d0                           	| [$b875: deca]
	move.w	#0xf67d,d4                      	| [$b876: ldu    #$f67d]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$b879: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d3                   	| [$b87b: sta    ,y] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_b87d:
	move.w	#0x30b0,d2                      	| [$b87d: ldx    #$30b0]
	GET_REG_ADDRESS	0,d2                   	| [$b880: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$b882: ldb    #$0a]
	jbsr	multiply_ab                       	| [$b884: mul]
	GET_REG_ADDRESS	0,d2                   	| [$b885: addb   ,x+]
	addq.w	#1,d2                           	| [...]
	add.b	(a0),d1                          	| [...]
	move.b	#0x0a,d0                        	| [$b887: lda    #$0a]
	jbsr	multiply_ab                       	| [$b889: mul]
	GET_REG_ADDRESS	0,d2                   	| [$b88a: addb   ,x]
	add.b	(a0),d1                          	| [...]
	GET_ADDRESS	0x343d                     	| [$b88c: cmpb   $343d]
	cmp.b	(a0),d1                          	| [...]
	jcs	l_b896                             	| [$b88f: bcs    $b896]
	GET_ADDRESS	0x343d                     	| [$b891: stb    $343d]
	move.b	d1,(a0)                         	| [...]
	jra	l_b8a8                             	| [$b894: bra    $b8a8]
l_b896:
	GET_ADDRESS	0x343d                     	| [$b896: lda    $343d]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x46,d0                         	| [$b899: cmpa   #$46]
	jcs	l_b8a8                             	| [$b89b: bcs    $b8a8]
	sub.b	#0x36,d0                         	| [$b89d: suba   #$36]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$b89f: sta    $48]
	OP_R_ON_DP_ADDRESS	cmp,0x48,d1          | [$b8a1: cmpb   $48]
	jcc	l_b8a8                             	| [$b8a3: bcc    $b8a8]
	GET_ADDRESS	0x343e                     	| [$b8a5: inc    $343e]
	addq.b	#1,(a0)                         	| [...]
l_b8a8:
	cmp.b	#0x28,d1                         	| [$b8a8: cmpb   #$28]
	jcs	l_b8ae                             	| [$b8aa: bcs    $b8ae]
	add.b	#0x01,d1                         	| [$b8ac: addb   #$01]
l_b8ae:
	GET_ADDRESS	0x343a                     	| [$b8ae: cmpb   $343a]
	cmp.b	(a0),d1                          	| [...]
	jcs	l_b8c5                             	| [$b8b1: bcs    $b8c5]
	move.b	#0x20,d0                        	| [$b8b3: lda    #$20]
	jbsr	l_4eb3                            	| [$b8b5: jsr    $4eb3]
	move.b	#0x21,d0                        	| [$b8b8: lda    #$21]
	jbsr	l_4eb3                            	| [$b8ba: jsr    $4eb3]
	GET_ADDRESS	0x343a                     	| [$b8bd: lda    $343a]
	move.b	(a0),d0                         	| [...]
	add.b	#0x14,d0                         	| [$b8c0: adda   #$14]
                                         | [$b8c2: sta    $343a]
	move.b	d0,(a0)                         	| [...]
l_b8c5:
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$b8c5: stb    $48]
	GET_ADDRESS	0x3424                     	| [$b8c7: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3427                     	| [$b8ca: ldb    $3427]
	move.b	(a0),d1                         	| [...]
	jbsr	multiply_ab                       	| [$b8cd: mul]
	GET_ADDRESS	0x3425                     	| [$b8ce: addb   $3425]
	add.b	(a0),d1                          	| [...]
	OP_R_ON_DP_ADDRESS	cmp,0x48,d1          | [$b8d1: cmpb   $48]
	jeq	l_b8db                             	| [$b8d3: beq    $b8db]
	jcs	l_b8da                             	| [$b8d5: bcs    $b8da]
	subq.b	#1,d1                           	| [$b8d7: decb]
	jra	l_b8db                             	| [$b8d8: bra    $b8db]
l_b8da:
	addq.b	#1,d1                           	| [$b8da: incb]
l_b8db:
	move.b	#0x01,d0                        	| [$b8db: lda    #$01]
	GET_ADDRESS	0x3424                     	| [$b8dd: subb   $3424]
	sub.b	(a0),d1                          	| [...]
	jpl	l_b8e6                             	| [$b8e0: bpl    $b8e6]
	moveq	#0,d0                            	| [$b8e2: clra]
	GET_ADDRESS	0x3424                     	| [$b8e3: addb   $3424]
	add.b	(a0),d1                          	| [...]
l_b8e6:
	GET_ADDRESS	0x3425                     	| [$b8e6: stb    $3425]
	move.b	d1,(a0)                         	| [...]
	GET_ADDRESS	0x3427                     	| [$b8e9: sta    $3427]
	move.b	d0,(a0)                         	| [...]
	addq.b	#1,d0                           	| [$b8ec: inca]
	GET_ADDRESS	0x3428                     	| [$b8ed: sta    $3428]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_be7d                            	| [$b8f0: jsr    $be7d]
	jbsr	l_bc28                            	| [$b8f3: jsr    $bc28]
	jbsr	l_bd7e                            	| [$b8f6: jsr    $bd7e]
	GET_ADDRESS	0x3425                     	| [$b8f9: lda    $3425]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b8fc: cmpa   $3424]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_b95f                             	| [$b8ff: bcs    $b95f]
	GET_ADDRESS	0x3427                     	| [$b901: tst    $3427]
	tst.b	(a0)                             	| [...]
	jeq	l_b95f                             	| [$b904: beq    $b95f]
	GET_ADDRESS	0x342b                     	| [$b906: lda    $342b]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$b909: inca]
	cmp.b	#0x03,d0                         	| [$b90a: cmpa   #$03]
	jne	l_b90f                             	| [$b90c: bne    $b90f]
	moveq	#0,d0                            	| [$b90e: clra]
l_b90f:
	GET_ADDRESS	0x342b                     	| [$b90f: sta    $342b]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$b912: tst    game_playing_00]
	jne	l_b920                             	| [$b914: bne    $b920]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$b916: lda    $0f]
	and.b	#0x3f,d0                         	| [$b918: anda   #$3f]
	jne	l_b920                             	| [$b91a: bne    $b920]
	move.b	#0x02,d0                        	| [$b91c: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x30,d0         | [$b91e: sta    $30]
l_b920:
	jbsr	l_4fa1                            	| [$b920: jsr    $4fa1]
	BIT	#0x02,d0                           	| [$b923: bita   #$02]
	jeq	l_b940                             	| [$b925: beq    $b940]
	move.b	#0x8e,d0                        	| [$b927: lda    #$8e]
	jbsr	queue_sound_event_4ead            	| [$b929: jsr    queue_sound_event_4ead]
	move.b	#0xff,d0                        	| [$b92c: lda    #$ff]
	jbsr	queue_sound_event_4ead            	| [$b92e: jsr    queue_sound_event_4ead]
	GET_ADDRESS	0x342b                     	| [$b931: clr    $342b]
	clr.b	(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$b934: ldd    #$0304]
	move.w	#0x0304,d1                      	| [$b934: ldd    #$0304]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3427                     	| [$b937: std    $3427]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$b93a: clr    $3425]
	clr.b	(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$b93d: inc    $2c]
	rts                                    	| [$b93f: rts]

l_b940:
	GET_ADDRESS	0x3440                     	| [$b940: tst    $3440]
	tst.b	(a0)                             	| [...]
	jne	l_b954                             	| [$b943: bne    $b954]
	move.b	#0x8d,d0                        	| [$b945: lda    #$8d]
	jbsr	queue_sound_event_4ead            	| [$b947: jsr    queue_sound_event_4ead]
	move.b	#0xff,d0                        	| [$b94a: lda    #$ff]
	jbsr	queue_sound_event_4ead            	| [$b94c: jsr    queue_sound_event_4ead]
	move.b	#0x28,d0                        	| [$b94f: lda    #$28]
	GET_ADDRESS	0x3440                     	| [$b951: sta    $3440]
	move.b	d0,(a0)                         	| [...]
l_b954:
	GET_ADDRESS	0x3440                     	| [$b954: dec    $3440]
	subq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b957: lda    $3424]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$b95a: deca]
	GET_ADDRESS	0x3425                     	| [$b95b: sta    $3425]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$b95e: rts]

l_b95f:
	GET_ADDRESS	0x342b                     	| [$b95f: clr    $342b]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$b962: rts]

l_b963:
	move.w	#0x30b0,d2                      	| [$b963: ldx    #$30b0]
	jbsr	l_aff4                            	| [$b966: jsr    $aff4]
	MAKE_D                                 	| [...]
	add.w	#0x0002,d1                       	| [$b969: addd   #$0002]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D
	GET_ADDRESS	0x3437                     	| [$b96c: cmpd   $3437]
	CMP_W_TO_REG	a0,d1                          	| [...]
	jcs	l_b985                             	| [$b970: bcs    $b985]
	GET_ADDRESS	0x3425                     	| [$b972: inc    $3425]
	addq.b	#1,(a0)                         	| [...]
                                         | [$b975: lda    $3425]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b978: cmpa   $3424]
	cmp.b	(a0),d0                          	| [...]
	jcs	l_b98d                             	| [$b97b: bcs    $b98d]
	GET_ADDRESS	0x3424                     	| [$b97d: lda    $3424]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3425                     	| [$b980: sta    $3425]
	move.b	d0,(a0)                         	| [...]
	jra	l_b98d                             	| [$b983: bra    $b98d]
l_b985:
	GET_ADDRESS	0x3425                     	| [$b985: dec    $3425]
	subq.b	#1,(a0)                         	| [...]
	jpl	l_b98d                             	| [$b988: bpl    $b98d]
	GET_ADDRESS	0x3425                     	| [$b98a: clr    $3425]
	clr.b	(a0)                         	| [...]
l_b98d:
	jbsr	l_be7d                            	| [$b98d: jsr    $be7d]
	jbsr	l_bcc7                            	| [$b990: jsr    $bcc7]
	jbsr	l_bd7e                            	| [$b993: jsr    $bd7e]
	GET_ADDRESS	0x3425                     	| [$b996: lda    $3425]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$b999: cmpa   $3424]
	cmp.b	(a0),d0                          	| [...]
	jeq	l_b9bc                             	| [$b99c: beq    $b9bc]
	GET_ADDRESS	0x3439                     	| [$b99e: clr    $3439]
	clr.b	(a0)                         	| [...]
	moveq	#0,d0                            	| [$b9a1: clra]
	move.b	#0x10,d1                        	| [$b9a2: ldb    #$10]
	move.w	#0x24d6,d2                      	| [$b9a4: ldx    #$24d6]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b9a7: stb    ,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$b9a9: sta    $0800,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	-0x40,d2               	| [$b9ad: stb    -$40,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x07c0,d2              	| [$b9b0: sta    $07c0,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	-0x80,d2               	| [$b9b4: stb    -$80,x]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_UNCHECKED_ADDRESS	0x0780,d2              	| [$b9b7: sta    $0780,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	rts                                    	| [$b9bb: rts]

l_b9bc:
	GET_ADDRESS	0x3439                     	| [$b9bc: inc    $3439]
	addq.b	#1,(a0)                         	| [...]
                                         | [$b9bf: lda    $3439]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x14,d0                         	| [$b9c2: cmpa   #$14]
	jeq	l_b9ce                             	| [$b9c4: beq    $b9ce]
	cmp.b	#0x28,d0                         	| [$b9c6: cmpa   #$28]
	jeq	l_b9ce                             	| [$b9c8: beq    $b9ce]
	cmp.b	#0x3c,d0                         	| [$b9ca: cmpa   #$3c]
	jne	l_b9dd                             	| [$b9cc: bne    $b9dd]
l_b9ce:
	move.b	#0x61,d0                        	| [$b9ce: lda    #$61]
	jbsr	l_4eb3                            	| [$b9d0: jsr    $4eb3]
	move.b	#0x62,d0                        	| [$b9d3: lda    #$62]
	jbsr	l_4eb3                            	| [$b9d5: jsr    $4eb3]
	move.b	#0x63,d0                        	| [$b9d8: lda    #$63]
	jbsr	l_4eb3                            	| [$b9da: jsr    $4eb3]
l_b9dd:
	GET_ADDRESS	0x3439                     	| [$b9dd: lda    $3439]
	move.b	(a0),d0                         	| [...]
	move.w	#0x24d6,d2                      	| [$b9e0: ldx    #$24d6]
	move.b	#0x14,d1                        	| [$b9e3: ldb    #$14]
	jbsr	l_a606                            	| [$b9e5: jsr    $a606]
	move.l	d1,-(sp)                        	| [$b9e8: pshs   b]
l_b9ea:
	tst.b	d1                               	| [$b9ea: tstb]
	jeq	l_b9fd                             	| [$b9eb: beq    $b9fd]
	move.b	#0xe2,d0                        	| [$b9ed: lda    #$e2]
	GET_REG_UNCHECKED_ADDRESS	0,d2                   	| [$b9ef: sta    ,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	move.b	#0x80,d0                        	| [$b9f1: lda    #$80]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d2              	| [$b9f3: sta    $0800,x]  [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d1                           	| [$b9f7: decb]
	sub.w	#0x40,d2                         	| [$b9f8: leax   -$40,x]
	jra	l_b9ea                             	| [$b9fb: bra    $b9ea]
l_b9fd:
	movem.l	(sp)+,d1                       	| [$b9fd: puls   b]
	cmp.b	#0x03,d1                         	| [$b9ff: cmpb   #$03]
	jeq	l_ba04                             	| [$ba01: beq    $ba04]
	rts                                    	| [$ba03: rts]

l_ba04:
	jbsr	l_be07                            	| [$ba04: jsr    $be07]
	move.b	#0x3c,d0                        	| [$ba07: lda    #$3c]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$ba09: sta    $2d]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$ba0b: inc    $2c]
	rts                                    	| [$ba0d: rts]

l_ba0e:
	GET_ADDRESS	0x3461                     	| [$ba0e: dec    $3461]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_ba40                             	| [$ba11: beq    $ba40]
	jbsr	l_4fa1                            	| [$ba13: jsr    $4fa1]
	and.b	#0x07,d0                         	| [$ba16: anda   #$07]
	cmp.b	#0x05,d0                         	| [$ba18: cmpa   #$05]
	jne	l_ba3f                             	| [$ba1a: bne    $ba3f]
	jbsr	l_bb24                            	| [$ba1c: jsr    $bb24]
	move.b	#0x00,d0                        	| [$ba1f: ldd    #$0001]
	move.w	#0x0001,d1                      	| [$ba1f: ldd    #$0001]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x97                    	| [$ba22: std    $97]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x99,d0         | [$ba24: sta    $99]
	jbsr	l_7f0a                            	| [$ba26: jsr    $7f0a]
	move.b	#0xb1,d0                        	| [$ba29: lda    #$b1]
	jbsr	l_4eb3                            	| [$ba2b: jsr    $4eb3]
	move.b	#0x89,d0                        	| [$ba2e: lda    #$89]
	jbsr	l_4eb3                            	| [$ba30: jsr    $4eb3]
	move.b	#0xb1,d0                        	| [$ba33: lda    #$b1]
	jbsr	l_4eb3                            	| [$ba35: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$ba38: lda    #$ff]
	jbsr	l_4eb3                            	| [$ba3a: jsr    $4eb3]
	jra	l_ba40                             	| [$ba3d: bra    $ba40]
l_ba3f:
	rts                                    	| [$ba3f: rts]

l_ba40:
	move.b	#0x02,d0                        	| [$ba40: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$ba42: sta    event_sub_state_2a]
	rts                                    	| [$ba44: rts]

l_ba45:
	OP_W_ON_DP_ADDRESS	subq,0x2d,#1         | [$ba45: dec    $2d]
	jne	l_ba4b                             	| [$ba47: bne    $ba4b]
	OP_W_ON_DP_ADDRESS	addq,0x2c,#1         | [$ba49: inc    $2c]
l_ba4b:
	rts                                    	| [$ba4b: rts]

l_ba4c:
	move.w	#0x3220,d2                      	| [$ba4c: ldx    #$3220]
	GET_REG_ADDRESS	0x1,d2                 	| [$ba4f: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x51,d2                	| [$ba51: cmpa   $51,x]
	cmp.b	(a0),d0                          	| [...]
	jls	l_ba76                             	| [$ba54: bls    $ba76]
	GET_ADDRESS	0x343c                     	| [$ba56: lda    $343c]
	move.b	(a0),d0                         	| [...]
                                         | [$ba59: asra]
	asr.b	#2,d0                            	| [$ba5a: asra]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$ba5b: sta    $48]
	GET_REG_ADDRESS	0x1,d2                 	| [$ba5d: ldd    $1,x]
	LOAD_D                                 	| [$ba5d: ldd    $1,x]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$ba5f: suba   $48]
	addq.b	#1,d1                           	| [$ba61: incb]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$ba62: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x00a1,d2              	| [$ba64: ldd    $00a1,x]
	LOAD_D                                 	| [$ba64: ldd    $00a1,x]
	OP_R_ON_DP_ADDRESS	sub,0x48,d0          | [$ba68: suba   $48]
	addq.b	#1,d1                           	| [$ba6a: incb]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x00a1,d2              	| [$ba6b: std    $00a1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_bd7e                            	| [$ba6f: jsr    $bd7e]
	GET_ADDRESS	0x343c                     	| [$ba72: inc    $343c]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$ba75: rts]

l_ba76:
	GET_ADDRESS	0x343c                     	| [$ba76: tst    $343c]
	tst.b	(a0)                             	| [...]
	jeq	l_ba89                             	| [$ba79: beq    $ba89]
	moveq	#0,d0                            	| [$ba7b: clra]
	jbsr	queue_sound_event_4ead            	| [$ba7c: jsr    queue_sound_event_4ead]
	move.b	#0x05,d0                        	| [$ba7f: lda    #$05]
	jbsr	queue_sound_event_4ead            	| [$ba81: jsr    queue_sound_event_4ead]
	move.b	#0x06,d0                        	| [$ba84: lda    #$06]
	jbsr	queue_sound_event_4ead            	| [$ba86: jsr    queue_sound_event_4ead]
l_ba89:
	OP_1_ON_DP_ADDRESS	clr,0x2c             | [$ba89: clr    $2c]
	OP_1_ON_DP_ADDRESS	tst,0xcb             | [$ba8b: tst    $cb]
	jeq	l_ba94                             	| [$ba8d: beq    $ba94]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$ba8f: inc    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$ba91: inc    event_sub_state_2a]
	rts                                    	| [$ba93: rts]

l_ba94:
	move.b	#0x0a,d0                        	| [$ba94: lda    #$0a]
	GET_ADDRESS	0x3461                     	| [$ba96: sta    $3461]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x05,d0                        	| [$ba99: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$ba9b: sta    event_sub_state_2a]
	rts                                    	| [$ba9d: rts]

l_ba9e:
	jbsr	l_bfa2                            	| [$ba9e: jsr    $bfa2]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$baa1: tst    game_playing_00]
	jeq	l_bad7                             	| [$baa3: beq    $bad7]
	move.w	#0x3380,d2                      	| [$baa5: ldx    #$3380]
	jbsr	l_53b4                            	| [$baa8: jsr    $53b4]
	jbsr	l_bfb0                            	| [$baab: jsr    $bfb0]
	move.w	#0x3380,d3                      	| [$baae: ldy    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$bab2: lda    $19]
	move.b	#0x0f,d1                        	| [$bab4: ldb    #$0f]
	jbsr	multiply_ab                       	| [$bab6: mul]
	add.w	d1,d3                            	| [$bab7: leay   d,y]
	move.w	d3,d4                           	| [$bab9: leau   $a,y]
	add.w	#0xa,d4                          	| [$bab9: leau   $a,y]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$babb: lda    $6a]
	move.b	#0x05,d1                        	| [$babd: ldb    #$05]
	jbsr	multiply_ab                       	| [$babf: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$bac0: leay   b,y]
	GET_REG_ADDRESS	0x3,d3                 	| [$bac2: lda    $3,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$bac4: sta    $48]
	jbsr	l_509f                            	| [$bac6: jsr    $509f]
	GET_REG_ADDRESS	0x2,d3                 	| [$bac9: lda    $2,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$bacb: sta    $48]
	jbsr	l_50d1                            	| [$bacd: jsr    $50d1]
	GET_REG_ADDRESS	0x1,d3                 	| [$bad0: lda    $1,y]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$bad2: sta    $48]
	jbsr	l_50d7                            	| [$bad4: jsr    $50d7]
l_bad7:
	move.w	#0x342c,d4                      	| [$bad7: ldu    #$342c]
	move.b	#0x05,d0                        	| [$bada: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$badc: sta    $48]
	jbsr	l_509f                            	| [$bade: jsr    $509f]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$bae1: inc    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$bae3: inc    event_sub_state_2a]
	rts                                    	| [$bae5: rts]

l_bae6:
	jbsr	l_aef5                            	| [$bae6: jsr    $aef5]
	jbsr	l_5466                            	| [$bae9: jsr    $5466]
	OP_1_ON_DP_ADDRESS	tst,game_playing_00  | [$baec: tst    game_playing_00]
	jeq	l_baf6                             	| [$baee: beq    $baf6]
	move.w	#0x3380,d2                      	| [$baf0: ldx    #$3380]
	jbsr	l_53b4                            	| [$baf3: jsr    $53b4]
l_baf6:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$baf6: inc    event_sub_state_2a]
	rts                                    	| [$baf8: rts]

l_baf9:
	move.w	#0x3508,d2                      	| [$baf9: ldx    #$3508]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$bafc: lda    $19]
	move.b	#0x20,d1                        	| [$bafe: ldb    #$20]
	jbsr	multiply_ab                       	| [$bb00: mul]
	add.w	d1,d2                            	| [$bb01: leax   d,x]
	GET_ADDRESS	0x342d                     	| [$bb03: ldd    $342d]
	LOAD_D                                 	| [$bb03: ldd    $342d]
	GET_REG_ADDRESS	0,d2                   	| [$bb06: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x342f                     	| [$bb08: lda    $342f]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3436                     	| [$bb0b: ldb    $3436]
	move.b	(a0),d1                         	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bb0e: std    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$bb10: ldd    #$0001]
	move.w	#0x0001,d1                      	| [$bb10: ldd    #$0001]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3427                     	| [$bb13: std    $3427]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x12,d0                        	| [$bb16: lda    #$12]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3424                     	| [$bb18: std    $3424]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0x2e             | [$bb1b: clr    $2e]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$bb1d: clr    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_28| [$bb1f: clr    event_sub_state_28]
	OP_W_ON_DP_ADDRESS	addq,0x26,#1         | [$bb21: inc    $26]
	rts                                    	| [$bb23: rts]

l_bb24:
	move.w	#0xf6f9,d2                      	| [$bb24: ldx    #$f6f9]
	move.w	#0x32e0,d3                      	| [$bb27: ldy    #$32e0]
	move.b	#0x08,d1                        	| [$bb2b: ldb    #$08]
l_bb2d:
	GET_REG_ADDRESS	0,d2                   	| [$bb2d: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$bb2f: sta    $1,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bb31: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$bb33: sta    $2,y]
	move.b	d0,(a0)                         	| [...]
	addq.w	#0x4,d3                         	| [$bb35: leay   $4,y]
	subq.b	#1,d1                           	| [$bb37: decb]
	jne	l_bb2d                             	| [$bb38: bne    $bb2d]
	move.w	#0x3600,d4                      	| [$bb3a: ldu    #$3600]
	move.w	#0xf6e9,d3                      	| [$bb3d: ldy    #$f6e9]
	move.w	#0x32e0,d2                      	| [$bb41: ldx    #$32e0]
	move.b	#0x07,d0                        	| [$bb44: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$bb46: sta    $48]
l_bb48:
	movem.l	d2/d3/d4,-(sp)                 	| [$bb48: pshs   u,y,x]
	jbsr	l_894b                            	| [$bb4a: jsr    $894b]
	movem.l	(sp)+,d2/d3/d4                 	| [$bb4d: puls   x,y,u]
	addq.w	#0x4,d2                         	| [$bb4f: leax   $4,x]
	addq.w	#0x2,d3                         	| [$bb51: leay   $2,y]
	addq.w	#0x4,d4                         	| [$bb53: leau   $4,u]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$bb55: dec    $48]
	jne	l_bb48                             	| [$bb57: bne    $bb48]
	move.w	#0x3684,d4                      	| [$bb59: ldu    #$3684]
	jbsr	l_894b                            	| [$bb5c: jsr    $894b]
	rts                                    	| [$bb5f: rts]

l_bb60:
	OP_R_ON_DP_ADDRESS	move,0x0e,d0         | [$bb60: lda    $0e]
	and.b	#0x0f,d0                         	| [$bb62: anda   #$0f]
	move.b	#0x08,d1                        	| [$bb64: ldb    #$08]
	jbsr	multiply_ab                       	| [$bb66: mul]
	move.w	#0xf729,d2                      	| [$bb67: ldx    #$f729]
	MAKE_D                                 	| [...]
	add.w	d1,d2                            	| [$bb6a: leax   d,x]
	move.w	#0xf719,d4                      	| [$bb6c: ldu    #$f719]
	move.w	#0x3458,d3                      	| [$bb6f: ldy    #$3458]
	move.b	#0x08,d1                        	| [$bb73: ldb    #$08]
l_bb75:
	GET_REG_ADDRESS	0,d2                   	| [$bb75: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$bb77: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$bb79: sta    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	d0,(a0)                         	| [...]
	subq.b	#1,d1                           	| [$bb7b: decb]
	jne	l_bb75                             	| [$bb7c: bne    $bb75]
	rts                                    	| [$bb7e: rts]

l_bb7f:
	move.w	#0xfaa5,d4                      	| [$bb7f: ldu    #$faa5]
	GET_ADDRESS	0x3426                     	| [$bb82: lda    $3426]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x07,d0                         	| [$bb85: cmpa   #$07]
	jcc	l_bb94                             	| [$bb87: bcc    $bb94]
	move.w	#0xfab3,d4                      	| [$bb89: ldu    #$fab3]
	cmp.b	#0x03,d0                         	| [$bb8c: cmpa   #$03]
	jcc	l_bb94                             	| [$bb8e: bcc    $bb94]
	move.w	#0xfaa5,d4                      	| [$bb90: ldu    #$faa5]
	rts                                    	| [$bb93: rts]

l_bb94:
	move.w	#0x30c0,d2                      	| [$bb94: ldx    #$30c0]
	move.b	#0x07,d0                        	| [$bb97: lda    #$07]
	GET_ADDRESS	0x3048                     	| [$bb99: sta    $3048]
	move.b	d0,(a0)                         	| [...]
l_bb9c:
	GET_REG_ADDRESS	0,d4                   	| [$bb9c: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$bb9c: ldd    ,u++]
	GET_REG_ADDRESS	0x3,d2                 	| [$bb9e: std    $3,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.w	#0x8,d2                          	| [$bba0: leax   $8,x]
	GET_ADDRESS	0x3048                     	| [$bba2: dec    $3048]
	subq.b	#1,(a0)                         	| [...]
	jne	l_bb9c                             	| [$bba5: bne    $bb9c]
	jra	l_cb16                             	| [$bba7: jra    $cb16]
	rts                                    	| [$bbaa: rts]

l_bbab:
	move.w	#0x3120,d2                      	| [$bbab: ldx    #$3120]
	GET_ADDRESS	0x3427                     	| [$bbae: lda    $3427]
	move.b	(a0),d0                         	| [...]
	jne	l_bbc5                             	| [$bbb1: bne    $bbc5]
	move.w	#0x3600,d4                      	| [$bbb3: ldu    #$3600]
	move.b	#0x04,d1                        	| [$bbb6: ldb    #$04]
	move.w	#0x3610,d3                      	| [$bbb8: ldy    #$3610]
	jbsr	l_bbd1                            	| [$bbbc: bsr    $bbd1]
	move.w	#0x3650,d4                      	| [$bbbe: ldu    #$3650]
	move.b	#0x0c,d1                        	| [$bbc1: ldb    #$0c]
	jra	l_bbcd                             	| [$bbc3: bra    $bbcd]
l_bbc5:
	move.w	#0x3130,d2                      	| [$bbc5: ldx    #$3130]
	move.w	#0x3678,d4                      	| [$bbc8: ldu    #$3678]
	move.b	#0x04,d1                        	| [$bbcb: ldb    #$04]
l_bbcd:
	move.w	#0x3688,d3                      	| [$bbcd: ldy    #$3688]
l_bbd1:
	GET_ADDRESS	0x3050                     	| [$bbd1: sty    $3050]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_ADDRESS	0x3048                     	| [$bbd5: stb    $3048]
	move.b	d1,(a0)                         	| [...]
l_bbd8:
	jbsr	l_bbf0                            	| [$bbd8: jsr    $bbf0]
	addq.w	#0x4,d2                         	| [$bbdb: leax   $4,x]
	GET_ADDRESS	0x3048                     	| [$bbdd: dec    $3048]
	subq.b	#1,(a0)                         	| [...]
	jne	l_bbd8                             	| [$bbe0: bne    $bbd8]
l_bbe2:
	GET_ADDRESS	0x3050                     	| [$bbe2: cmpu   $3050]
	CMP_W_TO_REG	a0,d4                          	| [...]
	jcc	l_bbef                             	| [$bbe6: bcc    $bbef]
	move.b	#0x00,d0                        	| [$bbe8: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$bbe8: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$bbeb: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_bbe2                             	| [$bbed: bra    $bbe2]
l_bbef:
	rts                                    	| [$bbef: rts]

l_bbf0:
	GET_REG_ADDRESS	0x3,d2                 	| [$bbf0: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_bc27                             	| [$bbf2: beq    $bc27]
	GET_REG_ADDRESS	0x2,d4                 	| [$bbf4: sta    $2,u]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3002                     	| [$bbf6: lda    $3002]
	move.b	(a0),d0                         	| [...]
	jne	l_bc0f                             	| [$bbf9: bne    $bc0f]
	GET_REG_ADDRESS	0x2,d2                 	| [$bbfb: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$bbfd: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bbff: ldd    ,x]
	LOAD_D                                 	| [$bbff: ldd    ,x]
	cmp.w	#0x3670,d4                       	| [$bc01: cmpu   #$3670]
	jcc	l_bc08                             	| [$bc05: bcc    $bc08]
	addq.b	#1,d0                           	| [$bc07: inca]
l_bc08:
	GET_REG_ADDRESS	0x1,d4                 	| [$bc08: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$bc0a: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	addq.w	#0x4,d4                         	| [$bc0c: leau   $4,u]
	rts                                    	| [$bc0e: rts]

l_bc0f:
	GET_REG_ADDRESS	0x2,d2                 	| [$bc0f: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	eor.b	#0x40,d0                         	| [$bc11: eora   #$40]
	GET_REG_ADDRESS	0,d4                   	| [$bc13: sta    ,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc15: ldd    ,x]
	LOAD_D                                 	| [$bc15: ldd    ,x]
	neg.b	d1                               	| [$bc17: negb]
	cmp.w	#0x3670,d4                       	| [$bc18: cmpu   #$3670]
	jcc	l_bc1f                             	| [$bc1c: bcc    $bc1f]
	subq.b	#1,d0                           	| [$bc1e: deca]
l_bc1f:
	sub.b	#0x10,d1                         	| [$bc1f: subb   #$10]
	GET_REG_ADDRESS	0x1,d4                 	| [$bc21: sta    $1,u]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$bc23: stb    $3,u]
	move.b	d1,(a0)                         	| [...]
	addq.w	#0x4,d4                         	| [$bc25: leau   $4,u]
l_bc27:
	rts                                    	| [$bc27: rts]

l_bc28:
	move.w	#0x3400,d2                      	| [$bc28: ldx    #$3400]
l_bc2b:
	move.w	#0x3220,d3                      	| [$bc2b: ldy    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$bc2f: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bc2f: ldd    ,x++]
	GET_REG_ADDRESS	0x51,d3                	| [$bc31: std    $51,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x05,d1                         	| [$bc34: addb   #$05]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	chrono_hundredth_second_71,d3	| [$bc36: std    chrono_hundredth_second_71,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc39: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xddb5,d4                      	| [$bc3b: ldu    #$ddb5]
                                         | [$bc3e: asla]
	asl.b	#2,d0                            	| [$bc3f: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bc40: leau   a,u]
	GET_REG_ADDRESS	0x53,d3                	| [$bc42: stu    $53,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x73,d3                	| [$bc45: stu    $73,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc48: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bc48: ldd    ,x++]
	GET_REG_ADDRESS	0x31,d3                	| [$bc4a: std    $31,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x05,d1                         	| [$bc4d: addb   #$05]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x61,d3                	| [$bc4f: std    $61,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc52: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xdd9a,d4                      	| [$bc54: ldu    #$dd9a]
	move.b	#0x03,d1                        	| [$bc57: ldb    #$03]
	jbsr	multiply_ab                       	| [$bc59: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bc5a: leau   b,u]
	GET_REG_ADDRESS	0x33,d3                	| [$bc5c: stu    $33,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x63,d3                	| [$bc5f: stu    $63,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc62: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bc62: ldd    ,x++]
	GET_REG_ADDRESS	0x41,d3                	| [$bc64: std    $41,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc67: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xdd8a,d4                      	| [$bc69: ldu    #$dd8a]
                                         | [$bc6c: asla]
	asl.b	#2,d0                            	| [$bc6d: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bc6e: leau   a,u]
	GET_REG_ADDRESS	0x43,d3                	| [$bc70: stu    $43,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc73: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bc73: ldd    ,x++]
	GET_REG_ADDRESS	0x21,d3                	| [$bc75: std    $21,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d1                         	| [$bc78: addb   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x0091,d3              	| [$bc7a: std    $0091,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc7e: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bc80: ldu    #$ddcd]
	asl.b	#1,d0                            	| [$bc83: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bc84: leau   a,u]
	GET_REG_ADDRESS	0x23,d3                	| [$bc86: stu    $23,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x0093,d3              	| [$bc89: stu    $0093,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc8d: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bc8d: ldd    ,x++]
	GET_REG_ADDRESS	0x11,d3                	| [$bc8f: std    $11,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d1                         	| [$bc92: addb   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x0081,d3              	| [$bc94: std    $0081,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bc98: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bc9a: ldu    #$ddcd]
	asl.b	#1,d0                            	| [$bc9d: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bc9e: leau   a,u]
	GET_REG_ADDRESS	0x13,d3                	| [$bca0: stu    $13,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x0083,d3              	| [$bca3: stu    $0083,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jbsr	l_bdca                            	| [$bca7: jsr    $bdca]
	jbsr	l_bd6e                            	| [$bcaa: jsr    $bd6e]
	move.w	#0xddff,d4                      	| [$bcad: ldu    #$ddff]
	GET_ADDRESS	0x342b                     	| [$bcb0: lda    $342b]
	move.b	(a0),d0                         	| [...]
	move.b	#0x03,d1                        	| [$bcb3: ldb    #$03]
	jbsr	multiply_ab                       	| [$bcb5: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bcb6: leau   b,u]
	GET_REG_ADDRESS	0x3,d3                 	| [$bcb8: stu    $3,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.w	#0xde08,d4                      	| [$bcba: ldu    #$de08]
	GET_ADDRESS	0x342b                     	| [$bcbd: subb   $342b]
	sub.b	(a0),d1                          	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bcc0: leau   b,u]
	GET_REG_ADDRESS	0x00a3,d3              	| [$bcc2: stu    $00a3,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$bcc6: rts]

l_bcc7:
	move.w	#0x3400,d2                      	| [$bcc7: ldx    #$3400]
	move.w	#0x3220,d3                      	| [$bcca: ldy    #$3220]
	GET_REG_ADDRESS	0,d2                   	| [$bcce: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bcce: ldd    ,x++]
	GET_REG_ADDRESS	0x51,d3                	| [$bcd0: std    $51,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bcd3: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xddb5,d4                      	| [$bcd5: ldu    #$ddb5]
                                         | [$bcd8: asla]
	asl.b	#2,d0                            	| [$bcd9: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bcda: leau   a,u]
	GET_REG_ADDRESS	0x53,d3                	| [$bcdc: stu    $53,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bcdf: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bcdf: ldd    ,x++]
	GET_REG_ADDRESS	0x31,d3                	| [$bce1: std    $31,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bce4: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xdd9a,d4                      	| [$bce6: ldu    #$dd9a]
	move.b	#0x03,d1                        	| [$bce9: ldb    #$03]
	jbsr	multiply_ab                       	| [$bceb: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bcec: leau   b,u]
	GET_REG_ADDRESS	0x33,d3                	| [$bcee: stu    $33,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bcf1: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bcf1: ldd    ,x++]
	GET_REG_ADDRESS	chrono_hundredth_second_71,d3	| [$bcf3: std    chrono_hundredth_second_71,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bcf6: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xddb5,d4                      	| [$bcf8: ldu    #$ddb5]
                                         | [$bcfb: asla]
	asl.b	#2,d0                            	| [$bcfc: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bcfd: leau   a,u]
	GET_REG_ADDRESS	0x73,d3                	| [$bcff: stu    $73,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bd02: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bd02: ldd    ,x++]
	GET_REG_ADDRESS	0x61,d3                	| [$bd04: std    $61,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bd07: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xdd9a,d4                      	| [$bd09: ldu    #$dd9a]
	move.b	#0x03,d1                        	| [$bd0c: ldb    #$03]
	jbsr	multiply_ab                       	| [$bd0e: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bd0f: leau   b,u]
	GET_REG_ADDRESS	0x63,d3                	| [$bd11: stu    $63,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bd14: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bd14: ldd    ,x++]
	GET_REG_ADDRESS	0x41,d3                	| [$bd16: std    $41,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d0                         	| [$bd19: adda   #$08]
	sub.b	#0x0a,d1                         	| [$bd1b: subb   #$0a]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x21,d3                	| [$bd1d: std    $21,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d0                         	| [$bd20: adda   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x11,d3                	| [$bd22: std    $11,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d1                         	| [$bd25: addb   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x0081,d3              	| [$bd27: std    $0081,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	sub.b	#0x08,d0                         	| [$bd2b: suba   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x0091,d3              	| [$bd2d: std    $0091,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bd31: lda    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d0                         	| [...]
	move.w	#0xdd8a,d4                      	| [$bd33: ldu    #$dd8a]
                                         | [$bd36: asla]
	asl.b	#2,d0                            	| [$bd37: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bd38: leau   a,u]
	GET_REG_ADDRESS	0x43,d3                	| [$bd3a: stu    $43,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.w	#0xdde5,d4                      	| [$bd3d: ldu    #$dde5]
	GET_REG_ADDRESS	0x13,d3                	| [$bd40: stu    $13,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x23,d3                	| [$bd43: stu    $23,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x0083,d3              	| [$bd46: stu    $0083,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x0093,d3              	| [$bd4a: stu    $0093,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jbsr	l_bdca                            	| [$bd4e: jsr    $bdca]
	jbsr	l_bd6e                            	| [$bd51: jsr    $bd6e]
	move.w	#0xddff,d4                      	| [$bd54: ldu    #$ddff]
	GET_ADDRESS	0x342b                     	| [$bd57: lda    $342b]
	move.b	(a0),d0                         	| [...]
	move.b	#0x03,d1                        	| [$bd5a: ldb    #$03]
	jbsr	multiply_ab                       	| [$bd5c: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bd5d: leau   b,u]
	GET_REG_ADDRESS	0x3,d3                 	| [$bd5f: stu    $3,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.w	#0xde08,d4                      	| [$bd61: ldu    #$de08]
	GET_ADDRESS	0x342b                     	| [$bd64: subb   $342b]
	sub.b	(a0),d1                          	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bd67: leau   b,u]
	GET_REG_ADDRESS	0x00a3,d3              	| [$bd69: stu    $00a3,y]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$bd6d: rts]

l_bd6e:
	GET_REG_ADDRESS	-0x1f,d3               	| [$bd6e: ldd    -$1f,y]
	LOAD_D                                 	| [$bd6e: ldd    -$1f,y]
	sub.b	#0x05,d0                         	| [$bd71: suba   #$05]
	add.b	#0x01,d1                         	| [$bd73: addb   #$01]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$bd75: std    $1,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d1                         	| [$bd77: addb   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x00a1,d3              	| [$bd79: std    $00a1,y]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$bd7d: rts]

l_bd7e:
	move.w	#0x3200,d2                      	| [$bd7e: ldx    #$3200]
	OP_1_ON_DP_ADDRESS	clr,0x2e             | [$bd81: clr    $2e]
	move.w	#0x361c,d4                      	| [$bd83: ldu    #$361c]
l_bd86:
	
	.ifndef	RELEASE
	move.w	#0xf7d9,d3
	.endif
	lea	table_f7d9,a3                  	| [$bd86: ldy   #table_f7d9]
	OP_R_ON_DP_ADDRESS	move,0x2e,d0         | [$bd8a: lda    $2e]
	JSR_A_INDEXED	A3                   	| [$bd8c: jsr    [a,y]] [jump_table]
	add.w	#0x10,d2                         	| [$bd8e: leax   $10,x]
	OP_R_ON_DP_ADDRESS	move,0x2e,d0         | [$bd91: lda    $2e]
                                         | [$bd93: inca]
	addq.b	#2,d0                           	| [$bd94: inca]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$bd95: sta    $2e]
	cmp.b	#screen_straight_1a,d0                         	| [$bd97: cmpa   #$1a]
	jne	l_bd86                             	| [$bd99: bne    $bd86]
	rts                                    	| [$bd9b: rts]

l_bd9c:
	GET_REG_ADDRESS	0x3,d2                 	| [$bd9c: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_af13                            	| [$bd9f: jsr    $af13]
	addq.w	#0x4,d4                         	| [$bda2: leau   $4,u]
	rts                                    	| [$bda4: rts]

l_bda5:
	GET_REG_ADDRESS	0x3,d2                 	| [$bda5: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_af04                            	| [$bda8: jsr    $af04]
	add.w	#0x8,d4                          	| [$bdab: leau   $8,u]
	rts                                    	| [$bdad: rts]

l_bdae:
	GET_REG_ADDRESS	0x3,d2                 	| [$bdae: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_894b                            	| [$bdb1: jsr    $894b]
	addq.w	#0x4,d4                         	| [$bdb4: leau   $4,u]
	rts                                    	| [$bdb6: rts]

l_bdb7:
	GET_REG_ADDRESS	0x3,d2                 	| [$bdb7: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_890f                            	| [$bdba: jsr    $890f]
	add.w	#0x8,d4                          	| [$bdbd: leau   $8,u]
	rts                                    	| [$bdbf: rts]

l_bdc0:
	GET_REG_ADDRESS	0x3,d2                 	| [$bdc0: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_be6d                            	| [$bdc3: jsr    $be6d]
	add.w	#0x10,d4                         	| [$bdc6: leau   $10,u]
	rts                                    	| [$bdc9: rts]

l_bdca:
	movem.l	d2/d3,-(sp)                    	| [$bdca: pshs   y,x]
	move.w	#0x3220,d2                      	| [$bdcc: ldx    #$3220]
	GET_REG_ADDRESS	0x13,d2                	| [$bdcf: ldd    $13,x]
	LOAD_D                                 	| [$bdcf: ldd    $13,x]
	sub.w	#0xddcd,d1                       	| [$bdd2: subd   #$ddcd]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	move.w	#0xf7a9,d3                      	| [$bdd5: ldy    #$f7a9]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$bdd9: leay   b,y]
	GET_REG_ADDRESS	0x11,d2                	| [$bddb: ldd    $11,x]
	LOAD_D                                 	| [$bddb: ldd    $11,x]
	GET_REG_ADDRESS	0,d3                   	| [$bdde: adda   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$bde0: addb   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	-0x1f,d2               	| [$bde2: std    -$1f,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x0083,d2              	| [$bde5: ldd    $0083,x]
	LOAD_D                                 	| [$bde5: ldd    $0083,x]
	sub.w	#0xddcd,d1                       	| [$bde9: subd   #$ddcd]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	move.w	#0xf7a9,d3                      	| [$bdec: ldy    #$f7a9]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$bdf0: leay   b,y]
	GET_REG_ADDRESS	0x0081,d2              	| [$bdf2: ldd    $0081,x]
	LOAD_D                                 	| [$bdf2: ldd    $0081,x]
	GET_REG_ADDRESS	0,d3                   	| [$bdf6: adda   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$bdf8: addb   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	-0xf,d2                	| [$bdfa: std    -$f,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddfd,d4                      	| [$bdfc: ldu    #$ddfd]
	GET_REG_ADDRESS	-0xd,d2                	| [$bdff: stu    -$d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	-0x1d,d2               	| [$be01: stu    -$1d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	movem.l	(sp)+,d2/d3                    	| [$be04: puls   x,y]
	rts                                    	| [$be06: rts]

l_be07:
	move.w	#0x3220,d2                      	| [$be07: ldx    #$3220]
	GET_REG_ADDRESS	0x43,d2                	| [$be0a: ldd    $43,x]
	LOAD_D                                 	| [$be0a: ldd    $43,x]
	sub.w	#0xdd8a,d1                       	| [$be0d: subd   #$dd8a]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
                                         | [$be10: lsrb]
	lsr.b	#2,d1                            	| [$be11: lsrb]
	move.b	#0x06,d0                        	| [$be12: lda    #$06]
	jbsr	multiply_ab                       	| [$be14: mul]
	move.w	#0xf7f8,d3                      	| [$be15: ldy    #$f7f8]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d3                            	| [$be19: leay   b,y]
	GET_REG_ADDRESS	0x41,d2                	| [$be1b: ldd    $41,x]
	LOAD_D                                 	| [$be1b: ldd    $41,x]
	GET_REG_ADDRESS	0,d3                   	| [$be1e: adda   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$be20: addb   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x21,d2                	| [$be22: std    $21,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d1                         	| [$be25: addb   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x0091,d2              	| [$be27: std    $0091,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$be2b: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$be2d: asla]
	move.w	#0xddcd,d4                      	| [$be2e: ldu    #$ddcd]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$be31: leau   a,u]
	GET_REG_ADDRESS	0x23,d2                	| [$be33: stu    $23,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x0093,d2              	| [$be36: stu    $0093,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x41,d2                	| [$be3a: ldd    $41,x]
	LOAD_D                                 	| [$be3a: ldd    $41,x]
	GET_REG_ADDRESS	0,d3                   	| [$be3d: adda   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$be3f: addb   ,y+]
	addq.w	#1,d3                           	| [...]
	add.b	(a0),d1                          	| [...]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x11,d2                	| [$be41: std    $11,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	add.b	#0x08,d1                         	| [$be44: addb   #$08]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x0081,d2              	| [$be46: std    $0081,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$be4a: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$be4c: asla]
	move.w	#0xddcd,d4                      	| [$be4d: ldu    #$ddcd]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$be50: leau   a,u]
	GET_REG_ADDRESS	0x13,d2                	| [$be52: stu    $13,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0x0083,d2              	| [$be55: stu    $0083,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jbsr	l_bdca                            	| [$be59: jsr    $bdca]
	rts                                    	| [$be5c: rts]

	GET_REG_ADDRESS	0x2,d2                 	| [$be5d: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	move.l	d0,-(sp)                        	| [$be5f: pshs   a]
	add.b	#0x10,d0                         	| [$be61: adda   #$10]
	GET_REG_ADDRESS	0x2,d2                 	| [$be63: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_be6d                            	| [$be65: jsr    $be6d]
	movem.l	(sp)+,d0                       	| [$be68: puls   a]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$be6a: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$be6c: rts]

l_be6d:
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$be6d: lda    $19]
	move.l	d0,-(sp)                        	| [$be6f: pshs   a]
	or.b	#0x20,d0                          	| [$be71: ora    #$20]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$be73: sta    $19]
	jbsr	l_86ee                            	| [$be75: jsr    $86ee]
	movem.l	(sp)+,d0                       	| [$be78: puls   a]
	MAKE_D                                 	| [...]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$be7a: sta    $19]
	rts                                    	| [$be7c: rts]

l_be7d:
	move.w	#0xf694,d2                      	| [$be7d: ldx    #$f694]
	GET_ADDRESS	0x3428                     	| [$be80: lda    $3428]
	move.b	(a0),d0                         	| [...]
	move.b	#0x11,d1                        	| [$be83: ldb    #$11]
	jbsr	multiply_ab                       	| [$be85: mul]
	move.w	d2,d3                           	| [$be86: leay   d,x]
	add.w	d1,d3                            	| [$be86: leay   d,x]
	GET_ADDRESS	0x3427                     	| [$be88: ldb    $3427]
	move.b	(a0),d1                         	| [...]
	jpl	l_be92                             	| [$be8b: bpl    $be92]
	move.w	#0x3470,d2                      	| [$be8d: ldx    #$3470]
	jra	l_be97                             	| [$be90: bra    $be97]
l_be92:
	move.b	#0x11,d0                        	| [$be92: lda    #$11]
	jbsr	multiply_ab                       	| [$be94: mul]
	add.w	d1,d2                            	| [$be95: leax   d,x]
l_be97:
	move.w	#0x3400,d4                      	| [$be97: ldu    #$3400]
	move.b	#0x11,d0                        	| [$be9a: lda    #$11]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$be9c: sta    $48]
	jra	l_b138                             	| [$be9e: jra    $b138]
l_bea1:
	move.w	#0xf816,d2                      	| [$bea1: ldx    #$f816]
	jbsr	l_bf3a                            	| [$bea4: jsr    $bf3a]
	move.w	#0xf825,d2                      	| [$bea7: ldx    #$f825]
	jbsr	l_bf4b                            	| [$beaa: jsr    $bf4b]
	GET_ADDRESS	0x3400                     	| [$bead: ldd    $3400]
	LOAD_D                                 	| [$bead: ldd    $3400]
	GET_ADDRESS	0x32b1                     	| [$beb0: std    $32b1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddcd,d4                      	| [$beb3: ldu    #$ddcd]
	GET_ADDRESS	0x3402                     	| [$beb6: lda    $3402]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$beb9: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$beba: leau   a,u]
	GET_ADDRESS	0x32b3                     	| [$bebc: stu    $32b3]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3403                     	| [$bebf: ldd    $3403]
	LOAD_D                                 	| [$bebf: ldd    $3403]
	GET_ADDRESS	0x32a1                     	| [$bec2: std    $32a1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bec5: ldu    #$ddcd]
	GET_ADDRESS	0x3405                     	| [$bec8: lda    $3405]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$becb: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$becc: leau   a,u]
	GET_ADDRESS	0x32a3                     	| [$bece: stu    $32a3]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jra	l_bf6b                             	| [$bed1: jra    $bf6b]
l_bed4:
	move.w	#0xf84c,d2                      	| [$bed4: ldx    #$f84c]
	jbsr	l_bf3a                            	| [$bed7: jsr    $bf3a]
	move.w	#0xf85b,d2                      	| [$beda: ldx    #$f85b]
	jbsr	l_bf4b                            	| [$bedd: jsr    $bf4b]
	GET_ADDRESS	0x3400                     	| [$bee0: ldd    $3400]
	LOAD_D                                 	| [$bee0: ldd    $3400]
	GET_ADDRESS	0x3241                     	| [$bee3: std    $3241]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bee6: ldu    #$ddcd]
	GET_ADDRESS	0x3402                     	| [$bee9: lda    $3402]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$beec: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$beed: leau   a,u]
	GET_ADDRESS	0x3243                     	| [$beef: stu    $3243]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3403                     	| [$bef2: ldd    $3403]
	LOAD_D                                 	| [$bef2: ldd    $3403]
	GET_ADDRESS	0x3231                     	| [$bef5: std    $3231]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bef8: ldu    #$ddcd]
	GET_ADDRESS	0x3405                     	| [$befb: lda    $3405]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$befe: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$beff: leau   a,u]
	GET_ADDRESS	0x3233                     	| [$bf01: stu    $3233]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jra	l_bf6b                             	| [$bf04: jra    $bf6b]
l_bf07:
	move.w	#0xf831,d2                      	| [$bf07: ldx    #$f831]
	jbsr	l_bf3a                            	| [$bf0a: jsr    $bf3a]
	move.w	#0xf840,d2                      	| [$bf0d: ldx    #$f840]
	jbsr	l_bf4b                            	| [$bf10: jsr    $bf4b]
	GET_ADDRESS	0x3400                     	| [$bf13: ldd    $3400]
	LOAD_D                                 	| [$bf13: ldd    $3400]
	GET_ADDRESS	0x3241                     	| [$bf16: std    $3241]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bf19: ldu    #$ddcd]
	GET_ADDRESS	0x3402                     	| [$bf1c: lda    $3402]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$bf1f: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bf20: leau   a,u]
	GET_ADDRESS	0x3243                     	| [$bf22: stu    $3243]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3403                     	| [$bf25: ldd    $3403]
	LOAD_D                                 	| [$bf25: ldd    $3403]
	GET_ADDRESS	0x3231                     	| [$bf28: std    $3231]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xddcd,d4                      	| [$bf2b: ldu    #$ddcd]
	GET_ADDRESS	0x3405                     	| [$bf2e: lda    $3405]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$bf31: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$bf32: leau   a,u]
	GET_ADDRESS	0x3233                     	| [$bf34: stu    $3233]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	jra	l_bf6b                             	| [$bf37: jra    $bf6b]
l_bf3a:
	move.w	#0x3220,d3                      	| [$bf3a: ldy    #$3220]
	GET_REG_ADDRESS	0x1,d3                 	| [$bf3e: ldd    $1,y]
	LOAD_D                                 	| [$bf3e: ldd    $1,y]
	GET_DP_ADDRESS	0x50                    	| [$bf40: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x00a1,d3              	| [$bf42: ldd    $00a1,y]
	LOAD_D                                 	| [$bf42: ldd    $00a1,y]
	GET_DP_ADDRESS	0x52                    	| [$bf46: std    $52]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_bc2b                             	| [$bf48: jra    $bc2b]
l_bf4b:
	moveq	#0,d1                            	| [$bf4b: clrb]
	GET_ADDRESS	0x3428                     	| [$bf4c: lda    $3428]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$bf4f: lsra]
	roxl.b	#1,d1                           	| [$bf50: rolb]
	move.b	#0x06,d0                        	| [$bf51: lda    #$06]
	jbsr	multiply_ab                       	| [$bf53: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	move.w	d2,d3                           	| [$bf54: leay   b,x]
	add.w	d6,d3                            	| [$bf54: leay   b,x]
	moveq	#0,d1                            	| [$bf56: clrb]
	GET_ADDRESS	0x3427                     	| [$bf57: lda    $3427]
	move.b	(a0),d0                         	| [...]
	lsr.b	#1,d0                            	| [$bf5a: lsra]
	roxl.b	#1,d1                           	| [$bf5b: rolb]
	move.b	#0x06,d0                        	| [$bf5c: lda    #$06]
	jbsr	multiply_ab                       	| [$bf5e: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$bf5f: leax   b,x]
	move.b	#0x06,d0                        	| [$bf61: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$bf63: sta    $48]
	move.w	#0x3400,d4                      	| [$bf65: ldu    #$3400]
	jra	l_b138                             	| [$bf68: jra    $b138]
l_bf6b:
	GET_DP_ADDRESS	0x50                    	| [$bf6b: ldd    $50]
	LOAD_D                                 	| [$bf6b: ldd    $50]
	GET_ADDRESS	0x3221                     	| [$bf6d: std    $3221]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x52                    	| [$bf70: ldd    $52]
	LOAD_D                                 	| [$bf70: ldd    $52]
	GET_ADDRESS	0x32c1                     	| [$bf72: std    $32c1]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_bdca                            	| [$bf75: jsr    $bdca]
	jbsr	l_bd7e                            	| [$bf78: jsr    $bd7e]
	GET_ADDRESS	0x3425                     	| [$bf7b: lda    $3425]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$bf7e: inca]
	GET_ADDRESS	0x3424                     	| [$bf7f: cmpa   $3424]
	cmp.b	(a0),d0                          	| [...]
	jls	l_bf8b                             	| [$bf82: bls    $bf8b]
	moveq	#0,d0                            	| [$bf84: clra]
	GET_ADDRESS	0x3427                     	| [$bf85: inc    $3427]
	addq.b	#1,(a0)                         	| [...]
	GET_ADDRESS	0x3428                     	| [$bf88: inc    $3428]
	addq.b	#1,(a0)                         	| [...]
l_bf8b:
	GET_ADDRESS	0x3425                     	| [$bf8b: sta    $3425]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$bf8e: rts]

l_bf8f:
	GET_ADDRESS	0x34f4                     	| [$bf8f: lda    $34f4]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$bf92: asla]
	
	.ifndef	RELEASE
	move.w	#0xf810,d3
	.endif
	lea	table_f810,a3                  	| [$bf93: ldy   #table_f810]
	JMP_A_INDEXED	A3                   	| [$bf97: jra    [a,y]] [jump_table]
l_bf99:
	move.w	#0xf694,d2                      	| [$bf99: ldx    #$f694]
	jbsr	l_bc2b                            	| [$bf9c: jsr    $bc2b]
	jra	l_bd7e                             	| [$bf9f: jra    $bd7e]
l_bfa2:
	move.w	#0x342c,d2                      	| [$bfa2: ldx    #$342c]
	GET_REG_ADDRESS	0,d2                   	| [$bfa5: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$bfa5: ldd    ,x++]
	GET_DP_ADDRESS	0x9b                    	| [$bfa7: std    $9b]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$bfa9: ldd    ,x]
	LOAD_D                                 	| [$bfa9: ldd    ,x]
	GET_DP_ADDRESS	0x9d                    	| [$bfab: std    $9d]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jra	l_5466                             	| [$bfad: jra    $5466]
l_bfb0:
	move.w	#0x3380,d2                      	| [$bfb0: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$bfb3: lda    $19]
	move.b	#0x0f,d1                        	| [$bfb5: ldb    #$0f]
	jbsr	multiply_ab                       	| [$bfb7: mul]
	add.w	d1,d2                            	| [$bfb8: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$bfba: lda    $6a]
	move.b	#0x05,d1                        	| [$bfbc: ldb    #$05]
	jbsr	multiply_ab                       	| [$bfbe: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$bfbf: leax   b,x]
	GET_REG_ADDRESS	0x3,d2                 	| [$bfc1: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$bfc3: ldb    $2,x]
	move.b	(a0),d1                         	| [...]
                                         | [$bfc5: aslb]
                                         | [$bfc6: aslb]
                                         | [$bfc7: aslb]
	asl.b	#4,d1                            	| [$bfc8: aslb]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$bfc9: stb    $48]
	GET_DP_ADDRESS	0x48                    	| [$bfcb: ora    $48]
	or.b	(a0),d0                           	| [...]
	OP_W_ON_DP_ADDRESS	move,0x99,d0         | [$bfcd: sta    $99]
	GET_REG_ADDRESS	0x1,d2                 	| [$bfcf: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x98,d0         | [$bfd1: sta    $98]
	jbsr	l_7f0a                            	| [$bfd3: jsr    $7f0a]
	jbsr	l_7f0a                            	| [$bfd6: jsr    $7f0a]
	jra	l_7f0a                             	| [$bfd9: jra    $7f0a]
l_bfdc:
	move.w	#0x2aa0,d3                      	| [$bfdc: ldy    #$2aa0]
	jbsr	l_afd8                            	| [$bfe0: jsr    $afd8]
	GET_ADDRESS	0x3434                     	| [$bfe3: ldy    $3434]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jra	l_afd8                             	| [$bfe7: jra    $afd8]

l_c000:
	move.b	#0x06,d0                        	| [$c000: lda    #$06]
	GET_DP_ADDRESS	chrono_second_72        	| [$c002: adda   chrono_second_72]
	CLR_XC_FLAGS
	move.b	(a0),d6	| [...]
	abcd	d6,d0	| [...]
	PUSH_SR
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$c005: sta    chrono_second_72]
	POP_SR
	jcc	l_c01d                             	| [$c007: bcc    $c01d]
	CLR_XC_FLAGS
	move.b	#0x01,d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,chrono_second_72,d0| [$c00c: sta    chrono_second_72]
	OP_R_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d0| [$c00e: lda    chrono_hundredth_second_71]
	CLR_XC_FLAGS
	move.b	#0x01,d6	| [...]
	abcd	d6,d0	| [...]
	OP_W_ON_DP_ADDRESS	move,chrono_hundredth_second_71,d0| [$c013: sta    chrono_hundredth_second_71]
	cmp.b	#0x60,d0                         	| [$c015: cmpa   #$60]
	jne	l_c01d                             	| [$c017: bne    $c01d]
	OP_1_ON_DP_ADDRESS	clr,chrono_hundredth_second_71| [$c019: clr    chrono_hundredth_second_71]
	OP_W_ON_DP_ADDRESS	addq,0x70,#1         | [$c01b: inc    $70]
l_c01d:
	OP_R_ON_DP_ADDRESS	move,0x73,d1         | [$c01d: ldb    $73]
	jeq	l_c026                             	| [$c01f: beq    $c026]
	move.b	#0x05,d0                        	| [$c021: lda    #$05]
	jbsr	queue_event_4e9a                  	| [$c023: jsr    queue_event_4e9a]
l_c026:
	rts                                    	| [$c026: rts]

l_c027:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$c027: lda    $0f]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$c029: ldb    current_event_69]
	move.w	#0xf8c2,d3                      	| [$c02b: ldy    #$f8c2]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$c02f: ldb    b,y]
	move.b	(a0),d1                         	| [...]
	jbsr	l_a606                            	| [$c031: jsr    $a606]
	tst.b	d0                               	| [$c034: tsta]
	jeq	l_c03a                             	| [$c035: beq    $c03a]
	moveq	#0,d1                            	| [$c037: clrb]
	moveq	#0,d0                            	| [$c038: clra]
	rts                                    	| [$c039: rts]

l_c03a:
	move.w	d2,d3                           	| [$c03a: tfr    x,y]
	GET_REG_ADDRESS	0x10,d3                	| [$c03c: lda    $10,y]
	move.b	(a0),d0                         	| [...]
	move.b	#0x06,d1                        	| [$c03f: ldb    #$06]
	jbsr	l_a606                            	| [$c041: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x4a,d1         | [$c044: stb    $4a]
	move.b	#0x0a,d1                        	| [$c046: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c048: mul]
	GET_REG_ADDRESS	0x11,d3                	| [$c049: addb   $11,y]
	add.b	(a0),d1                          	| [...]
	move.b	d1,d0                           	| [$c04c: tfr    b,a]
	move.b	#0x06,d1                        	| [$c04e: ldb    #$06]
	jbsr	l_a606                            	| [$c050: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x4b,d1         | [$c053: stb    $4b]
	move.b	#0x0a,d1                        	| [$c055: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c057: mul]
	GET_REG_ADDRESS	0x12,d3                	| [$c058: addb   $12,y]
	add.b	(a0),d1                          	| [...]
	move.b	d1,d0                           	| [$c05b: tfr    b,a]
	move.b	#0x06,d1                        	| [$c05d: ldb    #$06]
	jbsr	l_a606                            	| [$c05f: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x4c,d1         | [$c062: stb    $4c]
	move.b	#0x0a,d1                        	| [$c064: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c066: mul]
	GET_REG_ADDRESS	0x13,d3                	| [$c067: addb   $13,y]
	add.b	(a0),d1                          	| [...]
	move.b	d1,d0                           	| [$c06a: tfr    b,a]
	move.b	#0x06,d1                        	| [$c06c: ldb    #$06]
	jbsr	l_a606                            	| [$c06e: jsr    $a606]
	OP_W_ON_DP_ADDRESS	move,0x4d,d1         | [$c071: stb    $4d]
	OP_R_ON_DP_ADDRESS	move,0x4c,d0         | [$c073: lda    $4c]
	move.b	#0x0a,d1                        	| [$c075: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c077: mul]
	OP_1_ON_DP_ADDRESS	clr,0x4c             | [$c078: clr    $4c]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x4c                    	| [$c07a: addd   $4c]
	ADD_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$c07c: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4b,d0         | [$c07e: lda    $4b]
	move.b	#0x64,d1                        	| [$c080: ldb    #$64]
	jbsr	multiply_ab                       	| [$c082: mul]
	GET_DP_ADDRESS	0x48                    	| [$c083: addd   $48]
	ADD_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$c085: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4a,d1         | [$c087: ldb    $4a]
	move.b	#0xe8,d0                        	| [$c089: lda    #$e8]
	jbsr	multiply_ab                       	| [$c08b: mul]
	GET_DP_ADDRESS	0x48                    	| [$c08c: addd   $48]
	ADD_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$c08e: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4a,d1         | [$c090: ldb    $4a]
	move.b	#0x03,d0                        	| [$c092: lda    #$03]
	jbsr	multiply_ab                       	| [$c094: mul]
	OP_R_ON_DP_ADDRESS	add,0x48,d1          | [$c095: addb   $48]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$c097: stb    $48]
	GET_REG_ADDRESS	0x24,d3                	| [$c099: lda    $24,y]
	move.b	(a0),d0                         	| [...]
	move.w	#0xf8c1,d2                      	| [$c09c: ldx    #$f8c1]
	neg.b	d0                               	| [$c09f: nega]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$c0a0: lda    a,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$c0a2: sta    $4e]
	jbsr	l_c139                            	| [$c0a4: jsr    $c139]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x4a                    	| [$c0a7: std    $4a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3376                     	| [$c0a9: lda    $3376]
	move.b	(a0),d0                         	| [...]
	move.l	d0,-(sp)                        	| [$c0ac: pshs   a]
	OP_R_ON_DP_ADDRESS	move,0x4b,d1         | [$c0ae: ldb    $4b]
	jbsr	multiply_ab                       	| [$c0b0: mul]
	GET_DP_ADDRESS	0x50                    	| [$c0b1: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	movem.l	(sp)+,d0                       	| [$c0b3: puls   a]
	MAKE_D                                 	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4a,d1         | [$c0b5: ldb    $4a]
	jbsr	multiply_ab                       	| [$c0b7: mul]
	OP_R_ON_DP_ADDRESS	add,0x50,d1          | [$c0b8: addb   $50]
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$c0ba: stb    $50]
	GET_DP_ADDRESS	0x50                    	| [$c0bc: ldd    $50]
	LOAD_D                                 	| [$c0bc: ldd    $50]
	asr.b	#1,d0                            	| [$c0be: asra]
	roxr.b	#1,d1                           	| [$c0bf: rorb]
	asr.b	#1,d0                            	| [$c0c0: asra]
	roxr.b	#1,d1                           	| [$c0c1: rorb]
	asr.b	#1,d0                            	| [$c0c2: asra]
	roxr.b	#1,d1                           	| [$c0c3: rorb]
	asr.b	#1,d0                            	| [$c0c4: asra]
	roxr.b	#1,d1                           	| [$c0c5: rorb]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x4a                    	| [$c0c6: std    $4a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x24,d3                	| [$c0c8: lda    $24,y]
	move.b	(a0),d0                         	| [...]
	move.w	#0xf867,d2                      	| [$c0cb: ldx    #$f867]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$c0ce: lda    a,x]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x4e,d0         | [$c0d0: sta    $4e]
	jbsr	l_c139                            	| [$c0d2: jsr    $c139]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x4c                    	| [$c0d5: std    $4c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3375                     	| [$c0d7: lda    $3375]
	move.b	(a0),d0                         	| [...]
	move.l	d0,-(sp)                        	| [$c0da: pshs   a]
	OP_R_ON_DP_ADDRESS	move,0x4d,d1         | [$c0dc: ldb    $4d]
	jbsr	multiply_ab                       	| [$c0de: mul]
	GET_DP_ADDRESS	0x50                    	| [$c0df: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	movem.l	(sp)+,d0                       	| [$c0e1: puls   a]
	MAKE_D                                 	| [...]
	OP_R_ON_DP_ADDRESS	move,0x4c,d1         | [$c0e3: ldb    $4c]
	jbsr	multiply_ab                       	| [$c0e5: mul]
	OP_R_ON_DP_ADDRESS	add,0x50,d1          | [$c0e6: addb   $50]
	OP_W_ON_DP_ADDRESS	move,0x50,d1         | [$c0e8: stb    $50]
	GET_DP_ADDRESS	0x50                    	| [$c0ea: ldd    $50]
	LOAD_D                                 	| [$c0ea: ldd    $50]
	asr.b	#1,d0                            	| [$c0ec: asra]
	roxr.b	#1,d1                           	| [$c0ed: rorb]
	asr.b	#1,d0                            	| [$c0ee: asra]
	roxr.b	#1,d1                           	| [$c0ef: rorb]
	asr.b	#1,d0                            	| [$c0f0: asra]
	roxr.b	#1,d1                           	| [$c0f1: rorb]
	asr.b	#1,d0                            	| [$c0f2: asra]
	roxr.b	#1,d1                           	| [$c0f3: rorb]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x4c                    	| [$c0f4: std    $4c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x337a                     	| [$c0f6: ldd    $337a]
	LOAD_D                                 	| [$c0f6: ldd    $337a]
	asl.b	#1,d1                            	| [$c0f9: aslb]
	roxl.b	#1,d0                           	| [$c0fa: rola]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x50                    	| [$c0fb: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	asr.b	#1,d0                            	| [$c0fd: asra]
	roxr.b	#1,d1                           	| [$c0fe: rorb]
	asr.b	#1,d0                            	| [$c0ff: asra]
	roxr.b	#1,d1                           	| [$c100: rorb]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x50                    	| [$c101: addd   $50]
	ADD_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x50                    	| [$c103: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x4c                    	| [$c105: ldd    $4c]
	LOAD_D                                 	| [$c105: ldd    $4c]
	GET_DP_ADDRESS	0x50                    	| [$c107: subd   $50]
	SUB_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x4c                    	| [$c109: std    $4c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x337a                     	| [$c10b: ldd    $337a]
	LOAD_D                                 	| [$c10b: ldd    $337a]
	add.w	#0x0001,d1                       	| [$c10e: addd   #$0001]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337a                     	| [$c111: std    $337a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0xbc,#1         | [$c114: inc    $bc]
	GET_DP_ADDRESS	0x4c                    	| [$c116: ldd    $4c]
	LOAD_D                                 	| [$c116: ldd    $4c]
	asl.b	#1,d1                            	| [$c118: aslb]
	roxl.b	#1,d0                           	| [$c119: rola]
	asl.b	#1,d1                            	| [$c11a: aslb]
	roxl.b	#1,d0                           	| [$c11b: rola]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337e                     	| [$c11c: addd   $337e]
	ADD_W_TO_REG	a0,d1                          	| [...]
	MAKE_A                                 	| [...]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$c11f: sta    $51]
	moveq	#0,d0                            	| [$c121: clra]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337e                     	| [$c122: std    $337e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x4a                    	| [$c125: ldd    $4a]
	LOAD_D                                 	| [$c125: ldd    $4a]
	asl.b	#1,d1                            	| [$c127: aslb]
	roxl.b	#1,d0                           	| [$c128: rola]
	asl.b	#1,d1                            	| [$c129: aslb]
	roxl.b	#1,d0                           	| [$c12a: rola]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337c                     	| [$c12b: addd   $337c]
	ADD_W_TO_REG	a0,d1                          	| [...]
	MAKE_A                                 	| [...]
	OP_W_ON_DP_ADDRESS	move,0x50,d0         | [$c12e: sta    $50]
	moveq	#0,d0                            	| [$c130: clra]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x337c                     	| [$c131: std    $337c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_DP_ADDRESS	0x50                    	| [$c134: ldd    $50]
	LOAD_D                                 	| [$c134: ldd    $50]
	move.w	d3,d2                           	| [$c136: tfr    y,x]
	rts                                    	| [$c138: rts]

l_c139:
	move.b	#0x00,d0                        	| [$c139: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c139: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x50                    	| [$c13c: std    $50]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$c13e: lda    $49]
	OP_R_ON_DP_ADDRESS	move,0x4e,d1         | [$c140: ldb    $4e]
	jbsr	multiply_ab                       	| [$c142: mul]
	OP_W_ON_DP_ADDRESS	move,0x51,d0         | [$c143: sta    $51]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c145: lda    $48]
	OP_R_ON_DP_ADDRESS	move,0x4e,d1         | [$c147: ldb    $4e]
	jbsr	multiply_ab                       	| [$c149: mul]
	GET_DP_ADDRESS	0x50                    	| [$c14a: addd   $50]
	ADD_W_TO_REG	a0,d1                          	| [...]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	rts                                    	| [$c14c: rts]

l_c14d:
	
	.ifndef	RELEASE
	move.w	#0xf8d5,d2
	.endif
	lea	table_f8d5,a2                  	| [$c14d: ldx   #table_f8d5]
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$c150: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$c152: asla]
	JMP_A_INDEXED	A2                   	| [$c153: jra    [a,x]] [jump_table]

l_c155:
	OP_R_ON_DP_ADDRESS	move,0x01,d0         | [$c155: lda    $01]
	jeq	l_c173                             	| [$c157: beq    $c173]
	move.w	#0x33d0,d2                      	| [$c159: ldx    #$33d0]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$c15c: clr    $48]
	move.b	#0x03,d0                        	| [$c15e: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x49,d0         | [$c160: sta    $49]
l_c162:
	GET_REG_ADDRESS	0,d2                   	| [$c162: lda    ,x]
	move.b	(a0),d0                         	| [...]
	BIT	#0x10,d0                           	| [$c164: bita   #$10]
	jne	l_c176                             	| [$c166: bne    $c176]
	OP_W_ON_DP_ADDRESS	move,0x29,d0         | [$c168: sta    $29]
	addq.w	#0x1,d2                         	| [$c16a: leax   $1,x]
	jbsr	l_52a3                            	| [$c16c: jsr    $52a3]
	OP_R_ON_DP_ADDRESS	move,0x6c,d0         | [$c16f: lda    $6c]
	jne	l_c181                             	| [$c171: bne    $c181]
l_c173:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c173: inc    event_sub_state_28]
	rts                                    	| [$c175: rts]

l_c176:
	addq.w	#0x6,d2                         	| [$c176: leax   $6,x]
	cmp.w	#0x33e8,d2                       	| [$c178: cmpx   #$33e8]
	jeq	l_c173                             	| [$c17b: beq    $c173]
	OP_W_ON_DP_ADDRESS	subq,0x49,#1         | [$c17d: dec    $49]
	jra	l_c162                             	| [$c17f: bra    $c162]
l_c181:
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$c181: inc    $48]
	OP_R_ON_DP_ADDRESS	move,0x49,d1         | [$c183: ldb    $49]
	jeq	l_c173                             	| [$c185: beq    $c173]
	addq.w	#0x5,d2                         	| [$c187: leax   $5,x]
l_c189:
	GET_REG_ADDRESS	0,d2                   	| [$c189: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c198                             	| [$c18b: beq    $c198]
	and.b	#0x10,d0                         	| [$c18d: anda   #$10]
	jne	l_c193                             	| [$c18f: bne    $c193]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$c191: inc    $48]
l_c193:
	addq.w	#0x6,d2                         	| [$c193: leax   $6,x]
	subq.b	#1,d1                           	| [$c195: decb]
	jne	l_c189                             	| [$c196: bne    $c189]
l_c198:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c198: lda    $48]
	cmp.b	#0x02,d0                         	| [$c19a: cmpa   #$02]
	jcs	l_c173                             	| [$c19c: bcs    $c173]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c19e: inc    event_sub_state_2a]
	rts                                    	| [$c1a0: rts]

l_c1a1:
	moveq	#0,d0                            	| [$c1a1: clra]
	jbsr	queue_event_4e9a                  	| [$c1a2: jsr    queue_event_4e9a]
	jbsr	l_afc1                            	| [$c1a5: jsr    $afc1]
	OP_R_ON_DP_ADDRESS	move,0x29,d0         | [$c1a8: lda    $29]
	moveq	#0,d1                            	| [$c1aa: clrb]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$c1ab: tst    $1a]
	jne	l_c1b4                             	| [$c1ad: bne    $c1b4]
	cmp.b	#0x03,d0                         	| [$c1af: cmpa   #$03]
	jcs	l_c1b4                             	| [$c1b1: bcs    $c1b4]
	addq.b	#1,d1                           	| [$c1b3: incb]
l_c1b4:
	GET_ADDRESS	flip_screen_set_1480       	| [$c1b4: stb    flip_screen_set_1480]
	move.b	d1,(a0)                         	| [...]
	move.b	#0x3e,d0                        	| [$c1b7: lda    #$3e]
	jbsr	l_4eb3                            	| [$c1b9: jsr    $4eb3]
	move.b	#0x02,d0                        	| [$c1bc: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$c1be: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c1c0: inc    event_sub_state_2a]
l_c1c2:
	rts                                    	| [$c1c2: rts]

l_c1c3:
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$c1c3: dec    $2b]
	jne	l_c1c2                             	| [$c1c5: bne    $c1c2]
	move.b	#0x01,d0                        	| [$c1c7: ldd    #$010a]
	move.w	#0x010a,d1                      	| [$c1c7: ldd    #$010a]
	jbsr	queue_event_4e9a                  	| [$c1ca: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$c1cd: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$c1cf: ldb    current_event_69]
	add.b	#0x2e,d1                         	| [$c1d1: addb   #$2e]
	jbsr	queue_event_4e9a                  	| [$c1d3: jsr    queue_event_4e9a]
	move.b	#0x01,d0                        	| [$c1d6: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$c1d6: ldd    #$0101]
	jbsr	queue_event_4e9a                  	| [$c1d9: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$c1dc: ldd    #$0212]
	move.w	#0x0212,d1                      	| [$c1dc: ldd    #$0212]
	jbsr	queue_event_4e9a                  	| [$c1df: jsr    queue_event_4e9a]
	move.w	#0x2187,d4                      	| [$c1e2: ldu    #$2187]
	move.b	#0x11,d0                        	| [$c1e5: ldd    #$1107]
	move.w	#0x1107,d1                      	| [$c1e5: ldd    #$1107]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$c1e8: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_7c58                            	| [$c1ea: jsr    $7c58]
	jbsr	l_c2c3                            	| [$c1ed: jsr    $c2c3]
	move.w	#0x240b,d4                      	| [$c1f0: ldu    #$240b]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$c1f3: clr    $48]
l_c1f5:
	GET_REG_ADDRESS	0,d2                   	| [$c1f5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c262                             	| [$c1f7: beq    $c262]
	move.l	d4,-(sp)                        	| [$c1f9: pshs   u]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c1fb: lda    $48]
	move.b	#0x80,d1                        	| [$c1fd: ldb    #$80]
	jbsr	multiply_ab                       	| [$c1ff: mul]
	add.w	d1,d4                            	| [$c200: leau   d,u]
	GET_REG_ADDRESS	0,d2                   	| [$c202: lda    ,x]
	move.b	(a0),d0                         	| [...]
	BIT	#0x10,d0                           	| [$c204: bita   #$10]
	jeq	l_c213                             	| [$c206: beq    $c213]
	movem.l	(sp)+,d4                       	| [$c208: puls   u]
	addq.w	#0x6,d2                         	| [$c20a: leax   $6,x]
	cmp.w	#0x33e8,d2                       	| [$c20c: cmpx   #$33e8]
	jeq	l_c262                             	| [$c20f: beq    $c262]
	jra	l_c1f5                             	| [$c211: bra    $c1f5]
l_c213:
	move.w	#0xcfe5,d3                      	| [$c213: ldy    #$cfe5]
	GET_REG_ADDRESS	0,d2                   	| [$c217: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c219: deca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$c21a: ldb    a,y]
	move.b	(a0),d1                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x75,d1         | [$c21c: stb    $75]
	move.b	#0x01,d0                        	| [$c21e: lda    #$01]
	jbsr	queue_event_4e9a                  	| [$c220: jsr    queue_event_4e9a]
	move.b	#0x02,d0                        	| [$c223: lda    #$02]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$c225: ldb    $48]
	add.b	#0x35,d1                         	| [$c227: addb   #$35]
	jbsr	queue_event_4e9a                  	| [$c229: jsr    queue_event_4e9a]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$c22c: ldb    $75]
	GET_REG_ADDRESS	0,d2                   	| [$c22e: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c230: jsr    $422d]
	move.b	#0x20,d0                        	| [$c233: lda    #$20]
	jbsr	l_422d                            	| [$c235: jsr    $422d]
	addq.w	#0x1,d4                         	| [$c238: leau   $1,u]
	jbsr	l_c27e                            	| [$c23a: bsr    $c27e]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$c23c: ldb    $75]
	GET_REG_ADDRESS	0,d3                   	| [$c23e: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c240: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$c243: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c245: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$c248: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c24a: jsr    $422d]
	addq.w	#0x1,d4                         	| [$c24d: leau   $1,u]
	jbsr	l_5742                            	| [$c24f: jsr    $5742]
	addq.w	#0x1,d2                         	| [$c252: leax   $1,x]
	jbsr	l_43fc                            	| [$c254: jsr    $43fc]
	movem.l	(sp)+,d4                       	| [$c257: puls   u]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$c259: inc    $48]
	addq.w	#0x5,d2                         	| [$c25b: leax   $5,x]
	cmp.w	#0x33e8,d2                       	| [$c25d: cmpx   #$33e8]
	jne	l_c1f5                             	| [$c260: bne    $c1f5]
l_c262:
	move.w	#0x30a0,d2                      	| [$c262: ldx    #$30a0]
	GET_REG_ADDRESS	0,d2                   	| [$c265: clr    ,x]
	clr.b	(a0)                         	| [...]
	move.b	#0x28,d0                        	| [$c267: ldd    #$2880]
	move.w	#0x2880,d1                      	| [$c267: ldd    #$2880]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c26a: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0xda,d0                        	| [$c26c: ldd    #$da4a]
	move.w	#0xda4a,d1                      	| [$c26c: ldd    #$da4a]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$c26f: std    $b,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x34f4                     	| [$c271: clr    $34f4]
	clr.b	(a0)                         	| [...]
	jbsr	l_836d                            	| [$c274: jsr    $836d]
	move.b	#0x90,d0                        	| [$c277: lda    #$90]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$c279: sta    $2b]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c27b: inc    event_sub_state_2a]
	rts                                    	| [$c27d: rts]

l_c27e:
	move.w	#0x3360,d3                      	| [$c27e: ldy    #$3360]
	GET_REG_ADDRESS	0,d2                   	| [$c282: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c284: deca]
	move.b	#0x03,d1                        	| [$c285: ldb    #$03]
	jbsr	multiply_ab                       	| [$c287: mul]
	add.w	d1,d3                            	| [$c288: leay   d,y]
	rts                                    	| [$c28a: rts]

l_c28b:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$c28b: lda    $0f]
	and.b	#0x03,d0                         	| [$c28d: anda   #$03]
	jne	l_c29c                             	| [$c28f: bne    $c29c]
	move.w	#0x2987,d4                      	| [$c291: ldu    #$2987]
	move.b	#0x11,d0                        	| [$c294: ldd    #$1107]
	move.w	#0x1107,d1                      	| [$c294: ldd    #$1107]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x48                    	| [$c297: std    $48]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	jbsr	l_7d1d                            	| [$c299: jsr    $7d1d]
l_c29c:
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$c29c: lda    $0f]
	and.b	#0x04,d0                         	| [$c29e: anda   #$04]
	jeq	l_c2a7                             	| [$c2a0: beq    $c2a7]
	move.b	#0x01,d0                        	| [$c2a2: ldd    #$0100]
	move.w	#0x0100,d1                      	| [$c2a2: ldd    #$0100]
	jra	l_c2aa                             	| [$c2a5: bra    $c2aa]
l_c2a7:
	move.b	#0x01,d0                        	| [$c2a7: ldd    #$0101]
	move.w	#0x0101,d1                      	| [$c2a7: ldd    #$0101]
l_c2aa:
	jbsr	queue_event_4e9a                  	| [$c2aa: jsr    queue_event_4e9a]
	move.w	#0x30a0,d2                      	| [$c2ad: ldx    #$30a0]
	jbsr	l_836d                            	| [$c2b0: jsr    $836d]
	jbsr	l_c2c3                            	| [$c2b3: bsr    $c2c3]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$c2b5: lda    $0f]
	lsr.b	#1,d0                            	| [$c2b7: lsra]
	jcc	l_c2c2                             	| [$c2b8: bcc    $c2c2]
	OP_W_ON_DP_ADDRESS	subq,0x2b,#1         | [$c2ba: dec    $2b]
	jne	l_c2c2                             	| [$c2bc: bne    $c2c2]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c2be: inc    event_sub_state_28]
	OP_1_ON_DP_ADDRESS	clr,event_sub_state_2a| [$c2c0: clr    event_sub_state_2a]
l_c2c2:
	rts                                    	| [$c2c2: rts]

l_c2c3:
	move.w	#0x33d0,d2                      	| [$c2c3: ldx    #$33d0]
l_c2c6:
	GET_REG_ADDRESS	0,d2                   	| [$c2c6: lda    ,x]
	move.b	(a0),d0                         	| [...]
	BIT	#0x10,d0                           	| [$c2c8: bita   #$10]
	jeq	l_c2d0                             	| [$c2ca: beq    $c2d0]
	addq.w	#0x6,d2                         	| [$c2cc: leax   $6,x]
	jra	l_c2c6                             	| [$c2ce: bra    $c2c6]
l_c2d0:
	GET_REG_ADDRESS	0,d2                   	| [$c2d0: lda    ,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c2d2: deca]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$c2d3: sta    $19]
	OP_R_ON_DP_ADDRESS	move,0x0f,d1         | [$c2d5: ldb    $0f]
	and.b	#0x04,d1                         	| [$c2d7: andb   #$04]
	jeq	l_c2de                             	| [$c2d9: beq    $c2de]
	moveq	#0,d1                            	| [$c2db: clrb]
	jra	l_c2e3                             	| [$c2dc: bra    $c2e3]
l_c2de:
	move.w	#0xcfe5,d4                      	| [$c2de: ldu    #$cfe5]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c2e1: ldb    a,u]
	move.b	(a0),d1                         	| [...]
l_c2e3:
	OP_W_ON_DP_ADDRESS	move,0x75,d1         | [$c2e3: stb    $75]
	move.w	#0x22c9,d4                      	| [$c2e5: ldu    #$22c9]
	GET_REG_ADDRESS	0,d2                   	| [$c2e8: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c2ea: jsr    $422d]
	move.b	#0x20,d0                        	| [$c2ed: lda    #$20]
	jbsr	l_422d                            	| [$c2ef: jsr    $422d]
	addq.w	#0x1,d4                         	| [$c2f2: leau   $1,u]
	jbsr	l_c27e                            	| [$c2f4: jsr    $c27e]
	OP_R_ON_DP_ADDRESS	move,0x75,d1         | [$c2f7: ldb    $75]
	GET_REG_ADDRESS	0,d3                   	| [$c2f9: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c2fb: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$c2fe: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c300: jsr    $422d]
	GET_REG_ADDRESS	0,d3                   	| [$c303: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jbsr	l_422d                            	| [$c305: jsr    $422d]
	addq.w	#0x1,d4                         	| [$c308: leau   $1,u]
	jbsr	l_5742                            	| [$c30a: jsr    $5742]
	addq.w	#0x1,d2                         	| [$c30d: leax   $1,x]
	jbsr	l_43fc                            	| [$c30f: jsr    $43fc]
	addq.w	#0x5,d2                         	| [$c312: leax   $5,x]
	rts                                    	| [$c314: rts]

l_c315:
	OP_W_ON_DP_ADDRESS	subq,0x29,#1         | [$c315: dec    $29]
	jne	l_c326                             	| [$c317: bne    $c326]
	GET_ADDRESS	0x34f0                     	| [$c319: clr    $34f0]
	clr.b	(a0)                         	| [...]
	
	.ifndef	RELEASE
	move.w	#0xf8dd,d4
	.endif
	lea	table_f8dd,a4                  	| [$c31c: ldu   #table_f8dd]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$c31f: lda    current_event_69]
	asl.b	#1,d0                            	| [$c321: asla]
	JSR_A_INDEXED	A4                   	| [$c322: jsr    [a,u]] [jump_table]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c324: inc    event_sub_state_28]
l_c326:
	rts                                    	| [$c326: rts]

l_c327:
	OP_R_ON_DP_ADDRESS	move,0xcb,d0         | [$c327: lda    $cb]
	jne	l_c32c                             	| [$c329: bne    $c32c]
l_c32b:
	rts                                    	| [$c32b: rts]

l_c32c:
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$c32c: lda    $6a]
	cmp.b	#0x02,d0                         	| [$c32e: cmpa   #$02]
	jne	l_c32b                             	| [$c330: bne    $c32b]
	jbsr	l_5244                            	| [$c332: jsr    $5244]
l_c335:
	move.w	#0x3380,d2                      	| [$c335: ldx    #$3380]
	OP_R_ON_DP_ADDRESS	move,0x6a,d0         | [$c338: lda    $6a]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d1| [$c33a: ldb    current_event_69]
	cmp.b	#0x02,d1                         	| [$c33c: cmpb   #$02]
	jne	l_c342                             	| [$c33e: bne    $c342]
	OP_R_ON_DP_ADDRESS	move,0x6f,d0         | [$c340: lda    $6f]
l_c342:
	move.b	#0x05,d1                        	| [$c342: ldb    #$05]
	jbsr	multiply_ab                       	| [$c344: mul]
	add.w	d1,d2                            	| [$c345: leax   d,x]
	OP_R_ON_DP_ADDRESS	move,swimmer_19,d0         | [$c347: lda    $19]
	move.b	#0x0f,d1                        	| [$c349: ldb    #$0f]
	jbsr	multiply_ab                       	| [$c34b: mul]
	add.w	d1,d2                            	| [$c34c: leax   d,x]
	GET_REG_ADDRESS	0,d2                   	| [$c34e: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x16,d0                         	| [$c350: cmpa   #$16]
	jeq	l_c369                             	| [$c352: beq    $c369]
	
	.ifndef	RELEASE
	move.w	#0xf8eb,d4
	.endif
	lea	table_f8eb,a4                  	| [$c354: ldu   #table_f8eb]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$c357: lda    current_event_69]
	asl.b	#1,d0                            	| [$c359: asla]
	JMP_A_INDEXED	A4                   	| [$c35a: jra    [a,u]] [jump_table]
l_c35c:
	move.b	#0xa2,d0                        	| [$c35c: lda    #$a2]
	jbsr	l_4eb3                            	| [$c35e: jsr    $4eb3]
	move.b	#0x84,d0                        	| [$c361: lda    #$84]
	jbsr	l_4eb3                            	| [$c363: jsr    $4eb3]
	jra	l_c465                             	| [$c366: jra    $c465]
l_c369:
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$c369: lda    current_event_69]
	cmp.b	#0x02,d0                         	| [$c36b: cmpa   #$02]
	jeq	l_c37e                             	| [$c36d: beq    $c37e]
	move.b	#0x82,d0                        	| [$c36f: lda    #$82]
	jbsr	l_4eb3                            	| [$c371: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$c374: lda    #$ff]
	jbsr	l_4eb3                            	| [$c376: jsr    $4eb3]
	move.b	#0x01,d0                        	| [$c379: lda    #$01]
	GET_ADDRESS	0x34f0                     	| [$c37b: sta    $34f0]
	move.b	d0,(a0)                         	| [...]
l_c37e:
	rts                                    	| [$c37e: rts]

l_c37f:
	GET_REG_ADDRESS	0x1,d2                 	| [$c37f: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x90,d0                         	| [$c381: adda   #$90]
	jbsr	l_4eb3                            	| [$c383: jsr    $4eb3]
	move.b	#0xae,d0                        	| [$c386: lda    #$ae]
	jbsr	l_4eb3                            	| [$c388: jsr    $4eb3]
	addq.w	#0x1,d2                         	| [$c38b: leax   $1,x]
	jbsr	l_c49f                            	| [$c38d: jsr    $c49f]
	move.b	#0x83,d0                        	| [$c390: lda    #$83]
	jbsr	l_4eb3                            	| [$c392: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$c395: lda    #$ff]
	jra	l_4eb3                             	| [$c397: jra    $4eb3]
l_c39a:
	move.w	#0x33d1,d2                      	| [$c39a: ldx    #$33d1]
l_c39d:
	GET_REG_ADDRESS	-0x1,d2                	| [$c39d: lda    -$1,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c3b7                             	| [$c39f: beq    $c3b7]
	BIT	#0x10,d0                           	| [$c3a1: bita   #$10]
	jne	l_c3b7                             	| [$c3a3: bne    $c3b7]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$c3a5: tst    $1a]
	jeq	l_c3bb                             	| [$c3a7: beq    $c3bb]
	OP_R_ON_DP_ADDRESS	move,0x1b,d1         | [$c3a9: ldb    $1b]
	jne	l_c3b3                             	| [$c3ab: bne    $c3b3]
	cmp.b	#0x03,d0                         	| [$c3ad: cmpa   #$03]
	jcs	l_c3bb                             	| [$c3af: bcs    $c3bb]
	jra	l_c3b7                             	| [$c3b1: bra    $c3b7]
l_c3b3:
	cmp.b	#0x03,d0                         	| [$c3b3: cmpa   #$03]
	jcc	l_c3bb                             	| [$c3b5: bcc    $c3bb]
l_c3b7:
	addq.w	#0x6,d2                         	| [$c3b7: leax   $6,x]
	jra	l_c39d                             	| [$c3b9: bra    $c39d]
l_c3bb:
	move.b	#0xa2,d0                        	| [$c3bb: lda    #$a2]
	jbsr	l_4eb3                            	| [$c3bd: jsr    $4eb3]
	move.b	#0x87,d0                        	| [$c3c0: lda    #$87]
	jbsr	l_4eb3                            	| [$c3c2: jsr    $4eb3]
	GET_REG_ADDRESS	0,d2                   	| [$c3c5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c3ce                             	| [$c3c7: beq    $c3ce]
	add.b	#0x90,d0                         	| [$c3c9: adda   #$90]
	jbsr	l_4eb3                            	| [$c3cb: jsr    $4eb3]
l_c3ce:
	jbsr	l_c49f                            	| [$c3ce: jsr    $c49f]
	move.b	#0x85,d0                        	| [$c3d1: lda    #$85]
	jbsr	l_4eb3                            	| [$c3d3: jsr    $4eb3]
	addq.w	#0x2,d2                         	| [$c3d6: leax   $2,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$c3d8: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$c3da: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c3dc: mul]
	GET_REG_ADDRESS	0x2,d2                 	| [$c3dd: addb   $2,x]
	add.b	(a0),d1                          	| [...]
	cmp.b	#0x0a,d1                         	| [$c3df: cmpb   #$0a]
	jcs	l_c403                             	| [$c3e1: bcs    $c403]
	cmp.b	#0x14,d1                         	| [$c3e3: cmpb   #$14]
	jcs	l_c409                             	| [$c3e5: bcs    $c409]
	GET_REG_ADDRESS	0x2,d2                 	| [$c3e7: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c3fd                             	| [$c3e9: beq    $c3fd]
	move.w	#0xffe6,d4                      	| [$c3eb: ldu    #$ffe6]
	GET_REG_ADDRESS	0x1,d2                 	| [$c3ee: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x02,d0                         	| [$c3f0: suba   #$02]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c3f2: lda    a,u]
	move.b	(a0),d0                         	| [...]
	jbsr	l_4eb3                            	| [$c3f4: jsr    $4eb3]
	GET_REG_ADDRESS	0x2,d2                 	| [$c3f7: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0xb5,d0                         	| [$c3f9: adda   #$b5]
	jra	l_c410                             	| [$c3fb: bra    $c410]
l_c3fd:
	GET_REG_ADDRESS	0x1,d2                 	| [$c3fd: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0xd0,d0                         	| [$c3ff: adda   #$d0]
	jra	l_c410                             	| [$c401: bra    $c410]
l_c403:
	GET_REG_ADDRESS	0x2,d2                 	| [$c403: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0xb5,d0                         	| [$c405: adda   #$b5]
	jra	l_c410                             	| [$c407: bra    $c410]
l_c409:
	move.w	#0xf8f9,d4                      	| [$c409: ldu    #$f8f9]
	sub.b	#0x0a,d1                         	| [$c40c: subb   #$0a]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c40e: lda    b,u]
	move.b	(a0),d0                         	| [...]
l_c410:
	jbsr	l_4eb3                            	| [$c410: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$c413: lda    #$ff]
	jra	l_4eb3                             	| [$c415: jra    $4eb3]
l_c418:
	subq.w	#0x1,d2                         	| [$c418: leax   -$1,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$c41a: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c44f                             	| [$c41c: beq    $c44f]
	move.b	#0x0a,d1                        	| [$c41e: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c420: mul]
	GET_REG_ADDRESS	0x2,d2                 	| [$c421: addb   $2,x]
	add.b	(a0),d1                          	| [...]
	jeq	l_c42d                             	| [$c423: beq    $c42d]
	jbsr	l_c4a6                            	| [$c425: jsr    $c4a6]
	move.b	#0x8a,d0                        	| [$c428: lda    #$8a]
	jbsr	l_4eb3                            	| [$c42a: jsr    $4eb3]
l_c42d:
	addq.w	#0x3,d2                         	| [$c42d: leax   $3,x]
	GET_REG_ADDRESS	0,d2                   	| [$c42f: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c443                             	| [$c431: beq    $c443]
	add.b	#0x90,d0                         	| [$c433: adda   #$90]
	cmp.b	#0x96,d0                         	| [$c435: cmpa   #$96]
	jne	l_c43b                             	| [$c437: bne    $c43b]
	move.b	#0xa0,d0                        	| [$c439: lda    #$a0]
l_c43b:
	jbsr	l_4eb3                            	| [$c43b: jsr    $4eb3]
	move.b	#0xae,d0                        	| [$c43e: lda    #$ae]
	jbsr	l_4eb3                            	| [$c440: jsr    $4eb3]
l_c443:
	jbsr	l_c49f                            	| [$c443: bsr    $c49f]
	move.b	#0xb2,d0                        	| [$c445: lda    #$b2]
	jbsr	l_4eb3                            	| [$c447: jsr    $4eb3]
	move.b	#0xff,d0                        	| [$c44a: lda    #$ff]
	jra	l_4eb3                             	| [$c44c: jra    $4eb3]
l_c44f:
	addq.w	#0x1,d2                         	| [$c44f: leax   $1,x]
	GET_REG_ADDRESS	0x1,d2                 	| [$c451: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$c453: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c455: mul]
	GET_REG_ADDRESS	0x2,d2                 	| [$c456: addb   $2,x]
	add.b	(a0),d1                          	| [...]
	jeq	l_c461                             	| [$c458: beq    $c461]
	jbsr	l_c4a6                            	| [$c45a: bsr    $c4a6]
	move.b	#0xae,d0                        	| [$c45c: lda    #$ae]
	jbsr	l_4eb3                            	| [$c45e: jsr    $4eb3]
l_c461:
	addq.w	#0x2,d2                         	| [$c461: leax   $2,x]
	jra	l_c443                             	| [$c463: bra    $c443]
l_c465:
	jbsr	l_c49f                            	| [$c465: bsr    $c49f]
	move.b	#0x85,d0                        	| [$c467: lda    #$85]
	jbsr	l_4eb3                            	| [$c469: jsr    $4eb3]
	GET_REG_ADDRESS	0x3,d2                 	| [$c46c: lda    $3,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x90,d0                         	| [$c46e: adda   #$90]
	cmp.b	#0x96,d0                         	| [$c470: cmpa   #$96]
	jne	l_c476                             	| [$c472: bne    $c476]
	move.b	#0xa0,d0                        	| [$c474: lda    #$a0]
l_c476:
	jbsr	l_4eb3                            	| [$c476: jsr    $4eb3]
	OP_R_ON_DP_ADDRESS	move,current_event_69,d0| [$c479: lda    current_event_69]
	cmp.b	#0x06,d0                         	| [$c47b: cmpa   #$06]
	jeq	l_c496                             	| [$c47d: beq    $c496]
	GET_REG_ADDRESS	0x4,d2                 	| [$c47f: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0x90,d0                         	| [$c481: adda   #$90]
	cmp.b	#0x96,d0                         	| [$c483: cmpa   #$96]
	jne	l_c489                             	| [$c485: bne    $c489]
	move.b	#0xa0,d0                        	| [$c487: lda    #$a0]
l_c489:
	jbsr	l_4eb3                            	| [$c489: jsr    $4eb3]
	move.b	#0x86,d0                        	| [$c48c: lda    #$86]
	jbsr	l_4eb3                            	| [$c48e: jsr    $4eb3]
l_c491:
	move.b	#0xff,d0                        	| [$c491: lda    #$ff]
	jra	l_4eb3                             	| [$c493: jra    $4eb3]
l_c496:
	GET_REG_ADDRESS	0x4,d2                 	| [$c496: lda    $4,x]
	move.b	(a0),d0                         	| [...]
	add.b	#0xb5,d0                         	| [$c498: adda   #$b5]
	jbsr	l_4eb3                            	| [$c49a: jsr    $4eb3]
	jra	l_c491                             	| [$c49d: bra    $c491]
l_c49f:
	GET_REG_ADDRESS	0x1,d2                 	| [$c49f: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	move.b	#0x0a,d1                        	| [$c4a1: ldb    #$0a]
	jbsr	multiply_ab                       	| [$c4a3: mul]
	GET_REG_ADDRESS	0x2,d2                 	| [$c4a4: addb   $2,x]
	add.b	(a0),d1                          	| [...]
l_c4a6:
	cmp.b	#0x0e,d1                         	| [$c4a6: cmpb   #$0e]
	jcs	l_c4c4                             	| [$c4a8: bcs    $c4c4]
	cmp.b	#0x14,d1                         	| [$c4aa: cmpb   #$14]
	jcs	l_c4ca                             	| [$c4ac: bcs    $c4ca]
	move.w	#0xffe6,d4                      	| [$c4ae: ldu    #$ffe6]
	GET_REG_ADDRESS	0x1,d2                 	| [$c4b1: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x02,d0                         	| [$c4b3: suba   #$02]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c4b5: lda    a,u]
	move.b	(a0),d0                         	| [...]
	jbsr	l_4eb3                            	| [$c4b7: jsr    $4eb3]
	GET_REG_ADDRESS	0x2,d2                 	| [$c4ba: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c4c3                             	| [$c4bc: beq    $c4c3]
	add.b	#0x90,d0                         	| [$c4be: adda   #$90]
l_c4c0:
	jbsr	l_4eb3                            	| [$c4c0: jsr    $4eb3]
l_c4c3:
	rts                                    	| [$c4c3: rts]

l_c4c4:
	add.b	#0x90,d1                         	| [$c4c4: addb   #$90]
	move.b	d1,d0                           	| [$c4c6: tfr    b,a]
	jra	l_c4c0                             	| [$c4c8: bra    $c4c0]
l_c4ca:
	move.w	#0xffe0,d4                      	| [$c4ca: ldu    #$ffe0]
	sub.b	#0x0e,d1                         	| [$c4cd: subb   #$0e]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c4cf: lda    b,u]
	move.b	(a0),d0                         	| [...]
	jra	l_c4c0                             	| [$c4d1: bra    $c4c0]
l_c4d3:
	OP_R_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$c4d3: lda    event_sub_state_2a]
	asl.b	#1,d0                            	| [$c4d5: asla]
	
	.ifndef	RELEASE
	move.w	#0xf903,d4
	.endif
	lea	table_f903,a4                  	| [$c4d6: ldu   #table_f903]
	JMP_A_INDEXED	A4                   	| [$c4d9: jra    [a,u]] [jump_table]
l_c4db:
	move.b	#0x00,d0                        	| [$c4db: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c4db: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c4de: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2e                    	| [$c4e0: std    $2e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d1| [$c4e2: ldb    current_level_68]
	cmp.b	#0x02,d1                         	| [$c4e4: cmpb   #$02]
	jeq	l_c4f6                             	| [$c4e6: beq    $c4f6]
	moveq	#0,d0                            	| [$c4e8: clra]
	MAKE_D                                 	| [...]
	add.w	#0x0001,d1                       	| [$c4e9: addd   #$0001]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
l_c4ec:
	MAKE_D                                 	| [...]
	sub.w	#0x0007,d1                       	| [$c4ec: subd   #$0007]
	PUSH_SR                                	| [...]
	MAKE_A                                 	| [...]
	POP_SR                                 	| [...]
	jeq	l_c4f6                             	| [$c4ef: beq    $c4f6]
	jcc	l_c4ec                             	| [$c4f1: bcc    $c4ec]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c4f3: inc    event_sub_state_28]
	rts                                    	| [$c4f5: rts]

l_c4f6:
	move.w	#0x3500,d2                      	| [$c4f6: ldx    #$3500]
	move.b	#0x04,d1                        	| [$c4f9: ldb    #$04]
l_c4fb:
	GET_REG_ADDRESS	0,d2                   	| [$c4fb: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jne	l_c50d                             	| [$c4fd: bne    $c50d]
	add.w	#0x20,d2                         	| [$c4ff: leax   $20,x]
	subq.b	#1,d1                           	| [$c502: decb]
	jne	l_c4fb                             	| [$c503: bne    $c4fb]
	move.b	#0x00,d0                        	| [$c505: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c505: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$c508: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c50a: inc    event_sub_state_28]
	rts                                    	| [$c50c: rts]

l_c50d:
	jbsr	l_cbad                            	| [$c50d: jsr    $cbad]
	OP_R_ON_DP_ADDRESS	move,0x4a,d1         | [$c510: ldb    $4a]
	GET_ADDRESS	0x3420                     	| [$c512: stb    $3420]
	move.b	d1,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c515: inc    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0x2b             | [$c517: clr    $2b]
	jbsr	l_afaf                            	| [$c519: jsr    $afaf]
	jbsr	l_cb9d                            	| [$c51c: jsr    $cb9d]
	GET_ADDRESS	0x3427                     	| [$c51f: clr    $3427]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3428                     	| [$c522: clr    $3428]
	clr.b	(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$c525: lda    #$01]
	GET_ADDRESS	0x342a                     	| [$c527: sta    $342a]
	move.b	d0,(a0)                         	| [...]
	jra	l_c52d                             	| [$c52a: jra    $c52d]
l_c52d:
	move.w	#0x3500,d2                      	| [$c52d: ldx    #$3500]
	move.b	#0x04,d1                        	| [$c530: ldb    #$04]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$c532: clr    $48]
l_c534:
	GET_REG_ADDRESS	0,d2                   	| [$c534: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c53a                             	| [$c536: beq    $c53a]
	OP_W_ON_DP_ADDRESS	addq,0x48,#1         | [$c538: inc    $48]
l_c53a:
	add.w	#0x20,d2                         	| [$c53a: leax   $20,x]
	subq.b	#1,d1                           	| [$c53d: decb]
	jne	l_c534                             	| [$c53e: bne    $c534]
	move.w	#0xf961,d4                      	| [$c540: ldu    #$f961]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c543: lda    $48]
	jne	l_c54f                             	| [$c545: bne    $c54f]
	move.b	#0x00,d0                        	| [$c547: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c547: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$c54a: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c54c: inc    event_sub_state_28]
	rts                                    	| [$c54e: rts]

l_c54f:
	subq.b	#1,d0                           	| [$c54f: deca]
	asl.b	#1,d0                            	| [$c550: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c551: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	moveq	#0,d0                            	| [$c553: clra]
	OP_R_ON_DP_ADDRESS	move,current_level_68,d1| [$c554: ldb    current_level_68]
	cmp.b	#0x02,d1                         	| [$c556: cmpb   #$02]
	jeq	l_c56b                             	| [$c558: beq    $c56b]
	move.b	#0x04,d0                        	| [$c55a: lda    #$04]
	OP_R_ON_DP_ADDRESS	move,dsw2_copy_0d,d1 | [$c55c: ldb    dsw2_copy_0d]
	and.b	#0x01,d1                         	| [$c55e: andb   #$01]
	jeq	l_c56b                             	| [$c560: beq    $c56b]
	move.w	#0xf925,d2                      	| [$c562: ldx    #$f925]
l_c565:
	GET_REG_ADDRESS	0,d2                   	| [$c565: ldd    ,x++]
	addq.w	#2,d2                           	| [...]
	LOAD_D                                 	| [$c565: ldd    ,x++]
	OP_R_ON_DP_ADDRESS	cmp,current_level_68,d1| [$c567: cmpb   current_level_68]
	jcs	l_c565                             	| [$c569: bcs    $c565]
l_c56b:
	GET_ADDRESS	0x3430                     	| [$c56b: sta    $3430]
	move.b	d0,(a0)                         	| [...]
	asl.b	#1,d0                            	| [$c56e: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c56f: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.b	#0x02,d1                        	| [$c571: ldb    #$02]
l_c573:
	GET_REG_ADDRESS	0,d4                   	| [$c573: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	movem.l	d1/d4,-(sp)                    	| [$c575: pshs   u,b]
	jbsr	l_4eb3                            	| [$c577: jsr    $4eb3]
	movem.l	(sp)+,d1/d4                    	| [$c57a: puls   b,u]
	subq.b	#1,d1                           	| [$c57c: decb]
	jne	l_c573                             	| [$c57d: bne    $c573]
	GET_REG_ADDRESS	0,d4                   	| [$c57f: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$c57f: ldd    ,u++]
	GET_ADDRESS	0x342b                     	| [$c581: std    $342b]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$c584: ldd    ,u++]
	addq.w	#2,d4                           	| [...]
	LOAD_D                                 	| [$c584: ldd    ,u++]
	GET_ADDRESS	0x342d                     	| [$c586: std    $342d]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$c589: rts]

l_c58a:
	
	.ifndef	RELEASE
	move.w	#0xf90d,d4
	.endif
	lea	table_f90d,a4                  	| [$c58a: ldu   #table_f90d]
	OP_R_ON_DP_ADDRESS	move,0x2b,d0         | [$c58d: lda    $2b]
	and.b	#0x03,d0                         	| [$c58f: anda   #$03]
	asl.b	#1,d0                            	| [$c591: asla]
	OP_W_ON_DP_ADDRESS	addq,0x2b,#1         | [$c592: inc    $2b]
	JMP_A_INDEXED	A4                   	| [$c594: jra    [a,u]] [jump_table]
l_c596:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c596: inc    event_sub_state_2a]
	OP_1_ON_DP_ADDRESS	clr,0x2b             | [$c598: clr    $2b]
	move.w	#0xfb77,d2                      	| [$c59a: ldx    #$fb77]
	jbsr	l_cc31                            	| [$c59d: jsr    $cc31]
	move.b	#0x03,d0                        	| [$c5a0: lda    #$03]
	jbsr	l_cc4b                            	| [$c5a2: jsr    $cc4b]
	jra	l_bbab                             	| [$c5a5: jra    $bbab]
l_c5a8:
	move.w	#0x3400,d2                      	| [$c5a8: ldx    #$3400]
	GET_ADDRESS	0x3420                     	| [$c5ab: ldb    $3420]
	move.b	(a0),d1                         	| [...]
	asl.b	#1,d1                            	| [$c5ae: aslb]
	GET_ADDRESS	0x3420                     	| [$c5af: addb   $3420]
	add.b	(a0),d1                          	| [...]
	asl.b	#1,d1                            	| [$c5b2: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d2                            	| [$c5b3: leax   b,x]
	GET_REG_ADDRESS	0,d2                   	| [$c5b5: lda    ,x]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3423                     	| [$c5b7: sta    $3423]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	tst,screen_straight_1a             | [$c5ba: tst    $1a]
	jne	l_c5c4                             	| [$c5bc: bne    $c5c4]
	lsr.b	#1,d0                            	| [$c5be: lsra]
	GET_ADDRESS	flip_screen_set_1480       	| [$c5bf: sta    flip_screen_set_1480]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x02,d0         | [$c5c2: sta    $02]
l_c5c4:
	move.l	d2,-(sp)                        	| [$c5c4: pshs   x]
	move.b	#0x03,d0                        	| [$c5c6: lda    #$03]
	jbsr	l_cc4b                            	| [$c5c8: jsr    $cc4b]
	jbsr	l_bbab                            	| [$c5cb: jsr    $bbab]
	movem.l	(sp)+,d2                       	| [$c5ce: puls   x]
	GET_REG_ADDRESS	0x1,d2                 	| [$c5d0: ldu    $1,x]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_ADDRESS	0x3421                     	| [$c5d2: stu    $3421]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.w	#0xf91f,d2                      	| [$c5d5: ldx    #$f91f]
	GET_ADDRESS	0x3420                     	| [$c5d8: lda    $3420]
	move.b	(a0),d0                         	| [...]
	asl.b	#1,d0                            	| [$c5db: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$c5dc: ldd    a,x]
	LOAD_D                                 	| [$c5dc: ldd    a,x]
	GET_REG_ADDRESS	0x1,d4                 	| [$c5de: std    $1,u]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$c5e0: clra]
	GET_ADDRESS	0x3420                     	| [$c5e1: ldb    $3420]
	move.b	(a0),d1                         	| [...]
	jne	l_c5f5                             	| [$c5e4: bne    $c5f5]
	GET_ADDRESS	0x3430                     	| [$c5e6: lda    $3430]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,0x2c,d0         | [$c5e9: sta    $2c]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c5eb: inc    event_sub_state_2a]
	
	.ifndef	RELEASE
	move.w	#0xf915,d4
	.endif
	lea	table_f915,a4                  	| [$c5ed: ldu   #table_f915]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c5f0: lda    $2c]
	asl.b	#1,d0                            	| [$c5f2: asla]
	JMP_A_INDEXED	A4                   	| [$c5f3: jra    [a,u]] [jump_table]
l_c5f5:
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c5f5: inc    event_sub_state_2a]
	OP_W_ON_DP_ADDRESS	move,0x2c,d0         | [$c5f7: sta    $2c]
	jra	l_c6e8                             	| [$c5f9: jra    $c6e8]
l_c5fc:
	jbsr	l_c617                            	| [$c5fc: jsr    $c617]
	jbsr	l_57b0                            	| [$c5ff: jsr    $57b0]
	jbsr	l_ccc1                            	| [$c602: jsr    $ccc1]
	GET_ADDRESS	0x3420                     	| [$c605: lda    $3420]
	move.b	(a0),d0                         	| [...]
	jne	l_c730                             	| [$c608: lbne   $c730]
	
	.ifndef	RELEASE
	move.w	#0xf931,d4
	.endif
	lea	table_f931,a4                  	| [$c60c: ldu   #table_f931]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c60f: lda    $2c]
	asl.b	#1,d0                            	| [$c611: asla]
	JSR_A_INDEXED	A4                   	| [$c612: jsr    [a,u]] [jump_table]
	jra	l_bbab                             	| [$c614: jra    $bbab]
l_c617:
	GET_ADDRESS	0x342a                     	| [$c617: lda    $342a]
	move.b	(a0),d0                         	| [...]
	jne	l_c61d                             	| [$c61a: bne    $c61d]
	rts                                    	| [$c61c: rts]

l_c61d:
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$c61d: clr    $48]
	move.w	#0x30a0,d2                      	| [$c61f: ldx    #$30a0]
l_c622:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c622: lda    $48]
                                         | [$c624: asla]
                                         | [$c625: asla]
                                         | [$c626: asla]
                                         | [$c627: asla]
	asl.b	#5,d0                            	| [$c628: asla]
	move.w	#0x3500,d4                      	| [$c629: ldu    #$3500]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c62c: lda    a,u]
	move.b	(a0),d0                         	| [...]
	jne	l_c65f                             	| [$c62e: bne    $c65f]
	move.w	#0xf9d5,d4                      	| [$c630: ldu    #$f9d5]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c633: lda    $48]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$c635: sta    $19]
	asl.b	#1,d0                            	| [$c637: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c638: ldy    a,u]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c63b: sty    $1,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0xf9dd,d4                      	| [$c63e: ldu    #$f9dd]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c641: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.w	#0xfa87,d3                      	| [$c643: ldy    #$fa87]
	GET_ADDRESS	0x3428                     	| [$c647: lda    $3428]
	move.b	(a0),d0                         	| [...]
	and.b	#0x1f,d0                         	| [$c64a: anda   #$1f]
	cmp.b	#0x0f,d0                         	| [$c64c: cmpa   #$0f]
	jcc	l_c654                             	| [$c64e: bcc    $c654]
	move.w	#0xfa91,d3                      	| [$c650: ldy    #$fa91]
l_c654:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c654: lda    $48]
	and.b	#0x01,d0                         	| [$c656: anda   #$01]
	jne	l_c65c                             	| [$c658: bne    $c65c]
	addq.w	#0x5,d3                         	| [$c65a: leay   $5,y]
l_c65c:
	jbsr	l_cc07                            	| [$c65c: jsr    $cc07]
l_c65f:
	add.w	#0x60,d2                         	| [$c65f: leax   $60,x]
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$c662: lda    $48]
	OP_R_ON_DP_ADDRESS	cmp,0x01,d0          | [$c664: cmpa   $01]
	jeq	l_c66d                             	| [$c666: beq    $c66d]
	addq.b	#1,d0                           	| [$c668: inca]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$c669: sta    $48]
	jra	l_c622                             	| [$c66b: bra    $c622]
l_c66d:
	GET_ADDRESS	0x3428                     	| [$c66d: inc    $3428]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_cac4                            	| [$c670: jsr    $cac4]
	move.w	#0x30a0,d2                      	| [$c673: ldx    #$30a0]
	GET_ADDRESS	0x342f                     	| [$c676: clr    $342f]
	clr.b	(a0)                         	| [...]
l_c679:
	GET_REG_ADDRESS	0,d2                   	| [$c679: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_c67f                             	| [$c67b: beq    $c67f]
	jbsr	l_c68e                            	| [$c67d: bsr    $c68e]
l_c67f:
	add.w	#0x60,d2                         	| [$c67f: leax   $60,x]
	GET_ADDRESS	0x342f                     	| [$c682: lda    $342f]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$c685: inca]
                                         | [$c686: sta    $342f]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x04,d0                         	| [$c689: cmpa   #$04]
	jne	l_c679                             	| [$c68b: bne    $c679]
	rts                                    	| [$c68d: rts]

l_c68e:
	GET_REG_ADDRESS	0x5,d2                 	| [$c68e: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jpl	l_c6c3                             	| [$c690: bpl    $c6c3]
	GET_REG_ADDRESS	0xd,d2                 	| [$c692: ldy    $d,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$c695: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$c697: cmpa   #$ff]
	jne	l_c6a4                             	| [$c699: bne    $c6a4]
	GET_REG_ADDRESS	0,d3                   	| [$c69b: ldu    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$c69d: stu    $b,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$c69f: ldy    ,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$c6a2: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
l_c6a4:
	GET_REG_ADDRESS	0x5,d2                 	| [$c6a4: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$c6a6: sty    $d,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$c6a9: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_ADDRESS	0x342f                     	| [$c6ac: lda    $342f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$c6af: sta    $19]
	move.w	#0xf9dd,d4                      	| [$c6b1: ldu    #$f9dd]
	asl.b	#1,d0                            	| [$c6b4: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c6b5: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	jbsr	l_87b4                            	| [$c6b7: jsr    $87b4]
	GET_REG_ADDRESS	0xb,d2                 	| [$c6ba: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	addq.w	#0x5,d3                         	| [$c6bd: leay   $5,y]
	GET_REG_ADDRESS	0xb,d2                 	| [$c6bf: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	rts                                    	| [$c6c2: rts]

l_c6c3:
	GET_REG_ADDRESS	0xb,d2                 	| [$c6c3: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	subq.w	#0x5,d3                         	| [$c6c6: leay   -$5,y]
	GET_ADDRESS	0x342f                     	| [$c6c8: lda    $342f]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$c6cb: sta    $19]
	move.w	#0xf9dd,d4                      	| [$c6cd: ldu    #$f9dd]
	asl.b	#1,d0                            	| [$c6d0: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c6d1: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	jra	l_87b4                             	| [$c6d3: jra    $87b4]
l_c6d6:
	GET_ADDRESS	0x342e                     	| [$c6d6: lda    $342e]
	move.b	(a0),d0                         	| [...]
	jeq	l_c6e0                             	| [$c6d9: beq    $c6e0]
	subq.b	#1,d0                           	| [$c6db: deca]
	GET_ADDRESS	0x342e                     	| [$c6dc: sta    $342e]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$c6df: rts]

l_c6e0:
	move.b	#0x00,d0                        	| [$c6e0: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c6e0: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$c6e3: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_28,#1| [$c6e5: inc    event_sub_state_28]
	rts                                    	| [$c6e7: rts]

l_c6e8:
	GET_ADDRESS	0x3420                     	| [$c6e8: lda    $3420]
	move.b	(a0),d0                         	| [...]
	jbsr	l_cc4b                            	| [$c6eb: jsr    $cc4b]
	jbsr	l_bbab                            	| [$c6ee: jsr    $bbab]
	GET_ADDRESS	0x342b                     	| [$c6f1: lda    $342b]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$c6f4: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3421                     	| [$c6f7: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0xf9ed,d3                      	| [$c6fa: ldy    #$f9ed]
	jbsr	l_cb47                            	| [$c6fe: jsr    $cb47]
	move.w	#0xf9f2,d3                      	| [$c701: ldy    #$f9f2]
	GET_REG_ADDRESS	0xb,d2                 	| [$c705: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0xf9f7,d4                      	| [$c708: ldu    #$f9f7]
	GET_REG_ADDRESS	0,d4                   	| [$c70b: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$c70d: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$c70f: stu    $d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$c711: rts]

l_c712:
	GET_ADDRESS	0x3420                     	| [$c712: lda    $3420]
	move.b	(a0),d0                         	| [...]
	jbsr	l_cc4b                            	| [$c715: jsr    $cc4b]
	GET_ADDRESS	0x342c                     	| [$c718: lda    $342c]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$c71b: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c71e: clr    $3426]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3421                     	| [$c721: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$c724: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	sub.b	#0x08,d0                         	| [$c726: suba   #$08]
	GET_REG_ADDRESS	0x2,d2                 	| [$c728: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c72a: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$c72c: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$c72e: rts]

l_c72f:
	rts                                    	| [$c72f: rts]

l_c730:
	jbsr	l_bbab                            	| [$c730: jsr    $bbab]
	OP_R_ON_DP_ADDRESS	move,0x0f,d0         | [$c733: lda    $0f]
	and.b	#0x03,d0                         	| [$c735: anda   #$03]
	jne	l_c73e                             	| [$c737: bne    $c73e]
	GET_ADDRESS	0x3424                     	| [$c739: dec    $3424]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_c744                             	| [$c73c: beq    $c744]
l_c73e:
	GET_ADDRESS	0x3421                     	| [$c73e: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	jra	l_cb55                             	| [$c741: jra    $cb55]
l_c744:
	GET_INDIRECT_ADDRESS	0x3421            	| [$c744: inc    [$3421]]
	addq.b	#1,(a0)                         	| [...]
	move.b	#0x00,d0                        	| [$c748: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c748: ldd    #$0000]
	GET_ADDRESS	0x3420                     	| [$c74b: dec    $3420]
	subq.b	#1,(a0)                         	| [...]
	jmi	l_c758                             	| [$c74e: bmi    $c758]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c750: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x02,d0                        	| [$c752: ldd    #$0200]
	move.w	#0x0200,d1                      	| [$c752: ldd    #$0200]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$c755: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$c757: rts]

l_c758:
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c758: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c75a: inc    event_sub_state_2a]
	move.b	#0x40,d0                        	| [$c75c: lda    #$40]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$c75e: sta    $2b]
	rts                                    	| [$c760: rts]

l_c761:
	GET_ADDRESS	0x3421                     	| [$c761: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c764: lda    $3426]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfaeb,d4                      	| [$c767: ldu    #$faeb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c76a: lda    a,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x40,d1                        	| [$c76c: ldb    #$40]
	jbsr	multiply_ab                       	| [$c76e: mul]
	GET_REG_ADDRESS	0xf,d2                 	| [$c76f: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c771: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xfa10,d3                      	| [$c773: ldy    #$fa10]
	GET_ADDRESS	0x3426                     	| [$c777: lda    $3426]
	move.b	(a0),d0                         	| [...]
	jmi	l_c7a2                             	| [$c77a: bmi    $c7a2]
	cmp.b	#0x3e,d0                         	| [$c77c: cmpa   #$3e]
	jcc	l_c7a2                             	| [$c77e: bcc    $c7a2]
	cmp.b	#0x20,d0                         	| [$c780: cmpa   #$20]
	jcc	l_c790                             	| [$c782: bcc    $c790]
	move.w	#0xfa0b,d3                      	| [$c784: ldy    #$fa0b]
	cmp.b	#0x10,d0                         	| [$c788: cmpa   #$10]
	jcc	l_c790                             	| [$c78a: bcc    $c790]
	move.w	#0xfa06,d3                      	| [$c78c: ldy    #$fa06]
l_c790:
	jbsr	l_cb47                            	| [$c790: jsr    $cb47]
	GET_ADDRESS	0x3424                     	| [$c793: lda    $3424]
	move.b	(a0),d0                         	| [...]
	and.b	#0x01,d0                         	| [$c796: anda   #$01]
	jne	l_c79e                             	| [$c798: bne    $c79e]
	GET_ADDRESS	0x3426                     	| [$c79a: inc    $3426]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$c79d: rts]

l_c79e:
	GET_ADDRESS	0x3426                     	| [$c79e: dec    $3426]
	subq.b	#1,(a0)                         	| [...]
	rts                                    	| [$c7a1: rts]

l_c7a2:
	GET_ADDRESS	0x3424                     	| [$c7a2: lda    $3424]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c7a5: deca]
                                         | [$c7a6: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	jeq	l_c7b3                             	| [$c7a9: beq    $c7b3]
	and.b	#0x01,d0                         	| [$c7ab: anda   #$01]
	jne	l_c79e                             	| [$c7ad: bne    $c79e]
	GET_ADDRESS	0x3426                     	| [$c7af: inc    $3426]
	addq.b	#1,(a0)                         	| [...]
	rts                                    	| [$c7b2: rts]

l_c7b3:
	move.b	#0x00,d0                        	| [$c7b3: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c7b3: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c7b6: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,event_sub_state_2a,#1| [$c7b8: inc    event_sub_state_2a]
	move.b	#0x40,d0                        	| [$c7ba: lda    #$40]
	OP_W_ON_DP_ADDRESS	move,0x2b,d0         | [$c7bc: sta    $2b]
	rts                                    	| [$c7be: rts]

l_c7bf:
	OP_R_ON_DP_ADDRESS	move,0x2e,d0         | [$c7bf: lda    $2e]
	asl.b	#1,d0                            	| [$c7c1: asla]
	
	.ifndef	RELEASE
	move.w	#0xf93b,d4
	.endif
	lea	table_f93b,a4                  	| [$c7c2: ldu   #table_f93b]
	JMP_A_INDEXED	A4                   	| [$c7c5: jra    [a,u]] [jump_table]
l_c7c7:
	GET_ADDRESS	0x3420                     	| [$c7c7: lda    $3420]
	move.b	(a0),d0                         	| [...]
	jbsr	l_cc4b                            	| [$c7ca: jsr    $cc4b]
	GET_ADDRESS	0x3421                     	| [$c7cd: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x342d                     	| [$c7d0: lda    $342d]
	move.b	(a0),d0                         	| [...]
	GET_ADDRESS	0x3424                     	| [$c7d3: sta    $3424]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c7d6: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$c7d8: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
l_c7da:
	GET_ADDRESS	0x3426                     	| [$c7da: clr    $3426]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3421                     	| [$c7dd: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0xfa15,d3                      	| [$c7e0: ldy    #$fa15]
	jbsr	l_cb47                            	| [$c7e4: jsr    $cb47]
	move.w	#0xfa1a,d3                      	| [$c7e7: ldy    #$fa1a]
	GET_REG_ADDRESS	0xb,d2                 	| [$c7eb: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0xfa1f,d4                      	| [$c7ee: ldu    #$fa1f]
	GET_REG_ADDRESS	0,d4                   	| [$c7f1: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$c7f3: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$c7f5: stu    $d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x01,d0                        	| [$c7f7: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$c7f9: sta    $2e]
	rts                                    	| [$c7fb: rts]

l_c7fc:
	GET_ADDRESS	0x3421                     	| [$c7fc: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c7ff: lda    $3426]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfaeb,d4                      	| [$c802: ldu    #$faeb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c805: lda    a,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x40,d1                        	| [$c807: ldb    #$40]
	jbsr	multiply_ab                       	| [$c809: mul]
	GET_REG_ADDRESS	0xf,d2                 	| [$c80a: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c80c: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c80e: lda    $3426]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$c811: inca]
                                         | [$c812: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x20,d0                         	| [$c815: cmpa   #$20]
	jeq	l_c821                             	| [$c817: beq    $c821]
	cmp.b	#0x40,d0                         	| [$c819: cmpa   #$40]
	jeq	l_c839                             	| [$c81b: beq    $c839]
	jra	l_cb55                             	| [$c81d: jra    $cb55]
	rts                                    	| [$c820: rts]

l_c821:
	move.w	#0xfa26,d3                      	| [$c821: ldy    #$fa26]
	jbsr	l_cb47                            	| [$c825: jsr    $cb47]
	move.w	#0xfa2b,d3                      	| [$c828: ldy    #$fa2b]
	GET_REG_ADDRESS	0xb,d2                 	| [$c82c: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0xfa4e,d4                      	| [$c82f: ldu    #$fa4e]
	GET_REG_ADDRESS	0,d4                   	| [$c832: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$c834: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$c836: stu    $d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$c838: rts]

l_c839:
	move.b	#0x02,d0                        	| [$c839: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$c83b: sta    $2e]
	GET_ADDRESS	0x3424                     	| [$c83d: dec    $3424]
	subq.b	#1,(a0)                         	| [...]
	jne	l_c84b                             	| [$c840: bne    $c84b]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c842: lda    $2c]
	cmp.b	#0x01,d0                         	| [$c844: cmpa   #$01]
	jeq	l_c84b                             	| [$c846: beq    $c84b]
	jbsr	l_c84c                            	| [$c848: jsr    $c84c]
l_c84b:
	rts                                    	| [$c84b: rts]

l_c84c:
	GET_ADDRESS	0x3427                     	| [$c84c: inc    $3427]
	addq.b	#1,(a0)                         	| [...]
	jbsr	l_afaf                            	| [$c84f: jsr    $afaf]
	jbsr	l_cca6                            	| [$c852: jsr    $cca6]
	move.w	#0xfbeb,d2                      	| [$c855: ldx    #$fbeb]
	jbsr	l_cc31                            	| [$c858: jsr    $cc31]
	move.w	#0xfb2c,d3                      	| [$c85b: ldy    #$fb2c]
	move.b	#0x07,d1                        	| [$c85f: ldb    #$07]
	OP_W_ON_DP_ADDRESS	move,0x48,d1         | [$c861: stb    $48]
l_c863:
	GET_REG_ADDRESS	0,d3                   	| [$c863: ldx    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$c865: ldu    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$c867: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$c867: ldd    ,y++]
	GET_REG_ADDRESS	0x1,d2                 	| [$c869: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$c86b: ldd    ,y++]
	addq.w	#2,d3                           	| [...]
	LOAD_D                                 	| [$c86b: ldd    ,y++]
	GET_REG_ADDRESS	0x3,d2                 	| [$c86d: std    $3,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$c86f: dec    $48]
	jne	l_c863                             	| [$c871: bne    $c863]
	jbsr	l_cb16                            	| [$c873: jsr    $cb16]
	GET_ADDRESS	0x342a                     	| [$c876: clr    $342a]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$c879: rts]

	rts                                    	| [$c87a: rts]

l_c87b:
	OP_W_ON_DP_ADDRESS	addq,0x2e,#1         | [$c87b: inc    $2e]
	rts                                    	| [$c87d: rts]

l_c87e:
	GET_ADDRESS	0x3421                     	| [$c87e: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c881: lda    $3426]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfaeb,d4                      	| [$c884: ldu    #$faeb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c887: lda    a,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x40,d1                        	| [$c889: ldb    #$40]
	jbsr	multiply_ab                       	| [$c88b: mul]
	GET_REG_ADDRESS	0xf,d2                 	| [$c88c: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c88e: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c890: lda    $3426]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c893: deca]
                                         | [$c894: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x20,d0                         	| [$c897: cmpa   #$20]
	jeq	l_c8bc                             	| [$c899: beq    $c8bc]
	tst.b	d0                               	| [$c89b: tsta]
	jeq	l_c8a1                             	| [$c89c: beq    $c8a1]
	jra	l_cb55                             	| [$c89e: jra    $cb55]
l_c8a1:
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c8a1: lda    $2c]
	cmp.b	#0x01,d0                         	| [$c8a3: cmpa   #$01]
	jne	l_c7da                             	| [$c8a5: lbne   $c7da]
	GET_ADDRESS	0x3424                     	| [$c8a9: lda    $3424]
	move.b	(a0),d0                         	| [...]
	jne	l_c7da                             	| [$c8ac: lbne   $c7da]
	move.b	#0x04,d0                        	| [$c8b0: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$c8b2: sta    event_sub_state_2a]
	move.b	#0x00,d0                        	| [$c8b4: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c8b4: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c8b7: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2e                    	| [$c8b9: std    $2e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$c8bb: rts]

l_c8bc:
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c8bc: lda    $2c]
	cmp.b	#0x01,d0                         	| [$c8be: cmpa   #$01]
	jeq	l_c8c7                             	| [$c8c0: beq    $c8c7]
	GET_ADDRESS	0x3424                     	| [$c8c2: lda    $3424]
	move.b	(a0),d0                         	| [...]
	jeq	l_c8df                             	| [$c8c5: beq    $c8df]
l_c8c7:
	move.w	#0xfa5b,d3                      	| [$c8c7: ldy    #$fa5b]
	jbsr	l_cb47                            	| [$c8cb: jsr    $cb47]
	move.w	#0xfa60,d3                      	| [$c8ce: ldy    #$fa60]
	GET_REG_ADDRESS	0xb,d2                 	| [$c8d2: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0xfa65,d4                      	| [$c8d5: ldu    #$fa65]
	GET_REG_ADDRESS	0,d4                   	| [$c8d8: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$c8da: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$c8dc: stu    $d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$c8de: rts]

l_c8df:
	OP_W_ON_DP_ADDRESS	addq,0x2e,#1         | [$c8df: inc    $2e]
	rts                                    	| [$c8e1: rts]

l_c8e2:
	OP_W_ON_DP_ADDRESS	addq,0x2e,#1         | [$c8e2: inc    $2e]
	GET_ADDRESS	0x3421                     	| [$c8e4: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0xfa6c,d3                      	| [$c8e7: ldy    #$fa6c]
	jbsr	l_cb47                            	| [$c8eb: jsr    $cb47]
	move.w	#0xfa71,d3                      	| [$c8ee: ldy    #$fa71]
	GET_REG_ADDRESS	0xb,d2                 	| [$c8f2: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	move.w	#0xfa71,d4                      	| [$c8f5: ldu    #$fa71]
	GET_REG_ADDRESS	0,d4                   	| [$c8f8: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x5,d2                 	| [$c8fa: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$c8fc: stu    $d,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$c8fe: rts]

l_c8ff:
	GET_ADDRESS	0x3421                     	| [$c8ff: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c902: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c904: deca]
	GET_REG_ADDRESS	0x1,d2                 	| [$c905: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	sub.b	#0x50,d0                         	| [$c907: suba   #$50]
	jcc	l_c910                             	| [$c909: bcc    $c910]
	move.b	#0x06,d0                        	| [$c90b: lda    #$06]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$c90d: sta    $2e]
	rts                                    	| [$c90f: rts]

l_c910:
	GET_ADDRESS	0x3426                     	| [$c910: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	jbsr	l_cb55                            	| [$c913: jsr    $cb55]
	jra	l_bb7f                             	| [$c916: jra    $bb7f]
	move.b	#0x00,d0                        	| [$c919: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c919: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c91c: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2e                    	| [$c91e: std    $2e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x04,d0                        	| [$c920: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,event_sub_state_2a,d0| [$c922: sta    event_sub_state_2a]
	rts                                    	| [$c924: rts]

l_c925:
	move.w	#0x30c0,d4                      	| [$c925: ldu    #$30c0]
	move.b	#0x00,d0                        	| [$c928: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$c928: ldd    #$0000]
l_c92b:
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$c92b: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	cmp.w	#0x3100,d4                       	| [$c92d: cmpu   #$3100]
	jcs	l_c92b                             	| [$c931: bcs    $c92b]
	jra	l_afaf                             	| [$c933: jra    $afaf]
l_c936:
	GET_ADDRESS	0x3421                     	| [$c936: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c939: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$c93b: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$c93d: lda    #$03]
	GET_ADDRESS	0x3424                     	| [$c93f: sta    $3424]
	move.b	d0,(a0)                         	| [...]
l_c942:
	GET_ADDRESS	0x3426                     	| [$c942: clr    $3426]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3421                     	| [$c945: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.b	#0x07,d0                        	| [$c948: lda    #$07]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$c94a: sta    $2e]
	rts                                    	| [$c94c: rts]

l_c94d:
	jbsr	l_bb7f                            	| [$c94d: jsr    $bb7f]
	GET_ADDRESS	0x3421                     	| [$c950: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c953: lda    $3426]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfaeb,d4                      	| [$c956: ldu    #$faeb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$c959: lda    a,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x60,d1                        	| [$c95b: ldb    #$60]
	jbsr	multiply_ab                       	| [$c95d: mul]
	GET_REG_ADDRESS	0xf,d2                 	| [$c95e: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c960: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c962: lda    $3426]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$c965: inca]
                                         | [$c966: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x40,d0                         	| [$c969: cmpa   #$40]
	jeq	l_c970                             	| [$c96b: beq    $c970]
	jra	l_cb55                             	| [$c96d: jra    $cb55]
l_c970:
	GET_ADDRESS	0x3424                     	| [$c970: dec    $3424]
	subq.b	#1,(a0)                         	| [...]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c973: lda    $2c]
	cmp.b	#0x03,d0                         	| [$c975: cmpa   #$03]
	jcc	l_c97e                             	| [$c977: bcc    $c97e]
	GET_ADDRESS	0x3424                     	| [$c979: lda    $3424]
	move.b	(a0),d0                         	| [...]
	jeq	l_c983                             	| [$c97c: beq    $c983]
l_c97e:
	move.b	#0x08,d0                        	| [$c97e: lda    #$08]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$c980: sta    $2e]
	rts                                    	| [$c982: rts]

l_c983:
	move.b	#0x04,d0                        	| [$c983: ldd    #$0440]
	move.w	#0x0440,d1                      	| [$c983: ldd    #$0440]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$c986: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	moveq	#0,d0                            	| [$c988: clra]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$c989: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2e                    	| [$c98b: std    $2e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$c98d: rts]

l_c98e:
	move.b	#0x09,d0                        	| [$c98e: lda    #$09]
	OP_W_ON_DP_ADDRESS	move,0x2e,d0         | [$c990: sta    $2e]
	rts                                    	| [$c992: rts]

l_c993:
	OP_R_ON_DP_ADDRESS	move,0x2d,d0         | [$c993: lda    $2d]
	jne	l_ca2a                             	| [$c995: lbne   $ca2a]
	OP_R_ON_DP_ADDRESS	move,0x2c,d0         | [$c999: lda    $2c]
	sub.b	#0x02,d0                         	| [$c99b: suba   #$02]
	
	.ifndef	RELEASE
	move.w	#0xf94f,d4
	.endif
	lea	table_f94f,a4                  	| [$c99d: ldu   #table_f94f]
	asl.b	#1,d0                            	| [$c9a0: asla]
	JMP_A_INDEXED	A4                   	| [$c9a1: jra    [a,u]] [jump_table]
l_c9a3:
	jra	l_ca0b                             	| [$c9a3: bra    $ca0b]
l_c9a5:
	GET_ADDRESS	0x3424                     	| [$c9a5: lda    $3424]
	move.b	(a0),d0                         	| [...]
	jne	l_ca0b                             	| [$c9a8: bne    $ca0b]
	GET_ADDRESS	0x3426                     	| [$c9aa: ldb    $3426]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x20,d1                         	| [$c9ad: cmpb   #$20]
	jne	l_c9b4                             	| [$c9af: bne    $c9b4]
	jbsr	l_c925                            	| [$c9b1: jsr    $c925]
l_c9b4:
	GET_ADDRESS	0x3426                     	| [$c9b4: lda    $3426]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c9b7: deca]
	jne	l_ca0b                             	| [$c9b8: bne    $ca0b]
	GET_ADDRESS	0x3421                     	| [$c9ba: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c9bd: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x40,d0                         	| [$c9bf: cmpa   #$40]
	jcs	l_c9ca                             	| [$c9c1: bcs    $c9ca]
	sub.b	#0x02,d0                         	| [$c9c3: suba   #$02]
	GET_REG_ADDRESS	0x1,d2                 	| [$c9c5: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	jra	l_cb55                             	| [$c9c7: jra    $cb55]
l_c9ca:
	GET_REG_ADDRESS	0x1,d2                 	| [$c9ca: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$c9cc: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$c9ce: clr    $3426]
	clr.b	(a0)                         	| [...]
	move.b	#0x01,d0                        	| [$c9d1: lda    #$01]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$c9d3: sta    $2d]
	rts                                    	| [$c9d5: rts]

l_c9d6:
	GET_ADDRESS	0x3424                     	| [$c9d6: lda    $3424]
	move.b	(a0),d0                         	| [...]
	jne	l_ca0b                             	| [$c9d9: bne    $ca0b]
	GET_ADDRESS	0x3426                     	| [$c9db: ldb    $3426]
	move.b	(a0),d1                         	| [...]
	cmp.b	#0x20,d1                         	| [$c9de: cmpb   #$20]
	jne	l_c9e5                             	| [$c9e0: bne    $c9e5]
	jbsr	l_c925                            	| [$c9e2: jsr    $c925]
l_c9e5:
	GET_ADDRESS	0x3426                     	| [$c9e5: lda    $3426]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$c9e8: deca]
	jne	l_ca0b                             	| [$c9e9: bne    $ca0b]
	GET_ADDRESS	0x3421                     	| [$c9eb: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$c9ee: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x40,d0                         	| [$c9f0: cmpa   #$40]
	jcs	l_c9ff                             	| [$c9f2: bcs    $c9ff]
	sub.b	#0x02,d0                         	| [$c9f4: suba   #$02]
	GET_REG_ADDRESS	0x1,d2                 	| [$c9f6: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xfa77,d3                      	| [$c9f8: ldy    #$fa77]
	jra	l_cb47                             	| [$c9fc: jra    $cb47]
l_c9ff:
	GET_REG_ADDRESS	0x1,d2                 	| [$c9ff: lda    $1,x]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$ca01: sta    $f,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$ca03: clr    $3426]
	clr.b	(a0)                         	| [...]
	move.b	#0x02,d0                        	| [$ca06: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$ca08: sta    $2d]
	rts                                    	| [$ca0a: rts]

l_ca0b:
	jbsr	l_bb7f                            	| [$ca0b: jsr    $bb7f]
	GET_ADDRESS	0x3421                     	| [$ca0e: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$ca11: lda    $3426]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfaeb,d4                      	| [$ca14: ldu    #$faeb]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$ca17: lda    a,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x60,d1                        	| [$ca19: ldb    #$60]
	jbsr	multiply_ab                       	| [$ca1b: mul]
	GET_REG_ADDRESS	0xf,d2                 	| [$ca1c: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$ca1e: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	GET_ADDRESS	0x3426                     	| [$ca20: dec    $3426]
	subq.b	#1,(a0)                         	| [...]
	jeq	l_c942                             	| [$ca23: lbeq   $c942]
	jra	l_cb55                             	| [$ca27: jra    $cb55]
l_ca2a:
	OP_R_ON_DP_ADDRESS	move,0x2d,d0         | [$ca2a: lda    $2d]
	subq.b	#1,d0                           	| [$ca2c: deca]
	asl.b	#1,d0                            	| [$ca2d: asla]
	
	.ifndef	RELEASE
	move.w	#0xf959,d4
	.endif
	lea	table_f959,a4                  	| [$ca2e: ldu   #table_f959]
	JMP_A_INDEXED	A4                   	| [$ca31: jra    [a,u]] [jump_table]
l_ca33:
	GET_ADDRESS	0x3426                     	| [$ca33: lda    $3426]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$ca36: inca]
                                         | [$ca37: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x60,d0                         	| [$ca3a: cmpa   #$60]
	jeq	l_ca63                             	| [$ca3c: beq    $ca63]
	move.w	#0xfaeb,d4                      	| [$ca3e: ldu    #$faeb]
	move.b	d0,d1                           	| [$ca41: tfr    a,b]
	and.b	#0x0f,d0                         	| [$ca43: anda   #$0f]
                                         | [$ca45: asla]
	asl.b	#2,d0                            	| [$ca46: asla]
	and.b	#0x10,d1                         	| [$ca47: andb   #$10]
	jeq	l_ca4f                             	| [$ca49: beq    $ca4f]
	neg.b	d0                               	| [$ca4b: nega]
	move.w	#0xfb2b,d4                      	| [$ca4c: ldu    #$fb2b]
l_ca4f:
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$ca4f: lda    a,u]
	move.b	(a0),d0                         	| [...]
	move.b	#0x08,d1                        	| [$ca51: ldb    #$08]
	jbsr	multiply_ab                       	| [$ca53: mul]
	GET_ADDRESS	0x3421                     	| [$ca54: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_REG_ADDRESS	0xf,d2                 	| [$ca57: adda   $f,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$ca59: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xfa82,d3                      	| [$ca5b: ldy    #$fa82]
	jbsr	l_cb47                            	| [$ca5f: jsr    $cb47]
	rts                                    	| [$ca62: rts]

l_ca63:
	move.b	#0x03,d0                        	| [$ca63: lda    #$03]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$ca65: sta    $2d]
	rts                                    	| [$ca67: rts]

l_ca68:
	GET_ADDRESS	0x3426                     	| [$ca68: lda    $3426]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$ca6b: inca]
                                         | [$ca6c: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	cmp.b	#0x60,d0                         	| [$ca6f: cmpa   #$60]
	jeq	l_ca74                             	| [$ca71: beq    $ca74]
	rts                                    	| [$ca73: rts]

l_ca74:
	move.b	#0x04,d0                        	| [$ca74: lda    #$04]
	OP_W_ON_DP_ADDRESS	move,0x2d,d0         | [$ca76: sta    $2d]
	rts                                    	| [$ca78: rts]

l_ca79:
	GET_ADDRESS	0x3421                     	| [$ca79: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$ca7c: lda    $3426]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$ca7f: inca]
	jeq	l_cab7                             	| [$ca80: beq    $cab7]
	GET_ADDRESS	0x3426                     	| [$ca82: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xfa8c,d3                      	| [$ca85: ldy    #$fa8c]
	and.b	#0x1f,d0                         	| [$ca89: anda   #$1f]
	cmp.b	#0x0f,d0                         	| [$ca8b: cmpa   #$0f]
	jcc	l_cb47                             	| [$ca8d: lbcc   $cb47]
	move.w	#0xfa96,d3                      	| [$ca91: ldy    #$fa96]
	jra	l_cb47                             	| [$ca95: jra    $cb47]
l_ca98:
	GET_ADDRESS	0x3421                     	| [$ca98: ldx    $3421]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	GET_ADDRESS	0x3426                     	| [$ca9b: lda    $3426]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$ca9e: inca]
	jeq	l_cab7                             	| [$ca9f: beq    $cab7]
	GET_ADDRESS	0x3426                     	| [$caa1: sta    $3426]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xf9ed,d3                      	| [$caa4: ldy    #$f9ed]
	and.b	#0x1f,d0                         	| [$caa8: anda   #$1f]
	cmp.b	#0x0f,d0                         	| [$caaa: cmpa   #$0f]
	jcc	l_cb47                             	| [$caac: lbcc   $cb47]
	move.w	#0xf9f2,d3                      	| [$cab0: ldy    #$f9f2]
	jra	l_cb47                             	| [$cab4: jra    $cb47]
l_cab7:
	move.b	#0x04,d0                        	| [$cab7: ldd    #$0440]
	move.w	#0x0440,d1                      	| [$cab7: ldd    #$0440]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	event_sub_state_2a      	| [$caba: std    event_sub_state_2a]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.b	#0x00,d0                        	| [$cabc: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$cabc: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2c                    	| [$cabf: std    $2c]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x2e                    	| [$cac1: std    $2e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	rts                                    	| [$cac3: rts]

l_cac4:
	move.w	#0x3500,d2                      	| [$cac4: ldx    #$3500]
	move.b	#0x04,d1                        	| [$cac7: ldb    #$04]
l_cac9:
	GET_REG_ADDRESS	0,d2                   	| [$cac9: lda    ,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_cb15                             	| [$cacb: beq    $cb15]
	add.w	#0x20,d2                         	| [$cacd: leax   $20,x]
	subq.b	#1,d1                           	| [$cad0: decb]
	jne	l_cac9                             	| [$cad1: bne    $cac9]
	GET_ADDRESS	0x34a4                     	| [$cad3: lda    $34a4]
	move.b	(a0),d0                         	| [...]
	jeq	l_cb15                             	| [$cad6: beq    $cb15]
	subq.b	#1,d0                           	| [$cad8: deca]
	move.w	#0x3500,d4                      	| [$cad9: ldu    #$3500]
                                         | [$cadc: asla]
                                         | [$cadd: asla]
                                         | [$cade: asla]
                                         | [$cadf: asla]
	asl.b	#5,d0                            	| [$cae0: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$cae1: lda    a,u]
	move.b	(a0),d0                         	| [...]
	jeq	l_cb15                             	| [$cae3: beq    $cb15]
	GET_ADDRESS	0x34a4                     	| [$cae5: lda    $34a4]
	move.b	(a0),d0                         	| [...]
	subq.b	#1,d0                           	| [$cae8: deca]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$cae9: sta    $19]
	move.w	#0xf9e5,d2                      	| [$caeb: ldx    #$f9e5]
	asl.b	#1,d0                            	| [$caee: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$caef: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0xf9dd,d4                      	| [$caf1: ldu    #$f9dd]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$caf4: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	move.b	#0x40,d0                        	| [$caf6: ldd    #$4020]
	move.w	#0x4020,d1                      	| [$caf6: ldd    #$4020]
	MAKE_D                                 	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$caf9: std    $1,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3429                     	| [$cafb: lda    $3429]
	move.b	(a0),d0                         	| [...]
	addq.b	#1,d0                           	| [$cafe: inca]
                                         | [$caff: sta    $3429]
	move.b	d0,(a0)                         	| [...]
	and.b	#0x0f,d0                         	| [$cb02: anda   #$0f]
	move.w	#0xfa9b,d3                      	| [$cb04: ldy    #$fa9b]
	cmp.b	#0x07,d0                         	| [$cb08: cmpa   #$07]
	jcc	l_87b4                             	| [$cb0a: lbcc   $87b4]
	move.w	#0xfaa0,d3                      	| [$cb0e: ldy    #$faa0]
	jra	l_87b4                             	| [$cb12: jra    $87b4]
l_cb15:
	rts                                    	| [$cb15: rts]

l_cb16:
	move.w	#0x30c0,d2                      	| [$cb16: ldx    #$30c0]
	move.w	#0x3600,d4                      	| [$cb19: ldu    #$3600]
	move.b	#0x02,d0                        	| [$cb1c: lda    #$02]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$cb1e: sta    $48]
l_cb20:
	GET_REG_ADDRESS	0x3,d2                 	| [$cb20: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_889d                            	| [$cb23: jsr    $889d]
	add.w	#0x8,d4                          	| [$cb26: leau   $8,u]
	add.w	#0x8,d2                          	| [$cb28: leax   $8,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$cb2a: dec    $48]
	jne	l_cb20                             	| [$cb2c: bne    $cb20]
	move.w	#0x30d0,d2                      	| [$cb2e: ldx    #$30d0]
	move.w	#0x3650,d4                      	| [$cb31: ldu    #$3650]
	move.b	#0x05,d0                        	| [$cb34: lda    #$05]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$cb36: sta    $48]
l_cb38:
	GET_REG_ADDRESS	0x3,d2                 	| [$cb38: ldy    $3,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	jbsr	l_889d                            	| [$cb3b: jsr    $889d]
	add.w	#0x8,d4                          	| [$cb3e: leau   $8,u]
	add.w	#0x8,d2                          	| [$cb40: leax   $8,x]
	OP_W_ON_DP_ADDRESS	subq,0x48,#1         | [$cb42: dec    $48]
	jne	l_cb38                             	| [$cb44: bne    $cb38]
	rts                                    	| [$cb46: rts]

l_cb47:
	GET_ADDRESS	0x3423                     	| [$cb47: lda    $3423]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$cb4a: sta    $19]
	move.w	#0xf9dd,d4                      	| [$cb4c: ldu    #$f9dd]
	asl.b	#1,d0                            	| [$cb4f: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$cb50: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	jra	l_cc07                             	| [$cb52: jra    $cc07]
l_cb55:
	GET_REG_ADDRESS	0x5,d2                 	| [$cb55: dec    $5,x]
	subq.b	#1,(a0)                         	| [...]
	jpl	l_cb8a                             	| [$cb57: bpl    $cb8a]
	GET_REG_ADDRESS	0xd,d2                 	| [$cb59: ldy    $d,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$cb5c: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0xff,d0                         	| [$cb5e: cmpa   #$ff]
	jne	l_cb6b                             	| [$cb60: bne    $cb6b]
	GET_REG_ADDRESS	0,d3                   	| [$cb62: ldu    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$cb64: stu    $b,x]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$cb66: ldy    ,y]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$cb69: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
l_cb6b:
	GET_REG_ADDRESS	0x5,d2                 	| [$cb6b: sta    $5,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0xd,d2                 	| [$cb6d: sty    $d,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	GET_REG_ADDRESS	0xb,d2                 	| [$cb70: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_ADDRESS	0x3423                     	| [$cb73: lda    $3423]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$cb76: sta    $19]
	move.w	#0xf9dd,d4                      	| [$cb78: ldu    #$f9dd]
	asl.b	#1,d0                            	| [$cb7b: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$cb7c: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	jbsr	l_cc07                            	| [$cb7e: jsr    $cc07]
	GET_REG_ADDRESS	0xb,d2                 	| [$cb81: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	addq.w	#0x5,d3                         	| [$cb84: leay   $5,y]
	GET_REG_ADDRESS	0xb,d2                 	| [$cb86: sty    $b,x]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	rts                                    	| [$cb89: rts]

l_cb8a:
	GET_REG_ADDRESS	0xb,d2                 	| [$cb8a: ldy    $b,x]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	subq.w	#0x5,d3                         	| [$cb8d: leay   -$5,y]
	GET_ADDRESS	0x3423                     	| [$cb8f: lda    $3423]
	move.b	(a0),d0                         	| [...]
	OP_W_ON_DP_ADDRESS	move,swimmer_19,d0         | [$cb92: sta    $19]
	move.w	#0xf9dd,d4                      	| [$cb94: ldu    #$f9dd]
	asl.b	#1,d0                            	| [$cb97: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$cb98: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	jra	l_cc07                             	| [$cb9a: jra    $cc07]
l_cb9d:
	move.w	#0x30a0,d4                      	| [$cb9d: ldu    #$30a0]
	clr.w	d3                               	| [$cba0: ldy    #$0000]
	move.b	#0xc0,d0                        	| [$cba4: lda    #$c0]
l_cba6:
	GET_REG_ADDRESS	0,d4                   	| [$cba6: sty    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d3,a0                         	| [...]
	subq.b	#1,d0                           	| [$cba9: deca]
	jne	l_cba6                             	| [$cbaa: bne    $cba6]
	rts                                    	| [$cbac: rts]

l_cbad:
	move.w	#0x3400,d4                      	| [$cbad: ldu    #$3400]
	OP_1_ON_DP_ADDRESS	clr,0x48             | [$cbb0: clr    $48]
	OP_1_ON_DP_ADDRESS	clr,0x4a             | [$cbb2: clr    $4a]
l_cbb4:
	move.w	#0x3498,d2                      	| [$cbb4: ldx    #$3498]
	OP_R_ON_DP_ADDRESS	move,0x48,d1         | [$cbb7: ldb    $48]
                                         | [$cbb9: aslb]
	asl.b	#2,d1                            	| [$cbba: aslb]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$cbbb: ldb    b,x]
	move.b	(a0),d1                         	| [...]
	jeq	l_cbfb                             	| [$cbbd: beq    $cbfb]
	subq.b	#1,d1                           	| [$cbbf: decb]
	OP_W_ON_DP_ADDRESS	move,0x49,d1         | [$cbc0: stb    $49]
                                         | [$cbc2: aslb]
                                         | [$cbc3: aslb]
                                         | [$cbc4: aslb]
                                         | [$cbc5: aslb]
	asl.b	#5,d1                            	| [$cbc6: aslb]
	move.w	#0x3500,d2                      	| [$cbc7: ldx    #$3500]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$cbca: lda    b,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_cbef                             	| [$cbcc: beq    $cbef]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$cbce: lda    $49]
	GET_REG_ADDRESS	0,d4                   	| [$cbd0: sta    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d0,(a0)                         	| [...]
	move.b	#0x03,d0                        	| [$cbd2: lda    #$03]
	jbsr	multiply_ab                       	| [$cbd4: mul]
	move.w	#0x30a0,d2                      	| [$cbd5: ldx    #$30a0]
	MAKE_D                                 	| [...]
	add.w	d1,d2                            	| [$cbd8: leax   d,x]
	GET_REG_ADDRESS	0,d4                   	| [$cbda: stx    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
	move.w	#0x3360,d2                      	| [$cbdc: ldx    #$3360]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$cbdf: lda    $49]
	asl.b	#1,d0                            	| [$cbe1: asla]
	OP_R_ON_DP_ADDRESS	add,0x49,d0          | [$cbe2: adda   $49]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$cbe4: ldb    a,x]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$cbe6: stb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	addq.b	#1,d0                           	| [$cbe8: inca]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$cbe9: ldd    a,x]
	LOAD_D                                 	| [$cbe9: ldd    a,x]
	GET_REG_ADDRESS	0,d4                   	| [$cbeb: std    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x4a,#1         | [$cbed: inc    $4a]
l_cbef:
	OP_R_ON_DP_ADDRESS	move,0x48,d0         | [$cbef: lda    $48]
	cmp.b	#0x03,d0                         	| [$cbf1: cmpa   #$03]
	jeq	l_cbfb                             	| [$cbf3: beq    $cbfb]
	addq.b	#1,d0                           	| [$cbf5: inca]
	OP_W_ON_DP_ADDRESS	move,0x48,d0         | [$cbf6: sta    $48]
	jra	l_cbb4                             	| [$cbf8: bra    $cbb4]
	rts                                    	| [$cbfa: rts]

l_cbfb:
	OP_R_ON_DP_ADDRESS	move,0x4a,d0         | [$cbfb: lda    $4a]
	subq.b	#1,d0                           	| [$cbfd: deca]
	cmp.b	#0x03,d0                         	| [$cbfe: cmpa   #$03]
	jcs	l_cc04                             	| [$cc00: bcs    $cc04]
	move.b	#0x02,d0                        	| [$cc02: lda    #$02]
l_cc04:
	OP_W_ON_DP_ADDRESS	move,0x4a,d0         | [$cc04: sta    $4a]
	rts                                    	| [$cc06: rts]

l_cc07:
	OP_1_ON_DP_ADDRESS	clr,0x49             | [$cc07: clr    $49]
	move.l	d4,-(sp)                        	| [$cc09: pshs   u]
	move.w	#0xf9fe,d4                      	| [$cc0b: ldu    #$f9fe]
	move.b	#0x04,d0                        	| [$cc0e: lda    #$04]
l_cc10:
	GET_REG_ADDRESS	0,d4                   	| [$cc10: cmpy   ,u++]
	addq.w	#2,d4                           	| [...]
	CMP_W_TO_REG	a0,d3                          	| [...]
	jeq	l_cc1a                             	| [$cc13: beq    $cc1a]
	subq.b	#1,d0                           	| [$cc15: deca]
	jeq	l_cc20                             	| [$cc16: beq    $cc20]
	jra	l_cc10                             	| [$cc18: bra    $cc10]
l_cc1a:
	OP_W_ON_DP_ADDRESS	addq,0x49,#1         | [$cc1a: inc    $49]
	move.b	#0xf8,d0                        	| [$cc1c: lda    #$f8]
	jbsr	l_cc2c                            	| [$cc1e: bsr    $cc2c]
l_cc20:
	movem.l	(sp)+,d4                       	| [$cc20: puls   u]
	jbsr	l_87b4                            	| [$cc22: jsr    $87b4]
	OP_R_ON_DP_ADDRESS	move,0x49,d0         | [$cc25: lda    $49]
	jne	l_cc2a                             	| [$cc27: bne    $cc2a]
	rts                                    	| [$cc29: rts]

l_cc2a:
	move.b	#0x08,d0                        	| [$cc2a: lda    #$08]
l_cc2c:
	GET_REG_ADDRESS	0x2,d2                 	| [$cc2c: adda   $2,x]
	add.b	(a0),d0                          	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$cc2e: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$cc30: rts]

l_cc31:
	move.w	#0xfb64,d3                      	| [$cc31: ldy    #$fb64]
l_cc35:
	GET_REG_ADDRESS	0,d3                   	| [$cc35: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jeq	l_cc4a                             	| [$cc37: beq    $cc4a]
	GET_REG_ADDRESS	0,d3                   	| [$cc39: ldu    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_cc3b:
	GET_REG_ADDRESS	0,d2                   	| [$cc3b: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$cc3d: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d2                   	| [$cc41: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$cc43: stb    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d0                           	| [$cc45: deca]
	jne	l_cc3b                             	| [$cc46: bne    $cc3b]
	jra	l_cc35                             	| [$cc48: bra    $cc35]
l_cc4a:
	rts                                    	| [$cc4a: rts]

l_cc4b:
	GET_ADDRESS	0x3440                     	| [$cc4b: sta    $3440]
	move.b	d0,(a0)                         	| [...]
	move.w	#0xfe27,d4                      	| [$cc4e: ldu    #$fe27]
	move.b	#0x13,d1                        	| [$cc51: ldb    #$13]
	jbsr	multiply_ab                       	| [$cc53: mul]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$cc54: leau   b,u]
	GET_REG_ADDRESS	0,d4                   	| [$cc56: ldx    ,u++]
	addq.w	#2,d4                           	| [...]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.l	d2,-(sp)                        	| [$cc58: pshs   x]
l_cc5a:
	GET_REG_ADDRESS	0,d4                   	| [$cc5a: lda    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d0                         	| [...]
	jeq	l_cc62                             	| [$cc5c: beq    $cc62]
	GET_REG_ADDRESS	0,d2                   	| [$cc5e: sta    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	d0,(a0)                         	| [...]
	jra	l_cc5a                             	| [$cc60: bra    $cc5a]
l_cc62:
	movem.l	(sp)+,d2                       	| [$cc62: puls   x]
	move.w	#0xfcb3,d3                      	| [$cc64: ldy    #$fcb3]
	GET_ADDRESS	0x3440                     	| [$cc68: lda    $3440]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$cc6b: cmpa   #$03]
	jcc	l_cc7a                             	| [$cc6d: bcc    $cc7a]
	asl.b	#1,d0                            	| [$cc6f: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_REG_INDIRECT_ADDRESS	d6,d3     	| [$cc70: lda    [a,y]]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfe23,d3                      	| [$cc72: ldy    #$fe23]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d3         	| [$cc76: lda    a,y]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x3,d2                 	| [$cc78: sta    $3,x]
	move.b	d0,(a0)                         	| [...]
l_cc7a:
	GET_ADDRESS	0x3440                     	| [$cc7a: lda    $3440]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x03,d0                         	| [$cc7d: cmpa   #$03]
	jeq	l_cca5                             	| [$cc7f: beq    $cca5]
	move.w	#0xfc5f,d2                      	| [$cc81: ldx    #$fc5f]
	move.w	#0xfcb3,d4                      	| [$cc84: ldu    #$fcb3]
	asl.b	#1,d0                            	| [$cc87: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$cc88: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$cc8a: ldu    a,u]
	MOVE_W_TO_REG	a0,d4                         	| [...]
	GET_REG_ADDRESS	0x3,d4                 	| [$cc8c: ldd    $3,u]
	LOAD_D                                 	| [$cc8c: ldd    $3,u]
	GET_REG_ADDRESS	0,d2                   	| [$cc8e: std    ,x]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_REG_ADDRESS	0x5,d4                 	| [$cc90: lda    $5,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$cc92: sta    $2,x]
	move.b	d0,(a0)                         	| [...]
	move.w	d2,d3                           	| [$cc94: leay   $0800,x]
	add.w	#0x0800,d3                       	| [$cc94: leay   $0800,x]
	GET_REG_ADDRESS	0,d4                   	| [$cc98: lda    ,u]
	move.b	(a0),d0                         	| [...]
	move.w	#0xfc65,d4                      	| [$cc9a: ldu    #$fc65]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d4         	| [$cc9d: lda    a,u]
	move.b	(a0),d0                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$cc9f: sta    ,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d3                 	| [$cca1: sta    $1,y]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d3                 	| [$cca3: sta    $2,y]
	move.b	d0,(a0)                         	| [...]
l_cca5:
	rts                                    	| [$cca5: rts]

l_cca6:
	move.w	#0xfc87,d2                      	| [$cca6: ldx    #$fc87]
	move.w	#0xfc73,d3                      	| [$cca9: ldy    #$fc73]
	jbsr	l_cc35                            	| [$ccad: jsr    $cc35]
	move.w	#0xfc9d,d2                      	| [$ccb0: ldx    #$fc9d]
	move.w	#0xfc7d,d3                      	| [$ccb3: ldy    #$fc7d]
	jbsr	l_cc35                            	| [$ccb7: jsr    $cc35]
	GET_ADDRESS	0x3451                     	| [$ccba: clr    $3451]
	clr.b	(a0)                         	| [...]
	GET_ADDRESS	0x3452                     	| [$ccbd: clr    $3452]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$ccc0: rts]

l_ccc1:
	move.w	#0x3460,d2                      	| [$ccc1: ldx    #$3460]
	move.b	#0x40,d0                        	| [$ccc4: lda    #$40]
	GET_REG_ADDRESS	0,d2                   	| [$ccc6: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	GET_REG_ADDRESS	0x1,d2                 	| [$ccc8: adda   $1,x]
	add.b	(a0),d0                          	| [...]
	PUSH_SR
	GET_REG_ADDRESS	0x1,d2                 	| [$ccca: sta    $1,x]
	move.b	d0,(a0)                         	| [...]
	POP_SR
	jcc	l_cce1                             	| [$cccc: bcc    $cce1]
	GET_REG_ADDRESS	0x2,d2                 	| [$ccce: inc    $2,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0x2,d2                 	| [$ccd0: lda    $2,x]
	move.b	(a0),d0                         	| [...]
	and.b	#0x03,d0                         	| [$ccd2: anda   #$03]
	move.w	#0xfe1b,d2                      	| [$ccd4: ldx    #$fe1b]
	asl.b	#1,d0                            	| [$ccd7: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$ccd8: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	move.w	#0xfcc1,d3                      	| [$ccda: ldy    #$fcc1]
	jbsr	l_cc35                            	| [$ccde: jsr    $cc35]
l_cce1:
	rts                                    	| [$cce1: rts]

l_cce2:
	
	.ifndef	RELEASE
	move.w	#0xfe73,d2
	.endif
	lea	table_fe73,a2                  	| [$cce2: ldx   #table_fe73]
	OP_R_ON_DP_ADDRESS	move,0x22,d0         | [$cce5: lda    $22]
	asl.b	#1,d0                            	| [$cce7: asla]
	JMP_A_INDEXED	A2                   	| [$cce8: jra    [a,x]] [jump_table]
l_ccea:
	moveq	#0,d0                            	| [$ccea: clra]
	jbsr	queue_event_4e9a                  	| [$cceb: jsr    queue_event_4e9a]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$ccee: inc    $22]
	rts                                    	| [$ccf0: rts]

l_ccf1:
	move.w	#0xff9b,d2                      	| [$ccf1: ldx    #$ff9b]
	move.w	#0xffaa,d3                      	| [$ccf4: ldy    #$ffaa]
	jbsr	l_cea4                            	| [$ccf8: jsr    $cea4]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$ccfb: inc    $22]
	rts                                    	| [$ccfd: rts]

l_ccfe:
	OP_R_ON_DP_ADDRESS	move,0x10,d0         | [$ccfe: lda    $10]
	and.b	#0x04,d0                         	| [$cd00: anda   #$04]
	jeq	l_cd07                             	| [$cd02: beq    $cd07]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$cd04: inc    $22]
	rts                                    	| [$cd06: rts]

l_cd07:
	OP_R_ON_DP_ADDRESS	move,0x21,d0         | [$cd07: lda    $21]
	add.b	#0x01,d0                         	| [$cd09: adda   #$01]
	PUSH_SR
	OP_W_ON_DP_ADDRESS	move,0x21,d0         | [$cd0b: sta    $21]
	POP_SR
	jcs	l_cd5e                             	| [$cd0d: bcs    $cd5e]
	rts                                    	| [$cd0f: rts]

l_cd10:
	move.w	#0x3f10,d2                      	| [$cd10: ldx    #$3f10]
	move.w	#0x3f80,d4                      	| [$cd13: ldu    #$3f80]
	move.b	#0x57,d0                        	| [$cd16: lda    #$57]
l_cd18:
	GET_REG_ADDRESS	0,d2                   	| [$cd18: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$cd1a: cmpb   ,u+]
	addq.w	#1,d4                           	| [...]
	cmp.b	(a0),d1                          	| [...]
	jne	l_cd23                             	| [$cd1c: bne    $cd23]
	subq.b	#1,d0                           	| [$cd1e: deca]
	jne	l_cd18                             	| [$cd1f: bne    $cd18]
	jra	l_cd2d                             	| [$cd21: bra    $cd2d]
l_cd23:
	move.w	#0x3f00,d2                      	| [$cd23: ldx    #$3f00]
l_cd26:
	GET_REG_ADDRESS	0,d2                   	| [$cd26: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	cmp.w	#0x3fff,d2                       	| [$cd28: cmpx   #$3fff]
	jls	l_cd26                             	| [$cd2b: bls    $cd26]
l_cd2d:
	move.w	#0xfe81,d2                      	| [$cd2d: ldx    #$fe81]
	move.w	#0xfe9e,d3                      	| [$cd30: ldy    #$fe9e]
	jbsr	l_cea4                            	| [$cd34: jsr    $cea4]
l_cd37:
	move.w	#0xfeab,d2                      	| [$cd37: ldx    #$feab]
	move.w	#0xfed3,d3                      	| [$cd3a: ldy    #$fed3]
	jbsr	l_cc35                            	| [$cd3e: jsr    $cc35]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$cd41: inc    $22]
	rts                                    	| [$cd43: rts]

l_cd44:
	GET_DP_ADDRESS	0x13                    	| [$cd44: ldd    $13]
	LOAD_D                                 	| [$cd44: ldd    $13]
	and.b	#0x7f,d0                         	| [$cd46: anda   #$7f]
	and.b	#0x7f,d1                         	| [$cd48: andb   #$7f]
	MAKE_D
	cmp.w	#0x0400,d1                       	| [$cd4a: cmpd   #$0400]
	jeq	l_cd57                             	| [$cd4e: beq    $cd57]
	MAKE_D
	cmp.w	#0x0100,d1                       	| [$cd50: cmpd   #$0100]
	jeq	l_cd5e                             	| [$cd54: beq    $cd5e]
	rts                                    	| [$cd56: rts]

l_cd57:
	moveq	#0,d0                            	| [$cd57: clra]
	jbsr	queue_event_4e9a                  	| [$cd58: jsr    queue_event_4e9a]
	OP_W_ON_DP_ADDRESS	addq,0x22,#1         | [$cd5b: inc    $22]
	rts                                    	| [$cd5d: rts]

l_cd5e:
	OP_1_ON_DP_ADDRESS	clr,0x20             | [$cd5e: clr    $20]
	OP_1_ON_DP_ADDRESS	clr,0x22             | [$cd60: clr    $22]
	move.w	#0x3f00,d2                      	| [$cd62: ldx    #$3f00]
l_cd65:
	GET_REG_ADDRESS	0,d2                   	| [$cd65: clr    ,x+]
	addq.w	#1,d2                           	| [...]
	clr.b	(a0)                         	| [...]
	cmp.w	#0x3fff,d2                       	| [$cd67: cmpx   #$3fff]
	jls	l_cd65                             	| [$cd6a: bls    $cd65]
	rts                                    	| [$cd6c: rts]

l_cd6d:
	move.b	#0x01,d0                        	| [$cd6d: ldd    #$0102]
	move.w	#0x0102,d1                      	| [$cd6d: ldd    #$0102]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3f00                     	| [$cd70: std    $3f00]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	move.w	#0xfeda,d2                      	| [$cd73: ldx    #$feda]
	move.w	#0xff43,d3                      	| [$cd76: ldy    #$ff43]
	jbsr	l_cea4                            	| [$cd7a: jsr    $cea4]
	move.w	#0xff62,d2                      	| [$cd7d: ldx    #$ff62]
	move.w	#0xff85,d3                      	| [$cd80: ldy    #$ff85]
	jbsr	l_cea4                            	| [$cd84: jsr    $cea4]
	jbsr	l_ceee                            	| [$cd87: jsr    $ceee]
	jbsr	l_ce6d                            	| [$cd8a: jsr    $ce6d]
	jra	l_cd37                             	| [$cd8d: bra    $cd37]
l_cd8f:
	jbsr	l_cd99                            	| [$cd8f: bsr    $cd99]
	jbsr	l_cdb4                            	| [$cd91: bsr    $cdb4]
	jbsr	l_cde3                            	| [$cd93: bsr    $cde3]
	jbsr	l_ce33                            	| [$cd95: jsr    $ce33]
	rts                                    	| [$cd98: rts]

l_cd99:
	OP_R_ON_DP_ADDRESS	move,0x10,d0         | [$cd99: lda    $10]
	and.b	#0x10,d0                         	| [$cd9b: anda   #$10]
	jeq	l_cdb3                             	| [$cd9d: beq    $cdb3]
	jbsr	l_ce56                            	| [$cd9f: jsr    $ce56]
	jbsr	l_ceba                            	| [$cda2: jsr    $ceba]
	jbsr	l_ce94                            	| [$cda5: jsr    $ce94]
	move.b	#0x00,d0                        	| [$cda8: ldd    #$0000]
	move.w	#0x0000,d1                      	| [$cda8: ldd    #$0000]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x20                    	| [$cdab: std    $20]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x22                    	| [$cdad: std    $22]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x24                    	| [$cdaf: std    $24]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	MAKE_D                                 	| [...]
	GET_DP_ADDRESS	0x26                    	| [$cdb1: std    $26]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
l_cdb3:
	rts                                    	| [$cdb3: rts]

l_cdb4:
	GET_DP_ADDRESS	0x10                    	| [$cdb4: ldd    $10]
	LOAD_D                                 	| [$cdb4: ldd    $10]
	and.b	#0x1f,d0                         	| [$cdb6: anda   #$1f]
	and.b	#0x1f,d1                         	| [$cdb8: andb   #$1f]
	MAKE_D
	cmp.w	#0x0800,d1                       	| [$cdba: cmpd   #$0800]
	jne	l_cde2                             	| [$cdbe: bne    $cde2]
	jbsr	l_ce4d                            	| [$cdc0: jsr    $ce4d]
	move.b	#0x00,d0                        	| [$cdc3: lda    #$00]
	GET_REG_ADDRESS	0x0800,d2              	| [$cdc5: sta    $0800,x]
	move.b	d0,(a0)                         	| [...]
	OP_1_ON_DP_ADDRESS	clr,0x23             | [$cdc9: clr    $23]
	jbsr	l_ce56                            	| [$cdcb: jsr    $ce56]
	OP_W_ON_DP_ADDRESS	addq,0x24,#1         | [$cdce: inc    $24]
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$cdd0: lda    $24]
	cmp.b	#0x03,d0                         	| [$cdd2: cmpa   #$03]
	jcs	l_cdd8                             	| [$cdd4: bcs    $cdd8]
	OP_1_ON_DP_ADDRESS	clr,0x24             | [$cdd6: clr    $24]
l_cdd8:
	jbsr	l_ce6d                            	| [$cdd8: jsr    $ce6d]
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$cddb: lda    $24]
	add.b	#0x01,d0                         	| [$cddd: adda   #$01]
	GET_UNCHECKED_ADDRESS	0x20cc                     	| [$cddf: sta    $20cc] [video_address]
	move.b	d0,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
l_cde2:
	rts                                    	| [$cde2: rts]

l_cde3:
	GET_DP_ADDRESS	0x13                    	| [$cde3: ldd    $13]
	LOAD_D                                 	| [$cde3: ldd    $13]
	and.b	#0x7f,d0                         	| [$cde5: anda   #$7f]
	and.b	#0x7f,d1                         	| [$cde7: andb   #$7f]
	MAKE_D
	cmp.w	#0x0400,d1                       	| [$cde9: cmpd   #$0400]
	jne	l_cdf2                             	| [$cded: bne    $cdf2]
	jbsr	l_ce04                            	| [$cdef: bsr    $ce04]
	rts                                    	| [$cdf1: rts]

l_cdf2:
	MAKE_D
	cmp.w	#0x0100,d1                       	| [$cdf2: cmpd   #$0100]
	jne	l_cdfb                             	| [$cdf6: bne    $cdfb]
	jbsr	l_ce11                            	| [$cdf8: bsr    $ce11]
	rts                                    	| [$cdfa: rts]

l_cdfb:
	MAKE_D
	cmp.w	#0x0200,d1                       	| [$cdfb: cmpd   #$0200]
	jne	l_ce03                             	| [$cdff: bne    $ce03]
	jbsr	l_ce20                            	| [$ce01: bsr    $ce20]
l_ce03:
	rts                                    	| [$ce03: rts]

l_ce04:
	jbsr	l_ce4d                            	| [$ce04: bsr    $ce4d]
	GET_REG_ADDRESS	0,d2                   	| [$ce06: inc    ,x]
	addq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$ce08: lda    ,x]
	move.b	(a0),d0                         	| [...]
	cmp.b	#0x0a,d0                         	| [$ce0a: cmpa   #$0a]
	jlt	l_ce10                             	| [$ce0c: blt    $ce10]
	GET_REG_ADDRESS	0,d2                   	| [$ce0e: clr    ,x]
	clr.b	(a0)                         	| [...]
l_ce10:
	rts                                    	| [$ce10: rts]

l_ce11:
	jbsr	l_ce4d                            	| [$ce11: bsr    $ce4d]
	GET_REG_ADDRESS	0,d2                   	| [$ce13: dec    ,x]
	subq.b	#1,(a0)                         	| [...]
	GET_REG_ADDRESS	0,d2                   	| [$ce15: lda    ,x]
	move.b	(a0),d0                         	| [...]
	tst.b	d0                               	| [$ce17: cmpa   #$00]
	jge	l_ce10                             	| [$ce19: bge    $ce10]
	move.b	#0x09,d0                        	| [$ce1b: lda    #$09]
	GET_REG_ADDRESS	0,d2                   	| [$ce1d: sta    ,x]
	move.b	d0,(a0)                         	| [...]
	rts                                    	| [$ce1f: rts]

l_ce20:
	jbsr	l_ce4d                            	| [$ce20: bsr    $ce4d]
	move.b	#0x00,d0                        	| [$ce22: lda    #$00]
	GET_REG_ADDRESS	0x0800,d2              	| [$ce24: sta    $0800,x]
	move.b	d0,(a0)                         	| [...]
	OP_W_ON_DP_ADDRESS	addq,0x23,#1         | [$ce28: inc    $23]
	OP_R_ON_DP_ADDRESS	move,0x23,d0         | [$ce2a: lda    $23]
	cmp.b	#swimmer_19,d0                         	| [$ce2c: cmpa   #$19]
	jlt	l_ce32                             	| [$ce2e: blt    $ce32]
	OP_1_ON_DP_ADDRESS	clr,0x23             | [$ce30: clr    $23]
l_ce32:
	rts                                    	| [$ce32: rts]

l_ce33:
	move.b	#0x40,d0                        	| [$ce33: lda    #$40]
	OP_R_ON_DP_ADDRESS	add,0x25,d0          | [$ce35: adda   $25]
	PUSH_SR
	OP_W_ON_DP_ADDRESS	move,0x25,d0         | [$ce37: sta    $25]
	POP_SR
	jcc	l_ce4c                             	| [$ce39: bcc    $ce4c]
	jbsr	l_ce4d                            	| [$ce3b: bsr    $ce4d]
	GET_REG_ADDRESS	0x0800,d2              	| [$ce3d: lda    $0800,x]
	move.b	(a0),d0                         	| [...]
	jeq	l_ce48                             	| [$ce41: beq    $ce48]
	GET_REG_ADDRESS	0x0800,d2              	| [$ce43: clr    $0800,x]
	clr.b	(a0)                         	| [...]
	rts                                    	| [$ce47: rts]

l_ce48:
	GET_REG_ADDRESS	0x0800,d2              	| [$ce48: inc    $0800,x]
	addq.b	#1,(a0)                         	| [...]
l_ce4c:
	rts                                    	| [$ce4c: rts]

l_ce4d:
	move.w	#0xffae,d2                      	| [$ce4d: ldx    #$ffae]
	OP_R_ON_DP_ADDRESS	move,0x23,d0         | [$ce50: lda    $23]
	asl.b	#1,d0                            	| [$ce52: asla]
	moveq	#0,d6                            	| [...]
	move.b	d0,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	GET_REG_ADDRESS_FROM_REG	d6,d2         	| [$ce53: ldx    a,x]
	MOVE_W_TO_REG	a0,d2                         	| [...]
	rts                                    	| [$ce55: rts]

l_ce56:
	jbsr	l_ce84                            	| [$ce56: bsr    $ce84]
l_ce58:
	cmp.b	#0x0c,d0                         	| [$ce58: cmpa   #$0c]
	jeq	l_ce67                             	| [$ce5a: beq    $ce67]
l_ce5c:
	GET_REG_ADDRESS	0,d2                   	| [$ce5c: ldy    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$ce5f: ldb    ,y]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$ce61: stb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	subq.b	#1,d0                           	| [$ce63: deca]
	jne	l_ce58                             	| [$ce64: bne    $ce58]
	rts                                    	| [$ce66: rts]

l_ce67:
	sub.b	#0x04,d0                         	| [$ce67: suba   #$04]
	addq.w	#0x4,d4                         	| [$ce69: leau   $4,u]
	jra	l_ce5c                             	| [$ce6b: bra    $ce5c]
l_ce6d:
	jbsr	l_ce84                            	| [$ce6d: bsr    $ce84]
l_ce6f:
	cmp.b	#0x0c,d0                         	| [$ce6f: cmpa   #$0c]
	jeq	l_ce7e                             	| [$ce71: beq    $ce7e]
l_ce73:
	GET_REG_ADDRESS	0,d2                   	| [$ce73: ldy    ,x++]
	addq.w	#2,d2                           	| [...]
	MOVE_W_TO_REG	a0,d3                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$ce76: ldb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d3                   	| [$ce78: stb    ,y]
	move.b	d1,(a0)                         	| [...]
	subq.b	#1,d0                           	| [$ce7a: deca]
	jne	l_ce6f                             	| [$ce7b: bne    $ce6f]
	rts                                    	| [$ce7d: rts]

l_ce7e:
	sub.b	#0x04,d0                         	| [$ce7e: suba   #$04]
	addq.w	#0x4,d4                         	| [$ce80: leau   $4,u]
	jra	l_ce73                             	| [$ce82: bra    $ce73]
l_ce84:
	OP_R_ON_DP_ADDRESS	move,0x24,d0         | [$ce84: lda    $24]
	move.b	#0x1d,d1                        	| [$ce86: ldb    #$1d]
	jbsr	multiply_ab                       	| [$ce88: mul]
	move.w	#0x3f10,d4                      	| [$ce89: ldu    #$3f10]
	moveq	#0,d6                            	| [...]
	move.b	d1,d6                           	| [...] as byte
	DO_EXTB	d6                             	| [...] with sign extension
	add.w	d6,d4                            	| [$ce8c: leau   b,u]
	move.w	#0xffae,d2                      	| [$ce8e: ldx    #$ffae]
	move.b	#0x1d,d0                        	| [$ce91: lda    #$1d]
	rts                                    	| [$ce93: rts]

l_ce94:
	move.w	#0x3f10,d2                      	| [$ce94: ldx    #$3f10]
	move.w	#0x3f80,d4                      	| [$ce97: ldu    #$3f80]
	move.b	#0x57,d0                        	| [$ce9a: lda    #$57]
l_ce9c:
	GET_REG_ADDRESS	0,d2                   	| [$ce9c: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_ADDRESS	0,d4                   	| [$ce9e: stb    ,u+]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	subq.b	#1,d0                           	| [$cea0: deca]
	jne	l_ce9c                             	| [$cea1: bne    $ce9c]
	rts                                    	| [$cea3: rts]

l_cea4:
	GET_REG_ADDRESS	0,d3                   	| [$cea4: lda    ,y+]
	addq.w	#1,d3                           	| [...]
	move.b	(a0),d0                         	| [...]
	jeq	l_ceb9                             	| [$cea6: beq    $ceb9]
	GET_REG_ADDRESS	0,d3                   	| [$cea8: ldu    ,y++]
	addq.w	#2,d3                           	| [...]
	MOVE_W_TO_REG	a0,d4                         	| [...]
l_ceaa:
	move.b	#0x00,d1                        	| [$ceaa: ldb    #$00]
	GET_REG_UNCHECKED_ADDRESS	0x0800,d4              	| [$ceac: stb    $0800,u]  [video_address]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	GET_REG_ADDRESS	0,d2                   	| [$ceb0: ldb    ,x+]
	addq.w	#1,d2                           	| [...]
	move.b	(a0),d1                         	| [...]
	GET_REG_UNCHECKED_ADDRESS	0,d4                   	| [$ceb2: stb    ,u+]  [video_address]
	addq.w	#1,d4                           	| [...]
	move.b	d1,(a0)                         	| [...]
	VIDEO_BYTE_DIRTY | [...]
	subq.b	#1,d0                           	| [$ceb4: deca]
	jne	l_ceaa                             	| [$ceb5: bne    $ceaa]
	jra	l_cea4                             	| [$ceb7: bra    $cea4]
l_ceb9:
	rts                                    	| [$ceb9: rts]

l_ceba:
	clr.w	d2                               	| [$ceba: ldx    #$0000]
	move.w	#0x0005,d4                      	| [$cebd: ldu    #$0005]
	GET_ADDRESS	0x3f18                     	| [$cec0: ldd    $3f18]
	LOAD_D                                 	| [$cec0: ldd    $3f18]
	cmp.w	#0x0005,d1                       	| [$cec3: cmpd   #$0005]
	jcc	l_cecf                             	| [$cec7: bcc    $cecf]
	GET_ADDRESS	0x3f18                     	| [$cec9: stu    $3f18]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3f1a                     	| [$cecc: stx    $3f1a]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_cecf:
	GET_ADDRESS	0x3f35                     	| [$cecf: ldd    $3f35]
	LOAD_D                                 	| [$cecf: ldd    $3f35]
	cmp.w	#0x0005,d1                       	| [$ced2: cmpd   #$0005]
	jcc	l_cede                             	| [$ced6: bcc    $cede]
	GET_ADDRESS	0x3f35                     	| [$ced8: stu    $3f35]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3f37                     	| [$cedb: stx    $3f37]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_cede:
	GET_ADDRESS	0x3f52                     	| [$cede: ldd    $3f52]
	LOAD_D                                 	| [$cede: ldd    $3f52]
	cmp.w	#0x0005,d1                       	| [$cee1: cmpd   #$0005]
	jcc	l_ceed                             	| [$cee5: bcc    $ceed]
	GET_ADDRESS	0x3f52                     	| [$cee7: stu    $3f52]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	GET_ADDRESS	0x3f54                     	| [$ceea: stx    $3f54]
	MOVE_W_FROM_REG	d2,a0                         	| [...]
l_ceed:
	rts                                    	| [$ceed: rts]

l_ceee:
	move.b	#0x01,d0                        	| [$ceee: ldd    #$0105]
	move.w	#0x0105,d1                      	| [$ceee: ldd    #$0105]
	clr.w	d4                               	| [$cef1: ldu    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3f21                     	| [$cef4: std    $3f21]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3f23                     	| [$cef7: stu    $3f23]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x01,d0                        	| [$cefa: ldd    #$0106]
	move.w	#0x0106,d1                      	| [$cefa: ldd    #$0106]
	move.w	#0x0500,d4                      	| [$cefd: ldu    #$0500]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3f3e                     	| [$cf00: std    $3f3e]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3f40                     	| [$cf03: stu    $3f40]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	move.b	#0x01,d0                        	| [$cf06: ldd    #$0108]
	move.w	#0x0108,d1                      	| [$cf06: ldd    #$0108]
	clr.w	d4                               	| [$cf09: ldu    #$0000]
	MAKE_D                                 	| [...]
	GET_ADDRESS	0x3f5b                     	| [$cf0c: std    $3f5b]
	MOVE_W_FROM_REG	d1,a0                         	| [...]
	GET_ADDRESS	0x3f5d                     	| [$cf0f: stu    $3f5d]
	MOVE_W_FROM_REG	d4,a0                         	| [...]
	rts                                    	| [$cf12: rts]
event_table_cf30:
	.long	reset_display_41d0               	|  $cf30
	.long	l_420e                           	|  $cf32
	.long	l_4211                           	|  $cf34
	.long	l_4234                           	|  $cf36
	.long	l_42a2                           	|  $cf38
	.long	draw_chrono_42c0                 	|  $cf3a
	.long	l_4320                           	|  $cf3c
	.long	l_4470                           	|  $cf3e
table_d33a:
	.long	l_45f7                           	|  $d33a
	.long	l_4602                           	|  $d33c
	.long	l_46c9                           	|  $d33e
	.long	l_9276                           	|  $d340
	.long	l_cce2                           	|  $d342

table_d344:
	.long	l_9276                           	|  $d344
	.long	l_7b96                           	|  $d346
	.long	l_a091                           	|  $d348
	.long	l_7b96                           	|  $d34a

table_d34c:
	.long	l_460a                           	|  $d34c
	.long	start_game_4673                  	|  $d34e
	.long	l_96f1                           	|  $d350

table_d352:
	.long	l_4623                           	|  $d352
	.long	l_4649                           	|  $d354
	.long	l_4650                           	|  $d356

table_d358:
	.long	l_46d1                           	|  $d358
	.long	l_47d0                           	|  $d35a
	.long	l_49f3                           	|  $d35c
	.long	l_4a07                           	|  $d35e
	.long	l_4cb0                           	|  $d360
	.long	l_4d08                           	|  $d362
	.long	l_4e36                           	|  $d364

table_d366:
	.long	l_46d9                           	|  $d366
	.long	l_470c                           	|  $d368
	.long	l_4772                           	|  $d36a

table_d36c:
	.long	l_46e1                           	|  $d36c
	.long	l_46fe                           	|  $d36e
table_d377:
	.long	l_47e1                           	|  $d377
	.long	l_486c                           	|  $d379
	.long	l_488c                           	|  $d37b
	.long	l_48c7                           	|  $d37d
	.long	l_491f                           	|  $d37f
	.long	l_4968                           	|  $d381
	.long	l_499d                           	|  $d383
	.long	l_49b3                           	|  $d385

table_d387:
	.long	l_4874                           	|  $d387
	.long	l_487f                           	|  $d389
table_d39b:
	.long	l_489d                           	|  $d39b
	.long	l_48a6                           	|  $d39d
	.long	l_489d                           	|  $d39f
	.long	l_48a3                           	|  $d3a1
	.long	l_48a6                           	|  $d3a3
	.long	l_48a6                           	|  $d3a5
	.long	l_48a6                           	|  $d3a7

table_d3a9:
	.long	l_48b8                           	|  $d3a9
	.long	l_48c1                           	|  $d3ab
	.long	l_48b8                           	|  $d3ad
	.long	l_48c0                           	|  $d3af
	.long	l_48c1                           	|  $d3b1
	.long	l_48c1                           	|  $d3b3
	.long	l_48c1                           	|  $d3b5

event_table_d3b7:
	.long	triple_jump_609c                 	|  $d3b7
	.long	skeet_shooting_8aaf              	|  $d3b9
	.long	pole_vault_a6d4                  	|  $d3bb
	.long	free_style_65b8                  	|  $d3bd
	.long	weight_lifting_b3dc              	|  $d3bf
	.long	archery_9a12                     	|  $d3c1
	.long	long_horse_6bcc                  	|  $d3c3

table_d3c5:
	.long	l_4a18                           	|  $d3c5
	.long	l_c315                           	|  $d3c7
	.long	l_4a1f                           	|  $d3c9
	.long	l_4c01                           	|  $d3cb
	.long	l_4c70                           	|  $d3cd
	.long	l_4c97                           	|  $d3cf
table_d3df:
	.long	l_4d10                           	|  $d3df
	.long	l_4d43                           	|  $d3e1
	.long	l_4da4                           	|  $d3e3
	.long	l_4dd1                           	|  $d3e5
	.long	l_4de6                           	|  $d3e7
	.long	l_4d43                           	|  $d3e9
	.long	l_4e09                           	|  $d3eb

table_d3ed:
	.long	l_4d4b                           	|  $d3ed
	.long	l_4d98                           	|  $d3ef
	.long	l_c14d                           	|  $d3f1
	.long	l_c4d3                           	|  $d3f3
	.long	l_4e3e                           	|  $d3f5
	.long	l_4e53                           	|  $d3f7
table_d3f1:
	.long	l_c14d                           	|  $d3f1
	.long	l_c4d3                           	|  $d3f3
	.long	l_4e3e                           	|  $d3f5
	.long	l_4e53                           	|  $d3f7
table_d405:
	.long	l_55bf                           	|  $d405
	.long	l_913e                           	|  $d407
	.long	l_b3ab                           	|  $d409
	.long	l_55c2                           	|  $d40b
	.long	l_bf99                           	|  $d40d
	.long	l_9de1                           	|  $d40f
	.long	l_55d5                           	|  $d411
table_d4df:
	.long	l_60a4                           	|  $d4df
	.long	l_60ea                           	|  $d4e1
	.long	l_6126                           	|  $d4e3
	.long	l_6188                           	|  $d4e5
	.long	l_623d                           	|  $d4e7
	.long	l_62ab                           	|  $d4e9
	.long	l_631b                           	|  $d4eb
	.long	l_6376                           	|  $d4ed
	.long	l_6455                           	|  $d4ef
	.long	l_6536                           	|  $d4f1
table_d4f3:
	.long	l_60ac                           	|  $d4f3
	.long	l_60d1                           	|  $d4f5
table_d4f7:
	.long	l_71c6                           	|  $d4f7
	.long	l_6248                           	|  $d4f9
table_d507:
	.long	l_71c6                           	|  $d507
	.long	l_62b6                           	|  $d509
table_d50b:
	.long	l_71c6                           	|  $d50b
	.long	l_6326                           	|  $d50d
table_d50f:
	.long	l_6381                           	|  $d50f
	.long	l_63a8                           	|  $d511
	.long	l_6448                           	|  $d513
table_d515:
	.long	l_6381                           	|  $d515
	.long	l_6460                           	|  $d517
	.long	l_64c4                           	|  $d519
	.long	l_650d                           	|  $d51b
table_d523:
	.long	l_6541                           	|  $d523
	.long	l_6555                           	|  $d525
	.long	l_6592                           	|  $d527
	.long	l_650d                           	|  $d529
table_d52b:
	.long	l_65c0                           	|  $d52b
	.long	l_6620                           	|  $d52d
	.long	l_6854                           	|  $d52f
	.long	l_6ae0                           	|  $d531
	.long	l_6b02                           	|  $d533

table_d535:
	.long	l_65c8                           	|  $d535
	.long	l_6617                           	|  $d537

table_d539:
	.long	l_662d                           	|  $d539
	.long	l_663e                           	|  $d53b
	.long	l_6653                           	|  $d53d
	.long	l_666e                           	|  $d53f
	.long	l_66c8                           	|  $d541
	.long	l_6706                           	|  $d543
	.long	l_679e                           	|  $d545
	.long	l_67d9                           	|  $d547
	.long	l_680b                           	|  $d549
	.long	l_6815                           	|  $d54b

table_d54d:
	.long	l_68b3                           	|  $d54d
	.long	l_68e1                           	|  $d54f
	.long	l_691e                           	|  $d551
	.long	l_6953                           	|  $d553
	.long	l_69c5                           	|  $d555
	.long	l_69ed                           	|  $d557
	.long	l_6a13                           	|  $d559
	.long	l_6adc                           	|  $d55b

table_d55d:
	.long	l_79eb                           	|  $d55d
	.long	l_7a10                           	|  $d55f
	.long	l_7a44                           	|  $d561
	.long	l_7a78                           	|  $d563

table_d565:
	.long	l_6b0a                           	|  $d565
	.long	l_6b4f                           	|  $d567

table_d571:
	.long	l_6bd7                           	|  $d571
	.long	l_6c0d                           	|  $d573
	.long	l_6ca3                           	|  $d575
	.long	l_6cdd                           	|  $d577
	.long	l_6d38                           	|  $d579
	.long	l_6e38                           	|  $d57b
	.long	l_6f18                           	|  $d57d
	.long	l_7006                           	|  $d57f
	.long	l_7074                           	|  $d581
	.long	l_70ba                           	|  $d583
	.long	l_710b                           	|  $d585
	.long	l_7168                           	|  $d587
	.long	l_7181                           	|  $d589
	.long	l_7199                           	|  $d58b

table_d58d:
	.long	l_6bdf                           	|  $d58d
	.long	l_6bff                           	|  $d58f
table_d591:
	.long	l_6c15                           	|  $d591
	.long	l_6c76                           	|  $d593

table_d599:
	.long	l_6d40                           	|  $d599
	.long	l_6d65                           	|  $d59b
	.long	l_6d9e                           	|  $d59d
	.long	l_6161                           	|  $d59f

table_d5e8:
	.long	l_700e                           	|  $d5e8
	.long	l_7041                           	|  $d5ea
table_d5ec:
	.long	l_7082                           	|  $d5ec
	.long	l_709c                           	|  $d5ee
	.long	l_70b1                           	|  $d5f0
table_d605:
	.long	l_7113                           	|  $d605
	.long	l_711f                           	|  $d607
table_d609:
	.long	l_7189                           	|  $d609
	.long	l_6541                           	|  $d60b
	.long	l_6555                           	|  $d60d
	.long	l_6592                           	|  $d60f
	.long	l_7190                           	|  $d611
table_d613:
	.long	l_71a1                           	|  $d613
	.long	l_71a8                           	|  $d615
table_d62a:
	.long	l_7443                           	|  $d62a
	.long	l_7443                           	|  $d62c
	.long	l_7431                           	|  $d62e
	.long	select_diving_sprite_84db                           	|  $d630
	.long	select_diving_sprite_84e0                           	|  $d632
	.long	select_diving_sprite_84e5                           	|  $d634
table_d630:
	.long	select_diving_sprite_84db                           	|  $d630
	.long	select_diving_sprite_84e0                           	|  $d632
	.long	select_diving_sprite_84e5                           	|  $d634
table_d6a8:
	.long	l_7b9e                           	|  $d6a8
	.long	l_7bdf                           	|  $d6aa
	.long	l_7bfd                           	|  $d6ac
table_d6b1:
	.long	l_46d1                           	|  $d6b1
	.long	l_47d0                           	|  $d6b3
	.long	l_49f3                           	|  $d6b5
	.long	l_4a07                           	|  $d6b7
	.long	l_4cb0                           	|  $d6b9
table_d82e:
	.long	l_809d                           	|  $d82e
	.long	l_8087                           	|  $d830
	.long	l_809e                           	|  $d832

table_d89a:
	.long	l_8a35                           	|  $d89a
	.long	l_8a41                           	|  $d89c
	.long	l_8a72                           	|  $d89e
	.long	l_8a7d                           	|  $d8a0
	.long	l_8aae                           	|  $d8a2
table_ecea:
	.long	l_8ab7                           	|  $ecea
	.long	l_8b61                           	|  $ecec
	.long	l_8b79                           	|  $ecee
	.long	l_8f7f                           	|  $ecf0

table_ee85:
	.long	l_928f                           	|  $ee85
	.long	l_929e                           	|  $ee87
	.long	l_9431                           	|  $ee89
	.long	l_95bf                           	|  $ee8b
	.long	l_9648                           	|  $ee8d
	.long	l_96d2                           	|  $ee8f
table_ef15:
	.long	l_96f9                           	|  $ef15
	.long	l_973b                           	|  $ef17
	.long	l_99d9                           	|  $ef19
	.long	l_8a2d                           	|  $ef1b
table_efb8:
	.long	l_9a1a                           	|  $efb8
	.long	l_9a9d                           	|  $efba
	.long	l_9b2a                           	|  $efbc
	.long	l_a054                           	|  $efbe
	.long	l_a998                           	|  $efc0
	.long	l_7765                           	|  $efc2
	.long	l_5443                           	|  $efc4
table_f096:
	.long	l_a0ac                           	|  $f096
	.long	l_a0cd                           	|  $f098
	.long	l_a33a                           	|  $f09a
	.long	l_a36c                           	|  $f09c
table_f263:
	.long	l_a39a                           	|  $f263
	.long	l_a3ba                           	|  $f265
	.long	l_a584                           	|  $f267
	.long	l_a5cd                           	|  $f269
	.long	l_a5fe                           	|  $f26b
table_f2ff:
	.long	l_a6dc                           	|  $f2ff
	.long	l_a8d7                           	|  $f301
	.long	l_a98b                           	|  $f303
	.long	l_aa9e                           	|  $f305
	.long	l_ad67                           	|  $f307
	.long	l_ad98                           	|  $f309
	.long	l_ae4f                           	|  $f30b
table_f30d:
	.long	l_a6e4                           	|  $f30d
	.long	l_a882                           	|  $f30f
	.long	l_a993                           	|  $f311
	.long	l_a9dd                           	|  $f313
	.long	l_aa8f                           	|  $f315
table_f311:
	.long	l_a993                           	|  $f311
	.long	l_a9dd                           	|  $f313
	.long	l_aa8f                           	|  $f315
table_f533:
	.long	l_b3e4                           	|  $f533
	.long	l_b788                           	|  $f535
	.long	l_ba9e                           	|  $f537
	.long	l_bae6                           	|  $f539
	.long	l_baf9                           	|  $f53b
	.long	l_ba0e                           	|  $f53d
table_f53f:
	.long	l_b3ec                           	|  $f53f
	.long	l_b46c                           	|  $f541
	.long	l_b4e2                           	|  $f543
	.long	l_b592                           	|  $f545
	.long	l_b5f7                           	|  $f547
	.long	l_b665                           	|  $f549
	.long	l_b603                           	|  $f54b
	.long	l_b76b                           	|  $f54d
table_f68c:
	.long	l_b825                           	|  $f68c
	.long	l_b963                           	|  $f68e
	.long	l_ba45                           	|  $f690
	.long	l_ba4c                           	|  $f692

table_f7d9:
	.long	l_bd9c                           	|  $f7d9
	.long	l_bd9c                           	|  $f7db
	.long	l_bdb7                           	|  $f7dd
	.long	l_bd9c                           	|  $f7df
	.long	l_bd9c                           	|  $f7e1
	.long	l_bda5                           	|  $f7e3
	.long	l_bdc0                           	|  $f7e5
	.long	l_bdc0                           	|  $f7e7
	.long	l_bda5                           	|  $f7e9
	.long	l_bdc0                           	|  $f7eb
	.long	l_bd9c                           	|  $f7ed
	.long	l_bd9c                           	|  $f7ef
	.long	l_bdae                           	|  $f7f1
table_f810:
	.long	l_bea1                           	|  $f810
	.long	l_bf07                           	|  $f812
	.long	l_bed4                           	|  $f814
	.long	l_686f                           	|  $f816
table_f8d5:
	.long	l_c155                           	|  $f8d5
	.long	l_c1a1                           	|  $f8d7
	.long	l_c1c3                           	|  $f8d9
	.long	l_c28b                           	|  $f8db
table_f8dd:
	.long	l_c335                           	|  $f8dd
	.long	l_c335                           	|  $f8df
	.long	l_c327                           	|  $f8e1
	.long	l_c39a                           	|  $f8e3
	.long	l_c327                           	|  $f8e5
	.long	l_c335                           	|  $f8e7
	.long	l_c335                           	|  $f8e9
table_f8eb:
	.long	l_c35c                           	|  $f8eb
	.long	l_c418                           	|  $f8ed
	.long	l_c465                           	|  $f8ef
	.long	l_c39a                           	|  $f8f1
	.long	l_c37f                           	|  $f8f3
	.long	l_c418                           	|  $f8f5
	.long	l_c465                           	|  $f8f7
	.long	l_a18f                           	|  $f8f9
	.long	l_8bcb                           	|  $f8fb

table_f903:
	.long	l_c4db                           	|  $f903
	.long	l_c58a                           	|  $f905
	.long	l_c5a8                           	|  $f907
	.long	l_c5fc                           	|  $f909
	.long	l_c6d6                           	|  $f90b
table_f90d:
	.long	l_5d09                           	|  $f90d
	.long	l_489a                           	|  $f90f
	.long	l_48ae                           	|  $f911
	.long	l_c596                           	|  $f913
table_f915:
	.long	l_c712                           	|  $f915
	.long	l_c72f                           	|  $f917
	.long	l_c72f                           	|  $f919
	.long	l_c72f                           	|  $f91b
	.long	l_c72f                           	|  $f91d
	.long	l_647c                           	|  $f91f
table_f931:
	.long	l_c761                           	|  $f931
	.long	l_c7bf                           	|  $f933
	.long	l_c7bf                           	|  $f935
	.long	l_c7bf                           	|  $f937
	.long	l_c7bf                           	|  $f939
table_f93b:
	.long	l_c7c7                           	|  $f93b
	.long	l_c7fc                           	|  $f93d
	.long	l_c87b                           	|  $f93f
	.long	l_c87e                           	|  $f941
	.long	l_c8e2                           	|  $f943
	.long	l_c8ff                           	|  $f945
	.long	l_c936                           	|  $f947
	.long	l_c94d                           	|  $f949
	.long	l_c98e                           	|  $f94b
	.long	l_c993                           	|  $f94d
table_f94f:
	.long	l_c9a3                           	|  $f94f
	.long	l_c9a5                           	|  $f951
	.long	l_c9d6                           	|  $f953
	.long	l_ca79                           	|  $f955
	.long	l_ca98                           	|  $f957
table_f959:
	.long	l_ca33                           	|  $f959
	.long	l_ca68                           	|  $f95b
	.long	l_ca79                           	|  $f95d
	.long	l_ca98                           	|  $f95f
table_fe73:
	.long	l_ccea                           	|  $fe73
	.long	l_ccf1                           	|  $fe75
	.long	l_ccfe                           	|  $fe77
	.long	l_cd10                           	|  $fe79
	.long	l_cd44                           	|  $fe7b
	.long	l_cd6d                           	|  $fe7d
	.long	l_cd8f                           	|  $fe7f
